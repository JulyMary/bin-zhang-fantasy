<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vws="clr-namespace:Fantasy.Studio.Controls.Views"
                    xmlns:ctrls="clr-namespace:Fantasy.Studio.Controls">
    <!--PlainView Default Style for ListView-->
    <Style x:Key="{ComponentResourceKey 
        TypeInTargetAssembly={x:Type vws:PlainView},
        ResourceId=FantasyPlainViewDSK}" 
         TargetType="{x:Type ListView}" 
         BasedOn="{StaticResource {x:Type ListBox}}"
         >
        <Setter Property="HorizontalContentAlignment"
            Value="Center"/>
        <Setter Property="ItemContainerStyle" 
            Value="{Binding (ListView.View).ItemContainerStyle,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate" 
            Value="{Binding (ListView.View).ItemTemplate,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth),
                     RelativeSource={RelativeSource 
                                     AncestorType=ScrollContentPresenter}}"
                     ItemWidth="{Binding (ListView.View).ItemWidth,
                     RelativeSource={RelativeSource AncestorType=ListView}}"
                     MinWidth="{Binding (ListView.View).ItemWidth,
                     RelativeSource={RelativeSource AncestorType=ListView}}"
                     ItemHeight="{Binding (ListView.View).ItemHeight,
                     RelativeSource={RelativeSource AncestorType=ListView}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--List Default Style for ListView-->
    <Style x:Key="{ComponentResourceKey 
        TypeInTargetAssembly={x:Type vws:ListView},
        ResourceId=FantasyListViewDSK}" 
         TargetType="{x:Type ListView}" 
         BasedOn="{StaticResource {x:Type ListBox}}"
         >
        <Setter Property="HorizontalContentAlignment"
            Value="Left" />
        <Setter Property="ItemContainerStyle" 
            Value="{Binding (ListView.View).ItemContainerStyle,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate" 
            Value="{Binding (ListView.View).ItemTemplate,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Width="{Binding (FrameworkElement.ActualWidth),
                     RelativeSource={RelativeSource 
                                     AncestorType=ScrollContentPresenter}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type ctrls:ExtendableScrollViewer}" TargetType="{x:Type ctrls:ExtendableScrollViewer}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ExtendableScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>



                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"  />
                        <Grid Grid.Column="1"  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Name="PART_VerticalTop" Content="{TemplateBinding VerticalTop}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Grid.Row="1"/>
                            <ContentPresenter Name="PART_VerticalBottom" Content="{TemplateBinding VerticalBottom}"
                                              Grid.Row="2"/>
                        </Grid>

                        <Grid   Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="PART_HorizontalLeft" Content="{TemplateBinding HorizontalLeft}" Grid.Column="0" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                      
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Column="1"/>
                            <ContentPresenter Name="PART_HorizontalRight" Content="{TemplateBinding HorizontalRight}" Grid.Column="2"/>
                        </Grid>
                        <ContentPresenter Name="PART_INTERSECTION" Content="{TemplateBinding Intersection}" Grid.Row="1" Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropDownTreeToggleButtonStyle" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
        <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
        <Setter Setter.Property="ButtonBase.ClickMode" Setter.Value="Press" />
        <Setter Property="Width" Value=" {DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Name="Arrow" Margin="3,1,0,0" Fill="{StaticResource DefaultBorderBrush}" Data="M 0 0 L 3.5 4 L 7 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ctrls:DropDownTreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:DropDownTreeView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid FrameworkElement.Name="MainGrid" UIElement.SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition ColumnDefinition.Width="*" />
                                    <ColumnDefinition ColumnDefinition.MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" ColumnDefinition.Width="0" />
                                </Grid.ColumnDefinitions>
                                <Popup  FrameworkElement.Name="PART_Popup" Popup.AllowsTransparency="True" Grid.ColumnSpan="2" Popup.Placement="Bottom" 
                                           Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Popup.IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                          >

                                    <Border  MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDownBorder" Background="{StaticResource BlackMarbleBackgroundBrush}" Border.BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                                        <ScrollViewer FrameworkElement.Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas FrameworkElement.Height="0" FrameworkElement.Width="0" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Top">
                                                    <Rectangle x:Name="OpaqueRect" FrameworkElement.Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" FrameworkElement.Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" Shape.Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                                </Canvas>

                                                <ItemsPresenter FrameworkElement.Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource DefaultComboBoxToggleButtonStyle}" ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter Name="Content" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Content="{TemplateBinding SelectedItem}" ContentTemplate="{TemplateBinding SelectionItemTemplate}" ContentTemplateSelector="{TemplateBinding SelectionItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionItemStringFormat}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
