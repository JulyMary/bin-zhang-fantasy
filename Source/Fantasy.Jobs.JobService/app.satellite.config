<?xml version="1.0"?>
<configuration>
    <configSections>
        <section name="addin"
                 type="Fantasy.AddIn, Fantasy.Base" />
    </configSections>
   
    <system.serviceModel>
        <bindings>
            <netTcpBinding>
                <binding
                    closeTimeout="00:01:00"
                    openTimeout="00:01:00"
                    receiveTimeout="00:10:00"
                    sendTimeout="00:01:00"
                    transactionFlow="false"
                    transferMode="Buffered"
                    transactionProtocol="OleTransactions"
                    hostNameComparisonMode="StrongWildcard"
                    listenBacklog="10"
                    maxBufferPoolSize="10485760"
                    maxBufferSize="10485760"
                    maxConnections="10"
                    maxReceivedMessageSize="10485760">
                    <readerQuotas maxDepth="32"
                                  maxStringContentLength="10485760"
                                  maxArrayLength="16384"
                                  maxBytesPerRead="4096"
                                  maxNameTableCharCount="16384" />
                    <reliableSession ordered="true"
                                     inactivityTimeout="00:10:00"
                                     enabled="false" />
                    <security mode="None" />
                </binding>
            </netTcpBinding>

        </bindings>

        <client>
            <endpoint address="net.tcp://localhost:9000/Fantasy.Tracking/ITrackProviderService"
                      binding="netTcpBinding"
                      contract="Fantasy.Tracking.ITrackProviderService"/>
            <endpoint address="net.tcp://localhost-p:9000/Fantasy.Tracking/ITrackManagerService"
                      binding="netTcpBinding"
                      contract="Fantasy.Tracking.ITrackManagerService" />
            <endpoint address="net.tcp://localhost-p:9000/Fantasy.Tracking/ITrackListenerService"
                      binding="netTcpBinding"
                      contract="Fantasy.Tracking.ITrackListenerService" />
            <endpoint address="net.tcp://localhost:9000/Fantasy.Jobs/ISolar"
                      binding="netTcpBinding"
                      contract="Fantasy.Jobs.Solar.ISolar"/>
            <endpoint address="net.tcp://localhost:9000/Fantasy.Jobs/ISatelliteHandler"
                      binding="netTcpBinding"
                      contract="Fantasy.Jobs.Solar.ISatelliteHandler"/>
            <endpoint address="net.tcp://localhost:9000/Fantasy.Jobs/IGlobalMutexService"
                      binding="netTcpBinding"
                      contract="Fantasy.Jobs.Resources.IGlobalMutexService"/>
        </client>
    </system.serviceModel>
    <!--<system.runtime.remoting>
        <application>
            <service>
                <wellknown mode="Singleton"
                           type="Fantasy.Jobs.Management.JobManagerAccessor, Fantasy.Jobs"
                           objectUri="JobManagerAccessor.rem" />
            </service>
            <channels>
                <channel ref="ipc"
                         portName="FantasyJobManager"
                         secure="true"
                         impersonate="true"
                         authorizedGroup="Everyone">
                    <serverProviders>
                        <formatter ref="binary"
                                   typeFilterLevel="Full" />
                    </serverProviders>
                    <clientProviders>
                        <formatter ref="binary" />
                    </clientProviders>
                </channel>
            </channels>
        </application>
    </system.runtime.remoting>-->
    
    <appSettings>
        <add key="FantasySettingsFile"
             value="Fantasy.JobService.Satellite.xsettings"/>
    </appSettings>
    <addin>
        <jobService>
            <services>
                <service type="Fantasy.Jobs.DomainUnhandledExcepationService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.SystemEventsService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Scheduling.ScheduleService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Management.JobManagerSettingsReaderService, Fantasy.Jobs" />
                <service type="Fantasy.ServiceModel.LogService, Fantasy.Base" />
                <service type="Fantasy.Jobs.Management.ConnectToUncPathService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Management.LogFileService, Fantasy.Jobs" />
                <service type="Fantasy.ServiceModel.LogDebugService, Fantasy.Base" />

                <service type="Fantasy.Jobs.Management.JobTemplatesService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Solar.SatelliteJobQueue, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Solar.SatelliteResourceRequestQueue, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Resources.ResourceManager, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Solar.SolarActionQueue, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Solar.SatelliteService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Resources.SatelliteGlobalMutexService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.Management.InProcessJobController, Fantasy.Jobs" />
            </services>
            <resources>
                <provider type="Fantasy.Jobs.Resources.JobHostCountResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.TaskCountResouseProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.TemplateCountResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.WaitForResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.WaitTimeResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.JobRuntimeScheduleResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.TaskRuntimeScheduleResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.TemplateRuntimeScheduleResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.UncPathResourceProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.Resources.MutexResourceProvider, Fantasy.Jobs" />
            </resources>
            <startupCommands>
                
            </startupCommands>
            <wcf>
                <serviceHost type="Fantasy.Jobs.Management.JobEventService, Fantasy.Jobs" />
            </wcf>
            <startupFilters>
                <filter type="Fantasy.Jobs.Management.JobStartupProcessCountFilter, Fantasy.Jobs" />
                <filter type="Fantasy.Jobs.Management.JobStartupStateFilter, Fantasy.Jobs" />
                <filter type="Fantasy.Jobs.Management.JobStartupPriorityFilter, Fantasy.Jobs" />
                <filter type="Fantasy.Jobs.Resources.TemplateStartupFilter, Fantasy.Jobs" />
                <filter type="Fantasy.Jobs.Resources.ResourceStartupFilter, Fantasy.Jobs" />
            </startupFilters>
            <computerLoadFactorEvaluator type="Fantasy.Jobs.Management.CpuLoadFactorEvaluator, Fantasy.Jobs" />
        </jobService>
        <jobEngine>
            <engine.services>
                <service type="Fantasy.ServiceModel.LogService, Fantasy.Base"/>
                <service type="Fantasy.Jobs.JobLogFileService, Fantasy.Jobs"/>
                <service type="Fantasy.Jobs.Resources.ResourceService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.JobStatusStorageService, Fantasy.Jobs"/>
                <service type="Fantasy.Jobs.TrackProviderService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.TrackMessageService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.TrackProgressService, Fantasy.Jobs" />
                <service type="Fantasy.Jobs.TrackStatusService, Fantasy.Jobs" />
            </engine.services>
            <job.services>
                <service type="Fantasy.Jobs.ConditionService, Fantasy.Jobs"/>
                <service type="Fantasy.Jobs.StringParseService, Fantasy.Jobs"/>
                <service type="Fantasy.Jobs.ItemParseService, Fantasy.Jobs"/>
            </job.services>
            <tagValueProviders>
                <provider type="Fantasy.Jobs.ReservedPropertiesTagProvider, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.TaskItemScalarReader, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.TaskItemAggregateReader, Fantasy.Jobs" />
                <provider type="Fantasy.Jobs.JobRuntimeStateReader, Fantasy.Jobs"/>
                <provider type="Fantasy.Jobs.JobPropertyReader, Fantasy.Jobs"/>
                <provider type="Fantasy.Jobs.EnvironmentVariablesReader, Fantasy.Jobs"/>
                <provider type="Fantasy.Jobs.RegistryReader, Fantasy.Jobs"/>

            </tagValueProviders>
        </jobEngine>
    </addin>
    <startup>
        <supportedRuntime version="v4.0"
                          sku=".NETFramework,Version=v4.0" />
    </startup>
</configuration>
