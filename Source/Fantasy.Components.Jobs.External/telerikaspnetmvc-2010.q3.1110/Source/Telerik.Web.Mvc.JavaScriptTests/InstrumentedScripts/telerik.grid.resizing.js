/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['telerik.grid.resizing.js']) {
  _$jscoverage['telerik.grid.resizing.js'] = [];
  _$jscoverage['telerik.grid.resizing.js'][1] = 0;
  _$jscoverage['telerik.grid.resizing.js'][2] = 0;
  _$jscoverage['telerik.grid.resizing.js'][4] = 0;
  _$jscoverage['telerik.grid.resizing.js'][6] = 0;
  _$jscoverage['telerik.grid.resizing.js'][8] = 0;
  _$jscoverage['telerik.grid.resizing.js'][11] = 0;
  _$jscoverage['telerik.grid.resizing.js'][12] = 0;
  _$jscoverage['telerik.grid.resizing.js'][17] = 0;
  _$jscoverage['telerik.grid.resizing.js'][18] = 0;
  _$jscoverage['telerik.grid.resizing.js'][19] = 0;
  _$jscoverage['telerik.grid.resizing.js'][20] = 0;
  _$jscoverage['telerik.grid.resizing.js'][22] = 0;
  _$jscoverage['telerik.grid.resizing.js'][25] = 0;
  _$jscoverage['telerik.grid.resizing.js'][26] = 0;
  _$jscoverage['telerik.grid.resizing.js'][28] = 0;
  _$jscoverage['telerik.grid.resizing.js'][29] = 0;
  _$jscoverage['telerik.grid.resizing.js'][30] = 0;
  _$jscoverage['telerik.grid.resizing.js'][33] = 0;
  _$jscoverage['telerik.grid.resizing.js'][35] = 0;
  _$jscoverage['telerik.grid.resizing.js'][36] = 0;
  _$jscoverage['telerik.grid.resizing.js'][39] = 0;
  _$jscoverage['telerik.grid.resizing.js'][42] = 0;
  _$jscoverage['telerik.grid.resizing.js'][44] = 0;
  _$jscoverage['telerik.grid.resizing.js'][45] = 0;
  _$jscoverage['telerik.grid.resizing.js'][47] = 0;
  _$jscoverage['telerik.grid.resizing.js'][52] = 0;
  _$jscoverage['telerik.grid.resizing.js'][53] = 0;
  _$jscoverage['telerik.grid.resizing.js'][57] = 0;
  _$jscoverage['telerik.grid.resizing.js'][58] = 0;
  _$jscoverage['telerik.grid.resizing.js'][60] = 0;
  _$jscoverage['telerik.grid.resizing.js'][62] = 0;
  _$jscoverage['telerik.grid.resizing.js'][63] = 0;
  _$jscoverage['telerik.grid.resizing.js'][64] = 0;
  _$jscoverage['telerik.grid.resizing.js'][67] = 0;
  _$jscoverage['telerik.grid.resizing.js'][68] = 0;
  _$jscoverage['telerik.grid.resizing.js'][69] = 0;
  _$jscoverage['telerik.grid.resizing.js'][70] = 0;
  _$jscoverage['telerik.grid.resizing.js'][71] = 0;
  _$jscoverage['telerik.grid.resizing.js'][72] = 0;
  _$jscoverage['telerik.grid.resizing.js'][77] = 0;
  _$jscoverage['telerik.grid.resizing.js'][81] = 0;
  _$jscoverage['telerik.grid.resizing.js'][82] = 0;
  _$jscoverage['telerik.grid.resizing.js'][83] = 0;
  _$jscoverage['telerik.grid.resizing.js'][85] = 0;
  _$jscoverage['telerik.grid.resizing.js'][87] = 0;
  _$jscoverage['telerik.grid.resizing.js'][89] = 0;
  _$jscoverage['telerik.grid.resizing.js'][90] = 0;
  _$jscoverage['telerik.grid.resizing.js'][96] = 0;
  _$jscoverage['telerik.grid.resizing.js'][99] = 0;
  _$jscoverage['telerik.grid.resizing.js'][101] = 0;
  _$jscoverage['telerik.grid.resizing.js'][102] = 0;
  _$jscoverage['telerik.grid.resizing.js'][106] = 0;
  _$jscoverage['telerik.grid.resizing.js'][107] = 0;
  _$jscoverage['telerik.grid.resizing.js'][108] = 0;
  _$jscoverage['telerik.grid.resizing.js'][109] = 0;
  _$jscoverage['telerik.grid.resizing.js'][118] = 0;
  _$jscoverage['telerik.grid.resizing.js'][119] = 0;
  _$jscoverage['telerik.grid.resizing.js'][122] = 0;
  _$jscoverage['telerik.grid.resizing.js'][127] = 0;
}
_$jscoverage['telerik.grid.resizing.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> $t <span class=\"k\">=</span> $<span class=\"k\">.</span>telerik<span class=\"k\">;</span>","","    $t<span class=\"k\">.</span>resizing <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    $t<span class=\"k\">.</span>resizing<span class=\"k\">.</span>initialize <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>grid<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> $col<span class=\"k\">,</span> $indicator <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-grid-resize-indicator\" /&gt;'</span><span class=\"k\">),</span>","            gridWidth<span class=\"k\">,</span> columnWidth<span class=\"k\">,</span> columnStart<span class=\"k\">,</span> indicatorWidth <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","        <span class=\"k\">function</span> cursor<span class=\"k\">(</span>context<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"s\">'th, th .t-grid-filter, th .t-link'</span><span class=\"k\">,</span> context<span class=\"k\">)</span>","                <span class=\"k\">.</span>add<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">)</span>","                <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'cursor'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> heightAboveHeader<span class=\"k\">(</span>context<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> top <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            $<span class=\"k\">(</span><span class=\"s\">'.t-grouping-header, .t-grid-toolbar,  &gt; .t-pager-wrapper'</span><span class=\"k\">,</span> context<span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                top <span class=\"k\">+=</span> <span class=\"k\">this</span><span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> top<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> positionResizeHandle<span class=\"k\">(</span>$th<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> left <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            $<span class=\"k\">(</span><span class=\"s\">'.t-resize-handle'</span><span class=\"k\">,</span> grid<span class=\"k\">.</span>element<span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                left <span class=\"k\">+=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>data<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">).</span>outerWidth<span class=\"k\">();</span>","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'left'</span><span class=\"k\">,</span> left <span class=\"k\">-</span> indicatorWidth<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            left <span class=\"k\">=</span> <span class=\"k\">-</span>grid<span class=\"k\">.</span>$tbody<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-grid-content'</span><span class=\"k\">).</span>scrollLeft<span class=\"k\">();</span>","","            $th<span class=\"k\">.</span>prevAll<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">).</span>add<span class=\"k\">(</span>$th<span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                left <span class=\"k\">+=</span> <span class=\"k\">this</span><span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> $body <span class=\"k\">=</span> grid<span class=\"k\">.</span>scrollable <span class=\"k\">?</span> $<span class=\"k\">(</span><span class=\"s\">'.t-grid-content'</span><span class=\"k\">,</span> grid<span class=\"k\">.</span>element<span class=\"k\">)</span> <span class=\"k\">:</span> $<span class=\"k\">(</span><span class=\"s\">'tbody'</span><span class=\"k\">,</span> grid<span class=\"k\">.</span>element<span class=\"k\">);</span>","","            <span class=\"c\">// using \"clientWidth\" and \"clientHeight\" to exclude the scrollbar</span>","            <span class=\"k\">var</span> width <span class=\"k\">=</span> $body<span class=\"k\">.</span>attr<span class=\"k\">(</span>grid<span class=\"k\">.</span>scrollable <span class=\"k\">?</span> <span class=\"s\">'clientWidth'</span> <span class=\"k\">:</span> <span class=\"s\">'offsetWidth'</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>left <span class=\"k\">&gt;=</span> width<span class=\"k\">)</span> <span class=\"k\">{</span>","                $indicator<span class=\"k\">.</span>remove<span class=\"k\">();</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                $indicator<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                    left<span class=\"k\">:</span> left<span class=\"k\">,</span>","                    top<span class=\"k\">:</span> heightAboveHeader<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">),</span>","                    height<span class=\"k\">:</span> $th<span class=\"k\">.</span>outerHeight<span class=\"k\">()</span> <span class=\"k\">+</span> $body<span class=\"k\">.</span>attr<span class=\"k\">(</span>grid<span class=\"k\">.</span>scrollable <span class=\"k\">?</span> <span class=\"s\">'clientHeight'</span> <span class=\"k\">:</span> <span class=\"s\">'offsetHeight'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>$indicator<span class=\"k\">.</span>parent<span class=\"k\">().</span>length<span class=\"k\">)</span>","                    $indicator<span class=\"k\">.</span>appendTo<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> start<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $th <span class=\"k\">=</span> e<span class=\"k\">.</span>$draggable<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">);</span>","","            $col <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'colgroup'</span><span class=\"k\">,</span> grid<span class=\"k\">.</span>element<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'col:eq('</span> <span class=\"k\">+</span> $th<span class=\"k\">.</span>index<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">);</span>","","            columnStart <span class=\"k\">=</span> e<span class=\"k\">.</span>pageX<span class=\"k\">;</span>","            columnWidth <span class=\"k\">=</span> $th<span class=\"k\">.</span>outerWidth<span class=\"k\">();</span>","            gridWidth <span class=\"k\">=</span> grid<span class=\"k\">.</span>$tbody<span class=\"k\">.</span>outerWidth<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> drag<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> width <span class=\"k\">=</span> columnWidth <span class=\"k\">+</span> e<span class=\"k\">.</span>pageX <span class=\"k\">-</span> columnStart<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">&gt;</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                $col<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> width<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>grid<span class=\"k\">.</span>scrollable<span class=\"k\">)</span>","                    grid<span class=\"k\">.</span>$tbody<span class=\"k\">.</span>parent<span class=\"k\">()</span>","                        <span class=\"k\">.</span>add<span class=\"k\">(</span>grid<span class=\"k\">.</span>$headerWrap<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">))</span>","                        <span class=\"k\">.</span>add<span class=\"k\">(</span>grid<span class=\"k\">.</span>$footerWrap<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">))</span>","                        <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> gridWidth <span class=\"k\">+</span> e<span class=\"k\">.</span>pageX <span class=\"k\">-</span> columnStart<span class=\"k\">);</span>","","                positionResizeHandle<span class=\"k\">(</span>e<span class=\"k\">.</span>$draggable<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">));</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> stop<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            $indicator<span class=\"k\">.</span>remove<span class=\"k\">();</span>","            cursor<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> $th <span class=\"k\">=</span> e<span class=\"k\">.</span>$draggable<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">);</span>","            ","            <span class=\"k\">var</span> newWidth <span class=\"k\">=</span> $th<span class=\"k\">.</span>outerWidth<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>grid<span class=\"k\">.</span>onColumnResize <span class=\"k\">&amp;&amp;</span> newWidth <span class=\"k\">!=</span> columnWidth<span class=\"k\">)</span>","                $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">\"columnResize\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                    column<span class=\"k\">:</span> grid<span class=\"k\">.</span>columns<span class=\"k\">[</span>grid<span class=\"k\">.</span>$columns<span class=\"k\">().</span>index<span class=\"k\">(</span>$th<span class=\"k\">)],</span>","                    oldWidth<span class=\"k\">:</span> columnWidth<span class=\"k\">,</span>","                    newWidth<span class=\"k\">:</span> newWidth","                <span class=\"k\">}</span><span class=\"k\">);</span>","        ","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> left <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        ","       $<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>unbind<span class=\"k\">(</span><span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">)</span>","                <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-header'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    left <span class=\"k\">+=</span> <span class=\"k\">this</span><span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","                    <span class=\"k\">var</span> $th <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>$th<span class=\"k\">.</span>hasClass<span class=\"k\">(</span><span class=\"s\">'t-group-cell'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-resize-handle\" /&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                            left<span class=\"k\">:</span> left <span class=\"k\">-</span> indicatorWidth<span class=\"k\">,</span>","                            top<span class=\"k\">:</span> grid<span class=\"k\">.</span>scrollable <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> heightAboveHeader<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">),</span>","                            width<span class=\"k\">:</span> indicatorWidth <span class=\"k\">*</span> <span class=\"s\">2</span>","                        <span class=\"k\">}</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>appendTo<span class=\"k\">(</span>grid<span class=\"k\">.</span>scrollable <span class=\"k\">?</span> grid<span class=\"k\">.</span>$headerWrap <span class=\"k\">:</span> grid<span class=\"k\">.</span>element<span class=\"k\">)</span>","                        <span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">,</span> $th<span class=\"k\">)</span>","                        <span class=\"k\">.</span>mousedown<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            positionResizeHandle<span class=\"k\">(</span>$th<span class=\"k\">);</span>","                            cursor<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'cursor'</span><span class=\"k\">));</span>","                        <span class=\"k\">}</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>mouseup<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            cursor<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","               <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">new</span> $t<span class=\"k\">.</span>draggable<span class=\"k\">(</span><span class=\"k\">{</span>","                owner<span class=\"k\">:</span> grid<span class=\"k\">.</span>element<span class=\"k\">,</span>","                selector<span class=\"k\">:</span> <span class=\"s\">'.t-resize-handle'</span><span class=\"k\">,</span>","                scope<span class=\"k\">:</span> grid<span class=\"k\">.</span>element<span class=\"k\">.</span>id <span class=\"k\">+</span> <span class=\"s\">'-column-resizing'</span><span class=\"k\">,</span>","                distance<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                start<span class=\"k\">:</span> start<span class=\"k\">,</span>","                drag<span class=\"k\">:</span> drag<span class=\"k\">,</span>","                stop<span class=\"k\">:</span> stop","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)(</span>jQuery<span class=\"k\">);</span>"];
_$jscoverage['telerik.grid.resizing.js'][1]++;
(function ($) {
  _$jscoverage['telerik.grid.resizing.js'][2]++;
  var $t = $.telerik;
  _$jscoverage['telerik.grid.resizing.js'][4]++;
  $t.resizing = {};
  _$jscoverage['telerik.grid.resizing.js'][6]++;
  $t.resizing.initialize = (function (grid) {
  _$jscoverage['telerik.grid.resizing.js'][8]++;
  var $col, $indicator = $("<div class=\"t-grid-resize-indicator\" />"), gridWidth, columnWidth, columnStart, indicatorWidth = 3;
  _$jscoverage['telerik.grid.resizing.js'][11]++;
  function cursor(context, value) {
    _$jscoverage['telerik.grid.resizing.js'][12]++;
    $("th, th .t-grid-filter, th .t-link", context).add(document.body).css("cursor", value);
}
  _$jscoverage['telerik.grid.resizing.js'][17]++;
  function heightAboveHeader(context) {
    _$jscoverage['telerik.grid.resizing.js'][18]++;
    var top = 0;
    _$jscoverage['telerik.grid.resizing.js'][19]++;
    $(".t-grouping-header, .t-grid-toolbar,  > .t-pager-wrapper", context).each((function () {
  _$jscoverage['telerik.grid.resizing.js'][20]++;
  top += this.offsetHeight;
}));
    _$jscoverage['telerik.grid.resizing.js'][22]++;
    return top;
}
  _$jscoverage['telerik.grid.resizing.js'][25]++;
  function positionResizeHandle($th) {
    _$jscoverage['telerik.grid.resizing.js'][26]++;
    var left = 0;
    _$jscoverage['telerik.grid.resizing.js'][28]++;
    $(".t-resize-handle", grid.element).each((function () {
  _$jscoverage['telerik.grid.resizing.js'][29]++;
  left += $(this).data("th").outerWidth();
  _$jscoverage['telerik.grid.resizing.js'][30]++;
  $(this).css("left", (left - indicatorWidth));
}));
    _$jscoverage['telerik.grid.resizing.js'][33]++;
    left = (- grid.$tbody.closest(".t-grid-content").scrollLeft());
    _$jscoverage['telerik.grid.resizing.js'][35]++;
    $th.prevAll("th").add($th).each((function () {
  _$jscoverage['telerik.grid.resizing.js'][36]++;
  left += this.offsetWidth;
}));
    _$jscoverage['telerik.grid.resizing.js'][39]++;
    var $body = (grid.scrollable? $(".t-grid-content", grid.element): $("tbody", grid.element));
    _$jscoverage['telerik.grid.resizing.js'][42]++;
    var width = $body.attr((grid.scrollable? "clientWidth": "offsetWidth"));
    _$jscoverage['telerik.grid.resizing.js'][44]++;
    if ((left >= width)) {
      _$jscoverage['telerik.grid.resizing.js'][45]++;
      $indicator.remove();
    }
    else {
      _$jscoverage['telerik.grid.resizing.js'][47]++;
      $indicator.css({left: left, top: heightAboveHeader(grid.element), height: ($th.outerHeight() + $body.attr((grid.scrollable? "clientHeight": "offsetHeight")))});
      _$jscoverage['telerik.grid.resizing.js'][52]++;
      if ((! $indicator.parent().length)) {
        _$jscoverage['telerik.grid.resizing.js'][53]++;
        $indicator.appendTo(grid.element);
      }
    }
}
  _$jscoverage['telerik.grid.resizing.js'][57]++;
  function start(e) {
    _$jscoverage['telerik.grid.resizing.js'][58]++;
    var $th = e.$draggable.data("th");
    _$jscoverage['telerik.grid.resizing.js'][60]++;
    $col = $("colgroup", grid.element).find(("col:eq(" + $th.index() + ")"));
    _$jscoverage['telerik.grid.resizing.js'][62]++;
    columnStart = e.pageX;
    _$jscoverage['telerik.grid.resizing.js'][63]++;
    columnWidth = $th.outerWidth();
    _$jscoverage['telerik.grid.resizing.js'][64]++;
    gridWidth = grid.$tbody.outerWidth();
}
  _$jscoverage['telerik.grid.resizing.js'][67]++;
  function drag(e) {
    _$jscoverage['telerik.grid.resizing.js'][68]++;
    var width = ((columnWidth + e.pageX) - columnStart);
    _$jscoverage['telerik.grid.resizing.js'][69]++;
    if ((width > 10)) {
      _$jscoverage['telerik.grid.resizing.js'][70]++;
      $col.css("width", width);
      _$jscoverage['telerik.grid.resizing.js'][71]++;
      if (grid.scrollable) {
        _$jscoverage['telerik.grid.resizing.js'][72]++;
        grid.$tbody.parent().add(grid.$headerWrap.find("table")).add(grid.$footerWrap.find("table")).css("width", ((gridWidth + e.pageX) - columnStart));
      }
      _$jscoverage['telerik.grid.resizing.js'][77]++;
      positionResizeHandle(e.$draggable.data("th"));
    }
}
  _$jscoverage['telerik.grid.resizing.js'][81]++;
  function stop(e) {
    _$jscoverage['telerik.grid.resizing.js'][82]++;
    $indicator.remove();
    _$jscoverage['telerik.grid.resizing.js'][83]++;
    cursor(grid.element, "");
    _$jscoverage['telerik.grid.resizing.js'][85]++;
    var $th = e.$draggable.data("th");
    _$jscoverage['telerik.grid.resizing.js'][87]++;
    var newWidth = $th.outerWidth();
    _$jscoverage['telerik.grid.resizing.js'][89]++;
    if ((grid.onColumnResize && (newWidth != columnWidth))) {
      _$jscoverage['telerik.grid.resizing.js'][90]++;
      $t.trigger(grid.element, "columnResize", {column: grid.columns[grid.$columns().index($th)], oldWidth: columnWidth, newWidth: newWidth});
    }
    _$jscoverage['telerik.grid.resizing.js'][96]++;
    return false;
}
  _$jscoverage['telerik.grid.resizing.js'][99]++;
  var left = 0;
  _$jscoverage['telerik.grid.resizing.js'][101]++;
  $(grid.element).bind("mouseenter", (function () {
  _$jscoverage['telerik.grid.resizing.js'][102]++;
  $(this).unbind("mouseenter", arguments.callee).find(".t-header").each((function () {
  _$jscoverage['telerik.grid.resizing.js'][106]++;
  left += this.offsetWidth;
  _$jscoverage['telerik.grid.resizing.js'][107]++;
  var $th = $(this);
  _$jscoverage['telerik.grid.resizing.js'][108]++;
  if ((! $th.hasClass("t-group-cell"))) {
    _$jscoverage['telerik.grid.resizing.js'][109]++;
    $("<div class=\"t-resize-handle\" />").css({left: (left - indicatorWidth), top: (grid.scrollable? 0: heightAboveHeader(grid.element)), width: (indicatorWidth * 2)}).appendTo((grid.scrollable? grid.$headerWrap: grid.element)).data("th", $th).mousedown((function () {
  _$jscoverage['telerik.grid.resizing.js'][118]++;
  positionResizeHandle($th);
  _$jscoverage['telerik.grid.resizing.js'][119]++;
  cursor(grid.element, $(this).css("cursor"));
})).mouseup((function () {
  _$jscoverage['telerik.grid.resizing.js'][122]++;
  cursor(grid.element, "");
}));
  }
}));
  _$jscoverage['telerik.grid.resizing.js'][127]++;
  new ($t.draggable)({owner: grid.element, selector: ".t-resize-handle", scope: (grid.element.id + "-column-resizing"), distance: 0, start: start, drag: drag, stop: stop});
}));
});
})(jQuery);
