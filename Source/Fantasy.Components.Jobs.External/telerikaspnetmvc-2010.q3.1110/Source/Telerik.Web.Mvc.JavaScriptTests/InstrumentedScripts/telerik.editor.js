/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['telerik.editor.js']) {
  _$jscoverage['telerik.editor.js'] = [];
  _$jscoverage['telerik.editor.js'][1] = 0;
  _$jscoverage['telerik.editor.js'][4] = 0;
  _$jscoverage['telerik.editor.js'][6] = 0;
  _$jscoverage['telerik.editor.js'][7] = 0;
  _$jscoverage['telerik.editor.js'][9] = 0;
  _$jscoverage['telerik.editor.js'][10] = 0;
  _$jscoverage['telerik.editor.js'][12] = 0;
  _$jscoverage['telerik.editor.js'][15] = 0;
  _$jscoverage['telerik.editor.js'][16] = 0;
  _$jscoverage['telerik.editor.js'][17] = 0;
  _$jscoverage['telerik.editor.js'][18] = 0;
  _$jscoverage['telerik.editor.js'][19] = 0;
  _$jscoverage['telerik.editor.js'][21] = 0;
  _$jscoverage['telerik.editor.js'][22] = 0;
  _$jscoverage['telerik.editor.js'][23] = 0;
  _$jscoverage['telerik.editor.js'][26] = 0;
  _$jscoverage['telerik.editor.js'][27] = 0;
  _$jscoverage['telerik.editor.js'][28] = 0;
  _$jscoverage['telerik.editor.js'][29] = 0;
  _$jscoverage['telerik.editor.js'][32] = 0;
  _$jscoverage['telerik.editor.js'][33] = 0;
  _$jscoverage['telerik.editor.js'][36] = 0;
  _$jscoverage['telerik.editor.js'][37] = 0;
  _$jscoverage['telerik.editor.js'][38] = 0;
  _$jscoverage['telerik.editor.js'][40] = 0;
  _$jscoverage['telerik.editor.js'][44] = 0;
  _$jscoverage['telerik.editor.js'][45] = 0;
  _$jscoverage['telerik.editor.js'][48] = 0;
  _$jscoverage['telerik.editor.js'][49] = 0;
  _$jscoverage['telerik.editor.js'][50] = 0;
  _$jscoverage['telerik.editor.js'][51] = 0;
  _$jscoverage['telerik.editor.js'][53] = 0;
  _$jscoverage['telerik.editor.js'][56] = 0;
  _$jscoverage['telerik.editor.js'][57] = 0;
  _$jscoverage['telerik.editor.js'][60] = 0;
  _$jscoverage['telerik.editor.js'][61] = 0;
  _$jscoverage['telerik.editor.js'][62] = 0;
  _$jscoverage['telerik.editor.js'][63] = 0;
  _$jscoverage['telerik.editor.js'][64] = 0;
  _$jscoverage['telerik.editor.js'][67] = 0;
  _$jscoverage['telerik.editor.js'][68] = 0;
  _$jscoverage['telerik.editor.js'][69] = 0;
  _$jscoverage['telerik.editor.js'][71] = 0;
  _$jscoverage['telerik.editor.js'][72] = 0;
  _$jscoverage['telerik.editor.js'][74] = 0;
  _$jscoverage['telerik.editor.js'][75] = 0;
  _$jscoverage['telerik.editor.js'][76] = 0;
  _$jscoverage['telerik.editor.js'][77] = 0;
  _$jscoverage['telerik.editor.js'][78] = 0;
  _$jscoverage['telerik.editor.js'][81] = 0;
  _$jscoverage['telerik.editor.js'][84] = 0;
  _$jscoverage['telerik.editor.js'][85] = 0;
  _$jscoverage['telerik.editor.js'][86] = 0;
  _$jscoverage['telerik.editor.js'][95] = 0;
  _$jscoverage['telerik.editor.js'][97] = 0;
  _$jscoverage['telerik.editor.js'][101] = 0;
  _$jscoverage['telerik.editor.js'][103] = 0;
  _$jscoverage['telerik.editor.js'][105] = 0;
  _$jscoverage['telerik.editor.js'][106] = 0;
  _$jscoverage['telerik.editor.js'][111] = 0;
  _$jscoverage['telerik.editor.js'][118] = 0;
  _$jscoverage['telerik.editor.js'][122] = 0;
  _$jscoverage['telerik.editor.js'][123] = 0;
  _$jscoverage['telerik.editor.js'][128] = 0;
  _$jscoverage['telerik.editor.js'][129] = 0;
  _$jscoverage['telerik.editor.js'][131] = 0;
  _$jscoverage['telerik.editor.js'][133] = 0;
  _$jscoverage['telerik.editor.js'][134] = 0;
  _$jscoverage['telerik.editor.js'][135] = 0;
  _$jscoverage['telerik.editor.js'][137] = 0;
  _$jscoverage['telerik.editor.js'][141] = 0;
  _$jscoverage['telerik.editor.js'][145] = 0;
  _$jscoverage['telerik.editor.js'][149] = 0;
  _$jscoverage['telerik.editor.js'][153] = 0;
  _$jscoverage['telerik.editor.js'][157] = 0;
  _$jscoverage['telerik.editor.js'][161] = 0;
  _$jscoverage['telerik.editor.js'][165] = 0;
  _$jscoverage['telerik.editor.js'][169] = 0;
  _$jscoverage['telerik.editor.js'][173] = 0;
  _$jscoverage['telerik.editor.js'][177] = 0;
  _$jscoverage['telerik.editor.js'][181] = 0;
  _$jscoverage['telerik.editor.js'][185] = 0;
  _$jscoverage['telerik.editor.js'][186] = 0;
  _$jscoverage['telerik.editor.js'][187] = 0;
  _$jscoverage['telerik.editor.js'][188] = 0;
  _$jscoverage['telerik.editor.js'][189] = 0;
  _$jscoverage['telerik.editor.js'][190] = 0;
  _$jscoverage['telerik.editor.js'][191] = 0;
  _$jscoverage['telerik.editor.js'][192] = 0;
  _$jscoverage['telerik.editor.js'][193] = 0;
  _$jscoverage['telerik.editor.js'][194] = 0;
  _$jscoverage['telerik.editor.js'][195] = 0;
  _$jscoverage['telerik.editor.js'][199] = 0;
  _$jscoverage['telerik.editor.js'][203] = 0;
  _$jscoverage['telerik.editor.js'][204] = 0;
  _$jscoverage['telerik.editor.js'][207] = 0;
  _$jscoverage['telerik.editor.js'][211] = 0;
  _$jscoverage['telerik.editor.js'][215] = 0;
  _$jscoverage['telerik.editor.js'][216] = 0;
  _$jscoverage['telerik.editor.js'][218] = 0;
  _$jscoverage['telerik.editor.js'][219] = 0;
  _$jscoverage['telerik.editor.js'][220] = 0;
  _$jscoverage['telerik.editor.js'][222] = 0;
  _$jscoverage['telerik.editor.js'][223] = 0;
  _$jscoverage['telerik.editor.js'][224] = 0;
  _$jscoverage['telerik.editor.js'][225] = 0;
  _$jscoverage['telerik.editor.js'][226] = 0;
  _$jscoverage['telerik.editor.js'][227] = 0;
  _$jscoverage['telerik.editor.js'][229] = 0;
  _$jscoverage['telerik.editor.js'][233] = 0;
  _$jscoverage['telerik.editor.js'][234] = 0;
  _$jscoverage['telerik.editor.js'][236] = 0;
  _$jscoverage['telerik.editor.js'][237] = 0;
  _$jscoverage['telerik.editor.js'][238] = 0;
  _$jscoverage['telerik.editor.js'][242] = 0;
  _$jscoverage['telerik.editor.js'][243] = 0;
  _$jscoverage['telerik.editor.js'][244] = 0;
  _$jscoverage['telerik.editor.js'][248] = 0;
  _$jscoverage['telerik.editor.js'][249] = 0;
  _$jscoverage['telerik.editor.js'][250] = 0;
  _$jscoverage['telerik.editor.js'][252] = 0;
  _$jscoverage['telerik.editor.js'][256] = 0;
  _$jscoverage['telerik.editor.js'][260] = 0;
  _$jscoverage['telerik.editor.js'][262] = 0;
  _$jscoverage['telerik.editor.js'][263] = 0;
  _$jscoverage['telerik.editor.js'][264] = 0;
  _$jscoverage['telerik.editor.js'][266] = 0;
  _$jscoverage['telerik.editor.js'][270] = 0;
  _$jscoverage['telerik.editor.js'][274] = 0;
  _$jscoverage['telerik.editor.js'][275] = 0;
  _$jscoverage['telerik.editor.js'][276] = 0;
  _$jscoverage['telerik.editor.js'][278] = 0;
  _$jscoverage['telerik.editor.js'][281] = 0;
  _$jscoverage['telerik.editor.js'][282] = 0;
  _$jscoverage['telerik.editor.js'][286] = 0;
  _$jscoverage['telerik.editor.js'][288] = 0;
  _$jscoverage['telerik.editor.js'][290] = 0;
  _$jscoverage['telerik.editor.js'][292] = 0;
  _$jscoverage['telerik.editor.js'][293] = 0;
  _$jscoverage['telerik.editor.js'][296] = 0;
  _$jscoverage['telerik.editor.js'][298] = 0;
  _$jscoverage['telerik.editor.js'][302] = 0;
  _$jscoverage['telerik.editor.js'][304] = 0;
  _$jscoverage['telerik.editor.js'][305] = 0;
  _$jscoverage['telerik.editor.js'][307] = 0;
  _$jscoverage['telerik.editor.js'][308] = 0;
  _$jscoverage['telerik.editor.js'][310] = 0;
  _$jscoverage['telerik.editor.js'][311] = 0;
  _$jscoverage['telerik.editor.js'][313] = 0;
  _$jscoverage['telerik.editor.js'][314] = 0;
  _$jscoverage['telerik.editor.js'][315] = 0;
  _$jscoverage['telerik.editor.js'][316] = 0;
  _$jscoverage['telerik.editor.js'][317] = 0;
  _$jscoverage['telerik.editor.js'][318] = 0;
  _$jscoverage['telerik.editor.js'][320] = 0;
  _$jscoverage['telerik.editor.js'][321] = 0;
  _$jscoverage['telerik.editor.js'][324] = 0;
  _$jscoverage['telerik.editor.js'][325] = 0;
  _$jscoverage['telerik.editor.js'][327] = 0;
  _$jscoverage['telerik.editor.js'][328] = 0;
  _$jscoverage['telerik.editor.js'][329] = 0;
  _$jscoverage['telerik.editor.js'][331] = 0;
  _$jscoverage['telerik.editor.js'][332] = 0;
  _$jscoverage['telerik.editor.js'][333] = 0;
  _$jscoverage['telerik.editor.js'][335] = 0;
  _$jscoverage['telerik.editor.js'][337] = 0;
  _$jscoverage['telerik.editor.js'][340] = 0;
  _$jscoverage['telerik.editor.js'][342] = 0;
  _$jscoverage['telerik.editor.js'][343] = 0;
  _$jscoverage['telerik.editor.js'][344] = 0;
  _$jscoverage['telerik.editor.js'][345] = 0;
  _$jscoverage['telerik.editor.js'][346] = 0;
  _$jscoverage['telerik.editor.js'][347] = 0;
  _$jscoverage['telerik.editor.js'][348] = 0;
  _$jscoverage['telerik.editor.js'][351] = 0;
  _$jscoverage['telerik.editor.js'][353] = 0;
  _$jscoverage['telerik.editor.js'][354] = 0;
  _$jscoverage['telerik.editor.js'][355] = 0;
  _$jscoverage['telerik.editor.js'][357] = 0;
  _$jscoverage['telerik.editor.js'][358] = 0;
  _$jscoverage['telerik.editor.js'][359] = 0;
  _$jscoverage['telerik.editor.js'][360] = 0;
  _$jscoverage['telerik.editor.js'][363] = 0;
  _$jscoverage['telerik.editor.js'][364] = 0;
  _$jscoverage['telerik.editor.js'][365] = 0;
  _$jscoverage['telerik.editor.js'][366] = 0;
  _$jscoverage['telerik.editor.js'][369] = 0;
  _$jscoverage['telerik.editor.js'][370] = 0;
  _$jscoverage['telerik.editor.js'][371] = 0;
  _$jscoverage['telerik.editor.js'][372] = 0;
  _$jscoverage['telerik.editor.js'][375] = 0;
  _$jscoverage['telerik.editor.js'][378] = 0;
  _$jscoverage['telerik.editor.js'][383] = 0;
  _$jscoverage['telerik.editor.js'][384] = 0;
  _$jscoverage['telerik.editor.js'][388] = 0;
  _$jscoverage['telerik.editor.js'][389] = 0;
  _$jscoverage['telerik.editor.js'][393] = 0;
  _$jscoverage['telerik.editor.js'][394] = 0;
  _$jscoverage['telerik.editor.js'][395] = 0;
  _$jscoverage['telerik.editor.js'][398] = 0;
  _$jscoverage['telerik.editor.js'][399] = 0;
  _$jscoverage['telerik.editor.js'][400] = 0;
  _$jscoverage['telerik.editor.js'][404] = 0;
  _$jscoverage['telerik.editor.js'][405] = 0;
  _$jscoverage['telerik.editor.js'][406] = 0;
  _$jscoverage['telerik.editor.js'][408] = 0;
  _$jscoverage['telerik.editor.js'][409] = 0;
  _$jscoverage['telerik.editor.js'][410] = 0;
  _$jscoverage['telerik.editor.js'][413] = 0;
  _$jscoverage['telerik.editor.js'][414] = 0;
  _$jscoverage['telerik.editor.js'][416] = 0;
  _$jscoverage['telerik.editor.js'][417] = 0;
  _$jscoverage['telerik.editor.js'][420] = 0;
  _$jscoverage['telerik.editor.js'][421] = 0;
  _$jscoverage['telerik.editor.js'][422] = 0;
  _$jscoverage['telerik.editor.js'][423] = 0;
  _$jscoverage['telerik.editor.js'][425] = 0;
  _$jscoverage['telerik.editor.js'][426] = 0;
  _$jscoverage['telerik.editor.js'][427] = 0;
  _$jscoverage['telerik.editor.js'][428] = 0;
  _$jscoverage['telerik.editor.js'][430] = 0;
  _$jscoverage['telerik.editor.js'][432] = 0;
  _$jscoverage['telerik.editor.js'][433] = 0;
  _$jscoverage['telerik.editor.js'][434] = 0;
  _$jscoverage['telerik.editor.js'][435] = 0;
  _$jscoverage['telerik.editor.js'][436] = 0;
  _$jscoverage['telerik.editor.js'][439] = 0;
  _$jscoverage['telerik.editor.js'][440] = 0;
  _$jscoverage['telerik.editor.js'][442] = 0;
  _$jscoverage['telerik.editor.js'][443] = 0;
  _$jscoverage['telerik.editor.js'][444] = 0;
  _$jscoverage['telerik.editor.js'][445] = 0;
  _$jscoverage['telerik.editor.js'][447] = 0;
  _$jscoverage['telerik.editor.js'][448] = 0;
  _$jscoverage['telerik.editor.js'][449] = 0;
  _$jscoverage['telerik.editor.js'][451] = 0;
  _$jscoverage['telerik.editor.js'][454] = 0;
  _$jscoverage['telerik.editor.js'][458] = 0;
  _$jscoverage['telerik.editor.js'][459] = 0;
  _$jscoverage['telerik.editor.js'][460] = 0;
  _$jscoverage['telerik.editor.js'][463] = 0;
  _$jscoverage['telerik.editor.js'][464] = 0;
  _$jscoverage['telerik.editor.js'][465] = 0;
  _$jscoverage['telerik.editor.js'][466] = 0;
  _$jscoverage['telerik.editor.js'][467] = 0;
  _$jscoverage['telerik.editor.js'][469] = 0;
  _$jscoverage['telerik.editor.js'][470] = 0;
  _$jscoverage['telerik.editor.js'][472] = 0;
  _$jscoverage['telerik.editor.js'][473] = 0;
  _$jscoverage['telerik.editor.js'][474] = 0;
  _$jscoverage['telerik.editor.js'][475] = 0;
  _$jscoverage['telerik.editor.js'][476] = 0;
  _$jscoverage['telerik.editor.js'][479] = 0;
  _$jscoverage['telerik.editor.js'][480] = 0;
  _$jscoverage['telerik.editor.js'][482] = 0;
  _$jscoverage['telerik.editor.js'][484] = 0;
  _$jscoverage['telerik.editor.js'][485] = 0;
  _$jscoverage['telerik.editor.js'][487] = 0;
  _$jscoverage['telerik.editor.js'][488] = 0;
  _$jscoverage['telerik.editor.js'][489] = 0;
  _$jscoverage['telerik.editor.js'][490] = 0;
  _$jscoverage['telerik.editor.js'][491] = 0;
  _$jscoverage['telerik.editor.js'][493] = 0;
  _$jscoverage['telerik.editor.js'][494] = 0;
  _$jscoverage['telerik.editor.js'][496] = 0;
  _$jscoverage['telerik.editor.js'][497] = 0;
  _$jscoverage['telerik.editor.js'][498] = 0;
  _$jscoverage['telerik.editor.js'][500] = 0;
  _$jscoverage['telerik.editor.js'][501] = 0;
  _$jscoverage['telerik.editor.js'][503] = 0;
  _$jscoverage['telerik.editor.js'][506] = 0;
  _$jscoverage['telerik.editor.js'][508] = 0;
  _$jscoverage['telerik.editor.js'][509] = 0;
  _$jscoverage['telerik.editor.js'][510] = 0;
  _$jscoverage['telerik.editor.js'][511] = 0;
  _$jscoverage['telerik.editor.js'][512] = 0;
  _$jscoverage['telerik.editor.js'][513] = 0;
  _$jscoverage['telerik.editor.js'][514] = 0;
  _$jscoverage['telerik.editor.js'][515] = 0;
  _$jscoverage['telerik.editor.js'][516] = 0;
  _$jscoverage['telerik.editor.js'][518] = 0;
  _$jscoverage['telerik.editor.js'][519] = 0;
  _$jscoverage['telerik.editor.js'][520] = 0;
  _$jscoverage['telerik.editor.js'][525] = 0;
  _$jscoverage['telerik.editor.js'][527] = 0;
  _$jscoverage['telerik.editor.js'][529] = 0;
  _$jscoverage['telerik.editor.js'][535] = 0;
  _$jscoverage['telerik.editor.js'][536] = 0;
  _$jscoverage['telerik.editor.js'][537] = 0;
  _$jscoverage['telerik.editor.js'][540] = 0;
  _$jscoverage['telerik.editor.js'][541] = 0;
  _$jscoverage['telerik.editor.js'][544] = 0;
  _$jscoverage['telerik.editor.js'][545] = 0;
  _$jscoverage['telerik.editor.js'][546] = 0;
  _$jscoverage['telerik.editor.js'][549] = 0;
  _$jscoverage['telerik.editor.js'][550] = 0;
  _$jscoverage['telerik.editor.js'][553] = 0;
  _$jscoverage['telerik.editor.js'][554] = 0;
  _$jscoverage['telerik.editor.js'][557] = 0;
  _$jscoverage['telerik.editor.js'][558] = 0;
  _$jscoverage['telerik.editor.js'][559] = 0;
  _$jscoverage['telerik.editor.js'][560] = 0;
  _$jscoverage['telerik.editor.js'][561] = 0;
  _$jscoverage['telerik.editor.js'][562] = 0;
  _$jscoverage['telerik.editor.js'][563] = 0;
  _$jscoverage['telerik.editor.js'][564] = 0;
  _$jscoverage['telerik.editor.js'][565] = 0;
  _$jscoverage['telerik.editor.js'][567] = 0;
  _$jscoverage['telerik.editor.js'][568] = 0;
  _$jscoverage['telerik.editor.js'][571] = 0;
  _$jscoverage['telerik.editor.js'][572] = 0;
  _$jscoverage['telerik.editor.js'][573] = 0;
  _$jscoverage['telerik.editor.js'][574] = 0;
  _$jscoverage['telerik.editor.js'][575] = 0;
  _$jscoverage['telerik.editor.js'][577] = 0;
  _$jscoverage['telerik.editor.js'][578] = 0;
  _$jscoverage['telerik.editor.js'][579] = 0;
  _$jscoverage['telerik.editor.js'][582] = 0;
  _$jscoverage['telerik.editor.js'][583] = 0;
  _$jscoverage['telerik.editor.js'][592] = 0;
  _$jscoverage['telerik.editor.js'][594] = 0;
  _$jscoverage['telerik.editor.js'][598] = 0;
  _$jscoverage['telerik.editor.js'][599] = 0;
  _$jscoverage['telerik.editor.js'][600] = 0;
  _$jscoverage['telerik.editor.js'][601] = 0;
  _$jscoverage['telerik.editor.js'][605] = 0;
  _$jscoverage['telerik.editor.js'][606] = 0;
  _$jscoverage['telerik.editor.js'][607] = 0;
  _$jscoverage['telerik.editor.js'][608] = 0;
  _$jscoverage['telerik.editor.js'][612] = 0;
  _$jscoverage['telerik.editor.js'][616] = 0;
  _$jscoverage['telerik.editor.js'][620] = 0;
  _$jscoverage['telerik.editor.js'][624] = 0;
  _$jscoverage['telerik.editor.js'][628] = 0;
  _$jscoverage['telerik.editor.js'][629] = 0;
  _$jscoverage['telerik.editor.js'][633] = 0;
  _$jscoverage['telerik.editor.js'][634] = 0;
  _$jscoverage['telerik.editor.js'][638] = 0;
  _$jscoverage['telerik.editor.js'][639] = 0;
  _$jscoverage['telerik.editor.js'][641] = 0;
  _$jscoverage['telerik.editor.js'][647] = 0;
  _$jscoverage['telerik.editor.js'][649] = 0;
  _$jscoverage['telerik.editor.js'][650] = 0;
  _$jscoverage['telerik.editor.js'][652] = 0;
  _$jscoverage['telerik.editor.js'][654] = 0;
  _$jscoverage['telerik.editor.js'][655] = 0;
  _$jscoverage['telerik.editor.js'][656] = 0;
  _$jscoverage['telerik.editor.js'][663] = 0;
  _$jscoverage['telerik.editor.js'][664] = 0;
  _$jscoverage['telerik.editor.js'][665] = 0;
  _$jscoverage['telerik.editor.js'][666] = 0;
  _$jscoverage['telerik.editor.js'][667] = 0;
  _$jscoverage['telerik.editor.js'][668] = 0;
  _$jscoverage['telerik.editor.js'][669] = 0;
  _$jscoverage['telerik.editor.js'][671] = 0;
  _$jscoverage['telerik.editor.js'][676] = 0;
  _$jscoverage['telerik.editor.js'][678] = 0;
  _$jscoverage['telerik.editor.js'][679] = 0;
  _$jscoverage['telerik.editor.js'][681] = 0;
  _$jscoverage['telerik.editor.js'][683] = 0;
  _$jscoverage['telerik.editor.js'][685] = 0;
  _$jscoverage['telerik.editor.js'][687] = 0;
  _$jscoverage['telerik.editor.js'][688] = 0;
  _$jscoverage['telerik.editor.js'][689] = 0;
  _$jscoverage['telerik.editor.js'][691] = 0;
  _$jscoverage['telerik.editor.js'][692] = 0;
  _$jscoverage['telerik.editor.js'][694] = 0;
  _$jscoverage['telerik.editor.js'][697] = 0;
  _$jscoverage['telerik.editor.js'][702] = 0;
  _$jscoverage['telerik.editor.js'][703] = 0;
  _$jscoverage['telerik.editor.js'][704] = 0;
  _$jscoverage['telerik.editor.js'][706] = 0;
  _$jscoverage['telerik.editor.js'][708] = 0;
  _$jscoverage['telerik.editor.js'][711] = 0;
  _$jscoverage['telerik.editor.js'][716] = 0;
  _$jscoverage['telerik.editor.js'][730] = 0;
  _$jscoverage['telerik.editor.js'][733] = 0;
  _$jscoverage['telerik.editor.js'][738] = 0;
  _$jscoverage['telerik.editor.js'][739] = 0;
  _$jscoverage['telerik.editor.js'][740] = 0;
  _$jscoverage['telerik.editor.js'][743] = 0;
  _$jscoverage['telerik.editor.js'][744] = 0;
  _$jscoverage['telerik.editor.js'][745] = 0;
  _$jscoverage['telerik.editor.js'][747] = 0;
  _$jscoverage['telerik.editor.js'][748] = 0;
  _$jscoverage['telerik.editor.js'][751] = 0;
  _$jscoverage['telerik.editor.js'][752] = 0;
  _$jscoverage['telerik.editor.js'][753] = 0;
  _$jscoverage['telerik.editor.js'][755] = 0;
  _$jscoverage['telerik.editor.js'][756] = 0;
  _$jscoverage['telerik.editor.js'][759] = 0;
  _$jscoverage['telerik.editor.js'][760] = 0;
  _$jscoverage['telerik.editor.js'][762] = 0;
  _$jscoverage['telerik.editor.js'][763] = 0;
  _$jscoverage['telerik.editor.js'][765] = 0;
  _$jscoverage['telerik.editor.js'][766] = 0;
  _$jscoverage['telerik.editor.js'][768] = 0;
  _$jscoverage['telerik.editor.js'][769] = 0;
  _$jscoverage['telerik.editor.js'][770] = 0;
  _$jscoverage['telerik.editor.js'][772] = 0;
  _$jscoverage['telerik.editor.js'][773] = 0;
  _$jscoverage['telerik.editor.js'][775] = 0;
  _$jscoverage['telerik.editor.js'][776] = 0;
  _$jscoverage['telerik.editor.js'][778] = 0;
  _$jscoverage['telerik.editor.js'][781] = 0;
  _$jscoverage['telerik.editor.js'][782] = 0;
  _$jscoverage['telerik.editor.js'][783] = 0;
  _$jscoverage['telerik.editor.js'][784] = 0;
  _$jscoverage['telerik.editor.js'][787] = 0;
  _$jscoverage['telerik.editor.js'][791] = 0;
  _$jscoverage['telerik.editor.js'][792] = 0;
  _$jscoverage['telerik.editor.js'][793] = 0;
  _$jscoverage['telerik.editor.js'][794] = 0;
  _$jscoverage['telerik.editor.js'][796] = 0;
  _$jscoverage['telerik.editor.js'][797] = 0;
  _$jscoverage['telerik.editor.js'][800] = 0;
  _$jscoverage['telerik.editor.js'][804] = 0;
  _$jscoverage['telerik.editor.js'][805] = 0;
  _$jscoverage['telerik.editor.js'][807] = 0;
  _$jscoverage['telerik.editor.js'][808] = 0;
  _$jscoverage['telerik.editor.js'][809] = 0;
  _$jscoverage['telerik.editor.js'][811] = 0;
  _$jscoverage['telerik.editor.js'][814] = 0;
  _$jscoverage['telerik.editor.js'][815] = 0;
  _$jscoverage['telerik.editor.js'][819] = 0;
  _$jscoverage['telerik.editor.js'][820] = 0;
  _$jscoverage['telerik.editor.js'][827] = 0;
  _$jscoverage['telerik.editor.js'][828] = 0;
  _$jscoverage['telerik.editor.js'][830] = 0;
  _$jscoverage['telerik.editor.js'][832] = 0;
  _$jscoverage['telerik.editor.js'][836] = 0;
  _$jscoverage['telerik.editor.js'][841] = 0;
  _$jscoverage['telerik.editor.js'][843] = 0;
  _$jscoverage['telerik.editor.js'][847] = 0;
  _$jscoverage['telerik.editor.js'][848] = 0;
  _$jscoverage['telerik.editor.js'][851] = 0;
  _$jscoverage['telerik.editor.js'][852] = 0;
  _$jscoverage['telerik.editor.js'][853] = 0;
  _$jscoverage['telerik.editor.js'][855] = 0;
  _$jscoverage['telerik.editor.js'][856] = 0;
  _$jscoverage['telerik.editor.js'][859] = 0;
  _$jscoverage['telerik.editor.js'][863] = 0;
  _$jscoverage['telerik.editor.js'][864] = 0;
  _$jscoverage['telerik.editor.js'][865] = 0;
  _$jscoverage['telerik.editor.js'][866] = 0;
  _$jscoverage['telerik.editor.js'][869] = 0;
  _$jscoverage['telerik.editor.js'][871] = 0;
  _$jscoverage['telerik.editor.js'][872] = 0;
  _$jscoverage['telerik.editor.js'][873] = 0;
  _$jscoverage['telerik.editor.js'][875] = 0;
  _$jscoverage['telerik.editor.js'][878] = 0;
  _$jscoverage['telerik.editor.js'][882] = 0;
  _$jscoverage['telerik.editor.js'][883] = 0;
  _$jscoverage['telerik.editor.js'][885] = 0;
  _$jscoverage['telerik.editor.js'][886] = 0;
  _$jscoverage['telerik.editor.js'][887] = 0;
  _$jscoverage['telerik.editor.js'][888] = 0;
  _$jscoverage['telerik.editor.js'][890] = 0;
  _$jscoverage['telerik.editor.js'][891] = 0;
  _$jscoverage['telerik.editor.js'][892] = 0;
  _$jscoverage['telerik.editor.js'][894] = 0;
  _$jscoverage['telerik.editor.js'][895] = 0;
  _$jscoverage['telerik.editor.js'][898] = 0;
  _$jscoverage['telerik.editor.js'][900] = 0;
  _$jscoverage['telerik.editor.js'][902] = 0;
  _$jscoverage['telerik.editor.js'][903] = 0;
  _$jscoverage['telerik.editor.js'][905] = 0;
  _$jscoverage['telerik.editor.js'][906] = 0;
  _$jscoverage['telerik.editor.js'][908] = 0;
  _$jscoverage['telerik.editor.js'][909] = 0;
  _$jscoverage['telerik.editor.js'][912] = 0;
  _$jscoverage['telerik.editor.js'][917] = 0;
  _$jscoverage['telerik.editor.js'][923] = 0;
  _$jscoverage['telerik.editor.js'][924] = 0;
  _$jscoverage['telerik.editor.js'][926] = 0;
  _$jscoverage['telerik.editor.js'][927] = 0;
  _$jscoverage['telerik.editor.js'][928] = 0;
  _$jscoverage['telerik.editor.js'][929] = 0;
  _$jscoverage['telerik.editor.js'][931] = 0;
  _$jscoverage['telerik.editor.js'][935] = 0;
  _$jscoverage['telerik.editor.js'][936] = 0;
  _$jscoverage['telerik.editor.js'][937] = 0;
  _$jscoverage['telerik.editor.js'][938] = 0;
  _$jscoverage['telerik.editor.js'][940] = 0;
  _$jscoverage['telerik.editor.js'][942] = 0;
  _$jscoverage['telerik.editor.js'][945] = 0;
  _$jscoverage['telerik.editor.js'][946] = 0;
  _$jscoverage['telerik.editor.js'][948] = 0;
  _$jscoverage['telerik.editor.js'][952] = 0;
  _$jscoverage['telerik.editor.js'][956] = 0;
  _$jscoverage['telerik.editor.js'][958] = 0;
  _$jscoverage['telerik.editor.js'][959] = 0;
  _$jscoverage['telerik.editor.js'][961] = 0;
  _$jscoverage['telerik.editor.js'][964] = 0;
  _$jscoverage['telerik.editor.js'][965] = 0;
  _$jscoverage['telerik.editor.js'][967] = 0;
  _$jscoverage['telerik.editor.js'][968] = 0;
  _$jscoverage['telerik.editor.js'][970] = 0;
  _$jscoverage['telerik.editor.js'][971] = 0;
  _$jscoverage['telerik.editor.js'][973] = 0;
  _$jscoverage['telerik.editor.js'][974] = 0;
  _$jscoverage['telerik.editor.js'][976] = 0;
  _$jscoverage['telerik.editor.js'][977] = 0;
  _$jscoverage['telerik.editor.js'][979] = 0;
  _$jscoverage['telerik.editor.js'][983] = 0;
  _$jscoverage['telerik.editor.js'][985] = 0;
  _$jscoverage['telerik.editor.js'][986] = 0;
  _$jscoverage['telerik.editor.js'][987] = 0;
  _$jscoverage['telerik.editor.js'][988] = 0;
  _$jscoverage['telerik.editor.js'][990] = 0;
  _$jscoverage['telerik.editor.js'][991] = 0;
  _$jscoverage['telerik.editor.js'][994] = 0;
  _$jscoverage['telerik.editor.js'][996] = 0;
  _$jscoverage['telerik.editor.js'][997] = 0;
  _$jscoverage['telerik.editor.js'][998] = 0;
  _$jscoverage['telerik.editor.js'][999] = 0;
  _$jscoverage['telerik.editor.js'][1000] = 0;
  _$jscoverage['telerik.editor.js'][1001] = 0;
  _$jscoverage['telerik.editor.js'][1004] = 0;
  _$jscoverage['telerik.editor.js'][1005] = 0;
  _$jscoverage['telerik.editor.js'][1006] = 0;
  _$jscoverage['telerik.editor.js'][1007] = 0;
  _$jscoverage['telerik.editor.js'][1008] = 0;
  _$jscoverage['telerik.editor.js'][1009] = 0;
  _$jscoverage['telerik.editor.js'][1010] = 0;
  _$jscoverage['telerik.editor.js'][1013] = 0;
  _$jscoverage['telerik.editor.js'][1015] = 0;
  _$jscoverage['telerik.editor.js'][1017] = 0;
  _$jscoverage['telerik.editor.js'][1019] = 0;
  _$jscoverage['telerik.editor.js'][1021] = 0;
  _$jscoverage['telerik.editor.js'][1022] = 0;
  _$jscoverage['telerik.editor.js'][1023] = 0;
  _$jscoverage['telerik.editor.js'][1025] = 0;
  _$jscoverage['telerik.editor.js'][1026] = 0;
  _$jscoverage['telerik.editor.js'][1027] = 0;
  _$jscoverage['telerik.editor.js'][1030] = 0;
  _$jscoverage['telerik.editor.js'][1033] = 0;
  _$jscoverage['telerik.editor.js'][1035] = 0;
  _$jscoverage['telerik.editor.js'][1036] = 0;
  _$jscoverage['telerik.editor.js'][1038] = 0;
  _$jscoverage['telerik.editor.js'][1041] = 0;
  _$jscoverage['telerik.editor.js'][1042] = 0;
  _$jscoverage['telerik.editor.js'][1043] = 0;
  _$jscoverage['telerik.editor.js'][1045] = 0;
  _$jscoverage['telerik.editor.js'][1046] = 0;
  _$jscoverage['telerik.editor.js'][1047] = 0;
  _$jscoverage['telerik.editor.js'][1049] = 0;
  _$jscoverage['telerik.editor.js'][1050] = 0;
  _$jscoverage['telerik.editor.js'][1051] = 0;
  _$jscoverage['telerik.editor.js'][1052] = 0;
  _$jscoverage['telerik.editor.js'][1057] = 0;
  _$jscoverage['telerik.editor.js'][1059] = 0;
  _$jscoverage['telerik.editor.js'][1063] = 0;
  _$jscoverage['telerik.editor.js'][1064] = 0;
  _$jscoverage['telerik.editor.js'][1067] = 0;
  _$jscoverage['telerik.editor.js'][1068] = 0;
  _$jscoverage['telerik.editor.js'][1070] = 0;
  _$jscoverage['telerik.editor.js'][1071] = 0;
  _$jscoverage['telerik.editor.js'][1072] = 0;
  _$jscoverage['telerik.editor.js'][1073] = 0;
  _$jscoverage['telerik.editor.js'][1076] = 0;
  _$jscoverage['telerik.editor.js'][1079] = 0;
  _$jscoverage['telerik.editor.js'][1080] = 0;
  _$jscoverage['telerik.editor.js'][1082] = 0;
  _$jscoverage['telerik.editor.js'][1083] = 0;
  _$jscoverage['telerik.editor.js'][1084] = 0;
  _$jscoverage['telerik.editor.js'][1087] = 0;
  _$jscoverage['telerik.editor.js'][1090] = 0;
  _$jscoverage['telerik.editor.js'][1091] = 0;
  _$jscoverage['telerik.editor.js'][1093] = 0;
  _$jscoverage['telerik.editor.js'][1095] = 0;
  _$jscoverage['telerik.editor.js'][1097] = 0;
  _$jscoverage['telerik.editor.js'][1098] = 0;
  _$jscoverage['telerik.editor.js'][1100] = 0;
  _$jscoverage['telerik.editor.js'][1101] = 0;
  _$jscoverage['telerik.editor.js'][1103] = 0;
  _$jscoverage['telerik.editor.js'][1104] = 0;
  _$jscoverage['telerik.editor.js'][1106] = 0;
  _$jscoverage['telerik.editor.js'][1109] = 0;
  _$jscoverage['telerik.editor.js'][1112] = 0;
  _$jscoverage['telerik.editor.js'][1113] = 0;
  _$jscoverage['telerik.editor.js'][1114] = 0;
  _$jscoverage['telerik.editor.js'][1115] = 0;
  _$jscoverage['telerik.editor.js'][1117] = 0;
  _$jscoverage['telerik.editor.js'][1120] = 0;
  _$jscoverage['telerik.editor.js'][1121] = 0;
  _$jscoverage['telerik.editor.js'][1123] = 0;
  _$jscoverage['telerik.editor.js'][1124] = 0;
  _$jscoverage['telerik.editor.js'][1125] = 0;
  _$jscoverage['telerik.editor.js'][1128] = 0;
  _$jscoverage['telerik.editor.js'][1131] = 0;
  _$jscoverage['telerik.editor.js'][1132] = 0;
  _$jscoverage['telerik.editor.js'][1134] = 0;
  _$jscoverage['telerik.editor.js'][1135] = 0;
  _$jscoverage['telerik.editor.js'][1137] = 0;
  _$jscoverage['telerik.editor.js'][1140] = 0;
  _$jscoverage['telerik.editor.js'][1141] = 0;
  _$jscoverage['telerik.editor.js'][1142] = 0;
  _$jscoverage['telerik.editor.js'][1143] = 0;
  _$jscoverage['telerik.editor.js'][1145] = 0;
  _$jscoverage['telerik.editor.js'][1146] = 0;
  _$jscoverage['telerik.editor.js'][1148] = 0;
  _$jscoverage['telerik.editor.js'][1149] = 0;
  _$jscoverage['telerik.editor.js'][1151] = 0;
  _$jscoverage['telerik.editor.js'][1155] = 0;
  _$jscoverage['telerik.editor.js'][1156] = 0;
  _$jscoverage['telerik.editor.js'][1158] = 0;
  _$jscoverage['telerik.editor.js'][1159] = 0;
  _$jscoverage['telerik.editor.js'][1160] = 0;
  _$jscoverage['telerik.editor.js'][1161] = 0;
  _$jscoverage['telerik.editor.js'][1162] = 0;
  _$jscoverage['telerik.editor.js'][1165] = 0;
  _$jscoverage['telerik.editor.js'][1166] = 0;
  _$jscoverage['telerik.editor.js'][1167] = 0;
  _$jscoverage['telerik.editor.js'][1169] = 0;
  _$jscoverage['telerik.editor.js'][1170] = 0;
  _$jscoverage['telerik.editor.js'][1172] = 0;
  _$jscoverage['telerik.editor.js'][1173] = 0;
  _$jscoverage['telerik.editor.js'][1175] = 0;
  _$jscoverage['telerik.editor.js'][1176] = 0;
  _$jscoverage['telerik.editor.js'][1178] = 0;
  _$jscoverage['telerik.editor.js'][1180] = 0;
  _$jscoverage['telerik.editor.js'][1181] = 0;
  _$jscoverage['telerik.editor.js'][1182] = 0;
  _$jscoverage['telerik.editor.js'][1183] = 0;
  _$jscoverage['telerik.editor.js'][1184] = 0;
  _$jscoverage['telerik.editor.js'][1185] = 0;
  _$jscoverage['telerik.editor.js'][1187] = 0;
  _$jscoverage['telerik.editor.js'][1189] = 0;
  _$jscoverage['telerik.editor.js'][1190] = 0;
  _$jscoverage['telerik.editor.js'][1192] = 0;
  _$jscoverage['telerik.editor.js'][1194] = 0;
  _$jscoverage['telerik.editor.js'][1197] = 0;
  _$jscoverage['telerik.editor.js'][1198] = 0;
  _$jscoverage['telerik.editor.js'][1199] = 0;
  _$jscoverage['telerik.editor.js'][1200] = 0;
  _$jscoverage['telerik.editor.js'][1203] = 0;
  _$jscoverage['telerik.editor.js'][1205] = 0;
  _$jscoverage['telerik.editor.js'][1206] = 0;
  _$jscoverage['telerik.editor.js'][1207] = 0;
  _$jscoverage['telerik.editor.js'][1209] = 0;
  _$jscoverage['telerik.editor.js'][1210] = 0;
  _$jscoverage['telerik.editor.js'][1211] = 0;
  _$jscoverage['telerik.editor.js'][1212] = 0;
  _$jscoverage['telerik.editor.js'][1214] = 0;
  _$jscoverage['telerik.editor.js'][1215] = 0;
  _$jscoverage['telerik.editor.js'][1217] = 0;
  _$jscoverage['telerik.editor.js'][1219] = 0;
  _$jscoverage['telerik.editor.js'][1222] = 0;
  _$jscoverage['telerik.editor.js'][1223] = 0;
  _$jscoverage['telerik.editor.js'][1225] = 0;
  _$jscoverage['telerik.editor.js'][1227] = 0;
  _$jscoverage['telerik.editor.js'][1228] = 0;
  _$jscoverage['telerik.editor.js'][1230] = 0;
  _$jscoverage['telerik.editor.js'][1233] = 0;
  _$jscoverage['telerik.editor.js'][1236] = 0;
  _$jscoverage['telerik.editor.js'][1237] = 0;
  _$jscoverage['telerik.editor.js'][1239] = 0;
  _$jscoverage['telerik.editor.js'][1240] = 0;
  _$jscoverage['telerik.editor.js'][1242] = 0;
  _$jscoverage['telerik.editor.js'][1243] = 0;
  _$jscoverage['telerik.editor.js'][1244] = 0;
  _$jscoverage['telerik.editor.js'][1245] = 0;
  _$jscoverage['telerik.editor.js'][1248] = 0;
  _$jscoverage['telerik.editor.js'][1249] = 0;
  _$jscoverage['telerik.editor.js'][1251] = 0;
  _$jscoverage['telerik.editor.js'][1252] = 0;
  _$jscoverage['telerik.editor.js'][1253] = 0;
  _$jscoverage['telerik.editor.js'][1254] = 0;
  _$jscoverage['telerik.editor.js'][1257] = 0;
  _$jscoverage['telerik.editor.js'][1258] = 0;
  _$jscoverage['telerik.editor.js'][1260] = 0;
  _$jscoverage['telerik.editor.js'][1261] = 0;
  _$jscoverage['telerik.editor.js'][1262] = 0;
  _$jscoverage['telerik.editor.js'][1263] = 0;
  _$jscoverage['telerik.editor.js'][1266] = 0;
  _$jscoverage['telerik.editor.js'][1267] = 0;
  _$jscoverage['telerik.editor.js'][1268] = 0;
  _$jscoverage['telerik.editor.js'][1269] = 0;
  _$jscoverage['telerik.editor.js'][1271] = 0;
  _$jscoverage['telerik.editor.js'][1272] = 0;
  _$jscoverage['telerik.editor.js'][1274] = 0;
  _$jscoverage['telerik.editor.js'][1275] = 0;
  _$jscoverage['telerik.editor.js'][1277] = 0;
  _$jscoverage['telerik.editor.js'][1278] = 0;
  _$jscoverage['telerik.editor.js'][1280] = 0;
  _$jscoverage['telerik.editor.js'][1282] = 0;
  _$jscoverage['telerik.editor.js'][1283] = 0;
  _$jscoverage['telerik.editor.js'][1285] = 0;
  _$jscoverage['telerik.editor.js'][1286] = 0;
  _$jscoverage['telerik.editor.js'][1287] = 0;
  _$jscoverage['telerik.editor.js'][1289] = 0;
  _$jscoverage['telerik.editor.js'][1290] = 0;
  _$jscoverage['telerik.editor.js'][1291] = 0;
  _$jscoverage['telerik.editor.js'][1293] = 0;
  _$jscoverage['telerik.editor.js'][1295] = 0;
  _$jscoverage['telerik.editor.js'][1298] = 0;
  _$jscoverage['telerik.editor.js'][1299] = 0;
  _$jscoverage['telerik.editor.js'][1301] = 0;
  _$jscoverage['telerik.editor.js'][1303] = 0;
  _$jscoverage['telerik.editor.js'][1304] = 0;
  _$jscoverage['telerik.editor.js'][1306] = 0;
  _$jscoverage['telerik.editor.js'][1308] = 0;
  _$jscoverage['telerik.editor.js'][1309] = 0;
  _$jscoverage['telerik.editor.js'][1313] = 0;
  _$jscoverage['telerik.editor.js'][1315] = 0;
  _$jscoverage['telerik.editor.js'][1317] = 0;
  _$jscoverage['telerik.editor.js'][1318] = 0;
  _$jscoverage['telerik.editor.js'][1319] = 0;
  _$jscoverage['telerik.editor.js'][1320] = 0;
  _$jscoverage['telerik.editor.js'][1321] = 0;
  _$jscoverage['telerik.editor.js'][1322] = 0;
  _$jscoverage['telerik.editor.js'][1324] = 0;
  _$jscoverage['telerik.editor.js'][1328] = 0;
  _$jscoverage['telerik.editor.js'][1330] = 0;
  _$jscoverage['telerik.editor.js'][1331] = 0;
  _$jscoverage['telerik.editor.js'][1332] = 0;
  _$jscoverage['telerik.editor.js'][1335] = 0;
  _$jscoverage['telerik.editor.js'][1336] = 0;
  _$jscoverage['telerik.editor.js'][1340] = 0;
  _$jscoverage['telerik.editor.js'][1342] = 0;
  _$jscoverage['telerik.editor.js'][1343] = 0;
  _$jscoverage['telerik.editor.js'][1345] = 0;
  _$jscoverage['telerik.editor.js'][1346] = 0;
  _$jscoverage['telerik.editor.js'][1348] = 0;
  _$jscoverage['telerik.editor.js'][1349] = 0;
  _$jscoverage['telerik.editor.js'][1351] = 0;
  _$jscoverage['telerik.editor.js'][1352] = 0;
  _$jscoverage['telerik.editor.js'][1354] = 0;
  _$jscoverage['telerik.editor.js'][1355] = 0;
  _$jscoverage['telerik.editor.js'][1357] = 0;
  _$jscoverage['telerik.editor.js'][1358] = 0;
  _$jscoverage['telerik.editor.js'][1360] = 0;
  _$jscoverage['telerik.editor.js'][1361] = 0;
  _$jscoverage['telerik.editor.js'][1363] = 0;
  _$jscoverage['telerik.editor.js'][1364] = 0;
  _$jscoverage['telerik.editor.js'][1366] = 0;
  _$jscoverage['telerik.editor.js'][1370] = 0;
  _$jscoverage['telerik.editor.js'][1371] = 0;
  _$jscoverage['telerik.editor.js'][1373] = 0;
  _$jscoverage['telerik.editor.js'][1374] = 0;
  _$jscoverage['telerik.editor.js'][1376] = 0;
  _$jscoverage['telerik.editor.js'][1378] = 0;
  _$jscoverage['telerik.editor.js'][1379] = 0;
  _$jscoverage['telerik.editor.js'][1380] = 0;
  _$jscoverage['telerik.editor.js'][1382] = 0;
  _$jscoverage['telerik.editor.js'][1383] = 0;
  _$jscoverage['telerik.editor.js'][1385] = 0;
  _$jscoverage['telerik.editor.js'][1387] = 0;
  _$jscoverage['telerik.editor.js'][1388] = 0;
  _$jscoverage['telerik.editor.js'][1390] = 0;
  _$jscoverage['telerik.editor.js'][1391] = 0;
  _$jscoverage['telerik.editor.js'][1393] = 0;
  _$jscoverage['telerik.editor.js'][1395] = 0;
  _$jscoverage['telerik.editor.js'][1396] = 0;
  _$jscoverage['telerik.editor.js'][1397] = 0;
  _$jscoverage['telerik.editor.js'][1399] = 0;
  _$jscoverage['telerik.editor.js'][1401] = 0;
  _$jscoverage['telerik.editor.js'][1402] = 0;
  _$jscoverage['telerik.editor.js'][1405] = 0;
  _$jscoverage['telerik.editor.js'][1406] = 0;
  _$jscoverage['telerik.editor.js'][1409] = 0;
  _$jscoverage['telerik.editor.js'][1410] = 0;
  _$jscoverage['telerik.editor.js'][1411] = 0;
  _$jscoverage['telerik.editor.js'][1414] = 0;
  _$jscoverage['telerik.editor.js'][1415] = 0;
  _$jscoverage['telerik.editor.js'][1416] = 0;
  _$jscoverage['telerik.editor.js'][1419] = 0;
  _$jscoverage['telerik.editor.js'][1420] = 0;
  _$jscoverage['telerik.editor.js'][1423] = 0;
  _$jscoverage['telerik.editor.js'][1424] = 0;
  _$jscoverage['telerik.editor.js'][1425] = 0;
  _$jscoverage['telerik.editor.js'][1426] = 0;
  _$jscoverage['telerik.editor.js'][1427] = 0;
  _$jscoverage['telerik.editor.js'][1431] = 0;
  _$jscoverage['telerik.editor.js'][1432] = 0;
  _$jscoverage['telerik.editor.js'][1434] = 0;
  _$jscoverage['telerik.editor.js'][1435] = 0;
  _$jscoverage['telerik.editor.js'][1436] = 0;
  _$jscoverage['telerik.editor.js'][1439] = 0;
  _$jscoverage['telerik.editor.js'][1440] = 0;
  _$jscoverage['telerik.editor.js'][1441] = 0;
  _$jscoverage['telerik.editor.js'][1445] = 0;
  _$jscoverage['telerik.editor.js'][1446] = 0;
  _$jscoverage['telerik.editor.js'][1448] = 0;
  _$jscoverage['telerik.editor.js'][1450] = 0;
  _$jscoverage['telerik.editor.js'][1451] = 0;
  _$jscoverage['telerik.editor.js'][1452] = 0;
  _$jscoverage['telerik.editor.js'][1453] = 0;
  _$jscoverage['telerik.editor.js'][1455] = 0;
  _$jscoverage['telerik.editor.js'][1456] = 0;
  _$jscoverage['telerik.editor.js'][1458] = 0;
  _$jscoverage['telerik.editor.js'][1461] = 0;
  _$jscoverage['telerik.editor.js'][1462] = 0;
  _$jscoverage['telerik.editor.js'][1464] = 0;
  _$jscoverage['telerik.editor.js'][1465] = 0;
  _$jscoverage['telerik.editor.js'][1468] = 0;
  _$jscoverage['telerik.editor.js'][1469] = 0;
  _$jscoverage['telerik.editor.js'][1472] = 0;
  _$jscoverage['telerik.editor.js'][1473] = 0;
  _$jscoverage['telerik.editor.js'][1475] = 0;
  _$jscoverage['telerik.editor.js'][1478] = 0;
  _$jscoverage['telerik.editor.js'][1481] = 0;
  _$jscoverage['telerik.editor.js'][1488] = 0;
  _$jscoverage['telerik.editor.js'][1489] = 0;
  _$jscoverage['telerik.editor.js'][1491] = 0;
  _$jscoverage['telerik.editor.js'][1492] = 0;
  _$jscoverage['telerik.editor.js'][1493] = 0;
  _$jscoverage['telerik.editor.js'][1496] = 0;
  _$jscoverage['telerik.editor.js'][1497] = 0;
  _$jscoverage['telerik.editor.js'][1498] = 0;
  _$jscoverage['telerik.editor.js'][1501] = 0;
  _$jscoverage['telerik.editor.js'][1502] = 0;
  _$jscoverage['telerik.editor.js'][1503] = 0;
  _$jscoverage['telerik.editor.js'][1506] = 0;
  _$jscoverage['telerik.editor.js'][1507] = 0;
  _$jscoverage['telerik.editor.js'][1510] = 0;
  _$jscoverage['telerik.editor.js'][1511] = 0;
  _$jscoverage['telerik.editor.js'][1515] = 0;
  _$jscoverage['telerik.editor.js'][1516] = 0;
  _$jscoverage['telerik.editor.js'][1517] = 0;
  _$jscoverage['telerik.editor.js'][1518] = 0;
  _$jscoverage['telerik.editor.js'][1520] = 0;
  _$jscoverage['telerik.editor.js'][1521] = 0;
  _$jscoverage['telerik.editor.js'][1523] = 0;
  _$jscoverage['telerik.editor.js'][1524] = 0;
  _$jscoverage['telerik.editor.js'][1525] = 0;
  _$jscoverage['telerik.editor.js'][1526] = 0;
  _$jscoverage['telerik.editor.js'][1527] = 0;
  _$jscoverage['telerik.editor.js'][1530] = 0;
  _$jscoverage['telerik.editor.js'][1533] = 0;
  _$jscoverage['telerik.editor.js'][1536] = 0;
  _$jscoverage['telerik.editor.js'][1537] = 0;
  _$jscoverage['telerik.editor.js'][1539] = 0;
  _$jscoverage['telerik.editor.js'][1540] = 0;
  _$jscoverage['telerik.editor.js'][1541] = 0;
  _$jscoverage['telerik.editor.js'][1544] = 0;
  _$jscoverage['telerik.editor.js'][1548] = 0;
  _$jscoverage['telerik.editor.js'][1549] = 0;
  _$jscoverage['telerik.editor.js'][1551] = 0;
  _$jscoverage['telerik.editor.js'][1552] = 0;
  _$jscoverage['telerik.editor.js'][1553] = 0;
  _$jscoverage['telerik.editor.js'][1554] = 0;
  _$jscoverage['telerik.editor.js'][1557] = 0;
  _$jscoverage['telerik.editor.js'][1558] = 0;
  _$jscoverage['telerik.editor.js'][1559] = 0;
  _$jscoverage['telerik.editor.js'][1561] = 0;
  _$jscoverage['telerik.editor.js'][1565] = 0;
  _$jscoverage['telerik.editor.js'][1567] = 0;
  _$jscoverage['telerik.editor.js'][1569] = 0;
  _$jscoverage['telerik.editor.js'][1570] = 0;
  _$jscoverage['telerik.editor.js'][1572] = 0;
  _$jscoverage['telerik.editor.js'][1573] = 0;
  _$jscoverage['telerik.editor.js'][1576] = 0;
  _$jscoverage['telerik.editor.js'][1577] = 0;
  _$jscoverage['telerik.editor.js'][1579] = 0;
  _$jscoverage['telerik.editor.js'][1580] = 0;
  _$jscoverage['telerik.editor.js'][1581] = 0;
  _$jscoverage['telerik.editor.js'][1584] = 0;
  _$jscoverage['telerik.editor.js'][1587] = 0;
  _$jscoverage['telerik.editor.js'][1590] = 0;
  _$jscoverage['telerik.editor.js'][1591] = 0;
  _$jscoverage['telerik.editor.js'][1592] = 0;
  _$jscoverage['telerik.editor.js'][1593] = 0;
  _$jscoverage['telerik.editor.js'][1594] = 0;
  _$jscoverage['telerik.editor.js'][1597] = 0;
  _$jscoverage['telerik.editor.js'][1601] = 0;
  _$jscoverage['telerik.editor.js'][1602] = 0;
  _$jscoverage['telerik.editor.js'][1603] = 0;
  _$jscoverage['telerik.editor.js'][1604] = 0;
  _$jscoverage['telerik.editor.js'][1606] = 0;
  _$jscoverage['telerik.editor.js'][1607] = 0;
  _$jscoverage['telerik.editor.js'][1611] = 0;
  _$jscoverage['telerik.editor.js'][1612] = 0;
  _$jscoverage['telerik.editor.js'][1614] = 0;
  _$jscoverage['telerik.editor.js'][1615] = 0;
  _$jscoverage['telerik.editor.js'][1617] = 0;
  _$jscoverage['telerik.editor.js'][1618] = 0;
  _$jscoverage['telerik.editor.js'][1622] = 0;
  _$jscoverage['telerik.editor.js'][1623] = 0;
  _$jscoverage['telerik.editor.js'][1624] = 0;
  _$jscoverage['telerik.editor.js'][1628] = 0;
  _$jscoverage['telerik.editor.js'][1629] = 0;
  _$jscoverage['telerik.editor.js'][1630] = 0;
  _$jscoverage['telerik.editor.js'][1635] = 0;
  _$jscoverage['telerik.editor.js'][1636] = 0;
  _$jscoverage['telerik.editor.js'][1639] = 0;
  _$jscoverage['telerik.editor.js'][1640] = 0;
  _$jscoverage['telerik.editor.js'][1641] = 0;
  _$jscoverage['telerik.editor.js'][1644] = 0;
  _$jscoverage['telerik.editor.js'][1645] = 0;
  _$jscoverage['telerik.editor.js'][1646] = 0;
  _$jscoverage['telerik.editor.js'][1649] = 0;
  _$jscoverage['telerik.editor.js'][1650] = 0;
  _$jscoverage['telerik.editor.js'][1651] = 0;
  _$jscoverage['telerik.editor.js'][1652] = 0;
  _$jscoverage['telerik.editor.js'][1654] = 0;
  _$jscoverage['telerik.editor.js'][1657] = 0;
  _$jscoverage['telerik.editor.js'][1658] = 0;
  _$jscoverage['telerik.editor.js'][1661] = 0;
  _$jscoverage['telerik.editor.js'][1662] = 0;
  _$jscoverage['telerik.editor.js'][1665] = 0;
  _$jscoverage['telerik.editor.js'][1666] = 0;
  _$jscoverage['telerik.editor.js'][1667] = 0;
  _$jscoverage['telerik.editor.js'][1668] = 0;
  _$jscoverage['telerik.editor.js'][1671] = 0;
  _$jscoverage['telerik.editor.js'][1672] = 0;
  _$jscoverage['telerik.editor.js'][1675] = 0;
  _$jscoverage['telerik.editor.js'][1676] = 0;
  _$jscoverage['telerik.editor.js'][1680] = 0;
  _$jscoverage['telerik.editor.js'][1681] = 0;
  _$jscoverage['telerik.editor.js'][1683] = 0;
  _$jscoverage['telerik.editor.js'][1684] = 0;
  _$jscoverage['telerik.editor.js'][1685] = 0;
  _$jscoverage['telerik.editor.js'][1687] = 0;
  _$jscoverage['telerik.editor.js'][1689] = 0;
  _$jscoverage['telerik.editor.js'][1690] = 0;
  _$jscoverage['telerik.editor.js'][1692] = 0;
  _$jscoverage['telerik.editor.js'][1695] = 0;
  _$jscoverage['telerik.editor.js'][1696] = 0;
  _$jscoverage['telerik.editor.js'][1699] = 0;
  _$jscoverage['telerik.editor.js'][1700] = 0;
  _$jscoverage['telerik.editor.js'][1701] = 0;
  _$jscoverage['telerik.editor.js'][1702] = 0;
  _$jscoverage['telerik.editor.js'][1706] = 0;
  _$jscoverage['telerik.editor.js'][1707] = 0;
  _$jscoverage['telerik.editor.js'][1708] = 0;
  _$jscoverage['telerik.editor.js'][1710] = 0;
  _$jscoverage['telerik.editor.js'][1712] = 0;
  _$jscoverage['telerik.editor.js'][1714] = 0;
  _$jscoverage['telerik.editor.js'][1715] = 0;
  _$jscoverage['telerik.editor.js'][1716] = 0;
  _$jscoverage['telerik.editor.js'][1717] = 0;
  _$jscoverage['telerik.editor.js'][1718] = 0;
  _$jscoverage['telerik.editor.js'][1719] = 0;
  _$jscoverage['telerik.editor.js'][1720] = 0;
  _$jscoverage['telerik.editor.js'][1721] = 0;
  _$jscoverage['telerik.editor.js'][1722] = 0;
  _$jscoverage['telerik.editor.js'][1723] = 0;
  _$jscoverage['telerik.editor.js'][1725] = 0;
  _$jscoverage['telerik.editor.js'][1726] = 0;
  _$jscoverage['telerik.editor.js'][1727] = 0;
  _$jscoverage['telerik.editor.js'][1730] = 0;
  _$jscoverage['telerik.editor.js'][1731] = 0;
  _$jscoverage['telerik.editor.js'][1732] = 0;
  _$jscoverage['telerik.editor.js'][1734] = 0;
  _$jscoverage['telerik.editor.js'][1735] = 0;
  _$jscoverage['telerik.editor.js'][1737] = 0;
  _$jscoverage['telerik.editor.js'][1738] = 0;
  _$jscoverage['telerik.editor.js'][1742] = 0;
  _$jscoverage['telerik.editor.js'][1743] = 0;
  _$jscoverage['telerik.editor.js'][1744] = 0;
  _$jscoverage['telerik.editor.js'][1746] = 0;
  _$jscoverage['telerik.editor.js'][1747] = 0;
  _$jscoverage['telerik.editor.js'][1749] = 0;
  _$jscoverage['telerik.editor.js'][1750] = 0;
  _$jscoverage['telerik.editor.js'][1751] = 0;
  _$jscoverage['telerik.editor.js'][1754] = 0;
  _$jscoverage['telerik.editor.js'][1757] = 0;
  _$jscoverage['telerik.editor.js'][1758] = 0;
  _$jscoverage['telerik.editor.js'][1759] = 0;
  _$jscoverage['telerik.editor.js'][1760] = 0;
  _$jscoverage['telerik.editor.js'][1763] = 0;
  _$jscoverage['telerik.editor.js'][1765] = 0;
  _$jscoverage['telerik.editor.js'][1767] = 0;
  _$jscoverage['telerik.editor.js'][1768] = 0;
  _$jscoverage['telerik.editor.js'][1770] = 0;
  _$jscoverage['telerik.editor.js'][1771] = 0;
  _$jscoverage['telerik.editor.js'][1773] = 0;
  _$jscoverage['telerik.editor.js'][1774] = 0;
  _$jscoverage['telerik.editor.js'][1776] = 0;
  _$jscoverage['telerik.editor.js'][1777] = 0;
  _$jscoverage['telerik.editor.js'][1779] = 0;
  _$jscoverage['telerik.editor.js'][1780] = 0;
  _$jscoverage['telerik.editor.js'][1781] = 0;
  _$jscoverage['telerik.editor.js'][1782] = 0;
  _$jscoverage['telerik.editor.js'][1785] = 0;
  _$jscoverage['telerik.editor.js'][1786] = 0;
  _$jscoverage['telerik.editor.js'][1788] = 0;
  _$jscoverage['telerik.editor.js'][1789] = 0;
  _$jscoverage['telerik.editor.js'][1790] = 0;
  _$jscoverage['telerik.editor.js'][1791] = 0;
  _$jscoverage['telerik.editor.js'][1793] = 0;
  _$jscoverage['telerik.editor.js'][1796] = 0;
  _$jscoverage['telerik.editor.js'][1797] = 0;
  _$jscoverage['telerik.editor.js'][1798] = 0;
  _$jscoverage['telerik.editor.js'][1799] = 0;
  _$jscoverage['telerik.editor.js'][1800] = 0;
  _$jscoverage['telerik.editor.js'][1804] = 0;
  _$jscoverage['telerik.editor.js'][1805] = 0;
  _$jscoverage['telerik.editor.js'][1811] = 0;
  _$jscoverage['telerik.editor.js'][1812] = 0;
  _$jscoverage['telerik.editor.js'][1815] = 0;
  _$jscoverage['telerik.editor.js'][1816] = 0;
  _$jscoverage['telerik.editor.js'][1817] = 0;
  _$jscoverage['telerik.editor.js'][1819] = 0;
  _$jscoverage['telerik.editor.js'][1820] = 0;
  _$jscoverage['telerik.editor.js'][1823] = 0;
  _$jscoverage['telerik.editor.js'][1824] = 0;
  _$jscoverage['telerik.editor.js'][1825] = 0;
  _$jscoverage['telerik.editor.js'][1827] = 0;
  _$jscoverage['telerik.editor.js'][1829] = 0;
  _$jscoverage['telerik.editor.js'][1830] = 0;
  _$jscoverage['telerik.editor.js'][1831] = 0;
  _$jscoverage['telerik.editor.js'][1832] = 0;
  _$jscoverage['telerik.editor.js'][1834] = 0;
  _$jscoverage['telerik.editor.js'][1835] = 0;
  _$jscoverage['telerik.editor.js'][1836] = 0;
  _$jscoverage['telerik.editor.js'][1838] = 0;
  _$jscoverage['telerik.editor.js'][1839] = 0;
  _$jscoverage['telerik.editor.js'][1840] = 0;
  _$jscoverage['telerik.editor.js'][1842] = 0;
  _$jscoverage['telerik.editor.js'][1845] = 0;
  _$jscoverage['telerik.editor.js'][1846] = 0;
  _$jscoverage['telerik.editor.js'][1848] = 0;
  _$jscoverage['telerik.editor.js'][1849] = 0;
  _$jscoverage['telerik.editor.js'][1851] = 0;
  _$jscoverage['telerik.editor.js'][1852] = 0;
  _$jscoverage['telerik.editor.js'][1854] = 0;
  _$jscoverage['telerik.editor.js'][1856] = 0;
  _$jscoverage['telerik.editor.js'][1859] = 0;
  _$jscoverage['telerik.editor.js'][1860] = 0;
  _$jscoverage['telerik.editor.js'][1861] = 0;
  _$jscoverage['telerik.editor.js'][1862] = 0;
  _$jscoverage['telerik.editor.js'][1863] = 0;
  _$jscoverage['telerik.editor.js'][1866] = 0;
  _$jscoverage['telerik.editor.js'][1867] = 0;
  _$jscoverage['telerik.editor.js'][1868] = 0;
  _$jscoverage['telerik.editor.js'][1869] = 0;
  _$jscoverage['telerik.editor.js'][1870] = 0;
  _$jscoverage['telerik.editor.js'][1871] = 0;
  _$jscoverage['telerik.editor.js'][1873] = 0;
  _$jscoverage['telerik.editor.js'][1876] = 0;
  _$jscoverage['telerik.editor.js'][1877] = 0;
  _$jscoverage['telerik.editor.js'][1878] = 0;
  _$jscoverage['telerik.editor.js'][1880] = 0;
  _$jscoverage['telerik.editor.js'][1882] = 0;
  _$jscoverage['telerik.editor.js'][1884] = 0;
  _$jscoverage['telerik.editor.js'][1886] = 0;
  _$jscoverage['telerik.editor.js'][1887] = 0;
  _$jscoverage['telerik.editor.js'][1888] = 0;
  _$jscoverage['telerik.editor.js'][1890] = 0;
  _$jscoverage['telerik.editor.js'][1891] = 0;
  _$jscoverage['telerik.editor.js'][1892] = 0;
  _$jscoverage['telerik.editor.js'][1894] = 0;
  _$jscoverage['telerik.editor.js'][1897] = 0;
  _$jscoverage['telerik.editor.js'][1898] = 0;
  _$jscoverage['telerik.editor.js'][1899] = 0;
  _$jscoverage['telerik.editor.js'][1901] = 0;
  _$jscoverage['telerik.editor.js'][1904] = 0;
  _$jscoverage['telerik.editor.js'][1905] = 0;
  _$jscoverage['telerik.editor.js'][1906] = 0;
  _$jscoverage['telerik.editor.js'][1907] = 0;
  _$jscoverage['telerik.editor.js'][1908] = 0;
  _$jscoverage['telerik.editor.js'][1910] = 0;
  _$jscoverage['telerik.editor.js'][1911] = 0;
  _$jscoverage['telerik.editor.js'][1913] = 0;
  _$jscoverage['telerik.editor.js'][1914] = 0;
  _$jscoverage['telerik.editor.js'][1915] = 0;
  _$jscoverage['telerik.editor.js'][1916] = 0;
  _$jscoverage['telerik.editor.js'][1920] = 0;
  _$jscoverage['telerik.editor.js'][1923] = 0;
  _$jscoverage['telerik.editor.js'][1924] = 0;
  _$jscoverage['telerik.editor.js'][1925] = 0;
  _$jscoverage['telerik.editor.js'][1926] = 0;
  _$jscoverage['telerik.editor.js'][1928] = 0;
  _$jscoverage['telerik.editor.js'][1932] = 0;
  _$jscoverage['telerik.editor.js'][1933] = 0;
  _$jscoverage['telerik.editor.js'][1935] = 0;
  _$jscoverage['telerik.editor.js'][1937] = 0;
  _$jscoverage['telerik.editor.js'][1939] = 0;
  _$jscoverage['telerik.editor.js'][1940] = 0;
  _$jscoverage['telerik.editor.js'][1943] = 0;
  _$jscoverage['telerik.editor.js'][1944] = 0;
  _$jscoverage['telerik.editor.js'][1945] = 0;
  _$jscoverage['telerik.editor.js'][1946] = 0;
  _$jscoverage['telerik.editor.js'][1948] = 0;
  _$jscoverage['telerik.editor.js'][1951] = 0;
  _$jscoverage['telerik.editor.js'][1952] = 0;
  _$jscoverage['telerik.editor.js'][1953] = 0;
  _$jscoverage['telerik.editor.js'][1954] = 0;
  _$jscoverage['telerik.editor.js'][1956] = 0;
  _$jscoverage['telerik.editor.js'][1957] = 0;
  _$jscoverage['telerik.editor.js'][1958] = 0;
  _$jscoverage['telerik.editor.js'][1959] = 0;
  _$jscoverage['telerik.editor.js'][1960] = 0;
  _$jscoverage['telerik.editor.js'][1961] = 0;
  _$jscoverage['telerik.editor.js'][1962] = 0;
  _$jscoverage['telerik.editor.js'][1963] = 0;
  _$jscoverage['telerik.editor.js'][1964] = 0;
  _$jscoverage['telerik.editor.js'][1965] = 0;
  _$jscoverage['telerik.editor.js'][1968] = 0;
  _$jscoverage['telerik.editor.js'][1970] = 0;
  _$jscoverage['telerik.editor.js'][1971] = 0;
  _$jscoverage['telerik.editor.js'][1974] = 0;
  _$jscoverage['telerik.editor.js'][1975] = 0;
  _$jscoverage['telerik.editor.js'][1976] = 0;
  _$jscoverage['telerik.editor.js'][1977] = 0;
  _$jscoverage['telerik.editor.js'][1979] = 0;
  _$jscoverage['telerik.editor.js'][1980] = 0;
  _$jscoverage['telerik.editor.js'][1981] = 0;
  _$jscoverage['telerik.editor.js'][1983] = 0;
  _$jscoverage['telerik.editor.js'][1985] = 0;
  _$jscoverage['telerik.editor.js'][1988] = 0;
  _$jscoverage['telerik.editor.js'][1991] = 0;
  _$jscoverage['telerik.editor.js'][1992] = 0;
  _$jscoverage['telerik.editor.js'][1993] = 0;
  _$jscoverage['telerik.editor.js'][1994] = 0;
  _$jscoverage['telerik.editor.js'][1995] = 0;
  _$jscoverage['telerik.editor.js'][1999] = 0;
  _$jscoverage['telerik.editor.js'][2000] = 0;
  _$jscoverage['telerik.editor.js'][2002] = 0;
  _$jscoverage['telerik.editor.js'][2003] = 0;
  _$jscoverage['telerik.editor.js'][2005] = 0;
  _$jscoverage['telerik.editor.js'][2006] = 0;
  _$jscoverage['telerik.editor.js'][2007] = 0;
  _$jscoverage['telerik.editor.js'][2010] = 0;
  _$jscoverage['telerik.editor.js'][2011] = 0;
  _$jscoverage['telerik.editor.js'][2012] = 0;
  _$jscoverage['telerik.editor.js'][2013] = 0;
  _$jscoverage['telerik.editor.js'][2017] = 0;
  _$jscoverage['telerik.editor.js'][2018] = 0;
  _$jscoverage['telerik.editor.js'][2019] = 0;
  _$jscoverage['telerik.editor.js'][2020] = 0;
  _$jscoverage['telerik.editor.js'][2022] = 0;
  _$jscoverage['telerik.editor.js'][2023] = 0;
  _$jscoverage['telerik.editor.js'][2026] = 0;
  _$jscoverage['telerik.editor.js'][2027] = 0;
  _$jscoverage['telerik.editor.js'][2028] = 0;
  _$jscoverage['telerik.editor.js'][2029] = 0;
  _$jscoverage['telerik.editor.js'][2035] = 0;
  _$jscoverage['telerik.editor.js'][2036] = 0;
  _$jscoverage['telerik.editor.js'][2038] = 0;
  _$jscoverage['telerik.editor.js'][2039] = 0;
  _$jscoverage['telerik.editor.js'][2042] = 0;
  _$jscoverage['telerik.editor.js'][2043] = 0;
  _$jscoverage['telerik.editor.js'][2044] = 0;
  _$jscoverage['telerik.editor.js'][2045] = 0;
  _$jscoverage['telerik.editor.js'][2047] = 0;
  _$jscoverage['telerik.editor.js'][2049] = 0;
  _$jscoverage['telerik.editor.js'][2051] = 0;
  _$jscoverage['telerik.editor.js'][2052] = 0;
  _$jscoverage['telerik.editor.js'][2053] = 0;
  _$jscoverage['telerik.editor.js'][2054] = 0;
  _$jscoverage['telerik.editor.js'][2055] = 0;
  _$jscoverage['telerik.editor.js'][2058] = 0;
  _$jscoverage['telerik.editor.js'][2059] = 0;
  _$jscoverage['telerik.editor.js'][2061] = 0;
  _$jscoverage['telerik.editor.js'][2067] = 0;
  _$jscoverage['telerik.editor.js'][2070] = 0;
  _$jscoverage['telerik.editor.js'][2071] = 0;
  _$jscoverage['telerik.editor.js'][2072] = 0;
  _$jscoverage['telerik.editor.js'][2074] = 0;
  _$jscoverage['telerik.editor.js'][2075] = 0;
  _$jscoverage['telerik.editor.js'][2076] = 0;
  _$jscoverage['telerik.editor.js'][2077] = 0;
  _$jscoverage['telerik.editor.js'][2080] = 0;
  _$jscoverage['telerik.editor.js'][2083] = 0;
  _$jscoverage['telerik.editor.js'][2084] = 0;
  _$jscoverage['telerik.editor.js'][2086] = 0;
  _$jscoverage['telerik.editor.js'][2087] = 0;
  _$jscoverage['telerik.editor.js'][2088] = 0;
  _$jscoverage['telerik.editor.js'][2090] = 0;
  _$jscoverage['telerik.editor.js'][2093] = 0;
  _$jscoverage['telerik.editor.js'][2094] = 0;
  _$jscoverage['telerik.editor.js'][2098] = 0;
  _$jscoverage['telerik.editor.js'][2099] = 0;
  _$jscoverage['telerik.editor.js'][2101] = 0;
  _$jscoverage['telerik.editor.js'][2103] = 0;
  _$jscoverage['telerik.editor.js'][2104] = 0;
  _$jscoverage['telerik.editor.js'][2105] = 0;
  _$jscoverage['telerik.editor.js'][2106] = 0;
  _$jscoverage['telerik.editor.js'][2107] = 0;
  _$jscoverage['telerik.editor.js'][2109] = 0;
  _$jscoverage['telerik.editor.js'][2114] = 0;
  _$jscoverage['telerik.editor.js'][2115] = 0;
  _$jscoverage['telerik.editor.js'][2117] = 0;
  _$jscoverage['telerik.editor.js'][2121] = 0;
  _$jscoverage['telerik.editor.js'][2122] = 0;
  _$jscoverage['telerik.editor.js'][2125] = 0;
  _$jscoverage['telerik.editor.js'][2127] = 0;
  _$jscoverage['telerik.editor.js'][2129] = 0;
  _$jscoverage['telerik.editor.js'][2130] = 0;
  _$jscoverage['telerik.editor.js'][2132] = 0;
  _$jscoverage['telerik.editor.js'][2133] = 0;
  _$jscoverage['telerik.editor.js'][2135] = 0;
  _$jscoverage['telerik.editor.js'][2140] = 0;
  _$jscoverage['telerik.editor.js'][2141] = 0;
  _$jscoverage['telerik.editor.js'][2142] = 0;
  _$jscoverage['telerik.editor.js'][2143] = 0;
  _$jscoverage['telerik.editor.js'][2146] = 0;
  _$jscoverage['telerik.editor.js'][2147] = 0;
  _$jscoverage['telerik.editor.js'][2149] = 0;
  _$jscoverage['telerik.editor.js'][2152] = 0;
  _$jscoverage['telerik.editor.js'][2157] = 0;
  _$jscoverage['telerik.editor.js'][2159] = 0;
  _$jscoverage['telerik.editor.js'][2162] = 0;
  _$jscoverage['telerik.editor.js'][2164] = 0;
  _$jscoverage['telerik.editor.js'][2165] = 0;
  _$jscoverage['telerik.editor.js'][2167] = 0;
  _$jscoverage['telerik.editor.js'][2169] = 0;
  _$jscoverage['telerik.editor.js'][2170] = 0;
  _$jscoverage['telerik.editor.js'][2173] = 0;
  _$jscoverage['telerik.editor.js'][2175] = 0;
  _$jscoverage['telerik.editor.js'][2177] = 0;
  _$jscoverage['telerik.editor.js'][2178] = 0;
  _$jscoverage['telerik.editor.js'][2180] = 0;
  _$jscoverage['telerik.editor.js'][2185] = 0;
  _$jscoverage['telerik.editor.js'][2186] = 0;
  _$jscoverage['telerik.editor.js'][2188] = 0;
  _$jscoverage['telerik.editor.js'][2191] = 0;
  _$jscoverage['telerik.editor.js'][2197] = 0;
  _$jscoverage['telerik.editor.js'][2198] = 0;
  _$jscoverage['telerik.editor.js'][2199] = 0;
  _$jscoverage['telerik.editor.js'][2201] = 0;
  _$jscoverage['telerik.editor.js'][2202] = 0;
  _$jscoverage['telerik.editor.js'][2204] = 0;
  _$jscoverage['telerik.editor.js'][2209] = 0;
  _$jscoverage['telerik.editor.js'][2210] = 0;
  _$jscoverage['telerik.editor.js'][2211] = 0;
  _$jscoverage['telerik.editor.js'][2212] = 0;
  _$jscoverage['telerik.editor.js'][2215] = 0;
  _$jscoverage['telerik.editor.js'][2216] = 0;
  _$jscoverage['telerik.editor.js'][2218] = 0;
  _$jscoverage['telerik.editor.js'][2222] = 0;
  _$jscoverage['telerik.editor.js'][2224] = 0;
  _$jscoverage['telerik.editor.js'][2227] = 0;
  _$jscoverage['telerik.editor.js'][2231] = 0;
  _$jscoverage['telerik.editor.js'][2232] = 0;
  _$jscoverage['telerik.editor.js'][2233] = 0;
  _$jscoverage['telerik.editor.js'][2234] = 0;
  _$jscoverage['telerik.editor.js'][2235] = 0;
  _$jscoverage['telerik.editor.js'][2236] = 0;
  _$jscoverage['telerik.editor.js'][2239] = 0;
  _$jscoverage['telerik.editor.js'][2242] = 0;
  _$jscoverage['telerik.editor.js'][2243] = 0;
  _$jscoverage['telerik.editor.js'][2245] = 0;
  _$jscoverage['telerik.editor.js'][2246] = 0;
  _$jscoverage['telerik.editor.js'][2247] = 0;
  _$jscoverage['telerik.editor.js'][2248] = 0;
  _$jscoverage['telerik.editor.js'][2249] = 0;
  _$jscoverage['telerik.editor.js'][2250] = 0;
  _$jscoverage['telerik.editor.js'][2253] = 0;
  _$jscoverage['telerik.editor.js'][2254] = 0;
  _$jscoverage['telerik.editor.js'][2255] = 0;
  _$jscoverage['telerik.editor.js'][2257] = 0;
  _$jscoverage['telerik.editor.js'][2260] = 0;
  _$jscoverage['telerik.editor.js'][2261] = 0;
  _$jscoverage['telerik.editor.js'][2262] = 0;
  _$jscoverage['telerik.editor.js'][2263] = 0;
  _$jscoverage['telerik.editor.js'][2264] = 0;
  _$jscoverage['telerik.editor.js'][2266] = 0;
  _$jscoverage['telerik.editor.js'][2267] = 0;
  _$jscoverage['telerik.editor.js'][2268] = 0;
  _$jscoverage['telerik.editor.js'][2269] = 0;
  _$jscoverage['telerik.editor.js'][2272] = 0;
  _$jscoverage['telerik.editor.js'][2275] = 0;
  _$jscoverage['telerik.editor.js'][2276] = 0;
  _$jscoverage['telerik.editor.js'][2279] = 0;
  _$jscoverage['telerik.editor.js'][2280] = 0;
  _$jscoverage['telerik.editor.js'][2282] = 0;
  _$jscoverage['telerik.editor.js'][2283] = 0;
  _$jscoverage['telerik.editor.js'][2284] = 0;
  _$jscoverage['telerik.editor.js'][2286] = 0;
  _$jscoverage['telerik.editor.js'][2289] = 0;
  _$jscoverage['telerik.editor.js'][2290] = 0;
  _$jscoverage['telerik.editor.js'][2291] = 0;
  _$jscoverage['telerik.editor.js'][2292] = 0;
  _$jscoverage['telerik.editor.js'][2294] = 0;
  _$jscoverage['telerik.editor.js'][2298] = 0;
  _$jscoverage['telerik.editor.js'][2299] = 0;
  _$jscoverage['telerik.editor.js'][2301] = 0;
  _$jscoverage['telerik.editor.js'][2302] = 0;
  _$jscoverage['telerik.editor.js'][2304] = 0;
  _$jscoverage['telerik.editor.js'][2305] = 0;
  _$jscoverage['telerik.editor.js'][2307] = 0;
  _$jscoverage['telerik.editor.js'][2309] = 0;
  _$jscoverage['telerik.editor.js'][2311] = 0;
  _$jscoverage['telerik.editor.js'][2313] = 0;
  _$jscoverage['telerik.editor.js'][2314] = 0;
  _$jscoverage['telerik.editor.js'][2315] = 0;
  _$jscoverage['telerik.editor.js'][2316] = 0;
  _$jscoverage['telerik.editor.js'][2318] = 0;
  _$jscoverage['telerik.editor.js'][2319] = 0;
  _$jscoverage['telerik.editor.js'][2320] = 0;
  _$jscoverage['telerik.editor.js'][2323] = 0;
  _$jscoverage['telerik.editor.js'][2325] = 0;
  _$jscoverage['telerik.editor.js'][2328] = 0;
  _$jscoverage['telerik.editor.js'][2331] = 0;
  _$jscoverage['telerik.editor.js'][2332] = 0;
  _$jscoverage['telerik.editor.js'][2335] = 0;
  _$jscoverage['telerik.editor.js'][2336] = 0;
  _$jscoverage['telerik.editor.js'][2338] = 0;
  _$jscoverage['telerik.editor.js'][2340] = 0;
  _$jscoverage['telerik.editor.js'][2341] = 0;
  _$jscoverage['telerik.editor.js'][2343] = 0;
  _$jscoverage['telerik.editor.js'][2344] = 0;
  _$jscoverage['telerik.editor.js'][2345] = 0;
  _$jscoverage['telerik.editor.js'][2347] = 0;
  _$jscoverage['telerik.editor.js'][2350] = 0;
  _$jscoverage['telerik.editor.js'][2351] = 0;
  _$jscoverage['telerik.editor.js'][2352] = 0;
  _$jscoverage['telerik.editor.js'][2353] = 0;
  _$jscoverage['telerik.editor.js'][2354] = 0;
  _$jscoverage['telerik.editor.js'][2355] = 0;
  _$jscoverage['telerik.editor.js'][2357] = 0;
  _$jscoverage['telerik.editor.js'][2361] = 0;
  _$jscoverage['telerik.editor.js'][2362] = 0;
  _$jscoverage['telerik.editor.js'][2363] = 0;
  _$jscoverage['telerik.editor.js'][2364] = 0;
  _$jscoverage['telerik.editor.js'][2366] = 0;
  _$jscoverage['telerik.editor.js'][2370] = 0;
  _$jscoverage['telerik.editor.js'][2371] = 0;
  _$jscoverage['telerik.editor.js'][2373] = 0;
  _$jscoverage['telerik.editor.js'][2374] = 0;
  _$jscoverage['telerik.editor.js'][2375] = 0;
  _$jscoverage['telerik.editor.js'][2376] = 0;
  _$jscoverage['telerik.editor.js'][2377] = 0;
  _$jscoverage['telerik.editor.js'][2378] = 0;
  _$jscoverage['telerik.editor.js'][2379] = 0;
  _$jscoverage['telerik.editor.js'][2380] = 0;
  _$jscoverage['telerik.editor.js'][2381] = 0;
  _$jscoverage['telerik.editor.js'][2382] = 0;
  _$jscoverage['telerik.editor.js'][2383] = 0;
  _$jscoverage['telerik.editor.js'][2385] = 0;
  _$jscoverage['telerik.editor.js'][2389] = 0;
  _$jscoverage['telerik.editor.js'][2393] = 0;
  _$jscoverage['telerik.editor.js'][2394] = 0;
  _$jscoverage['telerik.editor.js'][2395] = 0;
  _$jscoverage['telerik.editor.js'][2396] = 0;
  _$jscoverage['telerik.editor.js'][2397] = 0;
  _$jscoverage['telerik.editor.js'][2398] = 0;
  _$jscoverage['telerik.editor.js'][2399] = 0;
  _$jscoverage['telerik.editor.js'][2402] = 0;
  _$jscoverage['telerik.editor.js'][2406] = 0;
  _$jscoverage['telerik.editor.js'][2407] = 0;
  _$jscoverage['telerik.editor.js'][2408] = 0;
  _$jscoverage['telerik.editor.js'][2411] = 0;
  _$jscoverage['telerik.editor.js'][2412] = 0;
  _$jscoverage['telerik.editor.js'][2414] = 0;
  _$jscoverage['telerik.editor.js'][2418] = 0;
  _$jscoverage['telerik.editor.js'][2419] = 0;
  _$jscoverage['telerik.editor.js'][2420] = 0;
  _$jscoverage['telerik.editor.js'][2422] = 0;
  _$jscoverage['telerik.editor.js'][2423] = 0;
  _$jscoverage['telerik.editor.js'][2424] = 0;
  _$jscoverage['telerik.editor.js'][2428] = 0;
  _$jscoverage['telerik.editor.js'][2429] = 0;
  _$jscoverage['telerik.editor.js'][2430] = 0;
  _$jscoverage['telerik.editor.js'][2431] = 0;
  _$jscoverage['telerik.editor.js'][2434] = 0;
  _$jscoverage['telerik.editor.js'][2435] = 0;
  _$jscoverage['telerik.editor.js'][2437] = 0;
  _$jscoverage['telerik.editor.js'][2441] = 0;
  _$jscoverage['telerik.editor.js'][2442] = 0;
  _$jscoverage['telerik.editor.js'][2445] = 0;
  _$jscoverage['telerik.editor.js'][2450] = 0;
  _$jscoverage['telerik.editor.js'][2451] = 0;
  _$jscoverage['telerik.editor.js'][2453] = 0;
  _$jscoverage['telerik.editor.js'][2454] = 0;
  _$jscoverage['telerik.editor.js'][2456] = 0;
  _$jscoverage['telerik.editor.js'][2458] = 0;
  _$jscoverage['telerik.editor.js'][2461] = 0;
  _$jscoverage['telerik.editor.js'][2465] = 0;
  _$jscoverage['telerik.editor.js'][2467] = 0;
  _$jscoverage['telerik.editor.js'][2468] = 0;
  _$jscoverage['telerik.editor.js'][2470] = 0;
  _$jscoverage['telerik.editor.js'][2472] = 0;
  _$jscoverage['telerik.editor.js'][2474] = 0;
  _$jscoverage['telerik.editor.js'][2475] = 0;
  _$jscoverage['telerik.editor.js'][2476] = 0;
  _$jscoverage['telerik.editor.js'][2478] = 0;
  _$jscoverage['telerik.editor.js'][2480] = 0;
  _$jscoverage['telerik.editor.js'][2482] = 0;
  _$jscoverage['telerik.editor.js'][2483] = 0;
  _$jscoverage['telerik.editor.js'][2485] = 0;
  _$jscoverage['telerik.editor.js'][2486] = 0;
  _$jscoverage['telerik.editor.js'][2487] = 0;
  _$jscoverage['telerik.editor.js'][2488] = 0;
  _$jscoverage['telerik.editor.js'][2492] = 0;
  _$jscoverage['telerik.editor.js'][2493] = 0;
  _$jscoverage['telerik.editor.js'][2494] = 0;
  _$jscoverage['telerik.editor.js'][2496] = 0;
  _$jscoverage['telerik.editor.js'][2498] = 0;
  _$jscoverage['telerik.editor.js'][2500] = 0;
  _$jscoverage['telerik.editor.js'][2502] = 0;
  _$jscoverage['telerik.editor.js'][2504] = 0;
  _$jscoverage['telerik.editor.js'][2505] = 0;
  _$jscoverage['telerik.editor.js'][2507] = 0;
  _$jscoverage['telerik.editor.js'][2509] = 0;
  _$jscoverage['telerik.editor.js'][2510] = 0;
  _$jscoverage['telerik.editor.js'][2512] = 0;
  _$jscoverage['telerik.editor.js'][2514] = 0;
  _$jscoverage['telerik.editor.js'][2515] = 0;
  _$jscoverage['telerik.editor.js'][2517] = 0;
  _$jscoverage['telerik.editor.js'][2518] = 0;
  _$jscoverage['telerik.editor.js'][2520] = 0;
  _$jscoverage['telerik.editor.js'][2521] = 0;
  _$jscoverage['telerik.editor.js'][2523] = 0;
  _$jscoverage['telerik.editor.js'][2524] = 0;
  _$jscoverage['telerik.editor.js'][2526] = 0;
  _$jscoverage['telerik.editor.js'][2527] = 0;
  _$jscoverage['telerik.editor.js'][2529] = 0;
  _$jscoverage['telerik.editor.js'][2530] = 0;
  _$jscoverage['telerik.editor.js'][2533] = 0;
  _$jscoverage['telerik.editor.js'][2536] = 0;
  _$jscoverage['telerik.editor.js'][2538] = 0;
  _$jscoverage['telerik.editor.js'][2539] = 0;
  _$jscoverage['telerik.editor.js'][2541] = 0;
  _$jscoverage['telerik.editor.js'][2543] = 0;
  _$jscoverage['telerik.editor.js'][2547] = 0;
  _$jscoverage['telerik.editor.js'][2548] = 0;
  _$jscoverage['telerik.editor.js'][2550] = 0;
  _$jscoverage['telerik.editor.js'][2551] = 0;
  _$jscoverage['telerik.editor.js'][2552] = 0;
  _$jscoverage['telerik.editor.js'][2553] = 0;
  _$jscoverage['telerik.editor.js'][2554] = 0;
  _$jscoverage['telerik.editor.js'][2555] = 0;
  _$jscoverage['telerik.editor.js'][2556] = 0;
  _$jscoverage['telerik.editor.js'][2558] = 0;
  _$jscoverage['telerik.editor.js'][2559] = 0;
  _$jscoverage['telerik.editor.js'][2560] = 0;
  _$jscoverage['telerik.editor.js'][2562] = 0;
  _$jscoverage['telerik.editor.js'][2563] = 0;
  _$jscoverage['telerik.editor.js'][2564] = 0;
  _$jscoverage['telerik.editor.js'][2566] = 0;
  _$jscoverage['telerik.editor.js'][2567] = 0;
  _$jscoverage['telerik.editor.js'][2569] = 0;
  _$jscoverage['telerik.editor.js'][2571] = 0;
  _$jscoverage['telerik.editor.js'][2572] = 0;
  _$jscoverage['telerik.editor.js'][2574] = 0;
  _$jscoverage['telerik.editor.js'][2575] = 0;
  _$jscoverage['telerik.editor.js'][2576] = 0;
  _$jscoverage['telerik.editor.js'][2578] = 0;
  _$jscoverage['telerik.editor.js'][2581] = 0;
  _$jscoverage['telerik.editor.js'][2582] = 0;
  _$jscoverage['telerik.editor.js'][2583] = 0;
  _$jscoverage['telerik.editor.js'][2584] = 0;
  _$jscoverage['telerik.editor.js'][2585] = 0;
  _$jscoverage['telerik.editor.js'][2589] = 0;
  _$jscoverage['telerik.editor.js'][2590] = 0;
  _$jscoverage['telerik.editor.js'][2592] = 0;
  _$jscoverage['telerik.editor.js'][2593] = 0;
  _$jscoverage['telerik.editor.js'][2595] = 0;
  _$jscoverage['telerik.editor.js'][2596] = 0;
  _$jscoverage['telerik.editor.js'][2598] = 0;
  _$jscoverage['telerik.editor.js'][2599] = 0;
  _$jscoverage['telerik.editor.js'][2600] = 0;
  _$jscoverage['telerik.editor.js'][2603] = 0;
  _$jscoverage['telerik.editor.js'][2605] = 0;
  _$jscoverage['telerik.editor.js'][2606] = 0;
  _$jscoverage['telerik.editor.js'][2607] = 0;
  _$jscoverage['telerik.editor.js'][2608] = 0;
  _$jscoverage['telerik.editor.js'][2612] = 0;
  _$jscoverage['telerik.editor.js'][2613] = 0;
  _$jscoverage['telerik.editor.js'][2616] = 0;
  _$jscoverage['telerik.editor.js'][2617] = 0;
  _$jscoverage['telerik.editor.js'][2618] = 0;
  _$jscoverage['telerik.editor.js'][2619] = 0;
  _$jscoverage['telerik.editor.js'][2621] = 0;
  _$jscoverage['telerik.editor.js'][2624] = 0;
  _$jscoverage['telerik.editor.js'][2625] = 0;
  _$jscoverage['telerik.editor.js'][2628] = 0;
  _$jscoverage['telerik.editor.js'][2629] = 0;
  _$jscoverage['telerik.editor.js'][2630] = 0;
  _$jscoverage['telerik.editor.js'][2631] = 0;
  _$jscoverage['telerik.editor.js'][2632] = 0;
  _$jscoverage['telerik.editor.js'][2633] = 0;
  _$jscoverage['telerik.editor.js'][2634] = 0;
  _$jscoverage['telerik.editor.js'][2636] = 0;
  _$jscoverage['telerik.editor.js'][2637] = 0;
  _$jscoverage['telerik.editor.js'][2638] = 0;
  _$jscoverage['telerik.editor.js'][2639] = 0;
  _$jscoverage['telerik.editor.js'][2644] = 0;
  _$jscoverage['telerik.editor.js'][2645] = 0;
  _$jscoverage['telerik.editor.js'][2647] = 0;
  _$jscoverage['telerik.editor.js'][2648] = 0;
  _$jscoverage['telerik.editor.js'][2650] = 0;
  _$jscoverage['telerik.editor.js'][2651] = 0;
  _$jscoverage['telerik.editor.js'][2653] = 0;
  _$jscoverage['telerik.editor.js'][2655] = 0;
  _$jscoverage['telerik.editor.js'][2657] = 0;
  _$jscoverage['telerik.editor.js'][2658] = 0;
  _$jscoverage['telerik.editor.js'][2660] = 0;
  _$jscoverage['telerik.editor.js'][2662] = 0;
  _$jscoverage['telerik.editor.js'][2663] = 0;
  _$jscoverage['telerik.editor.js'][2664] = 0;
  _$jscoverage['telerik.editor.js'][2665] = 0;
  _$jscoverage['telerik.editor.js'][2667] = 0;
  _$jscoverage['telerik.editor.js'][2669] = 0;
  _$jscoverage['telerik.editor.js'][2670] = 0;
  _$jscoverage['telerik.editor.js'][2672] = 0;
  _$jscoverage['telerik.editor.js'][2677] = 0;
  _$jscoverage['telerik.editor.js'][2678] = 0;
  _$jscoverage['telerik.editor.js'][2680] = 0;
  _$jscoverage['telerik.editor.js'][2681] = 0;
  _$jscoverage['telerik.editor.js'][2682] = 0;
  _$jscoverage['telerik.editor.js'][2685] = 0;
  _$jscoverage['telerik.editor.js'][2687] = 0;
  _$jscoverage['telerik.editor.js'][2688] = 0;
  _$jscoverage['telerik.editor.js'][2691] = 0;
  _$jscoverage['telerik.editor.js'][2692] = 0;
  _$jscoverage['telerik.editor.js'][2693] = 0;
  _$jscoverage['telerik.editor.js'][2695] = 0;
  _$jscoverage['telerik.editor.js'][2696] = 0;
  _$jscoverage['telerik.editor.js'][2697] = 0;
  _$jscoverage['telerik.editor.js'][2698] = 0;
  _$jscoverage['telerik.editor.js'][2700] = 0;
  _$jscoverage['telerik.editor.js'][2702] = 0;
  _$jscoverage['telerik.editor.js'][2703] = 0;
  _$jscoverage['telerik.editor.js'][2706] = 0;
  _$jscoverage['telerik.editor.js'][2709] = 0;
  _$jscoverage['telerik.editor.js'][2710] = 0;
  _$jscoverage['telerik.editor.js'][2711] = 0;
  _$jscoverage['telerik.editor.js'][2712] = 0;
  _$jscoverage['telerik.editor.js'][2713] = 0;
  _$jscoverage['telerik.editor.js'][2716] = 0;
  _$jscoverage['telerik.editor.js'][2717] = 0;
  _$jscoverage['telerik.editor.js'][2718] = 0;
  _$jscoverage['telerik.editor.js'][2719] = 0;
  _$jscoverage['telerik.editor.js'][2720] = 0;
  _$jscoverage['telerik.editor.js'][2721] = 0;
  _$jscoverage['telerik.editor.js'][2722] = 0;
  _$jscoverage['telerik.editor.js'][2725] = 0;
  _$jscoverage['telerik.editor.js'][2726] = 0;
  _$jscoverage['telerik.editor.js'][2727] = 0;
  _$jscoverage['telerik.editor.js'][2729] = 0;
  _$jscoverage['telerik.editor.js'][2733] = 0;
  _$jscoverage['telerik.editor.js'][2734] = 0;
  _$jscoverage['telerik.editor.js'][2735] = 0;
  _$jscoverage['telerik.editor.js'][2738] = 0;
  _$jscoverage['telerik.editor.js'][2739] = 0;
  _$jscoverage['telerik.editor.js'][2743] = 0;
  _$jscoverage['telerik.editor.js'][2744] = 0;
  _$jscoverage['telerik.editor.js'][2746] = 0;
  _$jscoverage['telerik.editor.js'][2747] = 0;
  _$jscoverage['telerik.editor.js'][2748] = 0;
  _$jscoverage['telerik.editor.js'][2752] = 0;
  _$jscoverage['telerik.editor.js'][2753] = 0;
  _$jscoverage['telerik.editor.js'][2755] = 0;
  _$jscoverage['telerik.editor.js'][2756] = 0;
  _$jscoverage['telerik.editor.js'][2757] = 0;
  _$jscoverage['telerik.editor.js'][2758] = 0;
  _$jscoverage['telerik.editor.js'][2759] = 0;
  _$jscoverage['telerik.editor.js'][2760] = 0;
  _$jscoverage['telerik.editor.js'][2761] = 0;
  _$jscoverage['telerik.editor.js'][2762] = 0;
  _$jscoverage['telerik.editor.js'][2764] = 0;
  _$jscoverage['telerik.editor.js'][2765] = 0;
  _$jscoverage['telerik.editor.js'][2766] = 0;
  _$jscoverage['telerik.editor.js'][2767] = 0;
  _$jscoverage['telerik.editor.js'][2770] = 0;
  _$jscoverage['telerik.editor.js'][2771] = 0;
  _$jscoverage['telerik.editor.js'][2772] = 0;
  _$jscoverage['telerik.editor.js'][2777] = 0;
  _$jscoverage['telerik.editor.js'][2778] = 0;
  _$jscoverage['telerik.editor.js'][2780] = 0;
  _$jscoverage['telerik.editor.js'][2784] = 0;
  _$jscoverage['telerik.editor.js'][2787] = 0;
  _$jscoverage['telerik.editor.js'][2788] = 0;
  _$jscoverage['telerik.editor.js'][2790] = 0;
  _$jscoverage['telerik.editor.js'][2792] = 0;
  _$jscoverage['telerik.editor.js'][2794] = 0;
  _$jscoverage['telerik.editor.js'][2796] = 0;
  _$jscoverage['telerik.editor.js'][2797] = 0;
  _$jscoverage['telerik.editor.js'][2799] = 0;
  _$jscoverage['telerik.editor.js'][2801] = 0;
  _$jscoverage['telerik.editor.js'][2803] = 0;
  _$jscoverage['telerik.editor.js'][2805] = 0;
  _$jscoverage['telerik.editor.js'][2807] = 0;
  _$jscoverage['telerik.editor.js'][2809] = 0;
  _$jscoverage['telerik.editor.js'][2810] = 0;
  _$jscoverage['telerik.editor.js'][2812] = 0;
  _$jscoverage['telerik.editor.js'][2813] = 0;
  _$jscoverage['telerik.editor.js'][2815] = 0;
  _$jscoverage['telerik.editor.js'][2816] = 0;
  _$jscoverage['telerik.editor.js'][2817] = 0;
  _$jscoverage['telerik.editor.js'][2819] = 0;
  _$jscoverage['telerik.editor.js'][2820] = 0;
  _$jscoverage['telerik.editor.js'][2821] = 0;
  _$jscoverage['telerik.editor.js'][2823] = 0;
  _$jscoverage['telerik.editor.js'][2824] = 0;
  _$jscoverage['telerik.editor.js'][2825] = 0;
  _$jscoverage['telerik.editor.js'][2827] = 0;
  _$jscoverage['telerik.editor.js'][2829] = 0;
  _$jscoverage['telerik.editor.js'][2830] = 0;
  _$jscoverage['telerik.editor.js'][2831] = 0;
  _$jscoverage['telerik.editor.js'][2834] = 0;
  _$jscoverage['telerik.editor.js'][2835] = 0;
  _$jscoverage['telerik.editor.js'][2836] = 0;
  _$jscoverage['telerik.editor.js'][2838] = 0;
  _$jscoverage['telerik.editor.js'][2840] = 0;
  _$jscoverage['telerik.editor.js'][2843] = 0;
  _$jscoverage['telerik.editor.js'][2845] = 0;
  _$jscoverage['telerik.editor.js'][2847] = 0;
  _$jscoverage['telerik.editor.js'][2870] = 0;
  _$jscoverage['telerik.editor.js'][2871] = 0;
  _$jscoverage['telerik.editor.js'][2872] = 0;
  _$jscoverage['telerik.editor.js'][2873] = 0;
  _$jscoverage['telerik.editor.js'][2886] = 0;
  _$jscoverage['telerik.editor.js'][2887] = 0;
  _$jscoverage['telerik.editor.js'][2889] = 0;
  _$jscoverage['telerik.editor.js'][2893] = 0;
  _$jscoverage['telerik.editor.js'][2894] = 0;
  _$jscoverage['telerik.editor.js'][2895] = 0;
  _$jscoverage['telerik.editor.js'][2899] = 0;
  _$jscoverage['telerik.editor.js'][2900] = 0;
  _$jscoverage['telerik.editor.js'][2902] = 0;
  _$jscoverage['telerik.editor.js'][2904] = 0;
  _$jscoverage['telerik.editor.js'][2905] = 0;
  _$jscoverage['telerik.editor.js'][2909] = 0;
  _$jscoverage['telerik.editor.js'][2910] = 0;
  _$jscoverage['telerik.editor.js'][2914] = 0;
  _$jscoverage['telerik.editor.js'][2915] = 0;
  _$jscoverage['telerik.editor.js'][2916] = 0;
  _$jscoverage['telerik.editor.js'][2917] = 0;
  _$jscoverage['telerik.editor.js'][2919] = 0;
  _$jscoverage['telerik.editor.js'][2920] = 0;
  _$jscoverage['telerik.editor.js'][2921] = 0;
  _$jscoverage['telerik.editor.js'][2922] = 0;
  _$jscoverage['telerik.editor.js'][2923] = 0;
  _$jscoverage['telerik.editor.js'][2924] = 0;
  _$jscoverage['telerik.editor.js'][2925] = 0;
  _$jscoverage['telerik.editor.js'][2926] = 0;
  _$jscoverage['telerik.editor.js'][2928] = 0;
  _$jscoverage['telerik.editor.js'][2929] = 0;
  _$jscoverage['telerik.editor.js'][2930] = 0;
  _$jscoverage['telerik.editor.js'][2931] = 0;
  _$jscoverage['telerik.editor.js'][2932] = 0;
  _$jscoverage['telerik.editor.js'][2933] = 0;
  _$jscoverage['telerik.editor.js'][2935] = 0;
  _$jscoverage['telerik.editor.js'][2938] = 0;
  _$jscoverage['telerik.editor.js'][2941] = 0;
  _$jscoverage['telerik.editor.js'][2942] = 0;
  _$jscoverage['telerik.editor.js'][2943] = 0;
  _$jscoverage['telerik.editor.js'][2944] = 0;
  _$jscoverage['telerik.editor.js'][2947] = 0;
  _$jscoverage['telerik.editor.js'][2948] = 0;
  _$jscoverage['telerik.editor.js'][2950] = 0;
  _$jscoverage['telerik.editor.js'][2952] = 0;
  _$jscoverage['telerik.editor.js'][2954] = 0;
  _$jscoverage['telerik.editor.js'][2956] = 0;
  _$jscoverage['telerik.editor.js'][2957] = 0;
  _$jscoverage['telerik.editor.js'][2962] = 0;
  _$jscoverage['telerik.editor.js'][2964] = 0;
  _$jscoverage['telerik.editor.js'][2966] = 0;
  _$jscoverage['telerik.editor.js'][2967] = 0;
  _$jscoverage['telerik.editor.js'][2970] = 0;
  _$jscoverage['telerik.editor.js'][2971] = 0;
  _$jscoverage['telerik.editor.js'][2972] = 0;
  _$jscoverage['telerik.editor.js'][2974] = 0;
  _$jscoverage['telerik.editor.js'][2975] = 0;
  _$jscoverage['telerik.editor.js'][2976] = 0;
  _$jscoverage['telerik.editor.js'][2979] = 0;
  _$jscoverage['telerik.editor.js'][3000] = 0;
  _$jscoverage['telerik.editor.js'][3001] = 0;
  _$jscoverage['telerik.editor.js'][3002] = 0;
  _$jscoverage['telerik.editor.js'][3003] = 0;
  _$jscoverage['telerik.editor.js'][3013] = 0;
  _$jscoverage['telerik.editor.js'][3015] = 0;
  _$jscoverage['telerik.editor.js'][3017] = 0;
  _$jscoverage['telerik.editor.js'][3018] = 0;
  _$jscoverage['telerik.editor.js'][3019] = 0;
  _$jscoverage['telerik.editor.js'][3020] = 0;
  _$jscoverage['telerik.editor.js'][3022] = 0;
  _$jscoverage['telerik.editor.js'][3026] = 0;
  _$jscoverage['telerik.editor.js'][3027] = 0;
  _$jscoverage['telerik.editor.js'][3031] = 0;
  _$jscoverage['telerik.editor.js'][3032] = 0;
  _$jscoverage['telerik.editor.js'][3033] = 0;
  _$jscoverage['telerik.editor.js'][3036] = 0;
  _$jscoverage['telerik.editor.js'][3037] = 0;
  _$jscoverage['telerik.editor.js'][3040] = 0;
  _$jscoverage['telerik.editor.js'][3041] = 0;
  _$jscoverage['telerik.editor.js'][3042] = 0;
  _$jscoverage['telerik.editor.js'][3044] = 0;
  _$jscoverage['telerik.editor.js'][3045] = 0;
  _$jscoverage['telerik.editor.js'][3046] = 0;
  _$jscoverage['telerik.editor.js'][3047] = 0;
  _$jscoverage['telerik.editor.js'][3051] = 0;
  _$jscoverage['telerik.editor.js'][3053] = 0;
  _$jscoverage['telerik.editor.js'][3057] = 0;
  _$jscoverage['telerik.editor.js'][3058] = 0;
  _$jscoverage['telerik.editor.js'][3062] = 0;
  _$jscoverage['telerik.editor.js'][3063] = 0;
  _$jscoverage['telerik.editor.js'][3065] = 0;
  _$jscoverage['telerik.editor.js'][3066] = 0;
  _$jscoverage['telerik.editor.js'][3069] = 0;
  _$jscoverage['telerik.editor.js'][3070] = 0;
  _$jscoverage['telerik.editor.js'][3073] = 0;
  _$jscoverage['telerik.editor.js'][3075] = 0;
  _$jscoverage['telerik.editor.js'][3076] = 0;
  _$jscoverage['telerik.editor.js'][3077] = 0;
  _$jscoverage['telerik.editor.js'][3078] = 0;
  _$jscoverage['telerik.editor.js'][3080] = 0;
  _$jscoverage['telerik.editor.js'][3090] = 0;
  _$jscoverage['telerik.editor.js'][3092] = 0;
  _$jscoverage['telerik.editor.js'][3093] = 0;
  _$jscoverage['telerik.editor.js'][3094] = 0;
  _$jscoverage['telerik.editor.js'][3096] = 0;
  _$jscoverage['telerik.editor.js'][3097] = 0;
  _$jscoverage['telerik.editor.js'][3103] = 0;
  _$jscoverage['telerik.editor.js'][3104] = 0;
  _$jscoverage['telerik.editor.js'][3107] = 0;
  _$jscoverage['telerik.editor.js'][3113] = 0;
  _$jscoverage['telerik.editor.js'][3119] = 0;
  _$jscoverage['telerik.editor.js'][3120] = 0;
  _$jscoverage['telerik.editor.js'][3121] = 0;
  _$jscoverage['telerik.editor.js'][3123] = 0;
  _$jscoverage['telerik.editor.js'][3125] = 0;
  _$jscoverage['telerik.editor.js'][3129] = 0;
  _$jscoverage['telerik.editor.js'][3130] = 0;
  _$jscoverage['telerik.editor.js'][3132] = 0;
  _$jscoverage['telerik.editor.js'][3134] = 0;
  _$jscoverage['telerik.editor.js'][3135] = 0;
  _$jscoverage['telerik.editor.js'][3138] = 0;
  _$jscoverage['telerik.editor.js'][3144] = 0;
  _$jscoverage['telerik.editor.js'][3146] = 0;
  _$jscoverage['telerik.editor.js'][3147] = 0;
  _$jscoverage['telerik.editor.js'][3148] = 0;
  _$jscoverage['telerik.editor.js'][3149] = 0;
  _$jscoverage['telerik.editor.js'][3150] = 0;
  _$jscoverage['telerik.editor.js'][3153] = 0;
  _$jscoverage['telerik.editor.js'][3157] = 0;
  _$jscoverage['telerik.editor.js'][3158] = 0;
  _$jscoverage['telerik.editor.js'][3160] = 0;
  _$jscoverage['telerik.editor.js'][3161] = 0;
  _$jscoverage['telerik.editor.js'][3163] = 0;
  _$jscoverage['telerik.editor.js'][3164] = 0;
  _$jscoverage['telerik.editor.js'][3166] = 0;
  _$jscoverage['telerik.editor.js'][3168] = 0;
  _$jscoverage['telerik.editor.js'][3169] = 0;
  _$jscoverage['telerik.editor.js'][3170] = 0;
  _$jscoverage['telerik.editor.js'][3171] = 0;
  _$jscoverage['telerik.editor.js'][3172] = 0;
  _$jscoverage['telerik.editor.js'][3176] = 0;
  _$jscoverage['telerik.editor.js'][3181] = 0;
  _$jscoverage['telerik.editor.js'][3183] = 0;
  _$jscoverage['telerik.editor.js'][3184] = 0;
  _$jscoverage['telerik.editor.js'][3188] = 0;
  _$jscoverage['telerik.editor.js'][3192] = 0;
  _$jscoverage['telerik.editor.js'][3194] = 0;
  _$jscoverage['telerik.editor.js'][3195] = 0;
  _$jscoverage['telerik.editor.js'][3196] = 0;
  _$jscoverage['telerik.editor.js'][3201] = 0;
  _$jscoverage['telerik.editor.js'][3202] = 0;
  _$jscoverage['telerik.editor.js'][3204] = 0;
  _$jscoverage['telerik.editor.js'][3208] = 0;
  _$jscoverage['telerik.editor.js'][3209] = 0;
  _$jscoverage['telerik.editor.js'][3211] = 0;
  _$jscoverage['telerik.editor.js'][3215] = 0;
  _$jscoverage['telerik.editor.js'][3216] = 0;
  _$jscoverage['telerik.editor.js'][3218] = 0;
  _$jscoverage['telerik.editor.js'][3220] = 0;
  _$jscoverage['telerik.editor.js'][3222] = 0;
  _$jscoverage['telerik.editor.js'][3227] = 0;
  _$jscoverage['telerik.editor.js'][3228] = 0;
  _$jscoverage['telerik.editor.js'][3235] = 0;
  _$jscoverage['telerik.editor.js'][3239] = 0;
  _$jscoverage['telerik.editor.js'][3241] = 0;
  _$jscoverage['telerik.editor.js'][3243] = 0;
  _$jscoverage['telerik.editor.js'][3246] = 0;
  _$jscoverage['telerik.editor.js'][3247] = 0;
  _$jscoverage['telerik.editor.js'][3249] = 0;
  _$jscoverage['telerik.editor.js'][3250] = 0;
  _$jscoverage['telerik.editor.js'][3257] = 0;
  _$jscoverage['telerik.editor.js'][3259] = 0;
  _$jscoverage['telerik.editor.js'][3263] = 0;
  _$jscoverage['telerik.editor.js'][3264] = 0;
  _$jscoverage['telerik.editor.js'][3267] = 0;
  _$jscoverage['telerik.editor.js'][3273] = 0;
  _$jscoverage['telerik.editor.js'][3277] = 0;
  _$jscoverage['telerik.editor.js'][3278] = 0;
  _$jscoverage['telerik.editor.js'][3280] = 0;
  _$jscoverage['telerik.editor.js'][3281] = 0;
  _$jscoverage['telerik.editor.js'][3284] = 0;
  _$jscoverage['telerik.editor.js'][3285] = 0;
  _$jscoverage['telerik.editor.js'][3286] = 0;
  _$jscoverage['telerik.editor.js'][3287] = 0;
  _$jscoverage['telerik.editor.js'][3288] = 0;
  _$jscoverage['telerik.editor.js'][3289] = 0;
  _$jscoverage['telerik.editor.js'][3290] = 0;
  _$jscoverage['telerik.editor.js'][3291] = 0;
  _$jscoverage['telerik.editor.js'][3292] = 0;
  _$jscoverage['telerik.editor.js'][3293] = 0;
  _$jscoverage['telerik.editor.js'][3296] = 0;
  _$jscoverage['telerik.editor.js'][3298] = 0;
  _$jscoverage['telerik.editor.js'][3299] = 0;
  _$jscoverage['telerik.editor.js'][3300] = 0;
  _$jscoverage['telerik.editor.js'][3301] = 0;
  _$jscoverage['telerik.editor.js'][3302] = 0;
  _$jscoverage['telerik.editor.js'][3303] = 0;
  _$jscoverage['telerik.editor.js'][3305] = 0;
  _$jscoverage['telerik.editor.js'][3306] = 0;
  _$jscoverage['telerik.editor.js'][3307] = 0;
  _$jscoverage['telerik.editor.js'][3310] = 0;
  _$jscoverage['telerik.editor.js'][3311] = 0;
  _$jscoverage['telerik.editor.js'][3312] = 0;
  _$jscoverage['telerik.editor.js'][3315] = 0;
  _$jscoverage['telerik.editor.js'][3316] = 0;
  _$jscoverage['telerik.editor.js'][3320] = 0;
  _$jscoverage['telerik.editor.js'][3322] = 0;
  _$jscoverage['telerik.editor.js'][3326] = 0;
  _$jscoverage['telerik.editor.js'][3327] = 0;
  _$jscoverage['telerik.editor.js'][3328] = 0;
  _$jscoverage['telerik.editor.js'][3329] = 0;
  _$jscoverage['telerik.editor.js'][3331] = 0;
  _$jscoverage['telerik.editor.js'][3332] = 0;
  _$jscoverage['telerik.editor.js'][3333] = 0;
  _$jscoverage['telerik.editor.js'][3335] = 0;
  _$jscoverage['telerik.editor.js'][3336] = 0;
  _$jscoverage['telerik.editor.js'][3337] = 0;
  _$jscoverage['telerik.editor.js'][3338] = 0;
  _$jscoverage['telerik.editor.js'][3340] = 0;
  _$jscoverage['telerik.editor.js'][3342] = 0;
  _$jscoverage['telerik.editor.js'][3343] = 0;
  _$jscoverage['telerik.editor.js'][3345] = 0;
  _$jscoverage['telerik.editor.js'][3347] = 0;
  _$jscoverage['telerik.editor.js'][3351] = 0;
  _$jscoverage['telerik.editor.js'][3352] = 0;
  _$jscoverage['telerik.editor.js'][3357] = 0;
  _$jscoverage['telerik.editor.js'][3358] = 0;
  _$jscoverage['telerik.editor.js'][3360] = 0;
  _$jscoverage['telerik.editor.js'][3363] = 0;
  _$jscoverage['telerik.editor.js'][3366] = 0;
  _$jscoverage['telerik.editor.js'][3367] = 0;
  _$jscoverage['telerik.editor.js'][3369] = 0;
  _$jscoverage['telerik.editor.js'][3373] = 0;
  _$jscoverage['telerik.editor.js'][3376] = 0;
  _$jscoverage['telerik.editor.js'][3377] = 0;
  _$jscoverage['telerik.editor.js'][3379] = 0;
  _$jscoverage['telerik.editor.js'][3381] = 0;
  _$jscoverage['telerik.editor.js'][3382] = 0;
  _$jscoverage['telerik.editor.js'][3386] = 0;
  _$jscoverage['telerik.editor.js'][3387] = 0;
  _$jscoverage['telerik.editor.js'][3388] = 0;
  _$jscoverage['telerik.editor.js'][3389] = 0;
  _$jscoverage['telerik.editor.js'][3390] = 0;
  _$jscoverage['telerik.editor.js'][3391] = 0;
  _$jscoverage['telerik.editor.js'][3394] = 0;
  _$jscoverage['telerik.editor.js'][3396] = 0;
  _$jscoverage['telerik.editor.js'][3397] = 0;
  _$jscoverage['telerik.editor.js'][3398] = 0;
  _$jscoverage['telerik.editor.js'][3402] = 0;
  _$jscoverage['telerik.editor.js'][3403] = 0;
  _$jscoverage['telerik.editor.js'][3406] = 0;
  _$jscoverage['telerik.editor.js'][3408] = 0;
  _$jscoverage['telerik.editor.js'][3409] = 0;
  _$jscoverage['telerik.editor.js'][3411] = 0;
  _$jscoverage['telerik.editor.js'][3412] = 0;
  _$jscoverage['telerik.editor.js'][3413] = 0;
  _$jscoverage['telerik.editor.js'][3428] = 0;
  _$jscoverage['telerik.editor.js'][3434] = 0;
  _$jscoverage['telerik.editor.js'][3436] = 0;
  _$jscoverage['telerik.editor.js'][3437] = 0;
  _$jscoverage['telerik.editor.js'][3439] = 0;
  _$jscoverage['telerik.editor.js'][3440] = 0;
  _$jscoverage['telerik.editor.js'][3443] = 0;
  _$jscoverage['telerik.editor.js'][3444] = 0;
  _$jscoverage['telerik.editor.js'][3446] = 0;
  _$jscoverage['telerik.editor.js'][3448] = 0;
  _$jscoverage['telerik.editor.js'][3449] = 0;
  _$jscoverage['telerik.editor.js'][3450] = 0;
  _$jscoverage['telerik.editor.js'][3451] = 0;
  _$jscoverage['telerik.editor.js'][3454] = 0;
  _$jscoverage['telerik.editor.js'][3455] = 0;
  _$jscoverage['telerik.editor.js'][3456] = 0;
  _$jscoverage['telerik.editor.js'][3459] = 0;
  _$jscoverage['telerik.editor.js'][3462] = 0;
  _$jscoverage['telerik.editor.js'][3464] = 0;
  _$jscoverage['telerik.editor.js'][3465] = 0;
  _$jscoverage['telerik.editor.js'][3467] = 0;
  _$jscoverage['telerik.editor.js'][3469] = 0;
  _$jscoverage['telerik.editor.js'][3471] = 0;
  _$jscoverage['telerik.editor.js'][3473] = 0;
  _$jscoverage['telerik.editor.js'][3474] = 0;
  _$jscoverage['telerik.editor.js'][3477] = 0;
  _$jscoverage['telerik.editor.js'][3479] = 0;
  _$jscoverage['telerik.editor.js'][3486] = 0;
  _$jscoverage['telerik.editor.js'][3487] = 0;
  _$jscoverage['telerik.editor.js'][3488] = 0;
  _$jscoverage['telerik.editor.js'][3489] = 0;
  _$jscoverage['telerik.editor.js'][3490] = 0;
  _$jscoverage['telerik.editor.js'][3492] = 0;
  _$jscoverage['telerik.editor.js'][3494] = 0;
  _$jscoverage['telerik.editor.js'][3496] = 0;
  _$jscoverage['telerik.editor.js'][3498] = 0;
  _$jscoverage['telerik.editor.js'][3499] = 0;
  _$jscoverage['telerik.editor.js'][3500] = 0;
  _$jscoverage['telerik.editor.js'][3502] = 0;
  _$jscoverage['telerik.editor.js'][3505] = 0;
  _$jscoverage['telerik.editor.js'][3506] = 0;
  _$jscoverage['telerik.editor.js'][3507] = 0;
  _$jscoverage['telerik.editor.js'][3509] = 0;
  _$jscoverage['telerik.editor.js'][3520] = 0;
  _$jscoverage['telerik.editor.js'][3521] = 0;
  _$jscoverage['telerik.editor.js'][3522] = 0;
  _$jscoverage['telerik.editor.js'][3523] = 0;
  _$jscoverage['telerik.editor.js'][3524] = 0;
  _$jscoverage['telerik.editor.js'][3525] = 0;
  _$jscoverage['telerik.editor.js'][3528] = 0;
  _$jscoverage['telerik.editor.js'][3530] = 0;
  _$jscoverage['telerik.editor.js'][3531] = 0;
  _$jscoverage['telerik.editor.js'][3536] = 0;
  _$jscoverage['telerik.editor.js'][3537] = 0;
  _$jscoverage['telerik.editor.js'][3541] = 0;
  _$jscoverage['telerik.editor.js'][3546] = 0;
  _$jscoverage['telerik.editor.js'][3547] = 0;
  _$jscoverage['telerik.editor.js'][3549] = 0;
  _$jscoverage['telerik.editor.js'][3550] = 0;
  _$jscoverage['telerik.editor.js'][3551] = 0;
  _$jscoverage['telerik.editor.js'][3552] = 0;
  _$jscoverage['telerik.editor.js'][3556] = 0;
  _$jscoverage['telerik.editor.js'][3563] = 0;
  _$jscoverage['telerik.editor.js'][3564] = 0;
  _$jscoverage['telerik.editor.js'][3565] = 0;
  _$jscoverage['telerik.editor.js'][3566] = 0;
  _$jscoverage['telerik.editor.js'][3567] = 0;
  _$jscoverage['telerik.editor.js'][3569] = 0;
  _$jscoverage['telerik.editor.js'][3570] = 0;
  _$jscoverage['telerik.editor.js'][3571] = 0;
  _$jscoverage['telerik.editor.js'][3572] = 0;
  _$jscoverage['telerik.editor.js'][3576] = 0;
  _$jscoverage['telerik.editor.js'][3577] = 0;
  _$jscoverage['telerik.editor.js'][3578] = 0;
  _$jscoverage['telerik.editor.js'][3581] = 0;
  _$jscoverage['telerik.editor.js'][3582] = 0;
  _$jscoverage['telerik.editor.js'][3583] = 0;
  _$jscoverage['telerik.editor.js'][3584] = 0;
  _$jscoverage['telerik.editor.js'][3585] = 0;
  _$jscoverage['telerik.editor.js'][3589] = 0;
  _$jscoverage['telerik.editor.js'][3592] = 0;
  _$jscoverage['telerik.editor.js'][3593] = 0;
  _$jscoverage['telerik.editor.js'][3594] = 0;
  _$jscoverage['telerik.editor.js'][3595] = 0;
  _$jscoverage['telerik.editor.js'][3596] = 0;
  _$jscoverage['telerik.editor.js'][3599] = 0;
  _$jscoverage['telerik.editor.js'][3601] = 0;
  _$jscoverage['telerik.editor.js'][3604] = 0;
  _$jscoverage['telerik.editor.js'][3606] = 0;
  _$jscoverage['telerik.editor.js'][3607] = 0;
  _$jscoverage['telerik.editor.js'][3609] = 0;
  _$jscoverage['telerik.editor.js'][3612] = 0;
  _$jscoverage['telerik.editor.js'][3616] = 0;
  _$jscoverage['telerik.editor.js'][3618] = 0;
  _$jscoverage['telerik.editor.js'][3622] = 0;
  _$jscoverage['telerik.editor.js'][3659] = 0;
  _$jscoverage['telerik.editor.js'][3661] = 0;
  _$jscoverage['telerik.editor.js'][3662] = 0;
  _$jscoverage['telerik.editor.js'][3665] = 0;
  _$jscoverage['telerik.editor.js'][3668] = 0;
  _$jscoverage['telerik.editor.js'][3670] = 0;
  _$jscoverage['telerik.editor.js'][3672] = 0;
  _$jscoverage['telerik.editor.js'][3674] = 0;
  _$jscoverage['telerik.editor.js'][3678] = 0;
  _$jscoverage['telerik.editor.js'][3679] = 0;
  _$jscoverage['telerik.editor.js'][3681] = 0;
  _$jscoverage['telerik.editor.js'][3682] = 0;
  _$jscoverage['telerik.editor.js'][3684] = 0;
  _$jscoverage['telerik.editor.js'][3685] = 0;
  _$jscoverage['telerik.editor.js'][3686] = 0;
  _$jscoverage['telerik.editor.js'][3687] = 0;
  _$jscoverage['telerik.editor.js'][3688] = 0;
  _$jscoverage['telerik.editor.js'][3690] = 0;
  _$jscoverage['telerik.editor.js'][3691] = 0;
  _$jscoverage['telerik.editor.js'][3692] = 0;
  _$jscoverage['telerik.editor.js'][3696] = 0;
  _$jscoverage['telerik.editor.js'][3699] = 0;
  _$jscoverage['telerik.editor.js'][3703] = 0;
  _$jscoverage['telerik.editor.js'][3707] = 0;
  _$jscoverage['telerik.editor.js'][3711] = 0;
  _$jscoverage['telerik.editor.js'][3715] = 0;
  _$jscoverage['telerik.editor.js'][3719] = 0;
  _$jscoverage['telerik.editor.js'][3723] = 0;
  _$jscoverage['telerik.editor.js'][3724] = 0;
  _$jscoverage['telerik.editor.js'][3725] = 0;
  _$jscoverage['telerik.editor.js'][3729] = 0;
  _$jscoverage['telerik.editor.js'][3730] = 0;
  _$jscoverage['telerik.editor.js'][3734] = 0;
  _$jscoverage['telerik.editor.js'][3738] = 0;
  _$jscoverage['telerik.editor.js'][3742] = 0;
  _$jscoverage['telerik.editor.js'][3743] = 0;
  _$jscoverage['telerik.editor.js'][3745] = 0;
  _$jscoverage['telerik.editor.js'][3746] = 0;
  _$jscoverage['telerik.editor.js'][3747] = 0;
  _$jscoverage['telerik.editor.js'][3748] = 0;
  _$jscoverage['telerik.editor.js'][3751] = 0;
  _$jscoverage['telerik.editor.js'][3752] = 0;
  _$jscoverage['telerik.editor.js'][3753] = 0;
  _$jscoverage['telerik.editor.js'][3755] = 0;
  _$jscoverage['telerik.editor.js'][3757] = 0;
  _$jscoverage['telerik.editor.js'][3758] = 0;
  _$jscoverage['telerik.editor.js'][3759] = 0;
  _$jscoverage['telerik.editor.js'][3760] = 0;
  _$jscoverage['telerik.editor.js'][3761] = 0;
  _$jscoverage['telerik.editor.js'][3763] = 0;
  _$jscoverage['telerik.editor.js'][3764] = 0;
  _$jscoverage['telerik.editor.js'][3766] = 0;
  _$jscoverage['telerik.editor.js'][3767] = 0;
  _$jscoverage['telerik.editor.js'][3768] = 0;
  _$jscoverage['telerik.editor.js'][3772] = 0;
  _$jscoverage['telerik.editor.js'][3777] = 0;
  _$jscoverage['telerik.editor.js'][3778] = 0;
  _$jscoverage['telerik.editor.js'][3781] = 0;
  _$jscoverage['telerik.editor.js'][3787] = 0;
  _$jscoverage['telerik.editor.js'][3825] = 0;
  _$jscoverage['telerik.editor.js'][3826] = 0;
  _$jscoverage['telerik.editor.js'][3827] = 0;
  _$jscoverage['telerik.editor.js'][3828] = 0;
  _$jscoverage['telerik.editor.js'][3831] = 0;
  _$jscoverage['telerik.editor.js'][3832] = 0;
  _$jscoverage['telerik.editor.js'][3834] = 0;
  _$jscoverage['telerik.editor.js'][3835] = 0;
  _$jscoverage['telerik.editor.js'][3838] = 0;
  _$jscoverage['telerik.editor.js'][3839] = 0;
  _$jscoverage['telerik.editor.js'][3842] = 0;
  _$jscoverage['telerik.editor.js'][3847] = 0;
  _$jscoverage['telerik.editor.js'][3848] = 0;
  _$jscoverage['telerik.editor.js'][3849] = 0;
  _$jscoverage['telerik.editor.js'][3850] = 0;
  _$jscoverage['telerik.editor.js'][3852] = 0;
  _$jscoverage['telerik.editor.js'][3855] = 0;
  _$jscoverage['telerik.editor.js'][3856] = 0;
  _$jscoverage['telerik.editor.js'][3858] = 0;
  _$jscoverage['telerik.editor.js'][3859] = 0;
  _$jscoverage['telerik.editor.js'][3864] = 0;
  _$jscoverage['telerik.editor.js'][3865] = 0;
  _$jscoverage['telerik.editor.js'][3869] = 0;
  _$jscoverage['telerik.editor.js'][3871] = 0;
  _$jscoverage['telerik.editor.js'][3896] = 0;
}
_$jscoverage['telerik.editor.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","","","<span class=\"k\">var</span> $t <span class=\"k\">=</span> $<span class=\"k\">.</span>telerik<span class=\"k\">;</span>","    ","<span class=\"k\">function</span> makeMap<span class=\"k\">(</span>items<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        ","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> items<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","        obj<span class=\"k\">[</span>items<span class=\"k\">[</span>i<span class=\"k\">]]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        ","    <span class=\"k\">return</span> obj<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> empty <span class=\"k\">=</span> makeMap<span class=\"k\">(</span><span class=\"s\">'area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">));</span>","<span class=\"k\">var</span> blockElements <span class=\"k\">=</span> <span class=\"s\">'div,p,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,pre,script,table,tbody,td,tfoot,th,thead,tr,ul'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","<span class=\"k\">var</span> block <span class=\"k\">=</span> makeMap<span class=\"k\">(</span>blockElements<span class=\"k\">);</span>","<span class=\"k\">var</span> inline <span class=\"k\">=</span> makeMap<span class=\"k\">(</span><span class=\"s\">'a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">));</span>","<span class=\"k\">var</span> fillAttrs <span class=\"k\">=</span> makeMap<span class=\"k\">(</span><span class=\"s\">'checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">));</span>","","<span class=\"k\">function</span> normalize<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","        node<span class=\"k\">.</span>normalize<span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> findNodeIndex<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> i<span class=\"k\">++;</span>","    <span class=\"k\">return</span> i<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeValue <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>data <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> isAncestorOf<span class=\"k\">(</span>parent<span class=\"k\">,</span> node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">try</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">!</span>isDataNode<span class=\"k\">(</span>parent<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>contains<span class=\"k\">(</span>parent<span class=\"k\">,</span> isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> node<span class=\"k\">)</span> <span class=\"k\">||</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">==</span> parent<span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> isAncestorOrSelf<span class=\"k\">(</span>root<span class=\"k\">,</span> node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> isAncestorOf<span class=\"k\">(</span>root<span class=\"k\">,</span> node<span class=\"k\">)</span> <span class=\"k\">||</span> root <span class=\"k\">==</span> node<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> findClosestAncestor<span class=\"k\">(</span>root<span class=\"k\">,</span> node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>isAncestorOf<span class=\"k\">(</span>root<span class=\"k\">,</span> node<span class=\"k\">))</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> root<span class=\"k\">)</span>","            node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">return</span> node<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> getNodeLength<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>length <span class=\"k\">:</span> node<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> splitDataNode<span class=\"k\">(</span>node<span class=\"k\">,</span> offset<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> newNode <span class=\"k\">=</span> node<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","    node<span class=\"k\">.</span>deleteData<span class=\"k\">(</span>offset<span class=\"k\">,</span> node<span class=\"k\">.</span>length<span class=\"k\">);</span>","    newNode<span class=\"k\">.</span>deleteData<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> offset<span class=\"k\">);</span>","    dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>newNode<span class=\"k\">,</span> node<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> attrEquals<span class=\"k\">(</span>node<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> value <span class=\"k\">=</span> node<span class=\"k\">[</span>key<span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">'float'</span><span class=\"k\">)</span>","            value <span class=\"k\">=</span> node<span class=\"k\">[</span>$<span class=\"k\">.</span>support<span class=\"k\">.</span>cssFloat <span class=\"k\">?</span> <span class=\"s\">\"cssFloat\"</span> <span class=\"k\">:</span> <span class=\"s\">\"styleFloat\"</span><span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">==</span> <span class=\"s\">'object'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>attrEquals<span class=\"k\">(</span>value<span class=\"k\">,</span> attributes<span class=\"k\">[</span>key<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">!=</span> attributes<span class=\"k\">[</span>key<span class=\"k\">])</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> whitespace <span class=\"k\">=</span> <span class=\"s\">/^\\s+$/</span><span class=\"k\">;</span>","<span class=\"k\">var</span> rgb <span class=\"k\">=</span> <span class=\"s\">/rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i</span><span class=\"k\">;</span>","<span class=\"k\">var</span> cssAttributes <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"s\">'color,padding-left,padding-right,padding-top,padding-bottom,</span><span class=\"t\">\\</span>","<span class=\"s\">background-color,background-attachment,background-image,background-position,background-repeat,</span><span class=\"t\">\\</span>","<span class=\"s\">border-top-style,border-top-width,border-top-color,</span><span class=\"t\">\\</span>","<span class=\"s\">border-bottom-style,border-bottom-width,border-bottom-color,</span><span class=\"t\">\\</span>","<span class=\"s\">border-left-style,border-left-width,border-left-color,</span><span class=\"t\">\\</span>","<span class=\"s\">border-right-style,border-right-width,border-right-color,</span><span class=\"t\">\\</span>","<span class=\"s\">font-family,font-size,font-style,font-variant,font-weight,line-height'</span>","<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","","<span class=\"k\">var</span> dom <span class=\"k\">=</span> <span class=\"k\">{</span>","    blockParentOrBody<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>node<span class=\"k\">,</span> blockElements<span class=\"k\">)</span> <span class=\"k\">||</span> node<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    toHex<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> matches <span class=\"k\">=</span> rgb<span class=\"k\">.</span>exec<span class=\"k\">(</span>color<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>matches<span class=\"k\">)</span> <span class=\"k\">return</span> color<span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"s\">'#'</span> <span class=\"k\">+</span> $<span class=\"k\">.</span>map<span class=\"k\">(</span>matches<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>x<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> x <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>x<span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">),</span> x<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> x <span class=\"k\">:</span> <span class=\"s\">'0'</span> <span class=\"k\">+</span> x<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    encode<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;amp;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;lt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\u00a0/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;nbsp;'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    name<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> node<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    significantChildNodes<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">.</span>grep<span class=\"k\">(</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>child<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> child<span class=\"k\">.</span>nodeType <span class=\"k\">!=</span> <span class=\"s\">3</span> <span class=\"k\">||</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>child<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    lastTextNode<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> node<span class=\"k\">;</span>","            ","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            ","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> child <span class=\"k\">=</span> node<span class=\"k\">.</span>lastChild<span class=\"k\">;</span> child<span class=\"k\">;</span> child <span class=\"k\">=</span> child<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>result <span class=\"k\">=</span> dom<span class=\"k\">.</span>lastTextNode<span class=\"k\">(</span>child<span class=\"k\">))</span>","                <span class=\"k\">return</span> result<span class=\"k\">;</span>","                ","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    is<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> nodeName<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">==</span> nodeName<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    isMarker<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> node<span class=\"k\">.</span>className <span class=\"k\">==</span> <span class=\"s\">'t-marker'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    isWhitespace<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> whitespace<span class=\"k\">.</span>test<span class=\"k\">(</span>node<span class=\"k\">.</span>nodeValue<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    isBlock<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> block<span class=\"k\">[</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">)];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    isEmpty<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> empty<span class=\"k\">[</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">)];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    isInline<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> inline<span class=\"k\">[</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">)];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    scrollTo<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        node<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop <span class=\"k\">=</span> $<span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> node<span class=\"k\">).</span>offset<span class=\"k\">().</span>top<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    insertAt<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>parent<span class=\"k\">,</span> newElement<span class=\"k\">,</span> position<span class=\"k\">)</span> <span class=\"k\">{</span>","        parent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> parent<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>position<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    insertBefore<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>newElement<span class=\"k\">,</span> referenceElement<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> referenceElement<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> referenceElement<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    insertAfter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>newElement<span class=\"k\">,</span> referenceElement<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> referenceElement<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> referenceElement<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    remove<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    trim<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>parent<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> parent<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> parent<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>node<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\ufeff/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">))</span>","                    dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>node<span class=\"k\">,</span> parent<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>className <span class=\"k\">!=</span> <span class=\"s\">'t-marker'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                dom<span class=\"k\">.</span>trim<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>isEmpty<span class=\"k\">(</span>node<span class=\"k\">))</span>","                    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> parent<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    parentOfType<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">do</span> <span class=\"k\">{</span>","            node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>dom<span class=\"k\">.</span>ofType<span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">)));</span>","","        <span class=\"k\">return</span> node<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    ofType<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">.</span>inArray<span class=\"k\">(</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">),</span> tags<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    changeTag<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>referenceElement<span class=\"k\">,</span> tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> newElement <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>referenceElement<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> tagName<span class=\"k\">);</span>","        <span class=\"k\">var</span> attributes <span class=\"k\">=</span> referenceElement<span class=\"k\">.</span>attributes<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> attributes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> attribute <span class=\"k\">=</span> attributes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>attribute<span class=\"k\">.</span>specified<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// IE &lt; 8 cannot set class or style via setAttribute</span>","                <span class=\"k\">var</span> name <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeName<span class=\"k\">;</span>","                <span class=\"k\">var</span> value <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>name <span class=\"k\">==</span> <span class=\"s\">'class'</span><span class=\"k\">)</span>","                    newElement<span class=\"k\">.</span>className <span class=\"k\">=</span> value<span class=\"k\">;</span>","                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>name <span class=\"k\">==</span> <span class=\"s\">'style'</span><span class=\"k\">)</span>","                    newElement<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> referenceElement<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">;</span>","                <span class=\"k\">else</span>","                    newElement<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span>referenceElement<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","            newElement<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>referenceElement<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","","        dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>newElement<span class=\"k\">,</span> referenceElement<span class=\"k\">);</span>","        dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>referenceElement<span class=\"k\">);</span>","        <span class=\"k\">return</span> newElement<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    wrap<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> wrapper<span class=\"k\">)</span> <span class=\"k\">{</span>","        dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>wrapper<span class=\"k\">,</span> node<span class=\"k\">);</span>","        wrapper<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","        <span class=\"k\">return</span> wrapper<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    unwrap<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> parent <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","            parent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> node<span class=\"k\">);</span>","","        parent<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    create<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>document<span class=\"k\">,</span> tagName<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>attr<span class=\"k\">(</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tagName<span class=\"k\">),</span> attributes<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    attr<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        attributes <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> attributes<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>attributes <span class=\"k\">&amp;&amp;</span> <span class=\"s\">'style'</span> <span class=\"k\">in</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","            dom<span class=\"k\">.</span>style<span class=\"k\">(</span>element<span class=\"k\">,</span> attributes<span class=\"k\">.</span>style<span class=\"k\">);</span>","            <span class=\"k\">delete</span> attributes<span class=\"k\">.</span>style<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>element<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    style<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        $<span class=\"k\">(</span>node<span class=\"k\">).</span>css<span class=\"k\">(</span>value <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    unstyle<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">'float'</span><span class=\"k\">)</span>","                key <span class=\"k\">=</span> $<span class=\"k\">.</span>support<span class=\"k\">.</span>cssFloat <span class=\"k\">?</span> <span class=\"s\">\"cssFloat\"</span> <span class=\"k\">:</span> <span class=\"s\">\"styleFloat\"</span><span class=\"k\">;</span>","","            node<span class=\"k\">.</span>style<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","            node<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">'style'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    inlineStyle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>document<span class=\"k\">,</span> name<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> span <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> name<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","        ","        document<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>span<span class=\"k\">);</span>","                ","        <span class=\"k\">var</span> $span <span class=\"k\">=</span> $<span class=\"k\">(</span>span<span class=\"k\">);</span>","                ","        <span class=\"k\">var</span> style <span class=\"k\">=</span> $<span class=\"k\">.</span>map<span class=\"k\">(</span>cssAttributes<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> $span<span class=\"k\">.</span>css<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","                ","        $span<span class=\"k\">.</span>remove<span class=\"k\">();</span>","        ","        <span class=\"k\">return</span> style<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    commonAncestor<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> count <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>count<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>count <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","        <span class=\"k\">var</span> paths <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">var</span> minPathLength <span class=\"k\">=</span> Infinity<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> count<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ancestors <span class=\"k\">=</span> <span class=\"k\">[];</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> arguments<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                ancestors<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            paths<span class=\"k\">.</span>push<span class=\"k\">(</span>ancestors<span class=\"k\">.</span>reverse<span class=\"k\">());</span>","            minPathLength <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>minPathLength<span class=\"k\">,</span> ancestors<span class=\"k\">.</span>length<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>count <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> paths<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">][</span><span class=\"s\">0</span><span class=\"k\">];</span>","","        <span class=\"k\">var</span> output <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> minPathLength<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> first <span class=\"k\">=</span> paths<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">][</span>i<span class=\"k\">];</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> j <span class=\"k\">&lt;</span> count<span class=\"k\">;</span> j<span class=\"k\">++)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>first <span class=\"k\">!=</span> paths<span class=\"k\">[</span>j<span class=\"k\">][</span>i<span class=\"k\">])</span>","                    <span class=\"k\">return</span> output<span class=\"k\">;</span>","","            output <span class=\"k\">=</span> first<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> output<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","<span class=\"k\">var</span> fontSizeMappings <span class=\"k\">=</span> <span class=\"s\">'xx-small,x-small,small,medium,large,x-large,xx-large'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","","<span class=\"k\">function</span> domToXhtml<span class=\"k\">(</span>root<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[];</span>","    <span class=\"k\">var</span> tagMap <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'telerik:script'</span><span class=\"k\">:</span> <span class=\"k\">{</span> start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;script'</span><span class=\"k\">);</span> attr<span class=\"k\">(</span>node<span class=\"k\">);</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span> <span class=\"k\">}</span><span class=\"k\">,</span> end<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/script&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        b<span class=\"k\">:</span> <span class=\"k\">{</span> start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;strong&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">,</span> end<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/strong&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        i<span class=\"k\">:</span> <span class=\"k\">{</span> start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;em&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">,</span> end<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/em&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        u<span class=\"k\">:</span> <span class=\"k\">{</span> start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;span style=\"text-decoration:underline;\"&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">,</span> end<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        font<span class=\"k\">:</span> <span class=\"k\">{</span>","            start<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;span style=\"'</span><span class=\"k\">);</span>","","                <span class=\"k\">var</span> color <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> size <span class=\"k\">=</span> fontSizeMappings<span class=\"k\">[</span>node<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'size'</span><span class=\"k\">)];</span>","                <span class=\"k\">var</span> face <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'face'</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'color:'</span><span class=\"k\">)</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span>dom<span class=\"k\">.</span>toHex<span class=\"k\">(</span>color<span class=\"k\">));</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>face<span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'font-face:'</span><span class=\"k\">);</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span>face<span class=\"k\">);</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>size<span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'font-size:'</span><span class=\"k\">);</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span>size<span class=\"k\">);</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'\"&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            end<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> attr<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> specifiedAttributes <span class=\"k\">=</span> <span class=\"k\">[],</span>","            attributes <span class=\"k\">=</span> node<span class=\"k\">.</span>attributes<span class=\"k\">,</span>","            trim <span class=\"k\">=</span> $<span class=\"k\">.</span>trim<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'img'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> width <span class=\"k\">=</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>width<span class=\"k\">,</span>","                height <span class=\"k\">=</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>height<span class=\"k\">,</span>","                $node <span class=\"k\">=</span> $<span class=\"k\">(</span>node<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>width<span class=\"k\">)</span> <span class=\"k\">{</span>","                $node<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> parseInt<span class=\"k\">(</span>width<span class=\"k\">));</span>","                dom<span class=\"k\">.</span>unstyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">{</span> width<span class=\"k\">:</span> undefined <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>height<span class=\"k\">)</span> <span class=\"k\">{</span>","                $node<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'height'</span><span class=\"k\">,</span> parseInt<span class=\"k\">(</span>height<span class=\"k\">));</span>","                dom<span class=\"k\">.</span>unstyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">{</span> height<span class=\"k\">:</span> undefined <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> attributes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> attribute <span class=\"k\">=</span> attributes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">var</span> name <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeName<span class=\"k\">;</span>","            <span class=\"c\">// In IE &lt; 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>attribute<span class=\"k\">.</span>specified <span class=\"k\">||</span> <span class=\"k\">(</span>name <span class=\"k\">==</span> <span class=\"s\">'value'</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>value <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>name <span class=\"k\">==</span> <span class=\"s\">'type'</span> <span class=\"k\">&amp;&amp;</span> attribute<span class=\"k\">.</span>nodeValue <span class=\"k\">==</span> <span class=\"s\">'text'</span><span class=\"k\">))</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>name<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'_moz'</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> name <span class=\"k\">!=</span> <span class=\"s\">'complete'</span><span class=\"k\">)</span>","                    specifiedAttributes<span class=\"k\">.</span>push<span class=\"k\">(</span>attribute<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>specifiedAttributes<span class=\"k\">.</span>length<span class=\"k\">)</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","","        specifiedAttributes<span class=\"k\">.</span>sort<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>a<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> a<span class=\"k\">.</span>nodeName <span class=\"k\">&gt;</span> b<span class=\"k\">.</span>nodeName <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> a<span class=\"k\">.</span>nodeName <span class=\"k\">&lt;</span> b<span class=\"k\">.</span>nodeName <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> specifiedAttributes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> attribute <span class=\"k\">=</span> specifiedAttributes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">var</span> attributeName <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeName<span class=\"k\">;</span>","            <span class=\"k\">var</span> attributeValue <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span>attributeName<span class=\"k\">);</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'=\"'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>attributeName <span class=\"k\">==</span> <span class=\"s\">'style'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// In IE &lt; 8 the style attribute does not return proper nodeValue</span>","                <span class=\"k\">var</span> css <span class=\"k\">=</span> trim<span class=\"k\">(</span>attributeValue <span class=\"k\">||</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> cssIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> css<span class=\"k\">.</span>length<span class=\"k\">;</span> cssIndex <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> cssIndex<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> pair <span class=\"k\">=</span> css<span class=\"k\">[</span>cssIndex<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>pair<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> propertyAndValue <span class=\"k\">=</span> pair<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">':'</span><span class=\"k\">);</span>","                        <span class=\"k\">var</span> property <span class=\"k\">=</span> trim<span class=\"k\">(</span>propertyAndValue<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>toLowerCase<span class=\"k\">()),</span>","                            value <span class=\"k\">=</span> trim<span class=\"k\">(</span>propertyAndValue<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>property<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                            value <span class=\"k\">=</span> dom<span class=\"k\">.</span>toHex<span class=\"k\">(</span>value<span class=\"k\">);</span>","","                        result<span class=\"k\">.</span>push<span class=\"k\">(</span>property<span class=\"k\">);</span>","                        result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">':'</span><span class=\"k\">);</span>","                        result<span class=\"k\">.</span>push<span class=\"k\">(</span>value<span class=\"k\">);</span>","                        result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>attributeName <span class=\"k\">==</span> <span class=\"s\">'src'</span> <span class=\"k\">||</span> attributeName <span class=\"k\">==</span> <span class=\"s\">'href'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span>attributeName<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">));</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>fillAttrs<span class=\"k\">[</span>attributeName<span class=\"k\">]</span> <span class=\"k\">?</span> attributeName <span class=\"k\">:</span> attributeValue<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'\"'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> children<span class=\"k\">(</span>node<span class=\"k\">,</span> skip<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> childNode <span class=\"k\">=</span> node<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> childNode<span class=\"k\">;</span> childNode <span class=\"k\">=</span> childNode<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","            child<span class=\"k\">(</span>childNode<span class=\"k\">,</span> skip<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> child<span class=\"k\">(</span>node<span class=\"k\">,</span> skip<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodeType <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'_moz_dirty'</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> tagName <span class=\"k\">=</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">var</span> mapper <span class=\"k\">=</span> tagMap<span class=\"k\">[</span>tagName<span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mapper<span class=\"k\">)</span> <span class=\"k\">{</span>","                mapper<span class=\"k\">.</span>start<span class=\"k\">(</span>node<span class=\"k\">);</span>","                children<span class=\"k\">(</span>node<span class=\"k\">);</span>","                mapper<span class=\"k\">.</span>end<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;'</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span>tagName<span class=\"k\">);</span>","","            attr<span class=\"k\">(</span>node<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>empty<span class=\"k\">[</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">' /&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","                children<span class=\"k\">(</span>node<span class=\"k\">,</span> skip <span class=\"k\">||</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'pre'</span><span class=\"k\">));</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/'</span><span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>tagName<span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(!</span>skip <span class=\"k\">&amp;&amp;</span> $<span class=\"k\">.</span>support<span class=\"k\">.</span>leadingWhitespace<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> parent <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">var</span> previous <span class=\"k\">=</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>parent<span class=\"k\">)</span> <span class=\"k\">?</span> parent <span class=\"k\">:</span> node<span class=\"k\">).</span>previousSibling<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>previous <span class=\"k\">||</span> previous<span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">||</span> dom<span class=\"k\">.</span>isBlock<span class=\"k\">(</span>previous<span class=\"k\">))</span>","                    value <span class=\"k\">=</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^[\\r\\n\\v\\f\\t ]+/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                    ","                value <span class=\"k\">=</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/ +/</span><span class=\"k\">,</span> <span class=\"s\">' '</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","                ","            result<span class=\"k\">.</span>push<span class=\"k\">(</span>dom<span class=\"k\">.</span>encode<span class=\"k\">(</span>value<span class=\"k\">));</span>","            ","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>nodeType <span class=\"k\">==</span> <span class=\"s\">4</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;![CDATA['</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">.</span>data<span class=\"k\">);</span>","            result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">']]&gt;'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>nodeType <span class=\"k\">==</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>data<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'[CDATA['</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;!--'</span><span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">.</span>data<span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'--&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;!'</span><span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">.</span>data<span class=\"k\">);</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    children<span class=\"k\">(</span>root<span class=\"k\">);</span>","","    <span class=\"k\">return</span> result<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","<span class=\"k\">var</span> START_TO_START <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","    START_TO_END <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span>","    END_TO_END <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">,</span>","    END_TO_START <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","","<span class=\"k\">function</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> startContainer <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","    <span class=\"k\">return</span> startContainer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">9</span> <span class=\"k\">?</span> startContainer <span class=\"k\">:</span> startContainer<span class=\"k\">.</span>ownerDocument<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> selectionFromWindow<span class=\"k\">(</span>window<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> window<span class=\"k\">.</span>getSelection <span class=\"k\">?</span> window<span class=\"k\">.</span>getSelection<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">new</span> W3CSelection<span class=\"k\">(</span>window<span class=\"k\">.</span>document<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> selectionFromRange<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">return</span> selectionFromDocument<span class=\"k\">(</span>document<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> selectionFromDocument<span class=\"k\">(</span>document<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> selectionFromWindow<span class=\"k\">(</span>windowFromDocument<span class=\"k\">(</span>document<span class=\"k\">));</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> windowFromDocument<span class=\"k\">(</span>document<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> document<span class=\"k\">.</span>defaultView <span class=\"k\">||</span> document<span class=\"k\">.</span>parentWindow<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> split<span class=\"k\">(</span>range<span class=\"k\">,</span> node<span class=\"k\">,</span> trim<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">function</span> partition<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> partitionRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","        partitionRange<span class=\"k\">.</span>collapse<span class=\"k\">(</span>start<span class=\"k\">);</span>","        partitionRange<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'setStartBefore'</span> <span class=\"k\">:</span> <span class=\"s\">'setEndAfter'</span><span class=\"k\">](</span>node<span class=\"k\">);</span>","        <span class=\"k\">var</span> contents <span class=\"k\">=</span> partitionRange<span class=\"k\">.</span>extractContents<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>trim<span class=\"k\">)</span>","            contents <span class=\"k\">=</span> dom<span class=\"k\">.</span>trim<span class=\"k\">(</span>contents<span class=\"k\">);</span>","        dom<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'insertBefore'</span> <span class=\"k\">:</span> <span class=\"s\">'insertAfter'</span><span class=\"k\">](</span>contents<span class=\"k\">,</span> node<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    partition<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","    partition<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> selectRange<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> image <span class=\"k\">=</span> RangeUtils<span class=\"k\">.</span>image<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>image<span class=\"k\">)</span> <span class=\"k\">{</span>","        range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>image<span class=\"k\">);</span>","        range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>image<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> selection <span class=\"k\">=</span> selectionFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    selection<span class=\"k\">.</span>removeAllRanges<span class=\"k\">();</span>","    selection<span class=\"k\">.</span>addRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> W3CRange<span class=\"k\">(</span>doc<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        ownerDocument<span class=\"k\">:</span> doc<span class=\"k\">,</span> <span class=\"c\">/* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */</span>","        startContainer<span class=\"k\">:</span> doc<span class=\"k\">,</span>","        endContainer<span class=\"k\">:</span> doc<span class=\"k\">,</span>","        commonAncestorContainer<span class=\"k\">:</span> doc<span class=\"k\">,</span>","        startOffset<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        endOffset<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        collapsed<span class=\"k\">:</span> <span class=\"k\">true</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","W3CRange<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    <span class=\"c\">// Positioning Methods</span>","","    setStart<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> offset<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>startContainer <span class=\"k\">=</span> node<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>startOffset <span class=\"k\">=</span> offset<span class=\"k\">;</span>","        updateRangeProperties<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        fixIvalidRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    setEnd<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> offset<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>endContainer <span class=\"k\">=</span> node<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>endOffset <span class=\"k\">=</span> offset<span class=\"k\">;</span>","        updateRangeProperties<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        fixIvalidRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    setStartBefore<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setStart<span class=\"k\">(</span>node<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> findNodeIndex<span class=\"k\">(</span>node<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    setStartAfter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setStart<span class=\"k\">(</span>node<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> findNodeIndex<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    setEndBefore<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setEnd<span class=\"k\">(</span>node<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> findNodeIndex<span class=\"k\">(</span>node<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    setEndAfter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setEnd<span class=\"k\">(</span>node<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> findNodeIndex<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    selectNode<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>node<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    selectNodeContents<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setStart<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>setEnd<span class=\"k\">(</span>node<span class=\"k\">,</span> node<span class=\"k\">[</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">'childNodes'</span> <span class=\"k\">:</span> <span class=\"s\">'nodeValue'</span><span class=\"k\">].</span>length<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    collapse<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>toStart<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>toStart<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>setEnd<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>setStart<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">// Editing Methods</span>","","    deleteContents<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>findClosestAncestor<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">));</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">(</span><span class=\"k\">function</span> deleteSubtree<span class=\"k\">(</span>iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>iterator<span class=\"k\">.</span>next<span class=\"k\">())</span>","                iterator<span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">()</span> <span class=\"k\">?</span> deleteSubtree<span class=\"k\">(</span>iterator<span class=\"k\">.</span>getSubtreeIterator<span class=\"k\">())</span>","                                            <span class=\"k\">:</span> iterator<span class=\"k\">.</span>remove<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">)(</span><span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    cloneContents<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"c\">// clone subtree</span>","        <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"k\">function</span> cloneSubtree<span class=\"k\">(</span>iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> node<span class=\"k\">,</span> frag <span class=\"k\">=</span> document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span> node <span class=\"k\">=</span> iterator<span class=\"k\">.</span>next<span class=\"k\">();</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        node <span class=\"k\">=</span> node<span class=\"k\">.</span>cloneNode<span class=\"k\">(!</span>iterator<span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">());</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>iterator<span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">())</span>","                                node<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>cloneSubtree<span class=\"k\">(</span>iterator<span class=\"k\">.</span>getSubtreeIterator<span class=\"k\">()));</span>","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> frag<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">)(</span><span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    extractContents<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>findClosestAncestor<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">));</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">(</span><span class=\"k\">function</span> extractSubtree<span class=\"k\">(</span>iterator<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> node<span class=\"k\">,</span> frag <span class=\"k\">=</span> document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span> node <span class=\"k\">=</span> iterator<span class=\"k\">.</span>next<span class=\"k\">();</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                iterator<span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">()</span> <span class=\"k\">?</span> node <span class=\"k\">=</span> node<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">:</span> iterator<span class=\"k\">.</span>remove<span class=\"k\">(</span>self<span class=\"k\">.</span>originalRange<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>iterator<span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">())</span>","                    node<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>extractSubtree<span class=\"k\">(</span>iterator<span class=\"k\">.</span>getSubtreeIterator<span class=\"k\">()));</span>","","                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> frag<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">)(</span><span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    insertNode<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startOffset <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">)</span>","                splitDataNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","","            dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            dom<span class=\"k\">.</span>insertAt<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">,</span> node<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>setStart<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    cloneRange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"c\">// fast copy</span>","        <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">new</span> W3CRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument<span class=\"k\">),</span> <span class=\"k\">{</span>","            startContainer<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">,</span>","            endContainer<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>endContainer<span class=\"k\">,</span>","            commonAncestorContainer<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">,</span>","            startOffset<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">,</span>","            endOffset<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>endOffset<span class=\"k\">,</span>","            collapsed<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>collapsed<span class=\"k\">,</span>","","            originalRange<span class=\"k\">:</span> <span class=\"k\">this</span> <span class=\"c\">/* not part of the spec; used to update the original range when calling extractContents() on clones */</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">// used for debug purposes</span>","    toString<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> startNodeName <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeName<span class=\"k\">,</span>","            endNodeName <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>endContainer<span class=\"k\">.</span>nodeName<span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">[</span>startNodeName <span class=\"k\">==</span> <span class=\"s\">\"#text\"</span> <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeValue <span class=\"k\">:</span> startNodeName<span class=\"k\">,</span> <span class=\"s\">'('</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">,</span> <span class=\"s\">') : '</span><span class=\"k\">,</span>","                endNodeName <span class=\"k\">==</span> <span class=\"s\">\"#text\"</span> <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>endContainer<span class=\"k\">.</span>nodeValue <span class=\"k\">:</span> endNodeName<span class=\"k\">,</span> <span class=\"s\">'('</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>endOffset<span class=\"k\">,</span> <span class=\"s\">')'</span><span class=\"k\">].</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","<span class=\"c\">/* can be used in Range.compareBoundaryPoints if we need it one day */</span>","<span class=\"k\">function</span> compareBoundaries<span class=\"k\">(</span>start<span class=\"k\">,</span> end<span class=\"k\">,</span> startOffset<span class=\"k\">,</span> endOffset<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">==</span> end<span class=\"k\">)</span>","        <span class=\"k\">return</span> endOffset <span class=\"k\">-</span> startOffset<span class=\"k\">;</span>","","    <span class=\"c\">// end is child of start</span>","    <span class=\"k\">var</span> container <span class=\"k\">=</span> end<span class=\"k\">;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>container <span class=\"k\">&amp;&amp;</span> container<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> start<span class=\"k\">)</span>","        container <span class=\"k\">=</span> container<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>container<span class=\"k\">)</span>","        <span class=\"k\">return</span> findNodeIndex<span class=\"k\">(</span>container<span class=\"k\">)</span> <span class=\"k\">-</span> startOffset<span class=\"k\">;</span>","","    <span class=\"c\">// start is child of end</span>","    container <span class=\"k\">=</span> start<span class=\"k\">;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>container <span class=\"k\">&amp;&amp;</span> container<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> end<span class=\"k\">)</span>","        container <span class=\"k\">=</span> container<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>container<span class=\"k\">)</span>","        <span class=\"k\">return</span> endOffset <span class=\"k\">-</span> findNodeIndex<span class=\"k\">(</span>container<span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","    <span class=\"c\">// deep traversal</span>","    <span class=\"k\">var</span> root <span class=\"k\">=</span> dom<span class=\"k\">.</span>commonAncestor<span class=\"k\">(</span>start<span class=\"k\">,</span> end<span class=\"k\">);</span>","    <span class=\"k\">var</span> startAncestor <span class=\"k\">=</span> start<span class=\"k\">;</span>","","    <span class=\"k\">while</span> <span class=\"k\">(</span>startAncestor <span class=\"k\">&amp;&amp;</span> startAncestor<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> root<span class=\"k\">)</span>","        startAncestor <span class=\"k\">=</span> startAncestor<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>startAncestor<span class=\"k\">)</span>","        startAncestor <span class=\"k\">=</span> root<span class=\"k\">;</span>","","    <span class=\"k\">var</span> endAncestor <span class=\"k\">=</span> end<span class=\"k\">;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>endAncestor <span class=\"k\">&amp;&amp;</span> endAncestor<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> root<span class=\"k\">)</span>","        endAncestor <span class=\"k\">=</span> endAncestor<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>endAncestor<span class=\"k\">)</span>","        endAncestor <span class=\"k\">=</span> root<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>startAncestor <span class=\"k\">==</span> endAncestor<span class=\"k\">)</span>","        <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    <span class=\"k\">return</span> findNodeIndex<span class=\"k\">(</span>endAncestor<span class=\"k\">)</span> <span class=\"k\">-</span> findNodeIndex<span class=\"k\">(</span>startAncestor<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> fixIvalidRange<span class=\"k\">(</span>range<span class=\"k\">,</span> toStart<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">function</span> isInvalidRange<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> compareBoundaries<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>startOffset<span class=\"k\">,</span> range<span class=\"k\">.</span>endOffset<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>ex<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// range was initially invalid (e.g. when cloned from invalid range) - it must be fixed</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>isInvalidRange<span class=\"k\">(</span>range<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>toStart<span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>commonAncestorContainer <span class=\"k\">=</span> range<span class=\"k\">.</span>endContainer <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","            range<span class=\"k\">.</span>endOffset <span class=\"k\">=</span> range<span class=\"k\">.</span>startOffset<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>commonAncestorContainer <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer <span class=\"k\">=</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">;</span>","            range<span class=\"k\">.</span>startOffset <span class=\"k\">=</span> range<span class=\"k\">.</span>endOffset<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        range<span class=\"k\">.</span>collapsed <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> updateRangeProperties<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    range<span class=\"k\">.</span>collapsed <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> range<span class=\"k\">.</span>endContainer <span class=\"k\">&amp;&amp;</span> range<span class=\"k\">.</span>startOffset <span class=\"k\">==</span> range<span class=\"k\">.</span>endOffset<span class=\"k\">;</span>","","    <span class=\"k\">var</span> node <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","    <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">!=</span> range<span class=\"k\">.</span>endContainer <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isAncestorOf<span class=\"k\">(</span>node<span class=\"k\">,</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">))</span>","        node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","    range<span class=\"k\">.</span>commonAncestorContainer <span class=\"k\">=</span> node<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> createRange<span class=\"k\">(</span>document<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> document<span class=\"k\">.</span>createRange <span class=\"k\">?</span> document<span class=\"k\">.</span>createRange<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">new</span> W3CRange<span class=\"k\">(</span>document<span class=\"k\">);</span>","<span class=\"k\">}</span>","","","<span class=\"k\">function</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        range<span class=\"k\">:</span> range<span class=\"k\">,</span>","        _current<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        _next<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        _end<span class=\"k\">:</span> <span class=\"k\">null</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> root <span class=\"k\">=</span> range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_next <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> root <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isDataNode<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">)</span> <span class=\"k\">?</span>","    range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">]</span> <span class=\"k\">:</span>","    findClosestAncestor<span class=\"k\">(</span>root<span class=\"k\">,</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>_end <span class=\"k\">=</span> range<span class=\"k\">.</span>endContainer <span class=\"k\">==</span> root <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isDataNode<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">)</span> <span class=\"k\">?</span>","    range<span class=\"k\">.</span>endContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>endOffset<span class=\"k\">]</span> <span class=\"k\">:</span>","    findClosestAncestor<span class=\"k\">(</span>root<span class=\"k\">,</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">).</span>nextSibling<span class=\"k\">;</span>","<span class=\"k\">}</span>","","RangeIterator<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    hasNext<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">!!</span><span class=\"k\">this</span><span class=\"k\">.</span>_next<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    next<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> current <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_next<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_next <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>nextSibling <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_end <span class=\"k\">?</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>nextSibling <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">)</span>","                <span class=\"k\">(</span>current <span class=\"k\">=</span> current<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">)).</span>deleteData<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endOffset<span class=\"k\">,</span> current<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">)</span>","                <span class=\"k\">(</span>current <span class=\"k\">=</span> current<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">)).</span>deleteData<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> current<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    traverse<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> next<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_next<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_next <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>nextSibling <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_end <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>nextSibling <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> current<span class=\"k\">;</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">=</span> next<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>hasPartialSubtree<span class=\"k\">())</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>getSubtreeIterator<span class=\"k\">().</span>traverse<span class=\"k\">(</span>callback<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                callback<span class=\"k\">(</span>current<span class=\"k\">)</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> current<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    remove<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>originalRange<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> inStartContainer <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">;</span>","        <span class=\"k\">var</span> inEndContainer <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>inStartContainer <span class=\"k\">||</span> inEndContainer<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> inStartContainer <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startOffset <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> end <span class=\"k\">=</span> inEndContainer <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endOffset <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">var</span> delta <span class=\"k\">=</span> end <span class=\"k\">-</span> start<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>originalRange <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>inStartContainer <span class=\"k\">||</span> inEndContainer<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">==</span> originalRange<span class=\"k\">.</span>startContainer <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">&lt;=</span> originalRange<span class=\"k\">.</span>startOffset<span class=\"k\">)</span>","                    originalRange<span class=\"k\">.</span>startOffset <span class=\"k\">-=</span> delta<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current <span class=\"k\">==</span> originalRange<span class=\"k\">.</span>endContainer <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&lt;=</span> originalRange<span class=\"k\">.</span>endOffset<span class=\"k\">)</span>","                    originalRange<span class=\"k\">.</span>endOffset <span class=\"k\">-=</span> delta<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>deleteData<span class=\"k\">(</span>start<span class=\"k\">,</span> delta<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> parent <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>originalRange <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> parent <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer <span class=\"k\">==</span> parent<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> nodeIndex <span class=\"k\">=</span> findNodeIndex<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>parent <span class=\"k\">==</span> originalRange<span class=\"k\">.</span>startContainer <span class=\"k\">&amp;&amp;</span> nodeIndex <span class=\"k\">&lt;=</span> originalRange<span class=\"k\">.</span>startOffset<span class=\"k\">)</span>","                    originalRange<span class=\"k\">.</span>startOffset <span class=\"k\">-=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>parent <span class=\"k\">==</span> originalRange<span class=\"k\">.</span>endContainer <span class=\"k\">&amp;&amp;</span> nodeIndex <span class=\"k\">&lt;</span> originalRange<span class=\"k\">.</span>endOffset<span class=\"k\">)</span>","                    originalRange<span class=\"k\">.</span>endOffset <span class=\"k\">-=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    hasPartialSubtree<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">!</span>isDataNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","        <span class=\"k\">(</span>isAncestorOrSelf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">)</span> <span class=\"k\">||</span>","            isAncestorOrSelf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    getSubtreeIterator<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> subRange <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","        subRange<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isAncestorOrSelf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">))</span>","            subRange<span class=\"k\">.</span>setStart<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>isAncestorOrSelf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_current<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">))</span>","            subRange<span class=\"k\">.</span>setEnd<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>range<span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>subRange<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> W3CSelection<span class=\"k\">(</span>doc<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument <span class=\"k\">=</span> doc<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>rangeCount <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","W3CSelection<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    addRange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> textRange <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">.</span>createTextRange<span class=\"k\">();</span>","","        <span class=\"c\">// end container should be adopted first in order to prevent selection with negative length</span>","        adoptContainer<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        adoptContainer<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","        textRange<span class=\"k\">.</span>select<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    removeAllRanges<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>selection<span class=\"k\">.</span>empty<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    getRangeAt<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> textRange<span class=\"k\">,</span> range <span class=\"k\">=</span> <span class=\"k\">new</span> W3CRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument<span class=\"k\">),</span> selection <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>selection<span class=\"k\">;</span>","","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            textRange <span class=\"k\">=</span> selection<span class=\"k\">.</span>createRange<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>ex<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> range<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>selection<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'Control'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>textRange<span class=\"k\">.</span>item<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">));</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            adoptEndPoint<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            adoptEndPoint<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">9</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">9</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>textRange<span class=\"k\">.</span>compareEndPoints<span class=\"k\">(</span><span class=\"s\">'StartToEnd'</span><span class=\"k\">,</span> textRange<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> range<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> adoptContainer<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// find anchor node and offset</span>","    <span class=\"k\">var</span> container <span class=\"k\">=</span> range<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'startContainer'</span> <span class=\"k\">:</span> <span class=\"s\">'endContainer'</span><span class=\"k\">];</span>","    <span class=\"k\">var</span> offset <span class=\"k\">=</span> range<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'startOffset'</span> <span class=\"k\">:</span> <span class=\"s\">'endOffset'</span><span class=\"k\">],</span> textOffset <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> anchorNode <span class=\"k\">=</span> isDataNode<span class=\"k\">(</span>container<span class=\"k\">)</span> <span class=\"k\">?</span> container <span class=\"k\">:</span> container<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>offset<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> anchorParent <span class=\"k\">=</span> isDataNode<span class=\"k\">(</span>container<span class=\"k\">)</span> <span class=\"k\">?</span> container<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> container<span class=\"k\">;</span>","    <span class=\"c\">// visible data nodes need a text offset</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>container<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> container<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">4</span><span class=\"k\">)</span>","        textOffset <span class=\"k\">=</span> offset<span class=\"k\">;</span>","","    <span class=\"c\">// create a cursor element node to position range (since we can't select text nodes)</span>","    <span class=\"k\">var</span> cursorNode <span class=\"k\">=</span> anchorParent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>dom<span class=\"k\">.</span>create<span class=\"k\">(</span>range<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">),</span> anchorNode<span class=\"k\">);</span>","","    <span class=\"k\">var</span> cursor <span class=\"k\">=</span> range<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">.</span>createTextRange<span class=\"k\">();</span>","    cursor<span class=\"k\">.</span>moveToElementText<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","    cursor<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'moveStart'</span> <span class=\"k\">:</span> <span class=\"s\">'moveEnd'</span><span class=\"k\">](</span><span class=\"s\">'character'</span><span class=\"k\">,</span> textOffset<span class=\"k\">);</span>","    cursor<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","    textRange<span class=\"k\">.</span>setEndPoint<span class=\"k\">(</span>start <span class=\"k\">?</span> <span class=\"s\">'StartToStart'</span> <span class=\"k\">:</span> <span class=\"s\">'EndToStart'</span><span class=\"k\">,</span> cursor<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> adoptEndPoint<span class=\"k\">(</span>textRange<span class=\"k\">,</span> range<span class=\"k\">,</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> cursorNode <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>range<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">),</span> cursor <span class=\"k\">=</span> textRange<span class=\"k\">.</span>duplicate<span class=\"k\">();</span>","    cursor<span class=\"k\">.</span>collapse<span class=\"k\">(</span>start<span class=\"k\">);</span>","    <span class=\"k\">var</span> parent <span class=\"k\">=</span> cursor<span class=\"k\">.</span>parentElement<span class=\"k\">();</span>","    <span class=\"k\">do</span> <span class=\"k\">{</span>","        parent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>cursorNode<span class=\"k\">,</span> cursorNode<span class=\"k\">.</span>previousSibling<span class=\"k\">);</span>","        cursor<span class=\"k\">.</span>moveToElementText<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span>cursor<span class=\"k\">.</span>compareEndPoints<span class=\"k\">(</span>start <span class=\"k\">?</span> <span class=\"s\">'StartToStart'</span> <span class=\"k\">:</span> <span class=\"s\">'StartToEnd'</span><span class=\"k\">,</span> textRange<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> cursorNode<span class=\"k\">.</span>previousSibling<span class=\"k\">);</span>","","    cursor<span class=\"k\">.</span>setEndPoint<span class=\"k\">(</span>start <span class=\"k\">?</span> <span class=\"s\">'EndToStart'</span> <span class=\"k\">:</span> <span class=\"s\">'EndToEnd'</span><span class=\"k\">,</span> textRange<span class=\"k\">);</span>","","    <span class=\"k\">var</span> target <span class=\"k\">=</span> cursorNode<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>target<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">// at end of text node</span>","        target <span class=\"k\">=</span> cursorNode<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>target <span class=\"k\">&amp;&amp;</span> isDataNode<span class=\"k\">(</span>target<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"c\">// in case of collapsed range in empty tag</span>","            range<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>target<span class=\"k\">,</span> target<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">);</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>parent<span class=\"k\">);</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","            range<span class=\"k\">.</span>endOffset <span class=\"k\">-=</span> <span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"c\">// cursorNode was in parent</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>cursorNode<span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>target<span class=\"k\">))</span>","        range<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'setStart'</span> <span class=\"k\">:</span> <span class=\"s\">'setEnd'</span><span class=\"k\">](</span>target<span class=\"k\">,</span> cursor<span class=\"k\">.</span>text<span class=\"k\">.</span>length<span class=\"k\">);</span>","    <span class=\"k\">else</span>","        range<span class=\"k\">[</span>start <span class=\"k\">?</span> <span class=\"s\">'setStartBefore'</span> <span class=\"k\">:</span> <span class=\"s\">'setEndBefore'</span><span class=\"k\">](</span>target<span class=\"k\">);</span>","<span class=\"k\">}</span>",""," <span class=\"k\">function</span> RangeEnumerator<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>enumerate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">function</span> visit<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'img'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">)))</span> <span class=\"k\">{</span>","                nodes<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    visit<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">).</span>traverse<span class=\"k\">(</span>visit<span class=\"k\">);</span>","","        <span class=\"k\">return</span> nodes<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">new</span> RangeEnumerator<span class=\"k\">(</span>range<span class=\"k\">).</span>enumerate<span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> blockParents<span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> blocks <span class=\"k\">=</span> <span class=\"k\">[];</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> block <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">],</span> blockElements<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>block <span class=\"k\">&amp;&amp;</span> $<span class=\"k\">.</span>inArray<span class=\"k\">(</span>block<span class=\"k\">,</span> blocks<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            blocks<span class=\"k\">.</span>push<span class=\"k\">(</span>block<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> blocks<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> getMarkers<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> markers <span class=\"k\">=</span> <span class=\"k\">[];</span>","","    <span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">).</span>traverse<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>className <span class=\"k\">==</span> <span class=\"s\">'t-marker'</span><span class=\"k\">)</span>","            markers<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">return</span> markers<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> RestorePoint<span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> rootNode <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>body <span class=\"k\">=</span> rootNode<span class=\"k\">.</span>body<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>body<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","        ","    <span class=\"k\">function</span> index<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> lastType <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> nodeType <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(</span>nodeType <span class=\"k\">!=</span> <span class=\"s\">3</span> <span class=\"k\">||</span> lastType <span class=\"k\">!=</span> nodeType<span class=\"k\">)</span>","                result <span class=\"k\">++;</span>","                ","            lastType <span class=\"k\">=</span> nodeType<span class=\"k\">;</span>","        <span class=\"k\">}</span>","            ","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> offset<span class=\"k\">(</span>node<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">while</span> <span class=\"k\">((</span>node <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                value <span class=\"k\">+=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> nodeToPath<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> path <span class=\"k\">=</span> <span class=\"k\">[];</span>","            ","        <span class=\"k\">while</span> <span class=\"k\">(</span>node <span class=\"k\">!=</span> rootNode<span class=\"k\">)</span> <span class=\"k\">{</span>","            path<span class=\"k\">.</span>push<span class=\"k\">(</span>index<span class=\"k\">(</span>node<span class=\"k\">));</span>","            node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> path<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> pathToNode<span class=\"k\">(</span>path<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> node <span class=\"k\">=</span> rootNode<span class=\"k\">,</span> length <span class=\"k\">=</span> path<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span>length<span class=\"k\">--)</span>","            node <span class=\"k\">=</span> node<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>path<span class=\"k\">[</span>length<span class=\"k\">]];</span>","","        <span class=\"k\">return</span> node<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>startContainer <span class=\"k\">=</span> nodeToPath<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>endContainer <span class=\"k\">=</span> nodeToPath<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>startOffset <span class=\"k\">=</span> offset<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>endOffset <span class=\"k\">=</span> offset<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> range<span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toRange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        result<span class=\"k\">.</span>setStart<span class=\"k\">(</span>pathToNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startContainer<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        result<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>pathToNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>endContainer<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>endOffset<span class=\"k\">);</span>","","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> Marker<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> caret<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>addCaret <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        caret <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">),</span> <span class=\"s\">'span'</span><span class=\"k\">,</span> <span class=\"k\">{</span> className<span class=\"k\">:</span> <span class=\"s\">'t-marker'</span> <span class=\"k\">}</span><span class=\"k\">);</span>","        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>caret<span class=\"k\">);</span>","        range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>caret<span class=\"k\">);</span>","        <span class=\"k\">return</span> caret<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>removeCaret <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> previous <span class=\"k\">=</span> caret<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">var</span> startOffset <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>previous<span class=\"k\">)</span>","            startOffset <span class=\"k\">=</span> isDataNode<span class=\"k\">(</span>previous<span class=\"k\">)</span> <span class=\"k\">?</span> previous<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length <span class=\"k\">:</span> findNodeIndex<span class=\"k\">(</span>previous<span class=\"k\">);</span>","","        <span class=\"k\">var</span> container <span class=\"k\">=</span> caret<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">var</span> containerIndex <span class=\"k\">=</span> previous <span class=\"k\">?</span> findNodeIndex<span class=\"k\">(</span>previous<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>caret<span class=\"k\">);</span>","        normalize<span class=\"k\">(</span>container<span class=\"k\">);</span>","","        <span class=\"k\">var</span> node <span class=\"k\">=</span> container<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>containerIndex<span class=\"k\">];</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>node<span class=\"k\">))</span>","            range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>node<span class=\"k\">,</span> startOffset<span class=\"k\">);</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> textNode <span class=\"k\">=</span> dom<span class=\"k\">.</span>lastTextNode<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>textNode<span class=\"k\">)</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>textNode<span class=\"k\">,</span> textNode<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                range<span class=\"k\">[</span>previous <span class=\"k\">?</span> <span class=\"s\">'setStartAfter'</span> <span class=\"k\">:</span> <span class=\"s\">'setStartBefore'</span><span class=\"k\">](</span>node<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">&amp;&amp;</span> container<span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                container<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&lt;br _moz_dirty=\"\" /&gt;'</span><span class=\"k\">;</span>","                ","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>container<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>add <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">,</span> expand<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>expand <span class=\"k\">&amp;&amp;</span> range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>addCaret<span class=\"k\">(</span>range<span class=\"k\">);</span>","            range <span class=\"k\">=</span> RangeUtils<span class=\"k\">.</span>expand<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> rangeBoundary <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        rangeBoundary<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>end <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">),</span> <span class=\"s\">'span'</span><span class=\"k\">,</span> <span class=\"k\">{</span> className<span class=\"k\">:</span> <span class=\"s\">'t-marker'</span> <span class=\"k\">}</span><span class=\"k\">);</span>","        rangeBoundary<span class=\"k\">.</span>insertNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">);</span>","","        rangeBoundary <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","        rangeBoundary<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        rangeBoundary<span class=\"k\">.</span>insertNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">);</span>","","        range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">);</span>","        range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">);</span>","","        normalize<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","","        <span class=\"k\">return</span> range<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">,</span> end <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">;</span>","","        normalize<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","","        <span class=\"k\">while</span> <span class=\"k\">(!</span>start<span class=\"k\">.</span>nextSibling <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> start <span class=\"k\">=</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(!</span>end<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> end <span class=\"k\">=</span> end<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","        <span class=\"k\">var</span> shouldNormalizeStart <span class=\"k\">=</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                                <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>nextSibling <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> shouldNormalizeEnd <span class=\"k\">=</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                                <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>nextSibling <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">.</span>nextSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">);</span>","","        start <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","        end <span class=\"k\">=</span> end<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","","        <span class=\"k\">var</span> collapsed <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> collapsedToStart <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"c\">// collapsed range</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">{</span>","            collapsedToStart <span class=\"k\">=</span> <span class=\"k\">!!</span><span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","            start <span class=\"k\">=</span> end <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">.</span>previousSibling <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","            collapsed <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        dom<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">);</span>","        dom<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>end<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> end <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","            range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> startOffset <span class=\"k\">=</span> collapsed <span class=\"k\">?</span> isDataNode<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">?</span> start<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length <span class=\"k\">:</span> start<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> endOffset <span class=\"k\">=</span> isDataNode<span class=\"k\">(</span>end<span class=\"k\">)</span> <span class=\"k\">?</span> end<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length <span class=\"k\">:</span> end<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                start <span class=\"k\">=</span> start<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                startOffset <span class=\"k\">+=</span> start<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                end <span class=\"k\">=</span> end<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                endOffset <span class=\"k\">+=</span> end<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">var</span> startIndex <span class=\"k\">=</span> findNodeIndex<span class=\"k\">(</span>start<span class=\"k\">),</span> startParent <span class=\"k\">=</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">var</span> endIndex <span class=\"k\">=</span> findNodeIndex<span class=\"k\">(</span>end<span class=\"k\">),</span> endParent <span class=\"k\">=</span> end<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> startPointer <span class=\"k\">=</span> start<span class=\"k\">;</span> startPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span> startPointer <span class=\"k\">=</span> startPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>startPointer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">&amp;&amp;</span> startPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> startIndex<span class=\"k\">--;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> endPointer <span class=\"k\">=</span> end<span class=\"k\">;</span> endPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span> endPointer <span class=\"k\">=</span> endPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>endPointer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">&amp;&amp;</span> endPointer<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> endIndex<span class=\"k\">--;</span>","","        normalize<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            start <span class=\"k\">=</span> startParent<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>startIndex<span class=\"k\">];</span>","","        normalize<span class=\"k\">(</span>endParent<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            end <span class=\"k\">=</span> endParent<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>endIndex<span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>start<span class=\"k\">,</span> startOffset<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                range<span class=\"k\">[</span>collapsedToStart <span class=\"k\">?</span> <span class=\"s\">'setStartAfter'</span> <span class=\"k\">:</span> <span class=\"s\">'setStartBefore'</span><span class=\"k\">](</span>start<span class=\"k\">);</span>","                ","            range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>start<span class=\"k\">,</span> startOffset<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>start<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                range<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>end<span class=\"k\">,</span> endOffset<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>end<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>caret<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>removeCaret<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> boundary <span class=\"k\">=</span> <span class=\"s\">/[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> RangeUtils <span class=\"k\">=</span> <span class=\"k\">{</span>","    nodes<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","            nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span>","                nodes <span class=\"k\">=</span> dom<span class=\"k\">.</span>significantChildNodes<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> nodes<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    image<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">new</span> RangeIterator<span class=\"k\">(</span>range<span class=\"k\">).</span>traverse<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'img'</span><span class=\"k\">))</span>","                nodes<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    expand<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        <span class=\"k\">var</span> startContainer <span class=\"k\">=</span> result<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>result<span class=\"k\">.</span>startOffset <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> result<span class=\"k\">.</span>startOffset <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">var</span> endContainer <span class=\"k\">=</span> result<span class=\"k\">.</span>endContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>result<span class=\"k\">.</span>endOffset<span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>isDataNode<span class=\"k\">(</span>startContainer<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span>isDataNode<span class=\"k\">(</span>endContainer<span class=\"k\">))</span>","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","","        <span class=\"k\">var</span> beforeCaret <span class=\"k\">=</span> startContainer<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","        <span class=\"k\">var</span> afterCaret <span class=\"k\">=</span> endContainer<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>beforeCaret <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">||</span> afterCaret <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","","        <span class=\"k\">var</span> startOffset <span class=\"k\">=</span> beforeCaret<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">).</span>reverse<span class=\"k\">().</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">).</span>search<span class=\"k\">(</span>boundary<span class=\"k\">);</span>","        <span class=\"k\">var</span> endOffset <span class=\"k\">=</span> afterCaret<span class=\"k\">.</span>search<span class=\"k\">(</span>boundary<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>startOffset <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">||</span> endOffset <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","","        endOffset <span class=\"k\">=</span> endOffset <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> afterCaret<span class=\"k\">.</span>length <span class=\"k\">:</span> endOffset<span class=\"k\">;</span>","        startOffset <span class=\"k\">=</span> startOffset <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> beforeCaret<span class=\"k\">.</span>length <span class=\"k\">-</span> startOffset<span class=\"k\">;</span>","","        result<span class=\"k\">.</span>setStart<span class=\"k\">(</span>startContainer<span class=\"k\">,</span> startOffset<span class=\"k\">);</span>","        result<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>endContainer<span class=\"k\">,</span> endOffset<span class=\"k\">);</span>","","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    isExpandable<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> node <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","        <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>node <span class=\"k\">==</span> document <span class=\"k\">||</span> node <span class=\"k\">==</span> document<span class=\"k\">.</span>body<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> result <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","","        <span class=\"k\">var</span> value <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>value<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> beforeCaret <span class=\"k\">=</span> value<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> result<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","        <span class=\"k\">var</span> afterCaret <span class=\"k\">=</span> value<span class=\"k\">.</span>substring<span class=\"k\">(</span>result<span class=\"k\">.</span>startOffset<span class=\"k\">);</span>","","        <span class=\"k\">var</span> startOffset <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> endOffset <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>beforeCaret <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span>","            startOffset <span class=\"k\">=</span> beforeCaret<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">).</span>reverse<span class=\"k\">().</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">).</span>search<span class=\"k\">(</span>boundary<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>afterCaret <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span>","            endOffset <span class=\"k\">=</span> afterCaret<span class=\"k\">.</span>search<span class=\"k\">(</span>boundary<span class=\"k\">);</span>","","        <span class=\"k\">return</span> startOffset <span class=\"k\">!=</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> endOffset <span class=\"k\">!=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> Command<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> restorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>options<span class=\"k\">.</span>range<span class=\"k\">);</span>","    <span class=\"k\">var</span> marker <span class=\"k\">=</span> <span class=\"k\">new</span> Marker<span class=\"k\">();</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>formatter <span class=\"k\">=</span> options<span class=\"k\">.</span>formatter<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>getRange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> restorePoint<span class=\"k\">.</span>toRange<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>lockRange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>expand<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> marker<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">(),</span> expand<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>releaseRange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        marker<span class=\"k\">.</span>remove<span class=\"k\">(</span>range<span class=\"k\">);</span>","        selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>undo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        restorePoint<span class=\"k\">.</span>body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> restorePoint<span class=\"k\">.</span>html<span class=\"k\">;</span>","        selectRange<span class=\"k\">(</span>restorePoint<span class=\"k\">.</span>toRange<span class=\"k\">());</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>redo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>exec<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>lockRange<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>formatter<span class=\"k\">.</span>editor <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>formatter<span class=\"k\">.</span>toggle<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>releaseRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> GenericCommand<span class=\"k\">(</span>startRestorePoint<span class=\"k\">,</span> endRestorePoint<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> body <span class=\"k\">=</span> startRestorePoint<span class=\"k\">.</span>body<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>redo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> endRestorePoint<span class=\"k\">.</span>html<span class=\"k\">;</span>","        selectRange<span class=\"k\">(</span>endRestorePoint<span class=\"k\">.</span>toRange<span class=\"k\">());</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>undo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> startRestorePoint<span class=\"k\">.</span>html<span class=\"k\">;</span>","        selectRange<span class=\"k\">(</span>startRestorePoint<span class=\"k\">.</span>toRange<span class=\"k\">());</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> InsertHtmlCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>managesUndoRedo <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">;</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> editor<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","        <span class=\"k\">var</span> startRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        editor<span class=\"k\">.</span>clipboard<span class=\"k\">.</span>paste<span class=\"k\">(</span>options<span class=\"k\">.</span>value <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">);</span>","        editor<span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">new</span> GenericCommand<span class=\"k\">(</span>startRestorePoint<span class=\"k\">,</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">())));</span>","","        editor<span class=\"k\">.</span>focus<span class=\"k\">();</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","<span class=\"k\">function</span> InsertHtmlTool<span class=\"k\">()</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> InsertHtmlCommand<span class=\"k\">(</span>commandArguments<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tSelectBox'</span><span class=\"k\">).</span>close<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> initOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> initOptions<span class=\"k\">.</span>editor<span class=\"k\">;</span>","        ","        $ui<span class=\"k\">.</span>tSelectBox<span class=\"k\">(</span><span class=\"k\">{</span>","            data<span class=\"k\">:</span> editor<span class=\"k\">[</span><span class=\"s\">'insertHtml'</span><span class=\"k\">],</span>","            onItemCreate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"s\">'&lt;span unselectable=\"on\"&gt;'</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Text <span class=\"k\">+</span> <span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            onChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                Tool<span class=\"k\">.</span>exec<span class=\"k\">(</span>editor<span class=\"k\">,</span> <span class=\"s\">'insertHtml'</span><span class=\"k\">,</span> e<span class=\"k\">.</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            highlightFirst<span class=\"k\">:</span> <span class=\"k\">false</span>","        <span class=\"k\">}</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input'</span><span class=\"k\">).</span>html<span class=\"k\">(</span>editor<span class=\"k\">.</span>localization<span class=\"k\">.</span>insertHtml<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> UndoRedoStack<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> stack <span class=\"k\">=</span> <span class=\"k\">[],</span> currentCommandIndex <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>push <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","        stack <span class=\"k\">=</span> stack<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> currentCommandIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        currentCommandIndex <span class=\"k\">=</span> stack<span class=\"k\">.</span>push<span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>undo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>canUndo<span class=\"k\">())</span>","            stack<span class=\"k\">[</span>currentCommandIndex<span class=\"k\">--].</span>undo<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>redo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>canRedo<span class=\"k\">())</span>","            stack<span class=\"k\">[++</span>currentCommandIndex<span class=\"k\">].</span>redo<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>canUndo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> currentCommandIndex <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>canRedo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> currentCommandIndex <span class=\"k\">!=</span> stack<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> TypingHandler<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>keydown <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> keyboard <span class=\"k\">=</span> editor<span class=\"k\">.</span>keyboard<span class=\"k\">;</span>","        <span class=\"k\">var</span> isTypingKey <span class=\"k\">=</span> keyboard<span class=\"k\">.</span>isTypingKey<span class=\"k\">(</span>e<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>isTypingKey<span class=\"k\">)</span>","            removePendingFormats<span class=\"k\">(</span>editor<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isTypingKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>keyboard<span class=\"k\">.</span>typingInProgress<span class=\"k\">())</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">());</span>","            keyboard<span class=\"k\">.</span>startTyping<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>endRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">());</span>","                editor<span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">new</span> GenericCommand<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>endRestorePoint<span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>keyup <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> keyboard <span class=\"k\">=</span> editor<span class=\"k\">.</span>keyboard<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyboard<span class=\"k\">.</span>typingInProgress<span class=\"k\">())</span> <span class=\"k\">{</span>","            keyboard<span class=\"k\">.</span>endTyping<span class=\"k\">();</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> SystemHandler<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> systemCommandIsInProgress <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>createUndoCommand <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>endRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">());</span>","        editor<span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">new</span> GenericCommand<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>endRestorePoint<span class=\"k\">));</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>endRestorePoint<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>changed <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint<span class=\"k\">.</span>html <span class=\"k\">!=</span> editor<span class=\"k\">.</span>body<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>keydown <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> keyboard <span class=\"k\">=</span> editor<span class=\"k\">.</span>keyboard<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyboard<span class=\"k\">.</span>isModifierKey<span class=\"k\">(</span>e<span class=\"k\">))</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>keyboard<span class=\"k\">.</span>typingInProgress<span class=\"k\">())</span>","                keyboard<span class=\"k\">.</span>endTyping<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>startRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">());</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyboard<span class=\"k\">.</span>isSystem<span class=\"k\">(</span>e<span class=\"k\">))</span> <span class=\"k\">{</span>","            systemCommandIsInProgress <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>changed<span class=\"k\">())</span> <span class=\"k\">{</span>","                systemCommandIsInProgress <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>createUndoCommand<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>keyup <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>systemCommandIsInProgress <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>changed<span class=\"k\">())</span> <span class=\"k\">{</span>","            systemCommandIsInProgress <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>createUndoCommand<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> Keyboard<span class=\"k\">(</span>handlers<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> typingInProgress <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> timeout<span class=\"k\">;</span>","    <span class=\"k\">var</span> onEndTyping<span class=\"k\">;</span>","","    <span class=\"k\">function</span> isCharacter<span class=\"k\">(</span>keyCode<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>keyCode <span class=\"k\">&gt;=</span> <span class=\"s\">48</span> <span class=\"k\">&amp;&amp;</span> keyCode <span class=\"k\">&lt;=</span> <span class=\"s\">90</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>keyCode <span class=\"k\">&gt;=</span> <span class=\"s\">96</span> <span class=\"k\">&amp;&amp;</span> keyCode <span class=\"k\">&lt;=</span> <span class=\"s\">111</span><span class=\"k\">)</span> <span class=\"k\">||</span>","            <span class=\"k\">(</span>keyCode <span class=\"k\">&gt;=</span> <span class=\"s\">186</span> <span class=\"k\">&amp;&amp;</span> keyCode <span class=\"k\">&lt;=</span> <span class=\"s\">192</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>keyCode <span class=\"k\">&gt;=</span> <span class=\"s\">219</span> <span class=\"k\">&amp;&amp;</span> keyCode <span class=\"k\">&lt;=</span> <span class=\"s\">222</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toolFromShortcut <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>tools<span class=\"k\">,</span> e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> key <span class=\"k\">=</span> String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode<span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> toolName <span class=\"k\">in</span> tools<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tool <span class=\"k\">=</span> tools<span class=\"k\">[</span>toolName<span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">((</span>tool<span class=\"k\">.</span>key <span class=\"k\">==</span> key <span class=\"k\">||</span> tool<span class=\"k\">.</span>key <span class=\"k\">==</span> e<span class=\"k\">.</span>keyCode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>tool<span class=\"k\">.</span>ctrl <span class=\"k\">==</span> e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>tool<span class=\"k\">.</span>alt <span class=\"k\">==</span> e<span class=\"k\">.</span>altKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>tool<span class=\"k\">.</span>shift <span class=\"k\">==</span> e<span class=\"k\">.</span>shiftKey<span class=\"k\">)</span>","                <span class=\"k\">return</span> toolName<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isTypingKey <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> e<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>isCharacter<span class=\"k\">(</span>keyCode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>altKey<span class=\"k\">)</span> <span class=\"k\">||</span> keyCode <span class=\"k\">==</span> <span class=\"s\">32</span> <span class=\"k\">||</span> keyCode <span class=\"k\">==</span> <span class=\"s\">13</span>","        <span class=\"k\">||</span> keyCode <span class=\"k\">==</span> <span class=\"s\">8</span> <span class=\"k\">||</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">46</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>altKey<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isModifierKey <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> e<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">17</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>altKey<span class=\"k\">)</span>","                <span class=\"k\">||</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">16</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>altKey<span class=\"k\">)</span>","                <span class=\"k\">||</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">18</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>shiftKey<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isSystem <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> e<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">46</span> <span class=\"k\">&amp;&amp;</span> e<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>altKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>e<span class=\"k\">.</span>shiftKey<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>startTyping <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","        onEndTyping <span class=\"k\">=</span> callback<span class=\"k\">;</span>","        typingInProgress <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> stopTyping<span class=\"k\">()</span> <span class=\"k\">{</span>","        typingInProgress <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        onEndTyping<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>endTyping <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>force<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>clearTimeout<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>force<span class=\"k\">)</span>","            stopTyping<span class=\"k\">();</span>","        <span class=\"k\">else</span>","            timeout <span class=\"k\">=</span> window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>stopTyping<span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>typingInProgress <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> typingInProgress<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>clearTimeout <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span>timeout<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> notify<span class=\"k\">(</span>e<span class=\"k\">,</span> what<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> handlers<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>handlers<span class=\"k\">[</span>i<span class=\"k\">][</span>what<span class=\"k\">](</span>e<span class=\"k\">))</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>keydown <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        notify<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"s\">'keydown'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>keyup <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        notify<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"s\">'keyup'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> Clipboard <span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> cleaners <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"k\">new</span> MSWordFormatCleaner<span class=\"k\">()];</span>","","    <span class=\"k\">function</span> htmlToFragment <span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> container <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>editor<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">);</span>","        container<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">;</span>","            ","        <span class=\"k\">var</span> fragment <span class=\"k\">=</span> editor<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","            ","        <span class=\"k\">while</span> <span class=\"k\">(</span>container<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","            fragment<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>container<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","            ","        <span class=\"k\">return</span> fragment<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> isBlock<span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">/&lt;(div|p|ul|ol|table|h[1-6])/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>html<span class=\"k\">);</span>","    <span class=\"k\">}</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>oncut <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> startRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">());</span>","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            editor<span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">new</span> GenericCommand<span class=\"k\">(</span>startRestorePoint<span class=\"k\">,</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">())));</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>onpaste <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> editor<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","        <span class=\"k\">var</span> startRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>range<span class=\"k\">);</span>","            ","        <span class=\"k\">var</span> clipboardNode <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>editor<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">,</span> <span class=\"k\">{</span>className<span class=\"k\">:</span><span class=\"s\">'t-paste-container'</span><span class=\"k\">,</span> innerHTML<span class=\"k\">:</span> <span class=\"s\">'</span><span class=\"t\">\\u</span><span class=\"s\">feff'</span><span class=\"k\">}</span><span class=\"k\">);</span>","","        editor<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>clipboardNode<span class=\"k\">);</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>editor<span class=\"k\">.</span>body<span class=\"k\">.</span>createTextRange<span class=\"k\">)</span> <span class=\"k\">{</span>","            e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">var</span> r <span class=\"k\">=</span> editor<span class=\"k\">.</span>createRange<span class=\"k\">();</span>","            r<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>clipboardNode<span class=\"k\">);</span>","            editor<span class=\"k\">.</span>selectRange<span class=\"k\">(</span>r<span class=\"k\">);</span>","            <span class=\"k\">var</span> textRange <span class=\"k\">=</span> editor<span class=\"k\">.</span>body<span class=\"k\">.</span>createTextRange<span class=\"k\">();</span>","            textRange<span class=\"k\">.</span>moveToElementText<span class=\"k\">(</span>clipboardNode<span class=\"k\">);</span>","            $<span class=\"k\">(</span>editor<span class=\"k\">.</span>body<span class=\"k\">).</span>unbind<span class=\"k\">(</span><span class=\"s\">'paste'</span><span class=\"k\">);</span>","            textRange<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'Paste'</span><span class=\"k\">);</span>","            $<span class=\"k\">(</span>editor<span class=\"k\">.</span>body<span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'paste'</span><span class=\"k\">,</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> clipboardRange <span class=\"k\">=</span> editor<span class=\"k\">.</span>createRange<span class=\"k\">();</span>","            clipboardRange<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>clipboardNode<span class=\"k\">);</span>","            selectRange<span class=\"k\">(</span>clipboardRange<span class=\"k\">);</span>","        <span class=\"k\">}</span>","            ","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>clipboardNode<span class=\"k\">);</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(</span>clipboardNode<span class=\"k\">.</span>lastChild <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>clipboardNode<span class=\"k\">.</span>lastChild<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>clipboardNode<span class=\"k\">.</span>lastChild<span class=\"k\">);</span>","                ","            editor<span class=\"k\">.</span>clipboard<span class=\"k\">.</span>paste<span class=\"k\">(</span>clipboardNode<span class=\"k\">.</span>innerHTML<span class=\"k\">);</span>","            editor<span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">new</span> GenericCommand<span class=\"k\">(</span>startRestorePoint<span class=\"k\">,</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>editor<span class=\"k\">.</span>getRange<span class=\"k\">())));</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> splittableParent<span class=\"k\">(</span>block<span class=\"k\">,</span> node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>block<span class=\"k\">)</span>","            <span class=\"k\">return</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'p'</span><span class=\"k\">,</span> <span class=\"s\">'ul'</span><span class=\"k\">,</span> <span class=\"s\">'ol'</span><span class=\"k\">])</span> <span class=\"k\">||</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            ","        <span class=\"k\">var</span> parent <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">var</span> body <span class=\"k\">=</span> node<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">;</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>parent<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>parent<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> body <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>isBlock<span class=\"k\">(</span>parent<span class=\"k\">.</span>parentNode<span class=\"k\">))</span>","                parent <span class=\"k\">=</span> parent<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">}</span>","            ","        <span class=\"k\">return</span> parent<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>paste <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> cleaners<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>cleaners<span class=\"k\">[</span>i<span class=\"k\">].</span>applicable<span class=\"k\">(</span>html<span class=\"k\">))</span>","                html <span class=\"k\">=</span> cleaners<span class=\"k\">[</span>i<span class=\"k\">].</span>clean<span class=\"k\">(</span>html<span class=\"k\">);</span>","            ","        <span class=\"c\">// It is possible in IE to copy just &lt;li&gt; tags</span>","        html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^&lt;li/i</span><span class=\"k\">,</span> <span class=\"s\">'&lt;ul&gt;&lt;li'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/li&gt;$/g</span><span class=\"k\">,</span> <span class=\"s\">'li&gt;&lt;/ul&gt;'</span><span class=\"k\">);</span>","            ","        <span class=\"k\">var</span> block <span class=\"k\">=</span> isBlock<span class=\"k\">(</span>html<span class=\"k\">);</span>","","        <span class=\"k\">var</span> range <span class=\"k\">=</span> editor<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer <span class=\"k\">==</span> editor<span class=\"k\">.</span>document<span class=\"k\">)</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>editor<span class=\"k\">.</span>body<span class=\"k\">);</span>","            ","        <span class=\"k\">var</span> marker <span class=\"k\">=</span> <span class=\"k\">new</span> Marker<span class=\"k\">();</span>","        <span class=\"k\">var</span> caret <span class=\"k\">=</span> marker<span class=\"k\">.</span>addCaret<span class=\"k\">(</span>range<span class=\"k\">)</span>","            ","        <span class=\"k\">var</span> parent <span class=\"k\">=</span> splittableParent<span class=\"k\">(</span>block<span class=\"k\">,</span> caret<span class=\"k\">);</span>","        <span class=\"k\">var</span> unwrap <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"s\">/body|td/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>parent<span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>block <span class=\"k\">||</span> dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>parent<span class=\"k\">)))</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>caret<span class=\"k\">);</span>","            split<span class=\"k\">(</span>range<span class=\"k\">,</span> parent<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            unwrap <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","            ","        <span class=\"k\">var</span> fragment <span class=\"k\">=</span> htmlToFragment<span class=\"k\">(</span>html<span class=\"k\">);</span>","        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>fragment<span class=\"k\">);</span>","                ","        parent <span class=\"k\">=</span> splittableParent<span class=\"k\">(</span>block<span class=\"k\">,</span> caret<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>unwrap<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>caret<span class=\"k\">.</span>parentNode <span class=\"k\">!=</span> parent<span class=\"k\">)</span>","                dom<span class=\"k\">.</span>unwrap<span class=\"k\">(</span>caret<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","                ","            dom<span class=\"k\">.</span>unwrap<span class=\"k\">(</span>caret<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","            ","        normalize<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","        caret<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'inline'</span><span class=\"k\">;</span>","        dom<span class=\"k\">.</span>scrollTo<span class=\"k\">(</span>caret<span class=\"k\">);</span>","        marker<span class=\"k\">.</span>removeCaret<span class=\"k\">(</span>range<span class=\"k\">);</span>","        selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> MSWordFormatCleaner<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> replacements <span class=\"k\">=</span> <span class=\"k\">[</span>","        <span class=\"s\">/&lt;!--(.|\\n)*?--&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        <span class=\"s\">/mso-[^;\"]*;?/ig</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        <span class=\"s\">/&lt;\\/?(meta|link|style|o:|v:)[^&gt;]*&gt;((?:.|\\n)*?&lt;\\/(meta|link|style|o:|v:)[^&gt;]*&gt;)?/ig</span><span class=\"k\">,</span> <span class=\"s\">''</span>","    <span class=\"k\">];</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>applicable <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">/class=\"?Mso|style=\"[^\"]*mso-/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>html<span class=\"k\">);</span>","    <span class=\"k\">}</span>","        ","    <span class=\"k\">function</span> listType<span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/^[\\u2022\\u00b7\\u00a7\\u00d8o\\-]\\u00a0+/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>html<span class=\"k\">))</span>","            <span class=\"k\">return</span> <span class=\"s\">'ul'</span><span class=\"k\">;</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/^\\s*\\w+[\\.\\)]\\u00a0{2,}/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>html<span class=\"k\">))</span>","            <span class=\"k\">return</span> <span class=\"s\">'ol'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> lists<span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> placeholder <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">,</span> <span class=\"k\">{</span>innerHTML<span class=\"k\">:</span> html<span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> blockChildren <span class=\"k\">=</span> $<span class=\"k\">(</span>blockElements<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">),</span> placeholder<span class=\"k\">);</span>","            ","        <span class=\"k\">var</span> lastMargin <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span> lastType<span class=\"k\">,</span> levels <span class=\"k\">=</span> <span class=\"k\">{</span><span class=\"s\">'ul'</span><span class=\"k\">:</span><span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"s\">'ol'</span><span class=\"k\">:</span><span class=\"k\">{}}</span><span class=\"k\">,</span> li <span class=\"k\">=</span> placeholder<span class=\"k\">;</span>","            ","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> blockChildren<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> p <span class=\"k\">=</span> blockChildren<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">var</span> html <span class=\"k\">=</span> p<span class=\"k\">.</span>innerHTML<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;\\/?\\w+[^&gt;]*&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;nbsp;/g</span><span class=\"k\">,</span> <span class=\"s\">'</span><span class=\"t\">\\u</span><span class=\"s\">00a0'</span><span class=\"k\">);</span>      ","            <span class=\"k\">var</span> type <span class=\"k\">=</span> listType<span class=\"k\">(</span>html<span class=\"k\">);</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(!</span>type <span class=\"k\">||</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>p<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">'p'</span><span class=\"k\">)</span> <span class=\"k\">{</span> ","                <span class=\"k\">if</span> <span class=\"k\">(</span>p<span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>p<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    levels <span class=\"k\">=</span> <span class=\"k\">{</span><span class=\"s\">'ul'</span><span class=\"k\">:</span><span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"s\">'ol'</span><span class=\"k\">:</span><span class=\"k\">{}}</span><span class=\"k\">;</span>","                    li <span class=\"k\">=</span> placeholder<span class=\"k\">;</span>","                    lastMargin <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","                ","            <span class=\"k\">var</span> margin <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>p<span class=\"k\">.</span>style<span class=\"k\">.</span>marginLeft <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> list <span class=\"k\">=</span> levels<span class=\"k\">[</span>type<span class=\"k\">][</span>margin<span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>margin <span class=\"k\">&gt;</span> lastMargin <span class=\"k\">||</span> <span class=\"k\">!</span>list<span class=\"k\">)</span> <span class=\"k\">{</span>","                list <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> type<span class=\"k\">);</span>","                    ","                <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">==</span> placeholder<span class=\"k\">)</span>","                    dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> p<span class=\"k\">);</span>","                <span class=\"k\">else</span> ","                    li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>list<span class=\"k\">);</span>","                    ","                levels<span class=\"k\">[</span>type<span class=\"k\">][</span>margin<span class=\"k\">]</span> <span class=\"k\">=</span> list<span class=\"k\">;</span>","            <span class=\"k\">}</span>","                ","            <span class=\"k\">if</span> <span class=\"k\">(</span>lastType <span class=\"k\">!=</span> type<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> levels<span class=\"k\">)</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> child <span class=\"k\">in</span> levels<span class=\"k\">[</span>key<span class=\"k\">])</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>contains<span class=\"k\">(</span>list<span class=\"k\">,</span> levels<span class=\"k\">[</span>key<span class=\"k\">][</span>child<span class=\"k\">]))</span>","                            <span class=\"k\">delete</span> levels<span class=\"k\">[</span>key<span class=\"k\">][</span>child<span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>p<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","            li <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">{</span>innerHTML<span class=\"k\">:</span>p<span class=\"k\">.</span>innerHTML<span class=\"k\">}</span><span class=\"k\">);</span>","            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>p<span class=\"k\">);</span>","            lastMargin <span class=\"k\">=</span> margin<span class=\"k\">;</span>","            lastType <span class=\"k\">=</span> type<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> placeholder<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>clean <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> replacements<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">+=</span> <span class=\"s\">2</span><span class=\"k\">)</span>","            html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span>replacements<span class=\"k\">[</span>i<span class=\"k\">],</span> replacements<span class=\"k\">[</span>i<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">]);</span>","            ","        html <span class=\"k\">=</span> lists<span class=\"k\">(</span>html<span class=\"k\">);</span>","","        html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+class=\"?[^\"\\s&gt;]*\"?/ig</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","           ","        <span class=\"k\">return</span> html<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> InlineFormatFinder<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">function</span> numberOfSiblings<span class=\"k\">(</span>referenceNode<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> count <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> node <span class=\"k\">=</span> referenceNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> node<span class=\"k\">;</span> node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node <span class=\"k\">!=</span> referenceNode <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>className <span class=\"k\">!=</span> <span class=\"s\">'t-marker'</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","                count<span class=\"k\">++;</span>","","        <span class=\"k\">return</span> count<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>findSuitable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sourceNode<span class=\"k\">,</span> skip<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>skip <span class=\"k\">&amp;&amp;</span> numberOfSiblings<span class=\"k\">(</span>sourceNode<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>sourceNode<span class=\"k\">,</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>tags<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>findFormat <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sourceNode<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> format<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> sourceNode<span class=\"k\">;</span>","            <span class=\"k\">var</span> tags <span class=\"k\">=</span> format<span class=\"k\">[</span>i<span class=\"k\">].</span>tags<span class=\"k\">;</span>","            <span class=\"k\">var</span> attributes <span class=\"k\">=</span> format<span class=\"k\">[</span>i<span class=\"k\">].</span>attr<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>ofType<span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> attrEquals<span class=\"k\">(</span>node<span class=\"k\">,</span> attributes<span class=\"k\">))</span>","                <span class=\"k\">return</span> node<span class=\"k\">;</span>","","            <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                node <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> attrEquals<span class=\"k\">(</span>node<span class=\"k\">,</span> attributes<span class=\"k\">))</span>","                    <span class=\"k\">return</span> node<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isFormatted <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> InlineFormatter<span class=\"k\">(</span>format<span class=\"k\">,</span> values<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>finder <span class=\"k\">=</span> <span class=\"k\">new</span> InlineFormatFinder<span class=\"k\">(</span>format<span class=\"k\">);</span>","","    <span class=\"k\">var</span> attributes <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>attr<span class=\"k\">,</span> values<span class=\"k\">);</span>","","    <span class=\"k\">var</span> tag <span class=\"k\">=</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>tags<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","    <span class=\"k\">function</span> wrap<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>wrap<span class=\"k\">(</span>node<span class=\"k\">,</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>node<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> tag<span class=\"k\">,</span> attributes<span class=\"k\">));</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>activate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>finder<span class=\"k\">.</span>isFormatted<span class=\"k\">(</span>nodes<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>split<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>remove<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">var</span> isPending <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> caretMarker<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isPending<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> markers <span class=\"k\">=</span> getMarkers<span class=\"k\">(</span>range<span class=\"k\">);</span>","            caretMarker <span class=\"k\">=</span> markers<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","            <span class=\"k\">var</span> invisibleNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\u</span><span class=\"s\">feff'</span><span class=\"k\">);</span>","            dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>invisibleNode<span class=\"k\">,</span> caretMarker<span class=\"k\">);</span>","            nodes<span class=\"k\">.</span>push<span class=\"k\">(</span>invisibleNode<span class=\"k\">);</span>","            invisibleNode <span class=\"k\">=</span> invisibleNode<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>invisibleNode<span class=\"k\">,</span> caretMarker<span class=\"k\">);</span>","            nodes<span class=\"k\">.</span>push<span class=\"k\">(</span>invisibleNode<span class=\"k\">);</span>","            range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>markers<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>activate<span class=\"k\">(</span>range<span class=\"k\">,</span> nodes<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isPending<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">.</span>pendingFormats<span class=\"k\">.</span>push<span class=\"k\">(</span>caretMarker<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNodes <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> nodes<span class=\"k\">[</span>i<span class=\"k\">];</span>","","            <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode<span class=\"k\">)</span>","                dom<span class=\"k\">.</span>attr<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","            <span class=\"k\">else</span>","                formatNode <span class=\"k\">=</span> wrap<span class=\"k\">(</span>node<span class=\"k\">);</span>","","            formatNodes<span class=\"k\">.</span>push<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>consolidate<span class=\"k\">(</span>formatNodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>finder<span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode<span class=\"k\">)</span>","                dom<span class=\"k\">.</span>unwrap<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>split <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        <span class=\"k\">var</span> isPending <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> caretMarker<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isPending<span class=\"k\">)</span> <span class=\"k\">{</span>","            caretMarker <span class=\"k\">=</span> getMarkers<span class=\"k\">(</span>range<span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">];</span>","            nodes<span class=\"k\">.</span>push<span class=\"k\">(</span>caretMarker<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>finder<span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode<span class=\"k\">)</span>","                split<span class=\"k\">(</span>range<span class=\"k\">,</span> formatNode<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>consolidate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>nodes<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> nodes<span class=\"k\">.</span>pop<span class=\"k\">();</span>","            <span class=\"k\">var</span> last <span class=\"k\">=</span> nodes<span class=\"k\">[</span>nodes<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>previousSibling <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>className <span class=\"k\">==</span> <span class=\"s\">'t-marker'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                last<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">.</span>previousSibling<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>previousSibling <span class=\"k\">==</span> last <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">==</span> last<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","                    last<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> GreedyInlineFormatFinder<span class=\"k\">(</span>format<span class=\"k\">,</span> greedyProperty<span class=\"k\">)</span> <span class=\"k\">{</span>","    InlineFormatFinder<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> format<span class=\"k\">);</span>","","    <span class=\"k\">function</span> getInlineCssValue<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> attributes <span class=\"k\">=</span> node<span class=\"k\">.</span>attributes<span class=\"k\">,</span>","            trim <span class=\"k\">=</span> $<span class=\"k\">.</span>trim<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> attributes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> attribute <span class=\"k\">=</span> attributes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">var</span> name <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeName<span class=\"k\">;</span>","            <span class=\"k\">var</span> attributeValue <span class=\"k\">=</span> attribute<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>attribute<span class=\"k\">.</span>specified <span class=\"k\">&amp;&amp;</span> name <span class=\"k\">==</span> <span class=\"s\">'style'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                ","                <span class=\"k\">var</span> css <span class=\"k\">=</span> trim<span class=\"k\">(</span>attributeValue <span class=\"k\">||</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> cssIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> css<span class=\"k\">.</span>length<span class=\"k\">;</span> cssIndex <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> cssIndex<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> pair <span class=\"k\">=</span> css<span class=\"k\">[</span>cssIndex<span class=\"k\">];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>pair<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> propertyAndValue <span class=\"k\">=</span> pair<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">':'</span><span class=\"k\">);</span>","                        <span class=\"k\">var</span> property <span class=\"k\">=</span> trim<span class=\"k\">(</span>propertyAndValue<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>toLowerCase<span class=\"k\">()),</span>","                            value <span class=\"k\">=</span> trim<span class=\"k\">(</span>propertyAndValue<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>property <span class=\"k\">!=</span> greedyProperty<span class=\"k\">)</span>","                            <span class=\"k\">continue</span><span class=\"k\">;</span>","","                        <span class=\"k\">return</span> property<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> dom<span class=\"k\">.</span>toHex<span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getFormat <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> $node <span class=\"k\">=</span> $<span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> node<span class=\"k\">);</span>","        <span class=\"k\">var</span> parents <span class=\"k\">=</span> $node<span class=\"k\">.</span>parents<span class=\"k\">().</span>andSelf<span class=\"k\">();</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> parents<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> greedyProperty <span class=\"k\">==</span> <span class=\"s\">'className'</span> <span class=\"k\">?</span> parents<span class=\"k\">[</span>i<span class=\"k\">].</span>className <span class=\"k\">:</span> getInlineCssValue<span class=\"k\">(</span>parents<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">)</span>","                <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"s\">'inherit'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>getFormat <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> getFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span> len <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>result <span class=\"k\">!=</span> getFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isFormatted <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getFormat<span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> GreedyInlineFormatter<span class=\"k\">(</span>format<span class=\"k\">,</span> values<span class=\"k\">,</span> greedyProperty<span class=\"k\">)</span> <span class=\"k\">{</span>","    InlineFormatter<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> format<span class=\"k\">,</span> values<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>finder <span class=\"k\">=</span> <span class=\"k\">new</span> GreedyInlineFormatFinder<span class=\"k\">(</span>format<span class=\"k\">,</span> greedyProperty<span class=\"k\">)</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>activate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>split<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>greedyProperty<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> camelCase <span class=\"k\">=</span> greedyProperty<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/-([a-z])/</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>all<span class=\"k\">,</span> letter<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> letter<span class=\"k\">.</span>toUpperCase<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">[</span>values<span class=\"k\">.</span>style<span class=\"k\">[</span>camelCase<span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">'inherit'</span> <span class=\"k\">?</span> <span class=\"s\">'remove'</span> <span class=\"k\">:</span> <span class=\"s\">'apply'</span><span class=\"k\">](</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> InlineFormatTool<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    FormatTool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"k\">{</span>","        finder<span class=\"k\">:</span> <span class=\"k\">new</span> InlineFormatFinder<span class=\"k\">(</span>options<span class=\"k\">.</span>format<span class=\"k\">),</span>","        formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">new</span> InlineFormatter<span class=\"k\">(</span>options<span class=\"k\">.</span>format<span class=\"k\">)</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">));</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> FontTool<span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","    ","    <span class=\"c\">// IE has single selection hence we are using select box instead of combobox</span>","    <span class=\"k\">var</span> type <span class=\"k\">=</span> $<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">?</span> <span class=\"s\">'tSelectBox'</span> <span class=\"k\">:</span> <span class=\"s\">'tComboBox'</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> GreedyInlineFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> options<span class=\"k\">.</span>cssAttr<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> FormatCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span>","            formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> ","                <span class=\"k\">var</span> style <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                style<span class=\"k\">[</span>options<span class=\"k\">.</span>domAttr<span class=\"k\">]</span> <span class=\"k\">=</span> commandArguments<span class=\"k\">.</span>value<span class=\"k\">;</span>","","                <span class=\"k\">return</span> <span class=\"k\">new</span> GreedyInlineFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> style <span class=\"k\">}</span><span class=\"k\">,</span> options<span class=\"k\">.</span>cssAttr<span class=\"k\">);</span> ","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">))</span>        ","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> $ui<span class=\"k\">.</span>data<span class=\"k\">(</span>type<span class=\"k\">);</span>","        list<span class=\"k\">.</span>close<span class=\"k\">();</span>","        list<span class=\"k\">.</span>value<span class=\"k\">(</span>finder<span class=\"k\">.</span>getFormat<span class=\"k\">(</span>nodes<span class=\"k\">));</span>","    <span class=\"k\">}</span> ","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> initOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> initOptions<span class=\"k\">.</span>editor<span class=\"k\">;</span>","        ","        $ui<span class=\"k\">[</span>type<span class=\"k\">](</span><span class=\"k\">{</span>","            data<span class=\"k\">:</span> editor<span class=\"k\">[</span>options<span class=\"k\">.</span>name<span class=\"k\">],</span>","            onChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                Tool<span class=\"k\">.</span>exec<span class=\"k\">(</span>editor<span class=\"k\">,</span> options<span class=\"k\">.</span>name<span class=\"k\">,</span> e<span class=\"k\">.</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            highlightFirst<span class=\"k\">:</span> <span class=\"k\">false</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        $ui<span class=\"k\">.</span>data<span class=\"k\">(</span>type<span class=\"k\">).</span>dropDown<span class=\"k\">.</span>onItemCreate <span class=\"k\">=</span>","            <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"s\">'&lt;span unselectable=\"on\" style=\"'</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>cssAttr <span class=\"k\">+</span>  <span class=\"s\">': '</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Value <span class=\"k\">+</span> <span class=\"s\">'\"&gt;'</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Text <span class=\"k\">+</span> <span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> ColorTool <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> GreedyInlineFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> options<span class=\"k\">.</span>cssAttr<span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tColorPicker'</span><span class=\"k\">).</span>close<span class=\"k\">();</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">return</span> <span class=\"k\">new</span> FormatCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span>","            formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> ","                <span class=\"k\">var</span> style <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                style<span class=\"k\">[</span>options<span class=\"k\">.</span>domAttr<span class=\"k\">]</span> <span class=\"k\">=</span> commandArguments<span class=\"k\">.</span>value<span class=\"k\">;</span>","","                <span class=\"k\">return</span> <span class=\"k\">new</span> GreedyInlineFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> style <span class=\"k\">}</span><span class=\"k\">,</span> options<span class=\"k\">.</span>cssAttr<span class=\"k\">);</span> ","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">))</span>        ","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> initOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> initOptions<span class=\"k\">.</span>editor<span class=\"k\">;</span>","        ","        $ui<span class=\"k\">.</span>tColorPicker<span class=\"k\">(</span><span class=\"k\">{</span>","            selectedColor<span class=\"k\">:</span> <span class=\"s\">'#000000'</span><span class=\"k\">,</span>","            onChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                Tool<span class=\"k\">.</span>exec<span class=\"k\">(</span>editor<span class=\"k\">,</span> options<span class=\"k\">.</span>name<span class=\"k\">,</span> e<span class=\"k\">.</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> StyleTool<span class=\"k\">()</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> GreedyInlineFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"s\">'className'</span><span class=\"k\">);</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> FormatCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span>","            formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> ","                <span class=\"k\">return</span> <span class=\"k\">new</span> GreedyInlineFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"k\">{</span> className<span class=\"k\">:</span> commandArguments<span class=\"k\">.</span>value <span class=\"k\">}</span><span class=\"k\">);</span> ","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> $ui<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tSelectBox'</span><span class=\"k\">);</span>","        list<span class=\"k\">.</span>close<span class=\"k\">();</span>","        list<span class=\"k\">.</span>value<span class=\"k\">(</span>finder<span class=\"k\">.</span>getFormat<span class=\"k\">(</span>nodes<span class=\"k\">));</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> initOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> initOptions<span class=\"k\">.</span>editor<span class=\"k\">;</span>","        ","        $ui<span class=\"k\">.</span>tSelectBox<span class=\"k\">(</span><span class=\"k\">{</span>","            data<span class=\"k\">:</span> editor<span class=\"k\">[</span><span class=\"s\">'style'</span><span class=\"k\">],</span>","            title<span class=\"k\">:</span> editor<span class=\"k\">.</span>localization<span class=\"k\">.</span>style<span class=\"k\">,</span>","            onItemCreate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> style <span class=\"k\">=</span> dom<span class=\"k\">.</span>inlineStyle<span class=\"k\">(</span>editor<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'span'</span><span class=\"k\">,</span> <span class=\"k\">{</span>className <span class=\"k\">:</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Value<span class=\"k\">}</span><span class=\"k\">);</span>","                ","                e<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"s\">'&lt;span unselectable=\"on\" style=\"display:block;'</span> <span class=\"k\">+</span> style <span class=\"k\">+</span><span class=\"s\">'\"&gt;'</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>html <span class=\"k\">+</span> <span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            onChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                Tool<span class=\"k\">.</span>exec<span class=\"k\">(</span>editor<span class=\"k\">,</span> <span class=\"s\">'style'</span><span class=\"k\">,</span> e<span class=\"k\">.</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span> ","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> BlockFormatFinder<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">function</span> contains<span class=\"k\">(</span>node<span class=\"k\">,</span> children<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> children<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> child <span class=\"k\">=</span> children<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>child <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> <span class=\"k\">!</span>isAncestorOrSelf<span class=\"k\">(</span>node<span class=\"k\">,</span> child<span class=\"k\">))</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>findSuitable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> suitable <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> candidate <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">],</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>tags<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>candidate<span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"k\">[];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>candidate<span class=\"k\">,</span> suitable<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                suitable<span class=\"k\">.</span>push<span class=\"k\">(</span>candidate<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> suitable<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>contains<span class=\"k\">(</span>suitable<span class=\"k\">[</span>i<span class=\"k\">],</span> suitable<span class=\"k\">))</span>","                <span class=\"k\">return</span> <span class=\"k\">[</span>suitable<span class=\"k\">[</span>i<span class=\"k\">]];</span>","","        <span class=\"k\">return</span> suitable<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>findFormat <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sourceNode<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> format<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> sourceNode<span class=\"k\">;</span>","            <span class=\"k\">var</span> tags <span class=\"k\">=</span> format<span class=\"k\">[</span>i<span class=\"k\">].</span>tags<span class=\"k\">;</span>","            <span class=\"k\">var</span> attributes <span class=\"k\">=</span> format<span class=\"k\">[</span>i<span class=\"k\">].</span>attr<span class=\"k\">;</span>","","            <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>ofType<span class=\"k\">(</span>node<span class=\"k\">,</span> tags<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> attrEquals<span class=\"k\">(</span>node<span class=\"k\">,</span> attributes<span class=\"k\">))</span>","                    <span class=\"k\">return</span> node<span class=\"k\">;</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>getFormat <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> findFormat <span class=\"k\">=</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>findFormat<span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> node<span class=\"k\">);</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","            result <span class=\"k\">=</span> findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>result<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span> len <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>result <span class=\"k\">!=</span> findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> result<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isFormatted <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> BlockFormatter<span class=\"k\">(</span>format<span class=\"k\">,</span> values<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">(</span>format<span class=\"k\">);</span>","","    <span class=\"k\">function</span> wrap<span class=\"k\">(</span>tag<span class=\"k\">,</span> attributes<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> commonAncestor <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> dom<span class=\"k\">.</span>blockParentOrBody<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">:</span> dom<span class=\"k\">.</span>commonAncestor<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> nodes<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>commonAncestor<span class=\"k\">))</span>","            commonAncestor <span class=\"k\">=</span> dom<span class=\"k\">.</span>blockParentOrBody<span class=\"k\">(</span>commonAncestor<span class=\"k\">);</span>","","        <span class=\"k\">var</span> ancestors <span class=\"k\">=</span> dom<span class=\"k\">.</span>significantChildNodes<span class=\"k\">(</span>commonAncestor<span class=\"k\">);</span>","","        <span class=\"k\">var</span> position <span class=\"k\">=</span> findNodeIndex<span class=\"k\">(</span>ancestors<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","","        <span class=\"k\">var</span> wrapper <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>commonAncestor<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> tag<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> ancestors<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ancestor <span class=\"k\">=</span> ancestors<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isBlock<span class=\"k\">(</span>ancestor<span class=\"k\">))</span> <span class=\"k\">{</span>","                dom<span class=\"k\">.</span>attr<span class=\"k\">(</span>ancestor<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>wrapper<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                    dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>wrapper<span class=\"k\">,</span> ancestor<span class=\"k\">);</span>","                    wrapper <span class=\"k\">=</span> wrapper<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                position <span class=\"k\">=</span> findNodeIndex<span class=\"k\">(</span>ancestor<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            wrapper<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ancestor<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>wrapper<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","            dom<span class=\"k\">.</span>insertAt<span class=\"k\">(</span>commonAncestor<span class=\"k\">,</span> wrapper<span class=\"k\">,</span> position<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNodes <span class=\"k\">=</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">'img'</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">[</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]]</span> <span class=\"k\">:</span> finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","","        <span class=\"k\">var</span> formatToApply <span class=\"k\">=</span> formatNodes<span class=\"k\">.</span>length <span class=\"k\">?</span> formatByName<span class=\"k\">(</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]),</span> format<span class=\"k\">)</span> <span class=\"k\">:</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","        <span class=\"k\">var</span> tag <span class=\"k\">=</span> formatToApply<span class=\"k\">.</span>tags<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        <span class=\"k\">var</span> attributes <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> formatToApply<span class=\"k\">.</span>attr<span class=\"k\">,</span> values<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>formatNodes<span class=\"k\">.</span>length<span class=\"k\">)</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> formatNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","                dom<span class=\"k\">.</span>attr<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">],</span> attributes<span class=\"k\">);</span>","        <span class=\"k\">else</span>","            wrap<span class=\"k\">(</span>tag<span class=\"k\">,</span> attributes<span class=\"k\">,</span> nodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> finder<span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode<span class=\"k\">)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>ofType<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'p'</span><span class=\"k\">,</span> <span class=\"s\">'img'</span><span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">]))</span>","                    dom<span class=\"k\">.</span>unstyle<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> formatByName<span class=\"k\">(</span>dom<span class=\"k\">.</span>name<span class=\"k\">(</span>formatNode<span class=\"k\">),</span> format<span class=\"k\">).</span>attr<span class=\"k\">.</span>style<span class=\"k\">);</span>","                <span class=\"k\">else</span>","                    dom<span class=\"k\">.</span>unwrap<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> RangeUtils<span class=\"k\">.</span>nodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>finder<span class=\"k\">.</span>isFormatted<span class=\"k\">(</span>nodes<span class=\"k\">))</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>remove<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> GreedyBlockFormatter<span class=\"k\">(</span>format<span class=\"k\">,</span> values<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">(</span>format<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> blocks <span class=\"k\">=</span> blockParents<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">var</span> formatTag <span class=\"k\">=</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>tags<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>blocks<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> blocks<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>blocks<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"s\">'li'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> list <span class=\"k\">=</span> blocks<span class=\"k\">[</span>i<span class=\"k\">].</span>parentNode<span class=\"k\">;</span>","                    <span class=\"k\">var</span> formatter <span class=\"k\">=</span> <span class=\"k\">new</span> ListFormatter<span class=\"k\">(</span>list<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span> formatTag<span class=\"k\">);</span>","                    <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">.</span>createRange<span class=\"k\">();</span>","                    range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>blocks<span class=\"k\">[</span>i<span class=\"k\">]);</span>","                    formatter<span class=\"k\">.</span>toggle<span class=\"k\">(</span>range<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    dom<span class=\"k\">.</span>changeTag<span class=\"k\">(</span>blocks<span class=\"k\">[</span>i<span class=\"k\">],</span> formatTag<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">new</span> BlockFormatter<span class=\"k\">(</span>format<span class=\"k\">,</span> values<span class=\"k\">).</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","            nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span>","                nodes <span class=\"k\">=</span> dom<span class=\"k\">.</span>significantChildNodes<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> FormatCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options<span class=\"k\">.</span>formatter <span class=\"k\">=</span> options<span class=\"k\">.</span>formatter<span class=\"k\">();</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> BlockFormatTool <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    FormatTool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"k\">{</span>","        finder<span class=\"k\">:</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">(</span>options<span class=\"k\">.</span>format<span class=\"k\">),</span>","        formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">new</span> BlockFormatter<span class=\"k\">(</span>options<span class=\"k\">.</span>format<span class=\"k\">)</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">));</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> FormatBlockTool<span class=\"k\">()</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> blockElements <span class=\"k\">}</span><span class=\"k\">])</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> FormatCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span>","            formatter<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">new</span> GreedyBlockFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span>commandArguments<span class=\"k\">.</span>value<span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"k\">{}</span><span class=\"k\">);</span> <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">))</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> $ui<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tSelectBox'</span><span class=\"k\">);</span>","        list<span class=\"k\">.</span>close<span class=\"k\">();</span>","        list<span class=\"k\">.</span>value<span class=\"k\">(</span>finder<span class=\"k\">.</span>getFormat<span class=\"k\">(</span>nodes<span class=\"k\">));</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> initOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> editor <span class=\"k\">=</span> initOptions<span class=\"k\">.</span>editor<span class=\"k\">;</span>","        ","        $ui<span class=\"k\">.</span>tSelectBox<span class=\"k\">(</span><span class=\"k\">{</span>","            data<span class=\"k\">:</span> editor<span class=\"k\">.</span>formatBlock<span class=\"k\">,</span>","            title<span class=\"k\">:</span> editor<span class=\"k\">.</span>localization<span class=\"k\">.</span>formatBlock<span class=\"k\">,</span>","            onItemCreate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tagName <span class=\"k\">=</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Value<span class=\"k\">;</span>","                e<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"s\">'&lt;'</span> <span class=\"k\">+</span> tagName <span class=\"k\">+</span> <span class=\"s\">' unselectable=\"on\" style=\"margin: .3em 0;'</span> <span class=\"k\">+</span> dom<span class=\"k\">.</span>inlineStyle<span class=\"k\">(</span>editor<span class=\"k\">.</span>document<span class=\"k\">,</span> tagName<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'\"&gt;'</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>dataItem<span class=\"k\">.</span>Text <span class=\"k\">+</span> <span class=\"s\">'&lt;/'</span> <span class=\"k\">+</span> tagName <span class=\"k\">+</span> <span class=\"s\">'&gt;'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            onChange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                Tool<span class=\"k\">.</span>exec<span class=\"k\">(</span>editor<span class=\"k\">,</span> <span class=\"s\">'formatBlock'</span><span class=\"k\">,</span> e<span class=\"k\">.</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            highlightFirst<span class=\"k\">:</span> <span class=\"k\">false</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> ParagraphCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">();</span>","","        <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        <span class=\"k\">var</span> emptyParagraphContent <span class=\"k\">=</span> $<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> <span class=\"s\">'&lt;br _moz_dirty=\"\" /&gt;'</span><span class=\"k\">;</span>","","        <span class=\"c\">// necessary while the emptyParagraphContent is empty under IE</span>","        <span class=\"k\">var</span> startInBlock <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'p'</span><span class=\"k\">]),</span>","            endInBlock <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'p'</span><span class=\"k\">]),</span>","            shouldTrim <span class=\"k\">=</span> <span class=\"k\">(</span>startInBlock <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>endInBlock<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(!</span>startInBlock <span class=\"k\">&amp;&amp;</span> endInBlock<span class=\"k\">);</span>","","        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","","        <span class=\"k\">var</span> marker <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">);</span>","        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>marker<span class=\"k\">);</span>","","        <span class=\"k\">var</span> li <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>marker<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">));</span>","","        <span class=\"k\">var</span> next<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>li<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","            rng<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>li<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>textNodes<span class=\"k\">(</span>rng<span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// hitting 'enter' in empty li</span>","                <span class=\"k\">var</span> paragraph <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'p'</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","                    split<span class=\"k\">(</span>rng<span class=\"k\">,</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","","                dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>paragraph<span class=\"k\">,</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","                dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> li<span class=\"k\">.</span>parentNode <span class=\"k\">:</span> li<span class=\"k\">);</span>","                paragraph<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> emptyParagraphContent<span class=\"k\">;</span>","                next <span class=\"k\">=</span> paragraph<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>next<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>li<span class=\"k\">)</span>","                <span class=\"k\">new</span> BlockFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'p'</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">]).</span>apply<span class=\"k\">([</span>marker<span class=\"k\">]);</span>","","            range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>marker<span class=\"k\">);</span>","","            <span class=\"k\">var</span> parent <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>marker<span class=\"k\">,</span> <span class=\"k\">[</span>li <span class=\"k\">?</span> <span class=\"s\">'li'</span> <span class=\"k\">:</span> <span class=\"s\">'p'</span><span class=\"k\">]);</span>","","            split<span class=\"k\">(</span>range<span class=\"k\">,</span> parent<span class=\"k\">,</span> shouldTrim<span class=\"k\">);</span>","","            <span class=\"k\">var</span> previous <span class=\"k\">=</span> parent<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>previous<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> previous<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>previous<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                previous <span class=\"k\">=</span> previous<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","            next <span class=\"k\">=</span> parent<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>next<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> next<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>next<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                next <span class=\"k\">=</span> next<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>parent<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>previous<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>previous<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>previous<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>previous<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> previous<span class=\"k\">.</span>nodeValue <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                previous <span class=\"k\">=</span> previous<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>previous <span class=\"k\">&amp;&amp;</span> previous<span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                previous<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> emptyParagraphContent<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>next<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>is<span class=\"k\">(</span>next<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> <span class=\"s\">'br'</span><span class=\"k\">))</span>","                dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>next<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>isDataNode<span class=\"k\">(</span>next<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> next<span class=\"k\">.</span>nodeValue <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                next <span class=\"k\">=</span> next<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>next<span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                next<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> emptyParagraphContent<span class=\"k\">;</span>","","            <span class=\"c\">// normalize updates the caret display in Gecko</span>","            normalize<span class=\"k\">(</span>previous<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        normalize<span class=\"k\">(</span>next<span class=\"k\">);</span>","","        range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>next<span class=\"k\">);</span>","        range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        dom<span class=\"k\">.</span>scrollTo<span class=\"k\">(</span>next<span class=\"k\">);</span>","","        selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> NewLineCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">();</span>","        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","        <span class=\"k\">var</span> br <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">),</span> <span class=\"s\">'br'</span><span class=\"k\">);</span>","        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>br<span class=\"k\">);</span>","        br<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>normalize<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>br<span class=\"k\">.</span>nextSibling <span class=\"k\">||</span> dom<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>br<span class=\"k\">.</span>nextSibling<span class=\"k\">)))</span> <span class=\"k\">{</span> ","            <span class=\"c\">//Gecko and WebKit cannot put the caret after only one br.</span>","            <span class=\"k\">var</span> filler <span class=\"k\">=</span> br<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            filler<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'_moz_dirty'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","            dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>filler<span class=\"k\">,</span> br<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>br<span class=\"k\">);</span>","        range<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> ListFormatFinder<span class=\"k\">(</span>tag<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> tags <span class=\"k\">=</span> <span class=\"k\">[</span>tag <span class=\"k\">==</span> <span class=\"s\">'ul'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">,</span> tag<span class=\"k\">];</span>","        ","    BlockFormatFinder<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> tags<span class=\"k\">}</span><span class=\"k\">]);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>isFormatted <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNodes <span class=\"k\">=</span> <span class=\"k\">[],</span> formatNode<span class=\"k\">;</span>","            ","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">((</span>formatNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span> <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>formatNode<span class=\"k\">)</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> $<span class=\"k\">.</span>inArray<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> formatNodes<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                formatNodes<span class=\"k\">.</span>push<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","","        <span class=\"k\">return</span> formatNodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>findSuitable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> candidate <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> tags<span class=\"k\">)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>candidate <span class=\"k\">&amp;&amp;</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>candidate<span class=\"k\">)</span> <span class=\"k\">==</span> tag<span class=\"k\">)</span>","            <span class=\"k\">return</span> candidate<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> ListFormatter<span class=\"k\">(</span>tag<span class=\"k\">,</span> unwrapTag<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> ListFormatFinder<span class=\"k\">(</span>tag<span class=\"k\">);</span>","","    <span class=\"k\">function</span> wrap<span class=\"k\">(</span>list<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> li <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>list<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> nodes<span class=\"k\">[</span>i<span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","            li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isBlock<span class=\"k\">(</span>node<span class=\"k\">))</span> <span class=\"k\">{</span>","                list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","                dom<span class=\"k\">.</span>unwrap<span class=\"k\">(</span>node<span class=\"k\">);</span>","                li <span class=\"k\">=</span> li<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> containsAny<span class=\"k\">(</span>parent<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>isAncestorOrSelf<span class=\"k\">(</span>parent<span class=\"k\">,</span> nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> suitable<span class=\"k\">(</span>candidate<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> containsAny<span class=\"k\">(</span>candidate<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">||</span> dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>candidate<span class=\"k\">)</span> <span class=\"k\">||</span> candidate<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>split <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">[</span><span class=\"s\">'li'</span><span class=\"k\">]);</span>","            <span class=\"k\">var</span> end <span class=\"k\">=</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span>nodes<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">],</span> <span class=\"k\">[</span><span class=\"s\">'li'</span><span class=\"k\">])</span>","            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>start<span class=\"k\">);</span>","            range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>end<span class=\"k\">);</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> finder<span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode<span class=\"k\">)</span>","                    split<span class=\"k\">(</span>range<span class=\"k\">,</span> formatNode<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> commonAncestor <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">[</span><span class=\"s\">'ul'</span><span class=\"k\">,</span><span class=\"s\">'ol'</span><span class=\"k\">])</span> <span class=\"k\">:</span> dom<span class=\"k\">.</span>commonAncestor<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> nodes<span class=\"k\">);</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(!</span>commonAncestor<span class=\"k\">)</span>","            commonAncestor <span class=\"k\">=</span> nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isInline<span class=\"k\">(</span>commonAncestor<span class=\"k\">))</span>","            commonAncestor <span class=\"k\">=</span> dom<span class=\"k\">.</span>blockParentOrBody<span class=\"k\">(</span>commonAncestor<span class=\"k\">);</span>","","        <span class=\"k\">var</span> ancestors <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>formatNode<span class=\"k\">)</span>","            formatNode <span class=\"k\">=</span> <span class=\"k\">new</span> ListFormatFinder<span class=\"k\">(</span>tag <span class=\"k\">==</span> <span class=\"s\">'ul'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">).</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","            ","        <span class=\"k\">var</span> childNodes <span class=\"k\">=</span> dom<span class=\"k\">.</span>significantChildNodes<span class=\"k\">(</span>commonAncestor<span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> childNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> child <span class=\"k\">=</span> childNodes<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">var</span> nodeName <span class=\"k\">=</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>child<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>suitable<span class=\"k\">(</span>child<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>formatNode <span class=\"k\">||</span> <span class=\"k\">!</span>isAncestorOrSelf<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> child<span class=\"k\">)))</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>nodeName <span class=\"k\">==</span> <span class=\"s\">'ul'</span> <span class=\"k\">||</span> nodeName <span class=\"k\">==</span> <span class=\"s\">'ol'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"c\">// merging lists</span>","                    $<span class=\"k\">.</span>each<span class=\"k\">(</span>child<span class=\"k\">.</span>childNodes<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> ancestors<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">);</span>","                    dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>child<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    ancestors<span class=\"k\">.</span>push<span class=\"k\">(</span>child<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>ancestors<span class=\"k\">.</span>length <span class=\"k\">==</span> childNodes<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> commonAncestor <span class=\"k\">!=</span> nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>ownerDocument<span class=\"k\">.</span>body<span class=\"k\">)</span>","            ancestors <span class=\"k\">=</span> <span class=\"k\">[</span>commonAncestor<span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>formatNode<span class=\"k\">)</span> <span class=\"k\">{</span>","            formatNode <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>commonAncestor<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> tag<span class=\"k\">);</span>","            dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> ancestors<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span>","","        wrap<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> ancestors<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> tag<span class=\"k\">))</span>","            dom<span class=\"k\">.</span>changeTag<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> tag<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> unwrap<span class=\"k\">(</span>ul<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> li <span class=\"k\">=</span> ul<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> li<span class=\"k\">;</span> li <span class=\"k\">=</span> li<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> p <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>ul<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> unwrapTag <span class=\"k\">||</span> <span class=\"s\">'p'</span><span class=\"k\">);</span>","                ","            <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> child <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>isBlock<span class=\"k\">(</span>child<span class=\"k\">))</span>","                    dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>child<span class=\"k\">,</span> ul<span class=\"k\">);</span>","                <span class=\"k\">else</span>","                    p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>child<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>p<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","                dom<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> ul<span class=\"k\">);</span>","        <span class=\"k\">}</span>","            ","        dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>ul<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNode<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>formatNode <span class=\"k\">=</span> finder<span class=\"k\">.</span>findFormat<span class=\"k\">(</span>nodes<span class=\"k\">[</span>i<span class=\"k\">]))</span>","                unwrap<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","            nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span>","                nodes <span class=\"k\">=</span> dom<span class=\"k\">.</span>significantChildNodes<span class=\"k\">(</span>range<span class=\"k\">.</span>commonAncestorContainer<span class=\"k\">);</span>","        <span class=\"k\">}</span>","            ","        <span class=\"k\">if</span> <span class=\"k\">(</span>finder<span class=\"k\">.</span>isFormatted<span class=\"k\">(</span>nodes<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>split<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>remove<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> ListCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options<span class=\"k\">.</span>formatter <span class=\"k\">=</span> <span class=\"k\">new</span> ListFormatter<span class=\"k\">(</span>options<span class=\"k\">.</span>tag<span class=\"k\">);</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> ListTool<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    FormatTool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"k\">{</span>","        finder<span class=\"k\">:</span> <span class=\"k\">new</span> ListFormatFinder<span class=\"k\">(</span>options<span class=\"k\">.</span>tag<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">));</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span> ","        <span class=\"k\">return</span> <span class=\"k\">new</span> ListCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span> tag<span class=\"k\">:</span> options<span class=\"k\">.</span>tag <span class=\"k\">}</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> LinkFormatFinder<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>findSuitable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sourceNode<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>parentOfType<span class=\"k\">(</span>sourceNode<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'a'</span><span class=\"k\">]);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> LinkFormatter<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>finder <span class=\"k\">=</span> <span class=\"k\">new</span> LinkFormatFinder<span class=\"k\">();</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">,</span> attributes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>attributes<span class=\"k\">.</span>innerHTML <span class=\"k\">!=</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> markers <span class=\"k\">=</span> getMarkers<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">var</span> document <span class=\"k\">=</span> documentFromRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","            range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","            <span class=\"k\">var</span> a <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>document<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> attributes<span class=\"k\">);</span>","            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>a<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>markers<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>markers<span class=\"k\">[</span>markers<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">],</span> a<span class=\"k\">);</span>","                dom<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>markers<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> a<span class=\"k\">);</span>","                dom<span class=\"k\">[</span>nodes<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'insertBefore'</span> <span class=\"k\">:</span> <span class=\"s\">'insertAfter'</span><span class=\"k\">](</span>markers<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> a<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> formatter <span class=\"k\">=</span> <span class=\"k\">new</span> InlineFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'a'</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">],</span> attributes<span class=\"k\">);</span>","            formatter<span class=\"k\">.</span>finder <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>finder<span class=\"k\">;</span>","            formatter<span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> UnlinkCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options<span class=\"k\">.</span>formatter <span class=\"k\">=</span> <span class=\"k\">{</span>","        toggle <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">new</span> InlineFormatter<span class=\"k\">([</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'a'</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">]).</span>remove<span class=\"k\">(</span>textNodes<span class=\"k\">(</span>range<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> LinkCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">var</span> attributes<span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>async <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> formatter <span class=\"k\">=</span> <span class=\"k\">new</span> LinkFormatter<span class=\"k\">();</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">();</span>","","        <span class=\"k\">var</span> collapsed <span class=\"k\">=</span> range<span class=\"k\">.</span>collapsed<span class=\"k\">;</span>","","        range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>lockRange<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        <span class=\"k\">var</span> initialText <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","        <span class=\"k\">function</span> apply<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> href <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-url'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>href <span class=\"k\">&amp;&amp;</span> href <span class=\"k\">!=</span> <span class=\"s\">'http://'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                attributes <span class=\"k\">=</span> <span class=\"k\">{</span> href<span class=\"k\">:</span> href <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"k\">var</span> title <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-title'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>title<span class=\"k\">)</span>","                    attributes<span class=\"k\">.</span>title <span class=\"k\">=</span> title<span class=\"k\">;</span>","","                <span class=\"k\">var</span> text <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-text'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>text <span class=\"k\">!==</span> initialText<span class=\"k\">)</span>","                    attributes<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> text<span class=\"k\">;</span>","","                <span class=\"k\">var</span> target <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-target'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">)</span>","                    attributes<span class=\"k\">.</span>target <span class=\"k\">=</span> <span class=\"s\">'_blank'</span><span class=\"k\">;</span>","","                formatter<span class=\"k\">.</span>apply<span class=\"k\">(</span>range<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            close<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>change<span class=\"k\">)</span>","                self<span class=\"k\">.</span>change<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> close<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            dialog<span class=\"k\">.</span>destroy<span class=\"k\">();</span>","","            windowFromDocument<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">)).</span>focus<span class=\"k\">();</span>","","            self<span class=\"k\">.</span>releaseRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> a <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">?</span> formatter<span class=\"k\">.</span>finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> shouldShowText <span class=\"k\">=</span> nodes<span class=\"k\">.</span>length <span class=\"k\">&lt;=</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">(</span>nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">2</span> <span class=\"k\">&amp;&amp;</span> collapsed<span class=\"k\">);</span>","","        <span class=\"k\">var</span> dialog <span class=\"k\">=</span> $t<span class=\"k\">.</span>window<span class=\"k\">.</span>create<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">.</span>dialogOptions<span class=\"k\">,</span> <span class=\"k\">{</span>","            title<span class=\"k\">:</span> <span class=\"s\">\"Insert link\"</span><span class=\"k\">,</span>","            html<span class=\"k\">:</span> <span class=\"k\">new</span> $<span class=\"k\">.</span>telerik<span class=\"k\">.</span>stringBuilder<span class=\"k\">()</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-editor-dialog\"&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;ol&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-text-row\"&gt;&lt;label for=\"t-editor-link-url\"&gt;Web address&lt;/label&gt;&lt;input type=\"text\" id=\"t-editor-link-url\"/&gt;&lt;/li&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-text-row\"&gt;&lt;label for=\"t-editor-link-text\"&gt;Text&lt;/label&gt;&lt;input type=\"text\" id=\"t-editor-link-text\"/&gt;&lt;/li&gt;'</span><span class=\"k\">,</span> shouldShowText<span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-text-row\"&gt;&lt;label for=\"t-editor-link-title\"&gt;Tooltip&lt;/label&gt;&lt;input type=\"text\" id=\"t-editor-link-title\"/&gt;&lt;/li&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-checkbox-row\"&gt;&lt;input type=\"checkbox\" id=\"t-editor-link-target\"/&gt;&lt;label for=\"t-editor-link-target\"&gt;Open link in new window&lt;/label&gt;&lt;/li&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/ol&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-button-wrapper\"&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;button class=\"t-dialog-insert t-button t-state-default\"&gt;Insert&lt;/button&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&amp;nbsp;or&amp;nbsp;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;a href=\"#\" class=\"t-dialog-close t-link\"&gt;Close&lt;/a&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>string<span class=\"k\">(),</span>","            onClose<span class=\"k\">:</span> close","        <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>hide<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-dialog-insert'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>apply<span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-dialog-close'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>close<span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-form-text-row input'</span><span class=\"k\">).</span>keydown<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">13</span><span class=\"k\">)</span>","                    apply<span class=\"k\">(</span>e<span class=\"k\">);</span>","                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">27</span><span class=\"k\">)</span>","                    close<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-button'</span><span class=\"k\">,</span> <span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>buttonHover<span class=\"k\">)</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-button'</span><span class=\"k\">,</span> <span class=\"s\">'mouseleave'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>buttonLeave<span class=\"k\">)</span>","            <span class=\"c\">// IE &lt; 8 returns absolute url if getAttribute is not used</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-url'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>a <span class=\"k\">?</span> a<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'href'</span><span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">'http://'</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-text'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>nodes<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"k\">(</span>nodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeValue <span class=\"k\">:</span> nodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeValue <span class=\"k\">+</span> nodes<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeValue<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-title'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>a <span class=\"k\">?</span> a<span class=\"k\">.</span>title <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-target'</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> a <span class=\"k\">?</span> a<span class=\"k\">.</span>target <span class=\"k\">==</span> <span class=\"s\">'_blank'</span> <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>show<span class=\"k\">()</span>","            <span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tWindow'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>center<span class=\"k\">();</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>shouldShowText <span class=\"k\">&amp;&amp;</span> nodes<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            initialText <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-text'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","","        $<span class=\"k\">(</span><span class=\"s\">'#t-editor-link-url'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>focus<span class=\"k\">().</span>select<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>redo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>lockRange<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        formatter<span class=\"k\">.</span>apply<span class=\"k\">(</span>range<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>releaseRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> UnlinkTool<span class=\"k\">(</span>options<span class=\"k\">)</span><span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"k\">{</span>command<span class=\"k\">:</span>UnlinkCommand<span class=\"k\">}</span><span class=\"k\">));</span>","    ","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> InlineFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span>tags<span class=\"k\">:[</span><span class=\"s\">'a'</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">]);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'unselectable'</span><span class=\"k\">,</span> <span class=\"s\">'on'</span><span class=\"k\">)</span>","           <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>toggleClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">,</span> <span class=\"k\">!</span>finder<span class=\"k\">.</span>isFormatted<span class=\"k\">(</span>nodes<span class=\"k\">))</span>","            <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-hover'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","<span class=\"k\">function</span> ImageCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>async <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> attributes<span class=\"k\">;</span>","","    <span class=\"k\">function</span> insertImage<span class=\"k\">(</span>img<span class=\"k\">,</span> range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>attributes<span class=\"k\">.</span>src <span class=\"k\">&amp;&amp;</span> attributes<span class=\"k\">.</span>src <span class=\"k\">!=</span> <span class=\"s\">'http://'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>img<span class=\"k\">)</span> <span class=\"k\">{</span>","                img <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">),</span> <span class=\"s\">'img'</span><span class=\"k\">,</span> attributes<span class=\"k\">);</span>","                img<span class=\"k\">.</span>onload <span class=\"k\">=</span> img<span class=\"k\">.</span>onerror <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    img<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">'complete'</span><span class=\"k\">);</span>","                    img<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">);</span>","                    img<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">'height'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>img<span class=\"k\">);</span>","                range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>img<span class=\"k\">);</span>","                range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>img<span class=\"k\">);</span>","                selectRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span>","                dom<span class=\"k\">.</span>attr<span class=\"k\">(</span>img<span class=\"k\">,</span> attributes<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>redo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>lockRange<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>insertImage<span class=\"k\">(</span>RangeUtils<span class=\"k\">.</span>image<span class=\"k\">(</span>range<span class=\"k\">),</span> range<span class=\"k\">))</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>releaseRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>lockRange<span class=\"k\">();</span>","","        <span class=\"k\">var</span> applied <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> img <span class=\"k\">=</span> RangeUtils<span class=\"k\">.</span>image<span class=\"k\">(</span>range<span class=\"k\">);</span>","","        <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","        <span class=\"k\">function</span> apply<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            attributes <span class=\"k\">=</span> <span class=\"k\">{</span>","                src<span class=\"k\">:</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-image-url'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">(),</span>","                alt<span class=\"k\">:</span> $<span class=\"k\">(</span><span class=\"s\">'#t-editor-image-title'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">()</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            applied <span class=\"k\">=</span> insertImage<span class=\"k\">(</span>img<span class=\"k\">,</span> range<span class=\"k\">);</span>","","            close<span class=\"k\">(</span>e<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>change<span class=\"k\">)</span>","                self<span class=\"k\">.</span>change<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> close<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            dialog<span class=\"k\">.</span>destroy<span class=\"k\">();</span>","","            windowFromDocument<span class=\"k\">(</span>documentFromRange<span class=\"k\">(</span>range<span class=\"k\">)).</span>focus<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>applied<span class=\"k\">)</span>","                self<span class=\"k\">.</span>releaseRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> dialog <span class=\"k\">=</span> $t<span class=\"k\">.</span>window<span class=\"k\">.</span>create<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>editor<span class=\"k\">.</span>dialogOptions<span class=\"k\">,</span> <span class=\"k\">{</span>","            title<span class=\"k\">:</span> <span class=\"s\">\"Insert image\"</span><span class=\"k\">,</span>","            html<span class=\"k\">:</span> <span class=\"k\">new</span> $<span class=\"k\">.</span>telerik<span class=\"k\">.</span>stringBuilder<span class=\"k\">()</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-editor-dialog\"&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;ol&gt;'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-text-row\"&gt;&lt;label for=\"t-editor-image-url\"&gt;Web address&lt;/label&gt;&lt;input type=\"text\" id=\"t-editor-image-url\"/&gt;&lt;/li&gt;'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-form-text-row\"&gt;&lt;label for=\"t-editor-image-title\"&gt;Tooltip&lt;/label&gt;&lt;input type=\"text\" id=\"t-editor-image-title\"/&gt;&lt;/li&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/ol&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-button-wrapper\"&gt;'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;button class=\"t-dialog-insert t-button t-state-default\"&gt;Insert&lt;/button&gt;'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&amp;nbsp;or&amp;nbsp;'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;a href=\"#\" class=\"t-dialog-close t-link\"&gt;Close&lt;/a&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>string<span class=\"k\">(),</span>","            onClose<span class=\"k\">:</span> close","        <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>hide<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-dialog-insert'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>apply<span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-dialog-close'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>close<span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-form-text-row input'</span><span class=\"k\">).</span>keydown<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">13</span><span class=\"k\">)</span>","                    apply<span class=\"k\">(</span>e<span class=\"k\">);</span>","                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">27</span><span class=\"k\">)</span>","                    close<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-button'</span><span class=\"k\">,</span> <span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>buttonHover<span class=\"k\">)</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-button'</span><span class=\"k\">,</span> <span class=\"s\">'mouseleave'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>buttonLeave<span class=\"k\">)</span>","        <span class=\"c\">// IE &lt; 8 returns absolute url if getAttribute is not used</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-image-url'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>img <span class=\"k\">?</span> img<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">'http://'</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#t-editor-image-title'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>img <span class=\"k\">?</span> img<span class=\"k\">.</span>alt <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>show<span class=\"k\">()</span>","            <span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tWindow'</span><span class=\"k\">).</span>center<span class=\"k\">();</span>","","        $<span class=\"k\">(</span><span class=\"s\">'#t-editor-image-url'</span><span class=\"k\">,</span> dialog<span class=\"k\">.</span>element<span class=\"k\">).</span>focus<span class=\"k\">().</span>select<span class=\"k\">();</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"c\">/* select box */</span>","","$t<span class=\"k\">.</span>selectbox <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> selectedValue<span class=\"k\">;</span>","    <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">var</span> $text <span class=\"k\">=</span> $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input'</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> dropDown <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dropDown <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>dropDown<span class=\"k\">(</span><span class=\"k\">{</span>","        effects<span class=\"k\">:</span> $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>slide<span class=\"k\">.</span>defaults<span class=\"k\">(),</span>","        onItemCreate<span class=\"k\">:</span> options<span class=\"k\">.</span>onItemCreate<span class=\"k\">,</span>","        onClick<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            select<span class=\"k\">(</span>options<span class=\"k\">.</span>data<span class=\"k\">[</span>$<span class=\"k\">(</span>e<span class=\"k\">.</span>item<span class=\"k\">).</span>index<span class=\"k\">()].</span>Value<span class=\"k\">);</span>","            options<span class=\"k\">.</span>onChange<span class=\"k\">(</span><span class=\"k\">{</span> value<span class=\"k\">:</span> selectedValue <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> fill<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>dropDown<span class=\"k\">.</span>$items<span class=\"k\">)</span>","            dropDown<span class=\"k\">.</span>dataBind<span class=\"k\">(</span>options<span class=\"k\">.</span>data<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> text<span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        $text<span class=\"k\">.</span>html<span class=\"k\">(</span>value <span class=\"k\">?</span> value <span class=\"k\">:</span> <span class=\"s\">'&amp;nbsp;'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> select<span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","        fill<span class=\"k\">();</span>","        <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> options<span class=\"k\">.</span>data<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>data<span class=\"k\">[</span>i<span class=\"k\">].</span>Value <span class=\"k\">==</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                index <span class=\"k\">=</span> i<span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>index <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","            dropDown<span class=\"k\">.</span>$items","                    <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-selected'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>eq<span class=\"k\">(</span>index<span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-selected'</span><span class=\"k\">);</span>","","            text<span class=\"k\">(</span>$<span class=\"k\">(</span>dropDown<span class=\"k\">.</span>$items<span class=\"k\">[</span>index<span class=\"k\">]).</span>text<span class=\"k\">());</span>","            selectedValue <span class=\"k\">=</span> options<span class=\"k\">.</span>data<span class=\"k\">[</span>index<span class=\"k\">].</span>Value<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        select<span class=\"k\">(</span>value<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>selectedValue <span class=\"k\">!=</span> value<span class=\"k\">)</span>","            text<span class=\"k\">(</span>options<span class=\"k\">.</span>title <span class=\"k\">||</span> value<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>close <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        dropDown<span class=\"k\">.</span>close<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    text<span class=\"k\">(</span>options<span class=\"k\">.</span>title <span class=\"k\">||</span> $text<span class=\"k\">.</span>text<span class=\"k\">());</span>","","    $element<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        fill<span class=\"k\">();</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>dropDown<span class=\"k\">.</span>isOpened<span class=\"k\">())</span>","            dropDown<span class=\"k\">.</span>close<span class=\"k\">();</span>","        <span class=\"k\">else</span>","            dropDown<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"k\">{</span>","                offset<span class=\"k\">:</span> $element<span class=\"k\">.</span>offset<span class=\"k\">(),</span>","                outerHeight<span class=\"k\">:</span> $element<span class=\"k\">.</span>outerHeight<span class=\"k\">(),</span>","                outerWidth<span class=\"k\">:</span> $element<span class=\"k\">.</span>outerWidth<span class=\"k\">(),</span>","                zIndex<span class=\"k\">:</span> $t<span class=\"k\">.</span>getElementZIndex<span class=\"k\">(</span>$element<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'unselectable'</span><span class=\"k\">,</span> <span class=\"s\">'on'</span><span class=\"k\">);</span>","","    dropDown<span class=\"k\">.</span>$element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'direction'</span><span class=\"k\">,</span> $element<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-rtl'</span><span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'rtl'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","    $<span class=\"k\">(</span>document<span class=\"k\">.</span>documentElement<span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> $dropDown <span class=\"k\">=</span> dropDown<span class=\"k\">.</span>$element<span class=\"k\">;</span>","        <span class=\"k\">var</span> isDropDown <span class=\"k\">=</span> $dropDown <span class=\"k\">&amp;&amp;</span> $dropDown<span class=\"k\">.</span>parent<span class=\"k\">().</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isDropDown <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>$<span class=\"k\">.</span>contains<span class=\"k\">(</span>element<span class=\"k\">,</span> e<span class=\"k\">.</span>target<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>$<span class=\"k\">.</span>contains<span class=\"k\">(</span>$dropDown<span class=\"k\">.</span>parent<span class=\"k\">()[</span><span class=\"s\">0</span><span class=\"k\">],</span> e<span class=\"k\">.</span>target<span class=\"k\">))</span> <span class=\"k\">{</span>","            dropDown<span class=\"k\">.</span>close<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","<span class=\"k\">}</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tSelectBox <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> $t<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'tSelectBox'</span><span class=\"k\">,</span>","        init<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>selectbox<span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        options<span class=\"k\">:</span> options","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tSelectBox<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">{</span>","    effects<span class=\"k\">:</span> $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tDropDownList<span class=\"k\">.</span>defaults<span class=\"k\">.</span>effects","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/* color picker */</span>","","$t<span class=\"k\">.</span>colorpicker <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">;</span>","    <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    $element<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>click<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'unselectable'</span><span class=\"k\">,</span> <span class=\"s\">'on'</span><span class=\"k\">);</span>","    ","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>selectedColor<span class=\"k\">)</span>","        $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-selected-color'</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'background-color'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>selectedColor<span class=\"k\">);</span>","","    $<span class=\"k\">(</span>element<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>documentElement<span class=\"k\">)</span>","        <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-colorpicker-popup'</span><span class=\"k\">).</span>length<span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>close<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","    $t<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        change<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onChange<span class=\"k\">,</span>","        load<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onLoad","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","$t<span class=\"k\">.</span>colorpicker<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    select<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","            color <span class=\"k\">=</span> dom<span class=\"k\">.</span>toHex<span class=\"k\">(</span>color<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'change'</span><span class=\"k\">,</span> <span class=\"k\">{</span> value<span class=\"k\">:</span> color <span class=\"k\">}</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">(</span>color<span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>close<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span>","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'change'</span><span class=\"k\">,</span> <span class=\"k\">{</span> value<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>selectedColor <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    open<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> $popup <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>popup<span class=\"k\">();</span>","        <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">);</span>","","        <span class=\"k\">var</span> elementPosition <span class=\"k\">=</span> $element<span class=\"k\">.</span>offset<span class=\"k\">();</span>","        elementPosition<span class=\"k\">.</span>top <span class=\"k\">+=</span> $element<span class=\"k\">.</span>outerHeight<span class=\"k\">();</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>$element<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-rtl'</span><span class=\"k\">).</span>length<span class=\"k\">)</span>","            elementPosition<span class=\"k\">.</span>left <span class=\"k\">-=</span> $popup<span class=\"k\">.</span>outerWidth<span class=\"k\">()</span> <span class=\"k\">-</span> $element<span class=\"k\">.</span>outerWidth<span class=\"k\">();</span>","","        <span class=\"k\">var</span> zIndex <span class=\"k\">=</span> <span class=\"s\">'auto'</span><span class=\"k\">;</span>","","        $element<span class=\"k\">.</span>parents<span class=\"k\">().</span>andSelf<span class=\"k\">().</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            zIndex <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'zIndex'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>Number<span class=\"k\">(</span>zIndex<span class=\"k\">))</span> <span class=\"k\">{</span>","                zIndex <span class=\"k\">=</span> Number<span class=\"k\">(</span>zIndex<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>_wrap<span class=\"k\">(</span>$popup<span class=\"k\">).</span>css<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","            position<span class=\"k\">:</span> <span class=\"s\">'absolute'</span><span class=\"k\">,</span>","            zIndex<span class=\"k\">:</span> zIndex","        <span class=\"k\">}</span><span class=\"k\">,</span> elementPosition<span class=\"k\">));</span>","        ","        $popup","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-item'</span><span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> color <span class=\"k\">=</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">,</span> e<span class=\"k\">.</span>target<span class=\"k\">.</span>ownerDocument<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'background-color'</span><span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>select<span class=\"k\">(</span>color<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","        <span class=\"c\">// animate</span>","        $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>play<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>effects<span class=\"k\">,</span> $popup<span class=\"k\">,</span> <span class=\"k\">{</span> direction<span class=\"k\">:</span> <span class=\"s\">'bottom'</span> <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    close<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","        $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>rewind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>effects<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">,</span> <span class=\"k\">{</span> direction<span class=\"k\">:</span> <span class=\"s\">'bottom'</span> <span class=\"k\">}</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>parentNode<span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>$popup <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    toggle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>$popup <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':visible'</span><span class=\"k\">))</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>open<span class=\"k\">();</span>","        <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>close<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    click<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-tool-icon'</span><span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>select<span class=\"k\">();</span>","        <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>toggle<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    value<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>color<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>color<span class=\"k\">)</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>selectedColor<span class=\"k\">;</span>","","        color <span class=\"k\">=</span> dom<span class=\"k\">.</span>toHex<span class=\"k\">(</span>color<span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>selectedColor <span class=\"k\">=</span> color<span class=\"k\">;</span>","","        $<span class=\"k\">(</span><span class=\"s\">'.t-selected-color'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">)</span>","            <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'background-color'</span><span class=\"k\">,</span> color<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    popup<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>$popup <span class=\"k\">=</span> $<span class=\"k\">(</span>$t<span class=\"k\">.</span>colorpicker<span class=\"k\">.</span>buildPopup<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">))</span>","                    <span class=\"k\">.</span>hide<span class=\"k\">()</span>","                    <span class=\"k\">.</span>appendTo<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">)</span>","                    <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'unselectable'</span><span class=\"k\">,</span> <span class=\"s\">'on'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>end<span class=\"k\">();</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>$popup<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","$<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>colorpicker<span class=\"k\">,</span> <span class=\"k\">{</span>","    buildPopup<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>component<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","        html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-popup t-group t-colorpicker-popup\"&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;ul class=\"t-reset\"&gt;'</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> data <span class=\"k\">=</span> component<span class=\"k\">.</span>data<span class=\"k\">;</span>","        <span class=\"k\">var</span> currentColor <span class=\"k\">=</span> <span class=\"k\">(</span>component<span class=\"k\">.</span>value<span class=\"k\">()</span> <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">).</span>substring<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> data<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-item'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">' t-selected'</span><span class=\"k\">,</span> data<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">==</span> currentColor<span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'\" style=\"background-color:#'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span>data<span class=\"k\">[</span>i<span class=\"k\">])</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'\"&gt;&lt;/li&gt;'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/ul&gt;&lt;/div&gt;'</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> html<span class=\"k\">.</span>string<span class=\"k\">();</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tColorPicker <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> $t<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'tColorPicker'</span><span class=\"k\">,</span>","        init<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>colorpicker<span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        options<span class=\"k\">:</span> options","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tColorPicker<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">{</span>","    data<span class=\"k\">:</span> <span class=\"s\">'000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7'</span><span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">),</span>","    selectedColor<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","    effects<span class=\"k\">:</span> $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tDropDownList<span class=\"k\">.</span>defaults<span class=\"k\">.</span>effects","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> IndentFormatter<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span>tags<span class=\"k\">:</span>blockElements<span class=\"k\">}</span><span class=\"k\">]);</span>","    ","    <span class=\"k\">function</span> margin<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> node<span class=\"k\">.</span>style<span class=\"k\">.</span>marginLeft <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>apply <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNodes <span class=\"k\">=</span> finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>formatNodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> targets <span class=\"k\">=</span> <span class=\"k\">[];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> formatNodes<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">++)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"s\">'li'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">]).</span>index<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                        targets<span class=\"k\">.</span>push<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">].</span>parentNode<span class=\"k\">);</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">].</span>parentNode<span class=\"k\">,</span> targets<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                        targets<span class=\"k\">.</span>push<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">else</span>","                    targets<span class=\"k\">.</span>push<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            ","            <span class=\"k\">while</span> <span class=\"k\">(</span>targets<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> formatNode <span class=\"k\">=</span> targets<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> parentList <span class=\"k\">=</span> formatNode<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                    <span class=\"k\">var</span> $sibling <span class=\"k\">=</span> $<span class=\"k\">(</span>formatNode<span class=\"k\">).</span>prev<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","                    <span class=\"k\">var</span> nestedList <span class=\"k\">=</span> $sibling<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'&gt;ul'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    ","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>nestedList<span class=\"k\">)</span> <span class=\"k\">{</span>","                        nestedList <span class=\"k\">=</span> dom<span class=\"k\">.</span>create<span class=\"k\">(</span>formatNode<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> dom<span class=\"k\">.</span>name<span class=\"k\">(</span>parentList<span class=\"k\">));</span>","                        $sibling<span class=\"k\">.</span>append<span class=\"k\">(</span>nestedList<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    ","                    <span class=\"k\">while</span> <span class=\"k\">(</span>formatNode <span class=\"k\">&amp;&amp;</span> formatNode<span class=\"k\">.</span>parentNode <span class=\"k\">==</span> parentList<span class=\"k\">)</span> <span class=\"k\">{</span>","                        nestedList<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>formatNode<span class=\"k\">);</span>","                        formatNode <span class=\"k\">=</span> targets<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> marginLeft <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>margin<span class=\"k\">(</span>formatNode<span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">30</span><span class=\"k\">;</span>","                    dom<span class=\"k\">.</span>style<span class=\"k\">(</span>formatNode<span class=\"k\">,</span> <span class=\"k\">{</span>marginLeft<span class=\"k\">:</span>marginLeft<span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> formatter <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatter<span class=\"k\">([</span><span class=\"k\">{</span>tags<span class=\"k\">:</span>blockElements<span class=\"k\">}</span><span class=\"k\">],</span> <span class=\"k\">{</span>style<span class=\"k\">:</span><span class=\"k\">{</span>marginLeft<span class=\"k\">:</span><span class=\"s\">30</span><span class=\"k\">}}</span><span class=\"k\">);</span>","","            formatter<span class=\"k\">.</span>apply<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formatNodes <span class=\"k\">=</span> finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> formatNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $formatNode <span class=\"k\">=</span> $<span class=\"k\">(</span>formatNodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            ","            <span class=\"k\">if</span> <span class=\"k\">(</span>$formatNode<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> $list <span class=\"k\">=</span> $formatNode<span class=\"k\">.</span>parent<span class=\"k\">();</span>","                <span class=\"k\">var</span> $listParent <span class=\"k\">=</span> $list<span class=\"k\">.</span>parent<span class=\"k\">();</span>","                        ","                <span class=\"k\">if</span> <span class=\"k\">(</span>$listParent<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>margin<span class=\"k\">(</span>$list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> $siblings <span class=\"k\">=</span> $formatNode<span class=\"k\">.</span>nextAll<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>$siblings<span class=\"k\">.</span>length<span class=\"k\">)</span>","                        $<span class=\"k\">(</span>$list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cloneNode<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">)).</span>appendTo<span class=\"k\">(</span>$formatNode<span class=\"k\">).</span>append<span class=\"k\">(</span>$siblings<span class=\"k\">);</span>","                                        ","                    $formatNode<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>$listParent<span class=\"k\">);</span>","                    ","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>$list<span class=\"k\">.</span>children<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">).</span>length<span class=\"k\">)</span>","                        $list<span class=\"k\">.</span>remove<span class=\"k\">();</span>","                        ","                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    $formatNode <span class=\"k\">=</span> $list<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","                ","            <span class=\"k\">var</span> marginLeft <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>margin<span class=\"k\">(</span>$formatNode<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">-</span> <span class=\"s\">30</span><span class=\"k\">;</span>","            dom<span class=\"k\">[</span>marginLeft <span class=\"k\">&lt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'unstyle'</span> <span class=\"k\">:</span> <span class=\"s\">'style'</span><span class=\"k\">](</span>$formatNode<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">{</span>marginLeft<span class=\"k\">:</span> marginLeft<span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> IndentCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options<span class=\"k\">.</span>formatter <span class=\"k\">=</span> <span class=\"k\">{</span>","        toggle <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">new</span> IndentFormatter<span class=\"k\">().</span>apply<span class=\"k\">(</span>RangeUtils<span class=\"k\">.</span>nodes<span class=\"k\">(</span>range<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> OutdentCommand<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    options<span class=\"k\">.</span>formatter <span class=\"k\">=</span> <span class=\"k\">{</span>","        toggle <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">new</span> IndentFormatter<span class=\"k\">().</span>remove<span class=\"k\">(</span>RangeUtils<span class=\"k\">.</span>nodes<span class=\"k\">(</span>range<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    Command<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> OutdentTool<span class=\"k\">()</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>command<span class=\"k\">:</span>OutdentCommand<span class=\"k\">}</span><span class=\"k\">);</span>","    ","    <span class=\"k\">var</span> finder <span class=\"k\">=</span> <span class=\"k\">new</span> BlockFormatFinder<span class=\"k\">([</span><span class=\"k\">{</span>tags<span class=\"k\">:</span>blockElements<span class=\"k\">}</span><span class=\"k\">]);</span>  ","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'unselectable'</span><span class=\"k\">,</span> <span class=\"s\">'on'</span><span class=\"k\">)</span>","           <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> suitable <span class=\"k\">=</span> finder<span class=\"k\">.</span>findSuitable<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> suitable<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">++)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dom<span class=\"k\">.</span>is<span class=\"k\">(</span>suitable<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"s\">'li'</span><span class=\"k\">)</span> <span class=\"k\">||</span> suitable<span class=\"k\">[</span>i<span class=\"k\">].</span>style<span class=\"k\">.</span>marginLeft<span class=\"k\">)</span> <span class=\"k\">{</span>","                $ui<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","    ","        $ui<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">).</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-hover'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">function</span> createContentElement<span class=\"k\">(</span>$textarea<span class=\"k\">,</span> stylesheets<span class=\"k\">)</span> <span class=\"k\">{</span>","    $textarea<span class=\"k\">.</span>hide<span class=\"k\">();</span>","    <span class=\"k\">var</span> iframe <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;iframe /&gt;'</span><span class=\"k\">,</span> <span class=\"k\">{</span> src<span class=\"k\">:</span> <span class=\"s\">'javascript:\"&lt;html&gt;&lt;/html&gt;\"'</span><span class=\"k\">,</span> frameBorder<span class=\"k\">:</span> <span class=\"s\">'0'</span><span class=\"k\">,</span> className<span class=\"k\">:</span> <span class=\"s\">'t-content'</span> <span class=\"k\">}</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'display'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>$textarea<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","    <span class=\"k\">var</span> window <span class=\"k\">=</span> iframe<span class=\"k\">.</span>contentWindow <span class=\"k\">||</span> iframe<span class=\"k\">;</span>","    <span class=\"k\">var</span> document <span class=\"k\">=</span> window<span class=\"k\">.</span>document <span class=\"k\">||</span> iframe<span class=\"k\">.</span>contentDocument<span class=\"k\">;</span>","        ","    <span class=\"c\">// &lt;img&gt;\\s+\\w+ creates invalid nodes after cut in IE</span>","    <span class=\"k\">var</span> html <span class=\"k\">=</span> $textarea<span class=\"k\">.</span>val<span class=\"k\">().</span>replace<span class=\"k\">(</span><span class=\"s\">/(&lt;\\/?img[^&gt;]*&gt;)[\\r\\n\\v\\f\\t ]+/ig</span><span class=\"k\">,</span> <span class=\"s\">'$1'</span><span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>html<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> $<span class=\"k\">.</span>browser<span class=\"k\">.</span>mozilla<span class=\"k\">)</span>","        html <span class=\"k\">=</span> <span class=\"s\">'&lt;br _moz_dirty=\"true\" /&gt;'</span><span class=\"k\">;</span>","","    document<span class=\"k\">.</span>designMode <span class=\"k\">=</span> <span class=\"s\">'On'</span><span class=\"k\">;</span>","    document<span class=\"k\">.</span>open<span class=\"k\">();</span>","    document<span class=\"k\">.</span>write<span class=\"k\">(</span>","        <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">()</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;style type=\"text/css\"&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'html,body{padding:0;margin:0;font-family:Verdana,Geneva,sans-serif;background:#fff;}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'html{font-size:100%}body{font-size:.75em;line-height:1.5em;padding-top:1px;margin-top:-1px;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'direction:rtl;'</span><span class=\"k\">,</span> $textarea<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-rtl'</span><span class=\"k\">).</span>length<span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'p{margin:1em 0;padding:0 .2em}.t-marker{display:none;}.t-paste-container{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'ul,ol{padding-left:2.5em}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'a{color:#00a}'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'code{font-size:1.23em}'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/style&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span>$<span class=\"k\">.</span>map<span class=\"k\">(</span>stylesheets<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>href<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">'&lt;link type=\"text/css\" href=\"'</span><span class=\"k\">,</span> href<span class=\"k\">,</span> <span class=\"s\">'\" rel=\"stylesheet\"/&gt;'</span><span class=\"k\">].</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span> <span class=\"k\">}</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/head&gt;&lt;body spellcheck=\"false\"&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span>html<span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/body&gt;&lt;/html&gt;'</span><span class=\"k\">)</span>","        <span class=\"k\">.</span>string<span class=\"k\">());</span>","        ","    document<span class=\"k\">.</span>close<span class=\"k\">();</span>","","    <span class=\"k\">return</span> window<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> selectionChanged<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","    $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span>editor<span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'selectionChange'</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> removePendingFormats<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>editor<span class=\"k\">.</span>pendingFormats<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","    editor<span class=\"k\">.</span>pendingFormats<span class=\"k\">.</span>reverse<span class=\"k\">();</span>","","    $<span class=\"k\">.</span>each<span class=\"k\">(</span>editor<span class=\"k\">.</span>pendingFormats<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> node <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>firstChild<span class=\"k\">;</span> node<span class=\"k\">;</span> node <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>charIndex <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeValue<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\u</span><span class=\"s\">feff'</span><span class=\"k\">))</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                node<span class=\"k\">.</span>deleteData<span class=\"k\">(</span>charIndex<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    $<span class=\"k\">.</span>each<span class=\"k\">(</span>editor<span class=\"k\">.</span>pendingFormats<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>innerHTML <span class=\"k\">==</span> <span class=\"s\">''</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>parentNode<span class=\"k\">)</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    editor<span class=\"k\">.</span>pendingFormats <span class=\"k\">=</span> <span class=\"k\">[];</span>","<span class=\"k\">}</span>","","$t<span class=\"k\">.</span>editor <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">/* suppress initialization in mobile webkit devices (w/o proper contenteditable support) */</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/Mobile.*Safari/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">))</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">;</span>","","    <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">);</span>","","    $element<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'submit'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        self<span class=\"k\">.</span>update<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    $t<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        load<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onLoad<span class=\"k\">,</span>","        selectionChange<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onSelectionChange<span class=\"k\">,</span>","        change<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onChange<span class=\"k\">,</span>","        execute<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onExecute","    <span class=\"k\">}</span><span class=\"k\">);</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>textarea <span class=\"k\">=</span> $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'textarea'</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'autocomplete'</span><span class=\"k\">,</span> <span class=\"s\">'off'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>window <span class=\"k\">=</span> createContentElement<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>textarea<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>stylesheets<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>document <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>window<span class=\"k\">.</span>contentDocument <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>window<span class=\"k\">.</span>document<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>body <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>keyboard <span class=\"k\">=</span> <span class=\"k\">new</span> Keyboard<span class=\"k\">([</span><span class=\"k\">new</span> TypingHandler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span> <span class=\"k\">new</span> SystemHandler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)]);</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>clipboard <span class=\"k\">=</span> <span class=\"k\">new</span> Clipboard<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>pendingFormats <span class=\"k\">=</span> <span class=\"k\">[];</span>","        ","    <span class=\"k\">this</span><span class=\"k\">.</span>undoRedoStack <span class=\"k\">=</span> <span class=\"k\">new</span> UndoRedoStack<span class=\"k\">();</span>","","    <span class=\"k\">function</span> toolFromClassName<span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tool <span class=\"k\">=</span> $<span class=\"k\">.</span>grep<span class=\"k\">(</span>element<span class=\"k\">.</span>className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>x<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">!</span><span class=\"s\">/^t-(widget|tool-icon|state-hover|header|combobox|dropdown|selectbox|colorpicker)$/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>x<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> tool<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">?</span> tool<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">'custom'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> appendShortcutSequence<span class=\"k\">(</span>localizedText<span class=\"k\">,</span> tool<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>tool<span class=\"k\">.</span>key<span class=\"k\">)</span>","            <span class=\"k\">return</span> localizedText<span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">()</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span>localizedText<span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">' ('</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'Ctrl + '</span><span class=\"k\">,</span> tool<span class=\"k\">.</span>ctrl<span class=\"k\">)</span>","                <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'Shift + '</span><span class=\"k\">,</span> tool<span class=\"k\">.</span>shift<span class=\"k\">)</span>","                <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'Alt + '</span><span class=\"k\">,</span> tool<span class=\"k\">.</span>alt<span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span>tool<span class=\"k\">.</span>key<span class=\"k\">)</span>","            <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">')'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>string<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>window<span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'blur'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> old <span class=\"k\">=</span> self<span class=\"k\">.</span>textarea<span class=\"k\">.</span>value<span class=\"k\">;</span>","        <span class=\"k\">var</span> value <span class=\"k\">=</span> self<span class=\"k\">.</span>encodedValue<span class=\"k\">();</span>","        self<span class=\"k\">.</span>update<span class=\"k\">(</span>value<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">!=</span> old<span class=\"k\">)</span>","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span>self<span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'change'</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> toolbarItems <span class=\"k\">=</span> <span class=\"s\">'.t-editor-toolbar &gt; li &gt; *'</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> buttons <span class=\"k\">=</span> <span class=\"s\">'.t-editor-button .t-tool-icon:not(.t-state-disabled)'</span><span class=\"k\">;</span>","    $element","        <span class=\"k\">.</span>delegate<span class=\"k\">(</span>buttons<span class=\"k\">,</span> <span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>hover<span class=\"k\">)</span>","        <span class=\"k\">.</span>delegate<span class=\"k\">(</span>buttons<span class=\"k\">,</span> <span class=\"s\">'mouseleave'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>leave<span class=\"k\">)</span>","        <span class=\"k\">.</span>delegate<span class=\"k\">(</span>buttons<span class=\"k\">,</span> <span class=\"s\">'mousedown'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>preventDefault<span class=\"k\">)</span>","        <span class=\"k\">.</span>delegate<span class=\"k\">(</span>buttons<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            self<span class=\"k\">.</span>focus<span class=\"k\">();</span>","            self<span class=\"k\">.</span>exec<span class=\"k\">(</span>toolFromClassName<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">))</span>","        <span class=\"k\">.</span>find<span class=\"k\">(</span>toolbarItems<span class=\"k\">)</span>","            <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> toolName <span class=\"k\">=</span> toolFromClassName<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                    tool <span class=\"k\">=</span> self<span class=\"k\">.</span>tools<span class=\"k\">[</span>toolName<span class=\"k\">],</span>","                    description <span class=\"k\">=</span> self<span class=\"k\">.</span>localization<span class=\"k\">[</span>toolName<span class=\"k\">],</span>","                    $this <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>tool<span class=\"k\">)</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                    ","                <span class=\"k\">if</span> <span class=\"k\">(</span>toolName <span class=\"k\">==</span> <span class=\"s\">'fontSize'</span> <span class=\"k\">||</span> toolName <span class=\"k\">==</span> <span class=\"s\">'fontName'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> inheritText <span class=\"k\">=</span> self<span class=\"k\">.</span>localization<span class=\"k\">[</span>toolName <span class=\"k\">+</span> <span class=\"s\">'Inherit'</span><span class=\"k\">]</span> <span class=\"k\">||</span> localization<span class=\"k\">[</span>toolName <span class=\"k\">+</span> <span class=\"s\">'Inherit'</span><span class=\"k\">]</span>","                    self<span class=\"k\">[</span>toolName<span class=\"k\">][</span><span class=\"s\">0</span><span class=\"k\">].</span>Text <span class=\"k\">=</span> inheritText<span class=\"k\">;</span>","                    $this<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>inheritText<span class=\"k\">).</span>end<span class=\"k\">()</span>","                         <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'span.t-input'</span><span class=\"k\">).</span>text<span class=\"k\">(</span>inheritText<span class=\"k\">).</span>end<span class=\"k\">();</span>","                <span class=\"k\">}</span>","","                tool<span class=\"k\">.</span>init<span class=\"k\">(</span>$this<span class=\"k\">,</span> <span class=\"k\">{</span>","                    title<span class=\"k\">:</span> appendShortcutSequence<span class=\"k\">(</span>description<span class=\"k\">,</span> tool<span class=\"k\">),</span>","                    editor<span class=\"k\">:</span> self","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">}</span><span class=\"k\">).</span>end<span class=\"k\">()</span>","        <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'selectionChange'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> self<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            self<span class=\"k\">.</span>selectionRestorePoint <span class=\"k\">=</span> <span class=\"k\">new</span> RestorePoint<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">var</span> nodes <span class=\"k\">=</span> textNodes<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>nodes<span class=\"k\">.</span>length<span class=\"k\">)</span>","                nodes <span class=\"k\">=</span> <span class=\"k\">[</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">];</span>","","            $element<span class=\"k\">.</span>find<span class=\"k\">(</span>toolbarItems<span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> tool <span class=\"k\">=</span> self<span class=\"k\">.</span>tools<span class=\"k\">[</span>toolFromClassName<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>tool<span class=\"k\">)</span>","                        tool<span class=\"k\">.</span>update<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span> nodes<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","    $<span class=\"k\">(</span>document<span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>typingInProgress<span class=\"k\">())</span>","                    self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>endTyping<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","               <span class=\"k\">}</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'DOMNodeInserted'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>contains<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">,</span> self<span class=\"k\">.</span>element<span class=\"k\">)</span> <span class=\"k\">||</span> self<span class=\"k\">.</span>element <span class=\"k\">==</span> e<span class=\"k\">.</span>target<span class=\"k\">)</span> <span class=\"k\">{</span>","                        $<span class=\"k\">(</span>self<span class=\"k\">.</span>element<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'iframe'</span><span class=\"k\">).</span>remove<span class=\"k\">();</span>","                        self<span class=\"k\">.</span>window <span class=\"k\">=</span> createContentElement<span class=\"k\">(</span>$<span class=\"k\">(</span>self<span class=\"k\">.</span>textarea<span class=\"k\">),</span> self<span class=\"k\">.</span>stylesheets<span class=\"k\">);</span>","                        self<span class=\"k\">.</span>document <span class=\"k\">=</span> self<span class=\"k\">.</span>window<span class=\"k\">.</span>contentDocument <span class=\"k\">||</span> self<span class=\"k\">.</span>window<span class=\"k\">.</span>document<span class=\"k\">;</span>","                        self<span class=\"k\">.</span>body <span class=\"k\">=</span> self<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","               <span class=\"k\">}</span><span class=\"k\">);</span>","","    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">)</span>","        <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">{</span>","            keydown<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> toolName <span class=\"k\">=</span> self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>toolFromShortcut<span class=\"k\">(</span>self<span class=\"k\">.</span>tools<span class=\"k\">,</span> e<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>toolName<span class=\"k\">)</span> <span class=\"k\">{</span>","                    e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                    self<span class=\"k\">.</span>exec<span class=\"k\">(</span>toolName<span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>clearTimeout<span class=\"k\">();</span>","","                self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>keydown<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            keyup<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> selectionCodes <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">8</span><span class=\"k\">,</span> <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"s\">13</span><span class=\"k\">,</span> <span class=\"s\">33</span><span class=\"k\">,</span> <span class=\"s\">34</span><span class=\"k\">,</span> <span class=\"s\">35</span><span class=\"k\">,</span> <span class=\"s\">36</span><span class=\"k\">,</span> <span class=\"s\">37</span><span class=\"k\">,</span> <span class=\"s\">38</span><span class=\"k\">,</span> <span class=\"s\">39</span><span class=\"k\">,</span> <span class=\"s\">40</span><span class=\"k\">,</span> <span class=\"s\">40</span><span class=\"k\">,</span> <span class=\"s\">45</span><span class=\"k\">,</span> <span class=\"s\">46</span><span class=\"k\">];</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>e<span class=\"k\">.</span>keyCode<span class=\"k\">,</span> selectionCodes<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span>","                    selectionChanged<span class=\"k\">(</span>self<span class=\"k\">);</span>","","                self<span class=\"k\">.</span>keyboard<span class=\"k\">.</span>keyup<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            mouseup<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                selectionChanged<span class=\"k\">(</span>self<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    ","    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>body<span class=\"k\">)</span>","        <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'cut paste'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            self<span class=\"k\">.</span>clipboard<span class=\"k\">[</span><span class=\"s\">'on'</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>type<span class=\"k\">](</span>e<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","$<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>editor<span class=\"k\">,</span> <span class=\"k\">{</span>","    Dom<span class=\"k\">:</span> dom<span class=\"k\">,</span>","    RestorePoint<span class=\"k\">:</span> RestorePoint<span class=\"k\">,</span>","    Marker<span class=\"k\">:</span> Marker<span class=\"k\">,</span>","    RangeUtils<span class=\"k\">:</span> RangeUtils<span class=\"k\">,</span>","    RangeEnumerator<span class=\"k\">:</span> RangeEnumerator<span class=\"k\">,</span>","    LinkFormatter<span class=\"k\">:</span> LinkFormatter<span class=\"k\">,</span>","    LinkFormatFinder<span class=\"k\">:</span> LinkFormatFinder<span class=\"k\">,</span>","    LinkCommand<span class=\"k\">:</span> LinkCommand<span class=\"k\">,</span>","    UnlinkCommand<span class=\"k\">:</span> UnlinkCommand<span class=\"k\">,</span>","    InlineFormatter<span class=\"k\">:</span> InlineFormatter<span class=\"k\">,</span>","    GreedyInlineFormatter<span class=\"k\">:</span> GreedyInlineFormatter<span class=\"k\">,</span>","    InlineFormatFinder<span class=\"k\">:</span> InlineFormatFinder<span class=\"k\">,</span>","    GreedyInlineFormatFinder<span class=\"k\">:</span> GreedyInlineFormatFinder<span class=\"k\">,</span>","    BlockFormatter<span class=\"k\">:</span> BlockFormatter<span class=\"k\">,</span>","    GreedyBlockFormatter<span class=\"k\">:</span> GreedyBlockFormatter<span class=\"k\">,</span>","    BlockFormatFinder<span class=\"k\">:</span> BlockFormatFinder<span class=\"k\">,</span>","    FormatCommand<span class=\"k\">:</span> FormatCommand<span class=\"k\">,</span>","    IndentFormatter<span class=\"k\">:</span> IndentFormatter<span class=\"k\">,</span>","    IndentCommand<span class=\"k\">:</span> IndentCommand<span class=\"k\">,</span>","    OutdentCommand<span class=\"k\">:</span> OutdentCommand<span class=\"k\">,</span>","    ListFormatFinder<span class=\"k\">:</span> ListFormatFinder<span class=\"k\">,</span>","    ListFormatter<span class=\"k\">:</span> ListFormatter<span class=\"k\">,</span>","    ListCommand<span class=\"k\">:</span> ListCommand<span class=\"k\">,</span>","    ParagraphCommand<span class=\"k\">:</span> ParagraphCommand<span class=\"k\">,</span>","    NewLineCommand<span class=\"k\">:</span> NewLineCommand<span class=\"k\">,</span>","    ImageCommand<span class=\"k\">:</span> ImageCommand<span class=\"k\">,</span>","    InsertHtmlCommand<span class=\"k\">:</span> InsertHtmlCommand<span class=\"k\">,</span>","    GenericCommand<span class=\"k\">:</span> GenericCommand<span class=\"k\">,</span>","    UndoRedoStack<span class=\"k\">:</span> UndoRedoStack<span class=\"k\">,</span>","    TypingHandler<span class=\"k\">:</span> TypingHandler<span class=\"k\">,</span>","    SystemHandler<span class=\"k\">:</span> SystemHandler<span class=\"k\">,</span>","    Keyboard<span class=\"k\">:</span> Keyboard<span class=\"k\">,</span>","    MSWordFormatCleaner<span class=\"k\">:</span> MSWordFormatCleaner","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">// public api</span>","$t<span class=\"k\">.</span>editor<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    value<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> body <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>body<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>html <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">return</span> domToXhtml<span class=\"k\">(</span>body<span class=\"k\">);</span>","","        <span class=\"c\">// Some browsers do not allow setting CDATA sections through innerHTML so we encode them as comments</span>","        html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;!\\[CDATA\\[(.*)?\\]\\]&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&lt;!--[CDATA[$1]]--&gt;'</span><span class=\"k\">);</span>","","        <span class=\"c\">// Encode script tags to avoid execution and lost content (IE)</span>","        html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;script([^&gt;]*)&gt;(.*)?&lt;\\/script&gt;/ig</span><span class=\"k\">,</span> <span class=\"s\">'&lt;telerik:script $1&gt;$2&lt;</span><span class=\"t\">\\/</span><span class=\"s\">telerik:script&gt;'</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// Internet Explorer removes comments from the beginning of the html</span>","            html <span class=\"k\">=</span> <span class=\"s\">'&lt;br/&gt;'</span> <span class=\"k\">+</span> html<span class=\"k\">;</span>","","            <span class=\"k\">var</span> originalSrc <span class=\"k\">=</span> <span class=\"s\">'originalsrc'</span><span class=\"k\">,</span>","                originalHref <span class=\"k\">=</span> <span class=\"s\">'originalhref'</span><span class=\"k\">;</span>","","            <span class=\"c\">// IE &lt; 8 makes href and src attributes absolute</span>","            html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/href\\s*=\\s*(?:'|\")?([^'\"&gt;\\s]*)(?:'|\")?/</span><span class=\"k\">,</span> originalHref <span class=\"k\">+</span> <span class=\"s\">'=\"$1\"'</span><span class=\"k\">);</span>","            html <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/src\\s*=\\s*(?:'|\")?([^'\"&gt;\\s]*)(?:'|\")?/</span><span class=\"k\">,</span> originalSrc <span class=\"k\">+</span> <span class=\"s\">'=\"$1\"'</span><span class=\"k\">);</span>","","            body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">;</span>","            dom<span class=\"k\">.</span>remove<span class=\"k\">(</span>body<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","","            $<span class=\"k\">(</span>body<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'telerik</span><span class=\"t\">\\\\</span><span class=\"s\">:script,script,link,img,a'</span><span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> node <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">[</span>originalHref<span class=\"k\">])</span> <span class=\"k\">{</span>","                    node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'href'</span><span class=\"k\">,</span> node<span class=\"k\">[</span>originalHref<span class=\"k\">]);</span>","                    node<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span>originalHref<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">[</span>originalSrc<span class=\"k\">])</span> <span class=\"k\">{</span>","                    node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">,</span> node<span class=\"k\">[</span>originalSrc<span class=\"k\">]);</span>","                    node<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span>originalSrc<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>update<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    focus<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>window<span class=\"k\">.</span>focus<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    update<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>textarea<span class=\"k\">.</span>value <span class=\"k\">=</span> value <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>encoded <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>encodedValue<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    encodedValue<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> dom<span class=\"k\">.</span>encode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">());</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    createRange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>document<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> createRange<span class=\"k\">(</span>document <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    getSelection<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> selectionFromDocument<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        ","    selectRange<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> selection <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getSelection<span class=\"k\">();</span>","        selection<span class=\"k\">.</span>removeAllRanges<span class=\"k\">();</span>","        selection<span class=\"k\">.</span>addRange<span class=\"k\">(</span>range<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    getRange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> selection <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getSelection<span class=\"k\">();</span>","        <span class=\"k\">return</span> selection<span class=\"k\">.</span>rangeCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> selection<span class=\"k\">.</span>getRangeAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>createRange<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    selectedHtml<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> domToXhtml<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">().</span>cloneContents<span class=\"k\">());</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    paste<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>clipboard<span class=\"k\">.</span>paste<span class=\"k\">(</span>html<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    exec<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> params<span class=\"k\">)</span> <span class=\"k\">{</span>","        name <span class=\"k\">=</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","        <span class=\"k\">var</span> tool <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> id <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>tools<span class=\"k\">)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>id<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","                tool <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>tools<span class=\"k\">[</span>id<span class=\"k\">];</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>tool<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">var</span> command <span class=\"k\">=</span> tool<span class=\"k\">.</span>command <span class=\"k\">?</span> tool<span class=\"k\">.</span>command<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span> range<span class=\"k\">:</span> range <span class=\"k\">}</span><span class=\"k\">,</span> params<span class=\"k\">))</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'execute'</span><span class=\"k\">,</span> <span class=\"k\">{</span> name<span class=\"k\">:</span> name<span class=\"k\">,</span> command<span class=\"k\">:</span> command <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/undo|redo/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>undoRedoStack<span class=\"k\">[</span>name<span class=\"k\">]();</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>command<span class=\"k\">.</span>managesUndoRedo<span class=\"k\">)</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>undoRedoStack<span class=\"k\">.</span>push<span class=\"k\">(</span>command<span class=\"k\">);</span>","","                command<span class=\"k\">.</span>editor <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                command<span class=\"k\">.</span>exec<span class=\"k\">();</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>command<span class=\"k\">.</span>async<span class=\"k\">)</span> <span class=\"k\">{</span>","                    command<span class=\"k\">.</span>change <span class=\"k\">=</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> selectionChanged<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            selectionChanged<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tEditor <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> $t<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'tEditor'</span><span class=\"k\">,</span>","        init<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>editor<span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        options<span class=\"k\">:</span> options","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> formats <span class=\"k\">=</span> <span class=\"k\">{</span>","    bold<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'strong'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> fontWeight<span class=\"k\">:</span> <span class=\"s\">'bold'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","","    italic<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'em'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> fontStyle<span class=\"k\">:</span> <span class=\"s\">'italic'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","","    underline<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textDecoration<span class=\"k\">:</span> <span class=\"s\">'underline'</span><span class=\"k\">}}}</span><span class=\"k\">],</span>","","    strikethrough<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'del'</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'span'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textDecoration<span class=\"k\">:</span> <span class=\"s\">'line-through'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","    ","    justifyLeft<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> blockElements<span class=\"k\">,</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textAlign<span class=\"k\">:</span> <span class=\"s\">'left'</span><span class=\"k\">}}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'img'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> <span class=\"s\">'float'</span><span class=\"k\">:</span> <span class=\"s\">'left'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","","    justifyCenter<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> blockElements<span class=\"k\">,</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textAlign<span class=\"k\">:</span> <span class=\"s\">'center'</span><span class=\"k\">}}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'img'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> display<span class=\"k\">:</span> <span class=\"s\">'block'</span><span class=\"k\">,</span> marginLeft<span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">,</span> marginRight<span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","","    justifyRight<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> blockElements<span class=\"k\">,</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textAlign<span class=\"k\">:</span> <span class=\"s\">'right'</span><span class=\"k\">}}</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'img'</span><span class=\"k\">],</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> <span class=\"s\">'float'</span><span class=\"k\">:</span> <span class=\"s\">'right'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","","    justifyFull<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> tags<span class=\"k\">:</span> blockElements<span class=\"k\">,</span> attr<span class=\"k\">:</span> <span class=\"k\">{</span> style<span class=\"k\">:</span> <span class=\"k\">{</span> textAlign<span class=\"k\">:</span> <span class=\"s\">'justify'</span><span class=\"k\">}}</span> <span class=\"k\">}</span>","    <span class=\"k\">]</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> formatByName<span class=\"k\">(</span>name<span class=\"k\">,</span> format<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> format<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>name<span class=\"k\">,</span> format<span class=\"k\">[</span>i<span class=\"k\">].</span>tags<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            <span class=\"k\">return</span> format<span class=\"k\">[</span>i<span class=\"k\">];</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> Tool<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"k\">{</span> unselectable<span class=\"k\">:</span> <span class=\"s\">'on'</span><span class=\"k\">,</span> title<span class=\"k\">:</span> options<span class=\"k\">.</span>title <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> options<span class=\"k\">.</span>command<span class=\"k\">(</span>commandArguments<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","Tool<span class=\"k\">.</span>exec <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">,</span> name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","    editor<span class=\"k\">.</span>focus<span class=\"k\">();</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>editor<span class=\"k\">.</span>selectionRestorePoint<span class=\"k\">)</span>","        editor<span class=\"k\">.</span>selectRange<span class=\"k\">(</span>editor<span class=\"k\">.</span>selectionRestorePoint<span class=\"k\">.</span>toRange<span class=\"k\">());</span>","                    ","    editor<span class=\"k\">.</span>exec<span class=\"k\">(</span>name<span class=\"k\">,</span> <span class=\"k\">{</span> value<span class=\"k\">:</span> value <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> FormatTool<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","    Tool<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>command <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>commandArguments<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> FormatCommand<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>commandArguments<span class=\"k\">,</span> <span class=\"k\">{</span>","                formatter<span class=\"k\">:</span> options<span class=\"k\">.</span>formatter","            <span class=\"k\">}</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>update <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>$ui<span class=\"k\">,</span> nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","        $ui<span class=\"k\">.</span>toggleClass<span class=\"k\">(</span><span class=\"s\">'t-state-active'</span><span class=\"k\">,</span> options<span class=\"k\">.</span>finder<span class=\"k\">.</span>isFormatted<span class=\"k\">(</span>nodes<span class=\"k\">));</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> emptyFinder <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">{</span> isFormatted<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">false</span> <span class=\"k\">}</span> <span class=\"k\">}</span> <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> localization <span class=\"k\">=</span> <span class=\"k\">{</span>","    bold<span class=\"k\">:</span> <span class=\"s\">'Bold'</span><span class=\"k\">,</span>","    italic<span class=\"k\">:</span> <span class=\"s\">'Italic'</span><span class=\"k\">,</span>","    underline<span class=\"k\">:</span> <span class=\"s\">'Underline'</span><span class=\"k\">,</span>","    strikethrough<span class=\"k\">:</span> <span class=\"s\">'Strikethrough'</span><span class=\"k\">,</span>","    justifyCenter<span class=\"k\">:</span> <span class=\"s\">'Center text'</span><span class=\"k\">,</span>","    justifyLeft<span class=\"k\">:</span> <span class=\"s\">'Align text left'</span><span class=\"k\">,</span>","    justifyRight<span class=\"k\">:</span> <span class=\"s\">'Align text right'</span><span class=\"k\">,</span>","    justifyFull<span class=\"k\">:</span> <span class=\"s\">'Justify'</span><span class=\"k\">,</span>","    insertUnorderedList<span class=\"k\">:</span> <span class=\"s\">'Insert unordered list'</span><span class=\"k\">,</span>","    insertOrderedList<span class=\"k\">:</span> <span class=\"s\">'Insert ordered list'</span><span class=\"k\">,</span>","    indent<span class=\"k\">:</span> <span class=\"s\">'Indent'</span><span class=\"k\">,</span>","    outdent<span class=\"k\">:</span> <span class=\"s\">'Outdent'</span><span class=\"k\">,</span>","    createLink<span class=\"k\">:</span> <span class=\"s\">'Insert hyperlink'</span><span class=\"k\">,</span>","    unlink<span class=\"k\">:</span> <span class=\"s\">'Remove hyperlink'</span><span class=\"k\">,</span>","    insertImage<span class=\"k\">:</span> <span class=\"s\">'Insert image'</span><span class=\"k\">,</span>","    insertHtml<span class=\"k\">:</span> <span class=\"s\">'Insert HTML'</span><span class=\"k\">,</span>","    fontName<span class=\"k\">:</span> <span class=\"s\">'Select font family'</span><span class=\"k\">,</span>","    fontNameInherit<span class=\"k\">:</span> <span class=\"s\">'(inherited font)'</span><span class=\"k\">,</span>","    fontSize<span class=\"k\">:</span> <span class=\"s\">'Select font size'</span><span class=\"k\">,</span>","    fontSizeInherit<span class=\"k\">:</span> <span class=\"s\">'(inherited size)'</span><span class=\"k\">,</span>","    formatBlock<span class=\"k\">:</span> <span class=\"s\">'Format'</span><span class=\"k\">,</span>","    style<span class=\"k\">:</span> <span class=\"s\">'Styles'</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","$<span class=\"k\">.</span>fn<span class=\"k\">.</span>tEditor<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">{</span>","    localization<span class=\"k\">:</span> localization<span class=\"k\">,</span>","    formats<span class=\"k\">:</span> formats<span class=\"k\">,</span>","    encoded<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","    stylesheets<span class=\"k\">:</span> <span class=\"k\">[],</span>","    dialogOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","        modal<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> resizable<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> draggable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        effects<span class=\"k\">:</span> <span class=\"k\">{</span>list<span class=\"k\">:[</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">'toggle'</span><span class=\"k\">}</span><span class=\"k\">]</span><span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    fontName<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> localization<span class=\"k\">.</span>fontNameInherit<span class=\"k\">,</span>  Value<span class=\"k\">:</span> <span class=\"s\">'inherit'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Arial'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"Arial,Helvetica,sans-serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Courier New'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"'Courier New',Courier,monospace\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Georgia'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"Georgia,serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Impact'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"Impact,Charcoal,sans-serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Lucida Console'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"'Lucida Console',Monaco,monospace\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Tahoma'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"Tahoma,Geneva,sans-serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Times New Roman'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"'Times New Roman',Times,serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Trebuchet MS'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"'Trebuchet MS',Helvetica,sans-serif\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Verdana'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">\"Verdana,Geneva,sans-serif\"</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","    fontSize<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> localization<span class=\"k\">.</span>fontSizeInherit<span class=\"k\">,</span>  Value<span class=\"k\">:</span> <span class=\"s\">'inherit'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'1 (8pt)'</span><span class=\"k\">,</span>  Value<span class=\"k\">:</span> <span class=\"s\">'xx-small'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'2 (10pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'x-small'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'3 (12pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'small'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'4 (14pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'medium'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'5 (18pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'large'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'6 (24pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'x-large'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'7 (36pt)'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'xx-large'</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","    formatBlock<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Paragraph'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'p'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Quotation'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'blockquote'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 1'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h1'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 2'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h2'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 3'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h3'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 4'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h4'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 5'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h5'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> Text<span class=\"k\">:</span> <span class=\"s\">'Heading 6'</span><span class=\"k\">,</span> Value<span class=\"k\">:</span> <span class=\"s\">'h6'</span> <span class=\"k\">}</span>","    <span class=\"k\">],</span>","    tools<span class=\"k\">:</span> <span class=\"k\">{</span>","        bold<span class=\"k\">:</span> <span class=\"k\">new</span> InlineFormatTool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'B'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> format<span class=\"k\">:</span> formats<span class=\"k\">.</span>bold<span class=\"k\">}</span><span class=\"k\">),</span>","        italic<span class=\"k\">:</span> <span class=\"k\">new</span> InlineFormatTool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'I'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> format<span class=\"k\">:</span> formats<span class=\"k\">.</span>italic<span class=\"k\">}</span><span class=\"k\">),</span>","        underline<span class=\"k\">:</span> <span class=\"k\">new</span> InlineFormatTool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'U'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> format<span class=\"k\">:</span> formats<span class=\"k\">.</span>underline<span class=\"k\">}</span><span class=\"k\">),</span>","        strikethrough<span class=\"k\">:</span> <span class=\"k\">new</span> InlineFormatTool<span class=\"k\">(</span><span class=\"k\">{</span>format<span class=\"k\">:</span> formats<span class=\"k\">.</span>strikethrough<span class=\"k\">}</span><span class=\"k\">),</span>","        undo<span class=\"k\">:</span> <span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'Z'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        redo<span class=\"k\">:</span> <span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'Y'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        insertLineBreak<span class=\"k\">:</span> <span class=\"k\">new</span> Tool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">13</span><span class=\"k\">,</span> shift<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> command<span class=\"k\">:</span> NewLineCommand <span class=\"k\">}</span><span class=\"k\">),</span>","        insertParagraph<span class=\"k\">:</span> <span class=\"k\">new</span> Tool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">13</span><span class=\"k\">,</span> command<span class=\"k\">:</span> ParagraphCommand <span class=\"k\">}</span><span class=\"k\">),</span>","        justifyCenter<span class=\"k\">:</span> <span class=\"k\">new</span> BlockFormatTool<span class=\"k\">(</span><span class=\"k\">{</span>format<span class=\"k\">:</span> formats<span class=\"k\">.</span>justifyCenter<span class=\"k\">}</span><span class=\"k\">),</span>","        justifyLeft<span class=\"k\">:</span> <span class=\"k\">new</span> BlockFormatTool<span class=\"k\">(</span><span class=\"k\">{</span>format<span class=\"k\">:</span> formats<span class=\"k\">.</span>justifyLeft<span class=\"k\">}</span><span class=\"k\">),</span>","        justifyRight<span class=\"k\">:</span> <span class=\"k\">new</span> BlockFormatTool<span class=\"k\">(</span><span class=\"k\">{</span>format<span class=\"k\">:</span> formats<span class=\"k\">.</span>justifyRight<span class=\"k\">}</span><span class=\"k\">),</span>","        justifyFull<span class=\"k\">:</span> <span class=\"k\">new</span> BlockFormatTool<span class=\"k\">(</span><span class=\"k\">{</span>format<span class=\"k\">:</span> formats<span class=\"k\">.</span>justifyFull<span class=\"k\">}</span><span class=\"k\">),</span>","        insertUnorderedList<span class=\"k\">:</span> <span class=\"k\">new</span> ListTool<span class=\"k\">(</span><span class=\"k\">{</span>tag<span class=\"k\">:</span><span class=\"s\">'ul'</span><span class=\"k\">}</span><span class=\"k\">),</span>","        insertOrderedList<span class=\"k\">:</span> <span class=\"k\">new</span> ListTool<span class=\"k\">(</span><span class=\"k\">{</span>tag<span class=\"k\">:</span><span class=\"s\">'ol'</span><span class=\"k\">}</span><span class=\"k\">),</span>","        createLink<span class=\"k\">:</span> <span class=\"k\">new</span> Tool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'K'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> command<span class=\"k\">:</span> LinkCommand<span class=\"k\">}</span><span class=\"k\">),</span>","        unlink<span class=\"k\">:</span> <span class=\"k\">new</span> UnlinkTool<span class=\"k\">(</span><span class=\"k\">{</span> key<span class=\"k\">:</span> <span class=\"s\">'K'</span><span class=\"k\">,</span> ctrl<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> shift<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">),</span>","        insertImage<span class=\"k\">:</span> <span class=\"k\">new</span> Tool<span class=\"k\">(</span><span class=\"k\">{</span> command<span class=\"k\">:</span> ImageCommand <span class=\"k\">}</span><span class=\"k\">),</span>","        indent<span class=\"k\">:</span> <span class=\"k\">new</span> Tool<span class=\"k\">(</span><span class=\"k\">{</span> command<span class=\"k\">:</span> IndentCommand <span class=\"k\">}</span><span class=\"k\">),</span>","        outdent<span class=\"k\">:</span> <span class=\"k\">new</span> OutdentTool<span class=\"k\">(),</span>","        insertHtml<span class=\"k\">:</span> <span class=\"k\">new</span> InsertHtmlTool<span class=\"k\">(),</span>","        style<span class=\"k\">:</span> <span class=\"k\">new</span> StyleTool<span class=\"k\">(),</span>","        fontName<span class=\"k\">:</span> <span class=\"k\">new</span> FontTool<span class=\"k\">(</span><span class=\"k\">{</span>cssAttr<span class=\"k\">:</span><span class=\"s\">'font-family'</span><span class=\"k\">,</span> domAttr<span class=\"k\">:</span> <span class=\"s\">'fontFamily'</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">'fontName'</span><span class=\"k\">}</span><span class=\"k\">),</span>","        fontSize<span class=\"k\">:</span> <span class=\"k\">new</span> FontTool<span class=\"k\">(</span><span class=\"k\">{</span>cssAttr<span class=\"k\">:</span><span class=\"s\">'font-size'</span><span class=\"k\">,</span> domAttr<span class=\"k\">:</span><span class=\"s\">'fontSize'</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">'fontSize'</span><span class=\"k\">}</span><span class=\"k\">),</span>","        formatBlock<span class=\"k\">:</span> <span class=\"k\">new</span> FormatBlockTool<span class=\"k\">(),</span>","        foreColor<span class=\"k\">:</span> <span class=\"k\">new</span> ColorTool<span class=\"k\">(</span><span class=\"k\">{</span>cssAttr<span class=\"k\">:</span><span class=\"s\">'color'</span><span class=\"k\">,</span> domAttr<span class=\"k\">:</span><span class=\"s\">'color'</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">'foreColor'</span><span class=\"k\">}</span><span class=\"k\">),</span>","        backColor<span class=\"k\">:</span> <span class=\"k\">new</span> ColorTool<span class=\"k\">(</span><span class=\"k\">{</span>cssAttr<span class=\"k\">:</span><span class=\"s\">'background-color'</span><span class=\"k\">,</span> domAttr<span class=\"k\">:</span> <span class=\"s\">'backgroundColor'</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">'backColor'</span><span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)(</span>jQuery<span class=\"k\">);</span>"];
_$jscoverage['telerik.editor.js'][1]++;
(function ($) {
  _$jscoverage['telerik.editor.js'][4]++;
  var $t = $.telerik;
  _$jscoverage['telerik.editor.js'][6]++;
  function makeMap(items) {
    _$jscoverage['telerik.editor.js'][7]++;
    var obj = {};
    _$jscoverage['telerik.editor.js'][9]++;
    for (var i = 0; (i < items.length); (i++)) {
      _$jscoverage['telerik.editor.js'][10]++;
      obj[items[i]] = true;
}
    _$jscoverage['telerik.editor.js'][12]++;
    return obj;
}
  _$jscoverage['telerik.editor.js'][15]++;
  var empty = makeMap("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed".split(","));
  _$jscoverage['telerik.editor.js'][16]++;
  var blockElements = "div,p,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,pre,script,table,tbody,td,tfoot,th,thead,tr,ul".split(",");
  _$jscoverage['telerik.editor.js'][17]++;
  var block = makeMap(blockElements);
  _$jscoverage['telerik.editor.js'][18]++;
  var inline = makeMap("a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var".split(","));
  _$jscoverage['telerik.editor.js'][19]++;
  var fillAttrs = makeMap("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected".split(","));
  _$jscoverage['telerik.editor.js'][21]++;
  function normalize(node) {
    _$jscoverage['telerik.editor.js'][22]++;
    if ((node.nodeType == 1)) {
      _$jscoverage['telerik.editor.js'][23]++;
      node.normalize();
    }
}
  _$jscoverage['telerik.editor.js'][26]++;
  function findNodeIndex(node) {
    _$jscoverage['telerik.editor.js'][27]++;
    var i = 0;
    _$jscoverage['telerik.editor.js'][28]++;
    while ((node = node.previousSibling)) {
      _$jscoverage['telerik.editor.js'][28]++;
      (i++);
}
    _$jscoverage['telerik.editor.js'][29]++;
    return i;
}
  _$jscoverage['telerik.editor.js'][32]++;
  function isDataNode(node) {
    _$jscoverage['telerik.editor.js'][33]++;
    return (node && (node.nodeValue !== null) && (node.data !== null));
}
  _$jscoverage['telerik.editor.js'][36]++;
  function isAncestorOf(parent, node) {
    _$jscoverage['telerik.editor.js'][37]++;
    try {
      _$jscoverage['telerik.editor.js'][38]++;
      return ((! isDataNode(parent)) && ($.contains(parent, (isDataNode(node)? node.parentNode: node)) || (node.parentNode == parent)));
    }
    catch (e) {
      _$jscoverage['telerik.editor.js'][40]++;
      return false;
    }
}
  _$jscoverage['telerik.editor.js'][44]++;
  function isAncestorOrSelf(root, node) {
    _$jscoverage['telerik.editor.js'][45]++;
    return (isAncestorOf(root, node) || (root == node));
}
  _$jscoverage['telerik.editor.js'][48]++;
  function findClosestAncestor(root, node) {
    _$jscoverage['telerik.editor.js'][49]++;
    if (isAncestorOf(root, node)) {
      _$jscoverage['telerik.editor.js'][50]++;
      while ((node && (node.parentNode != root))) {
        _$jscoverage['telerik.editor.js'][51]++;
        node = node.parentNode;
}
    }
    _$jscoverage['telerik.editor.js'][53]++;
    return node;
}
  _$jscoverage['telerik.editor.js'][56]++;
  function getNodeLength(node) {
    _$jscoverage['telerik.editor.js'][57]++;
    return (isDataNode(node)? node.length: node.childNodes.length);
}
  _$jscoverage['telerik.editor.js'][60]++;
  function splitDataNode(node, offset) {
    _$jscoverage['telerik.editor.js'][61]++;
    var newNode = node.cloneNode(false);
    _$jscoverage['telerik.editor.js'][62]++;
    node.deleteData(offset, node.length);
    _$jscoverage['telerik.editor.js'][63]++;
    newNode.deleteData(0, offset);
    _$jscoverage['telerik.editor.js'][64]++;
    dom.insertAfter(newNode, node);
}
  _$jscoverage['telerik.editor.js'][67]++;
  function attrEquals(node, attributes) {
    _$jscoverage['telerik.editor.js'][68]++;
    for (var key in attributes) {
      _$jscoverage['telerik.editor.js'][69]++;
      var value = node[key];
      _$jscoverage['telerik.editor.js'][71]++;
      if ((key == "float")) {
        _$jscoverage['telerik.editor.js'][72]++;
        value = node[($.support.cssFloat? "cssFloat": "styleFloat")];
      }
      _$jscoverage['telerik.editor.js'][74]++;
      if (((typeof value) == "object")) {
        _$jscoverage['telerik.editor.js'][75]++;
        if ((! attrEquals(value, attributes[key]))) {
          _$jscoverage['telerik.editor.js'][76]++;
          return false;
        }
      }
      else {
        _$jscoverage['telerik.editor.js'][77]++;
        if ((value != attributes[key])) {
          _$jscoverage['telerik.editor.js'][78]++;
          return false;
        }
      }
}
    _$jscoverage['telerik.editor.js'][81]++;
    return true;
}
  _$jscoverage['telerik.editor.js'][84]++;
  var whitespace = /^\s+$/;
  _$jscoverage['telerik.editor.js'][85]++;
  var rgb = /rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/i;
  _$jscoverage['telerik.editor.js'][86]++;
  var cssAttributes = "color,padding-left,padding-right,padding-top,padding-bottom,background-color,background-attachment,background-image,background-position,background-repeat,border-top-style,border-top-width,border-top-color,border-bottom-style,border-bottom-width,border-bottom-color,border-left-style,border-left-width,border-left-color,border-right-style,border-right-width,border-right-color,font-family,font-size,font-style,font-variant,font-weight,line-height".split(",");
  _$jscoverage['telerik.editor.js'][95]++;
  var dom = {blockParentOrBody: (function (node) {
  _$jscoverage['telerik.editor.js'][97]++;
  return (dom.parentOfType(node, blockElements) || node.ownerDocument.body);
}), toHex: (function (color) {
  _$jscoverage['telerik.editor.js'][101]++;
  var matches = rgb.exec(color);
  _$jscoverage['telerik.editor.js'][103]++;
  if ((! matches)) {
    _$jscoverage['telerik.editor.js'][103]++;
    return color;
  }
  _$jscoverage['telerik.editor.js'][105]++;
  return ("#" + $.map(matches.slice(1), (function (x) {
  _$jscoverage['telerik.editor.js'][106]++;
  return ((x = parseInt(x).toString(16)), ((x.length > 1)? x: ("0" + x)));
})).join(""));
}), encode: (function (value) {
  _$jscoverage['telerik.editor.js'][111]++;
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\u00a0/g, "&nbsp;");
}), name: (function (node) {
  _$jscoverage['telerik.editor.js'][118]++;
  return node.nodeName.toLowerCase();
}), significantChildNodes: (function (node) {
  _$jscoverage['telerik.editor.js'][122]++;
  return $.grep(node.childNodes, (function (child) {
  _$jscoverage['telerik.editor.js'][123]++;
  return ((child.nodeType != 3) || (! dom.isWhitespace(child)));
}));
}), lastTextNode: (function (node) {
  _$jscoverage['telerik.editor.js'][128]++;
  if ((node.nodeType == 3)) {
    _$jscoverage['telerik.editor.js'][129]++;
    return node;
  }
  _$jscoverage['telerik.editor.js'][131]++;
  var result = null;
  _$jscoverage['telerik.editor.js'][133]++;
  for (var child = node.lastChild; child; (child = child.previousSibling)) {
    _$jscoverage['telerik.editor.js'][134]++;
    if ((result = dom.lastTextNode(child))) {
      _$jscoverage['telerik.editor.js'][135]++;
      return result;
    }
}
  _$jscoverage['telerik.editor.js'][137]++;
  return result;
}), is: (function (node, nodeName) {
  _$jscoverage['telerik.editor.js'][141]++;
  return (dom.name(node) == nodeName);
}), isMarker: (function (node) {
  _$jscoverage['telerik.editor.js'][145]++;
  return (node.className == "t-marker");
}), isWhitespace: (function (node) {
  _$jscoverage['telerik.editor.js'][149]++;
  return whitespace.test(node.nodeValue);
}), isBlock: (function (node) {
  _$jscoverage['telerik.editor.js'][153]++;
  return block[dom.name(node)];
}), isEmpty: (function (node) {
  _$jscoverage['telerik.editor.js'][157]++;
  return empty[dom.name(node)];
}), isInline: (function (node) {
  _$jscoverage['telerik.editor.js'][161]++;
  return inline[dom.name(node)];
}), scrollTo: (function (node) {
  _$jscoverage['telerik.editor.js'][165]++;
  node.ownerDocument.body.scrollTop = $((isDataNode(node)? node.parentNode: node)).offset().top;
}), insertAt: (function (parent, newElement, position) {
  _$jscoverage['telerik.editor.js'][169]++;
  parent.insertBefore(newElement, (parent.childNodes[position] || null));
}), insertBefore: (function (newElement, referenceElement) {
  _$jscoverage['telerik.editor.js'][173]++;
  return referenceElement.parentNode.insertBefore(newElement, referenceElement);
}), insertAfter: (function (newElement, referenceElement) {
  _$jscoverage['telerik.editor.js'][177]++;
  return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);
}), remove: (function (node) {
  _$jscoverage['telerik.editor.js'][181]++;
  node.parentNode.removeChild(node);
}), trim: (function (parent) {
  _$jscoverage['telerik.editor.js'][185]++;
  for (var i = (parent.childNodes.length - 1); (i >= 0); (i--)) {
    _$jscoverage['telerik.editor.js'][186]++;
    var node = parent.childNodes[i];
    _$jscoverage['telerik.editor.js'][187]++;
    if (isDataNode(node)) {
      _$jscoverage['telerik.editor.js'][188]++;
      if ((node.nodeValue.replace(/\ufeff/g, "").length == 0)) {
        _$jscoverage['telerik.editor.js'][189]++;
        dom.remove(node);
      }
      _$jscoverage['telerik.editor.js'][190]++;
      if (dom.isWhitespace(node)) {
        _$jscoverage['telerik.editor.js'][191]++;
        dom.insertBefore(node, parent);
      }
    }
    else {
      _$jscoverage['telerik.editor.js'][192]++;
      if ((node.className != "t-marker")) {
        _$jscoverage['telerik.editor.js'][193]++;
        dom.trim(node);
        _$jscoverage['telerik.editor.js'][194]++;
        if (((node.childNodes.length == 0) && (! dom.isEmpty(node)))) {
          _$jscoverage['telerik.editor.js'][195]++;
          dom.remove(node);
        }
      }
    }
}
  _$jscoverage['telerik.editor.js'][199]++;
  return parent;
}), parentOfType: (function (node, tags) {
  _$jscoverage['telerik.editor.js'][203]++;
  do {
    _$jscoverage['telerik.editor.js'][204]++;
    node = node.parentNode;
}
  while ((node && (! dom.ofType(node, tags))));
  _$jscoverage['telerik.editor.js'][207]++;
  return node;
}), ofType: (function (node, tags) {
  _$jscoverage['telerik.editor.js'][211]++;
  return ($.inArray(dom.name(node), tags) >= 0);
}), changeTag: (function (referenceElement, tagName) {
  _$jscoverage['telerik.editor.js'][215]++;
  var newElement = dom.create(referenceElement.ownerDocument, tagName);
  _$jscoverage['telerik.editor.js'][216]++;
  var attributes = referenceElement.attributes;
  _$jscoverage['telerik.editor.js'][218]++;
  for (var i = 0; (i < attributes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][219]++;
    var attribute = attributes[i];
    _$jscoverage['telerik.editor.js'][220]++;
    if (attribute.specified) {
      _$jscoverage['telerik.editor.js'][222]++;
      var name = attribute.nodeName;
      _$jscoverage['telerik.editor.js'][223]++;
      var value = attribute.nodeValue;
      _$jscoverage['telerik.editor.js'][224]++;
      if ((name == "class")) {
        _$jscoverage['telerik.editor.js'][225]++;
        newElement.className = value;
      }
      else {
        _$jscoverage['telerik.editor.js'][226]++;
        if ((name == "style")) {
          _$jscoverage['telerik.editor.js'][227]++;
          newElement.style.cssText = referenceElement.style.cssText;
        }
        else {
          _$jscoverage['telerik.editor.js'][229]++;
          newElement.setAttribute(name, value);
        }
      }
    }
}
  _$jscoverage['telerik.editor.js'][233]++;
  while (referenceElement.firstChild) {
    _$jscoverage['telerik.editor.js'][234]++;
    newElement.appendChild(referenceElement.firstChild);
}
  _$jscoverage['telerik.editor.js'][236]++;
  dom.insertBefore(newElement, referenceElement);
  _$jscoverage['telerik.editor.js'][237]++;
  dom.remove(referenceElement);
  _$jscoverage['telerik.editor.js'][238]++;
  return newElement;
}), wrap: (function (node, wrapper) {
  _$jscoverage['telerik.editor.js'][242]++;
  dom.insertBefore(wrapper, node);
  _$jscoverage['telerik.editor.js'][243]++;
  wrapper.appendChild(node);
  _$jscoverage['telerik.editor.js'][244]++;
  return wrapper;
}), unwrap: (function (node) {
  _$jscoverage['telerik.editor.js'][248]++;
  var parent = node.parentNode;
  _$jscoverage['telerik.editor.js'][249]++;
  while (node.firstChild) {
    _$jscoverage['telerik.editor.js'][250]++;
    parent.insertBefore(node.firstChild, node);
}
  _$jscoverage['telerik.editor.js'][252]++;
  parent.removeChild(node);
}), create: (function (document, tagName, attributes) {
  _$jscoverage['telerik.editor.js'][256]++;
  return dom.attr(document.createElement(tagName), attributes);
}), attr: (function (element, attributes) {
  _$jscoverage['telerik.editor.js'][260]++;
  attributes = $.extend({}, attributes);
  _$jscoverage['telerik.editor.js'][262]++;
  if ((attributes && ("style" in attributes))) {
    _$jscoverage['telerik.editor.js'][263]++;
    dom.style(element, attributes.style);
    _$jscoverage['telerik.editor.js'][264]++;
    (delete attributes.style);
  }
  _$jscoverage['telerik.editor.js'][266]++;
  return $.extend(element, attributes);
}), style: (function (node, value) {
  _$jscoverage['telerik.editor.js'][270]++;
  $(node).css((value || {}));
}), unstyle: (function (node, value) {
  _$jscoverage['telerik.editor.js'][274]++;
  for (var key in value) {
    _$jscoverage['telerik.editor.js'][275]++;
    if ((key == "float")) {
      _$jscoverage['telerik.editor.js'][276]++;
      key = ($.support.cssFloat? "cssFloat": "styleFloat");
    }
    _$jscoverage['telerik.editor.js'][278]++;
    node.style[key] = "";
}
  _$jscoverage['telerik.editor.js'][281]++;
  if ((node.style.cssText == "")) {
    _$jscoverage['telerik.editor.js'][282]++;
    node.removeAttribute("style");
  }
}), inlineStyle: (function (document, name, attributes) {
  _$jscoverage['telerik.editor.js'][286]++;
  var span = dom.create(document, name, attributes);
  _$jscoverage['telerik.editor.js'][288]++;
  document.body.appendChild(span);
  _$jscoverage['telerik.editor.js'][290]++;
  var $span = $(span);
  _$jscoverage['telerik.editor.js'][292]++;
  var style = $.map(cssAttributes, (function (value) {
  _$jscoverage['telerik.editor.js'][293]++;
  return (value + ":" + $span.css(value));
})).join(";");
  _$jscoverage['telerik.editor.js'][296]++;
  $span.remove();
  _$jscoverage['telerik.editor.js'][298]++;
  return style;
}), commonAncestor: (function () {
  _$jscoverage['telerik.editor.js'][302]++;
  var count = arguments.length;
  _$jscoverage['telerik.editor.js'][304]++;
  if ((! count)) {
    _$jscoverage['telerik.editor.js'][305]++;
    return null;
  }
  _$jscoverage['telerik.editor.js'][307]++;
  if ((count == 1)) {
    _$jscoverage['telerik.editor.js'][308]++;
    return arguments[0];
  }
  _$jscoverage['telerik.editor.js'][310]++;
  var paths = [];
  _$jscoverage['telerik.editor.js'][311]++;
  var minPathLength = Infinity;
  _$jscoverage['telerik.editor.js'][313]++;
  for (var i = 0; (i < count); (i++)) {
    _$jscoverage['telerik.editor.js'][314]++;
    var ancestors = [];
    _$jscoverage['telerik.editor.js'][315]++;
    var node = arguments[i];
    _$jscoverage['telerik.editor.js'][316]++;
    while (node) {
      _$jscoverage['telerik.editor.js'][317]++;
      ancestors.push(node);
      _$jscoverage['telerik.editor.js'][318]++;
      node = node.parentNode;
}
    _$jscoverage['telerik.editor.js'][320]++;
    paths.push(ancestors.reverse());
    _$jscoverage['telerik.editor.js'][321]++;
    minPathLength = Math.min(minPathLength, ancestors.length);
}
  _$jscoverage['telerik.editor.js'][324]++;
  if ((count == 1)) {
    _$jscoverage['telerik.editor.js'][325]++;
    return paths[0][0];
  }
  _$jscoverage['telerik.editor.js'][327]++;
  var output = null;
  _$jscoverage['telerik.editor.js'][328]++;
  for (i = 0; (i < minPathLength); (i++)) {
    _$jscoverage['telerik.editor.js'][329]++;
    var first = paths[0][i];
    _$jscoverage['telerik.editor.js'][331]++;
    for (var j = 1; (j < count); (j++)) {
      _$jscoverage['telerik.editor.js'][332]++;
      if ((first != paths[j][i])) {
        _$jscoverage['telerik.editor.js'][333]++;
        return output;
      }
}
    _$jscoverage['telerik.editor.js'][335]++;
    output = first;
}
  _$jscoverage['telerik.editor.js'][337]++;
  return output;
})};
  _$jscoverage['telerik.editor.js'][340]++;
  var fontSizeMappings = "xx-small,x-small,small,medium,large,x-large,xx-large".split(",");
  _$jscoverage['telerik.editor.js'][342]++;
  function domToXhtml(root) {
    _$jscoverage['telerik.editor.js'][343]++;
    var result = [];
    _$jscoverage['telerik.editor.js'][344]++;
    var tagMap = {"telerik:script": {start: (function (node) {
  _$jscoverage['telerik.editor.js'][345]++;
  result.push("<script");
  _$jscoverage['telerik.editor.js'][345]++;
  attr(node);
  _$jscoverage['telerik.editor.js'][345]++;
  result.push(">");
}), end: (function () {
  _$jscoverage['telerik.editor.js'][345]++;
  result.push("</script>");
})}, b: {start: (function () {
  _$jscoverage['telerik.editor.js'][346]++;
  result.push("<strong>");
}), end: (function () {
  _$jscoverage['telerik.editor.js'][346]++;
  result.push("</strong>");
})}, i: {start: (function () {
  _$jscoverage['telerik.editor.js'][347]++;
  result.push("<em>");
}), end: (function () {
  _$jscoverage['telerik.editor.js'][347]++;
  result.push("</em>");
})}, u: {start: (function () {
  _$jscoverage['telerik.editor.js'][348]++;
  result.push("<span style=\"text-decoration:underline;\">");
}), end: (function () {
  _$jscoverage['telerik.editor.js'][348]++;
  result.push("</span>");
})}, font: {start: (function (node) {
  _$jscoverage['telerik.editor.js'][351]++;
  result.push("<span style=\"");
  _$jscoverage['telerik.editor.js'][353]++;
  var color = node.getAttribute("color");
  _$jscoverage['telerik.editor.js'][354]++;
  var size = fontSizeMappings[node.getAttribute("size")];
  _$jscoverage['telerik.editor.js'][355]++;
  var face = node.getAttribute("face");
  _$jscoverage['telerik.editor.js'][357]++;
  if (color) {
    _$jscoverage['telerik.editor.js'][358]++;
    result.push("color:");
    _$jscoverage['telerik.editor.js'][359]++;
    result.push(dom.toHex(color));
    _$jscoverage['telerik.editor.js'][360]++;
    result.push(";");
  }
  _$jscoverage['telerik.editor.js'][363]++;
  if (face) {
    _$jscoverage['telerik.editor.js'][364]++;
    result.push("font-face:");
    _$jscoverage['telerik.editor.js'][365]++;
    result.push(face);
    _$jscoverage['telerik.editor.js'][366]++;
    result.push(";");
  }
  _$jscoverage['telerik.editor.js'][369]++;
  if (size) {
    _$jscoverage['telerik.editor.js'][370]++;
    result.push("font-size:");
    _$jscoverage['telerik.editor.js'][371]++;
    result.push(size);
    _$jscoverage['telerik.editor.js'][372]++;
    result.push(";");
  }
  _$jscoverage['telerik.editor.js'][375]++;
  result.push("\">");
}), end: (function (node) {
  _$jscoverage['telerik.editor.js'][378]++;
  result.push("</span>");
})}};
    _$jscoverage['telerik.editor.js'][383]++;
    function attr(node) {
      _$jscoverage['telerik.editor.js'][384]++;
      var specifiedAttributes = [], attributes = node.attributes, trim = $.trim;
      _$jscoverage['telerik.editor.js'][388]++;
      if (dom.is(node, "img")) {
        _$jscoverage['telerik.editor.js'][389]++;
        var width = node.style.width, height = node.style.height, $node = $(node);
        _$jscoverage['telerik.editor.js'][393]++;
        if (width) {
          _$jscoverage['telerik.editor.js'][394]++;
          $node.attr("width", parseInt(width));
          _$jscoverage['telerik.editor.js'][395]++;
          dom.unstyle(node, {width: undefined});
        }
        _$jscoverage['telerik.editor.js'][398]++;
        if (height) {
          _$jscoverage['telerik.editor.js'][399]++;
          $node.attr("height", parseInt(height));
          _$jscoverage['telerik.editor.js'][400]++;
          dom.unstyle(node, {height: undefined});
        }
      }
      _$jscoverage['telerik.editor.js'][404]++;
      for (var i = 0, l = attributes.length; (i < l); (i++)) {
        _$jscoverage['telerik.editor.js'][405]++;
        var attribute = attributes[i];
        _$jscoverage['telerik.editor.js'][406]++;
        var name = attribute.nodeName;
        _$jscoverage['telerik.editor.js'][408]++;
        if ((attribute.specified || ((name == "value") && (node.value != "")) || ((name == "type") && (attribute.nodeValue == "text")))) {
          _$jscoverage['telerik.editor.js'][409]++;
          if (((name.indexOf("_moz") < 0) && (name != "complete"))) {
            _$jscoverage['telerik.editor.js'][410]++;
            specifiedAttributes.push(attribute);
          }
        }
}
      _$jscoverage['telerik.editor.js'][413]++;
      if ((! specifiedAttributes.length)) {
        _$jscoverage['telerik.editor.js'][414]++;
        return;
      }
      _$jscoverage['telerik.editor.js'][416]++;
      specifiedAttributes.sort((function (a, b) {
  _$jscoverage['telerik.editor.js'][417]++;
  return ((a.nodeName > b.nodeName)? 1: ((a.nodeName < b.nodeName)? -1: 0));
}));
      _$jscoverage['telerik.editor.js'][420]++;
      for (var i = 0, l = specifiedAttributes.length; (i < l); (i++)) {
        _$jscoverage['telerik.editor.js'][421]++;
        var attribute = specifiedAttributes[i];
        _$jscoverage['telerik.editor.js'][422]++;
        var attributeName = attribute.nodeName;
        _$jscoverage['telerik.editor.js'][423]++;
        var attributeValue = attribute.nodeValue;
        _$jscoverage['telerik.editor.js'][425]++;
        result.push(" ");
        _$jscoverage['telerik.editor.js'][426]++;
        result.push(attributeName);
        _$jscoverage['telerik.editor.js'][427]++;
        result.push("=\"");
        _$jscoverage['telerik.editor.js'][428]++;
        if ((attributeName == "style")) {
          _$jscoverage['telerik.editor.js'][430]++;
          var css = trim((attributeValue || node.style.cssText)).split(";");
          _$jscoverage['telerik.editor.js'][432]++;
          for (var cssIndex = 0, len = css.length; (cssIndex < len); (cssIndex++)) {
            _$jscoverage['telerik.editor.js'][433]++;
            var pair = css[cssIndex];
            _$jscoverage['telerik.editor.js'][434]++;
            if (pair.length) {
              _$jscoverage['telerik.editor.js'][435]++;
              var propertyAndValue = pair.split(":");
              _$jscoverage['telerik.editor.js'][436]++;
              var property = trim(propertyAndValue[0].toLowerCase()), value = trim(propertyAndValue[1]);
              _$jscoverage['telerik.editor.js'][439]++;
              if ((property.indexOf("color") >= 0)) {
                _$jscoverage['telerik.editor.js'][440]++;
                value = dom.toHex(value);
              }
              _$jscoverage['telerik.editor.js'][442]++;
              result.push(property);
              _$jscoverage['telerik.editor.js'][443]++;
              result.push(":");
              _$jscoverage['telerik.editor.js'][444]++;
              result.push(value);
              _$jscoverage['telerik.editor.js'][445]++;
              result.push(";");
            }
}
          _$jscoverage['telerik.editor.js'][447]++;
          ;
        }
        else {
          _$jscoverage['telerik.editor.js'][448]++;
          if (((attributeName == "src") || (attributeName == "href"))) {
            _$jscoverage['telerik.editor.js'][449]++;
            result.push(node.getAttribute(attributeName, 2));
          }
          else {
            _$jscoverage['telerik.editor.js'][451]++;
            result.push((fillAttrs[attributeName]? attributeName: attributeValue));
          }
        }
        _$jscoverage['telerik.editor.js'][454]++;
        result.push("\"");
}
}
    _$jscoverage['telerik.editor.js'][458]++;
    function children(node, skip) {
      _$jscoverage['telerik.editor.js'][459]++;
      for (var childNode = node.firstChild; childNode; (childNode = childNode.nextSibling)) {
        _$jscoverage['telerik.editor.js'][460]++;
        child(childNode, skip);
}
}
    _$jscoverage['telerik.editor.js'][463]++;
    function child(node, skip) {
      _$jscoverage['telerik.editor.js'][464]++;
      var nodeType = node.nodeType;
      _$jscoverage['telerik.editor.js'][465]++;
      if ((nodeType == 1)) {
        _$jscoverage['telerik.editor.js'][466]++;
        if ((node.attributes._moz_dirty && dom.is(node, "br"))) {
          _$jscoverage['telerik.editor.js'][467]++;
          return;
        }
        _$jscoverage['telerik.editor.js'][469]++;
        var tagName = dom.name(node);
        _$jscoverage['telerik.editor.js'][470]++;
        var mapper = tagMap[tagName];
        _$jscoverage['telerik.editor.js'][472]++;
        if (mapper) {
          _$jscoverage['telerik.editor.js'][473]++;
          mapper.start(node);
          _$jscoverage['telerik.editor.js'][474]++;
          children(node);
          _$jscoverage['telerik.editor.js'][475]++;
          mapper.end(node);
          _$jscoverage['telerik.editor.js'][476]++;
          return;
        }
        _$jscoverage['telerik.editor.js'][479]++;
        result.push("<");
        _$jscoverage['telerik.editor.js'][480]++;
        result.push(tagName);
        _$jscoverage['telerik.editor.js'][482]++;
        attr(node);
        _$jscoverage['telerik.editor.js'][484]++;
        if (empty[tagName]) {
          _$jscoverage['telerik.editor.js'][485]++;
          result.push(" />");
        }
        else {
          _$jscoverage['telerik.editor.js'][487]++;
          result.push(">");
          _$jscoverage['telerik.editor.js'][488]++;
          children(node, (skip || dom.is(node, "pre")));
          _$jscoverage['telerik.editor.js'][489]++;
          result.push("</");
          _$jscoverage['telerik.editor.js'][490]++;
          result.push(tagName);
          _$jscoverage['telerik.editor.js'][491]++;
          result.push(">");
        }
      }
      else {
        _$jscoverage['telerik.editor.js'][493]++;
        if ((nodeType == 3)) {
          _$jscoverage['telerik.editor.js'][494]++;
          var value = node.nodeValue;
          _$jscoverage['telerik.editor.js'][496]++;
          if (((! skip) && $.support.leadingWhitespace)) {
            _$jscoverage['telerik.editor.js'][497]++;
            var parent = node.parentNode;
            _$jscoverage['telerik.editor.js'][498]++;
            var previous = (dom.isInline(parent)? parent: node).previousSibling;
            _$jscoverage['telerik.editor.js'][500]++;
            if (((! previous) || (previous.innerHTML == "") || dom.isBlock(previous))) {
              _$jscoverage['telerik.editor.js'][501]++;
              value = value.replace(/^[\r\n\v\f\t ]+/, "");
            }
            _$jscoverage['telerik.editor.js'][503]++;
            value = value.replace(/ +/, " ");
          }
          _$jscoverage['telerik.editor.js'][506]++;
          result.push(dom.encode(value));
        }
        else {
          _$jscoverage['telerik.editor.js'][508]++;
          if ((nodeType == 4)) {
            _$jscoverage['telerik.editor.js'][509]++;
            result.push("<![CDATA[");
            _$jscoverage['telerik.editor.js'][510]++;
            result.push(node.data);
            _$jscoverage['telerik.editor.js'][511]++;
            result.push("]]>");
          }
          else {
            _$jscoverage['telerik.editor.js'][512]++;
            if ((nodeType == 8)) {
              _$jscoverage['telerik.editor.js'][513]++;
              if ((node.data.indexOf("[CDATA[") < 0)) {
                _$jscoverage['telerik.editor.js'][514]++;
                result.push("<!--");
                _$jscoverage['telerik.editor.js'][515]++;
                result.push(node.data);
                _$jscoverage['telerik.editor.js'][516]++;
                result.push("-->");
              }
              else {
                _$jscoverage['telerik.editor.js'][518]++;
                result.push("<!");
                _$jscoverage['telerik.editor.js'][519]++;
                result.push(node.data);
                _$jscoverage['telerik.editor.js'][520]++;
                result.push(">");
              }
            }
          }
        }
      }
}
    _$jscoverage['telerik.editor.js'][525]++;
    children(root);
    _$jscoverage['telerik.editor.js'][527]++;
    return result.join("");
}
  _$jscoverage['telerik.editor.js'][529]++;
  var START_TO_START = 0, START_TO_END = 1, END_TO_END = 2, END_TO_START = 3;
  _$jscoverage['telerik.editor.js'][535]++;
  function documentFromRange(range) {
    _$jscoverage['telerik.editor.js'][536]++;
    var startContainer = range.startContainer;
    _$jscoverage['telerik.editor.js'][537]++;
    return ((startContainer.nodeType == 9)? startContainer: startContainer.ownerDocument);
}
  _$jscoverage['telerik.editor.js'][540]++;
  function selectionFromWindow(window) {
    _$jscoverage['telerik.editor.js'][541]++;
    return (window.getSelection? window.getSelection(): new W3CSelection(window.document));
}
  _$jscoverage['telerik.editor.js'][544]++;
  function selectionFromRange(range) {
    _$jscoverage['telerik.editor.js'][545]++;
    var document = documentFromRange(range);
    _$jscoverage['telerik.editor.js'][546]++;
    return selectionFromDocument(document);
}
  _$jscoverage['telerik.editor.js'][549]++;
  function selectionFromDocument(document) {
    _$jscoverage['telerik.editor.js'][550]++;
    return selectionFromWindow(windowFromDocument(document));
}
  _$jscoverage['telerik.editor.js'][553]++;
  function windowFromDocument(document) {
    _$jscoverage['telerik.editor.js'][554]++;
    return (document.defaultView || document.parentWindow);
}
  _$jscoverage['telerik.editor.js'][557]++;
  function split(range, node, trim) {
    _$jscoverage['telerik.editor.js'][558]++;
    function partition(start) {
      _$jscoverage['telerik.editor.js'][559]++;
      var partitionRange = range.cloneRange();
      _$jscoverage['telerik.editor.js'][560]++;
      partitionRange.collapse(start);
      _$jscoverage['telerik.editor.js'][561]++;
      (partitionRange[(start? "setStartBefore": "setEndAfter")])(node);
      _$jscoverage['telerik.editor.js'][562]++;
      var contents = partitionRange.extractContents();
      _$jscoverage['telerik.editor.js'][563]++;
      if (trim) {
        _$jscoverage['telerik.editor.js'][564]++;
        contents = dom.trim(contents);
      }
      _$jscoverage['telerik.editor.js'][565]++;
      (dom[(start? "insertBefore": "insertAfter")])(contents, node);
}
    _$jscoverage['telerik.editor.js'][567]++;
    partition(true);
    _$jscoverage['telerik.editor.js'][568]++;
    partition(false);
}
  _$jscoverage['telerik.editor.js'][571]++;
  function selectRange(range) {
    _$jscoverage['telerik.editor.js'][572]++;
    var image = RangeUtils.image(range);
    _$jscoverage['telerik.editor.js'][573]++;
    if (image) {
      _$jscoverage['telerik.editor.js'][574]++;
      range.setStartAfter(image);
      _$jscoverage['telerik.editor.js'][575]++;
      range.setEndAfter(image);
    }
    _$jscoverage['telerik.editor.js'][577]++;
    var selection = selectionFromRange(range);
    _$jscoverage['telerik.editor.js'][578]++;
    selection.removeAllRanges();
    _$jscoverage['telerik.editor.js'][579]++;
    selection.addRange(range);
}
  _$jscoverage['telerik.editor.js'][582]++;
  function W3CRange(doc) {
    _$jscoverage['telerik.editor.js'][583]++;
    $.extend(this, {ownerDocument: doc, startContainer: doc, endContainer: doc, commonAncestorContainer: doc, startOffset: 0, endOffset: 0, collapsed: true});
}
  _$jscoverage['telerik.editor.js'][592]++;
  ;
  _$jscoverage['telerik.editor.js'][594]++;
  W3CRange.prototype = {setStart: (function (node, offset) {
  _$jscoverage['telerik.editor.js'][598]++;
  this.startContainer = node;
  _$jscoverage['telerik.editor.js'][599]++;
  this.startOffset = offset;
  _$jscoverage['telerik.editor.js'][600]++;
  updateRangeProperties(this);
  _$jscoverage['telerik.editor.js'][601]++;
  fixIvalidRange(this, true);
}), setEnd: (function (node, offset) {
  _$jscoverage['telerik.editor.js'][605]++;
  this.endContainer = node;
  _$jscoverage['telerik.editor.js'][606]++;
  this.endOffset = offset;
  _$jscoverage['telerik.editor.js'][607]++;
  updateRangeProperties(this);
  _$jscoverage['telerik.editor.js'][608]++;
  fixIvalidRange(this, false);
}), setStartBefore: (function (node) {
  _$jscoverage['telerik.editor.js'][612]++;
  this.setStart(node.parentNode, findNodeIndex(node));
}), setStartAfter: (function (node) {
  _$jscoverage['telerik.editor.js'][616]++;
  this.setStart(node.parentNode, (findNodeIndex(node) + 1));
}), setEndBefore: (function (node) {
  _$jscoverage['telerik.editor.js'][620]++;
  this.setEnd(node.parentNode, findNodeIndex(node));
}), setEndAfter: (function (node) {
  _$jscoverage['telerik.editor.js'][624]++;
  this.setEnd(node.parentNode, (findNodeIndex(node) + 1));
}), selectNode: (function (node) {
  _$jscoverage['telerik.editor.js'][628]++;
  this.setStartBefore(node);
  _$jscoverage['telerik.editor.js'][629]++;
  this.setEndAfter(node);
}), selectNodeContents: (function (node) {
  _$jscoverage['telerik.editor.js'][633]++;
  this.setStart(node, 0);
  _$jscoverage['telerik.editor.js'][634]++;
  this.setEnd(node, node[((node.nodeType === 1)? "childNodes": "nodeValue")].length);
}), collapse: (function (toStart) {
  _$jscoverage['telerik.editor.js'][638]++;
  if (toStart) {
    _$jscoverage['telerik.editor.js'][639]++;
    this.setEnd(this.startContainer, this.startOffset);
  }
  else {
    _$jscoverage['telerik.editor.js'][641]++;
    this.setStart(this.endContainer, this.endOffset);
  }
}), deleteContents: (function () {
  _$jscoverage['telerik.editor.js'][647]++;
  var range = this.cloneRange();
  _$jscoverage['telerik.editor.js'][649]++;
  if ((this.startContainer != this.commonAncestorContainer)) {
    _$jscoverage['telerik.editor.js'][650]++;
    this.setStartAfter(findClosestAncestor(this.commonAncestorContainer, this.startContainer));
  }
  _$jscoverage['telerik.editor.js'][652]++;
  this.collapse(true);
  _$jscoverage['telerik.editor.js'][654]++;
  (function deleteSubtree(iterator) {
  _$jscoverage['telerik.editor.js'][655]++;
  while (iterator.next()) {
    _$jscoverage['telerik.editor.js'][656]++;
    (iterator.hasPartialSubtree()? deleteSubtree(iterator.getSubtreeIterator()): iterator.remove());
}
})(new RangeIterator(range));
}), cloneContents: (function () {
  _$jscoverage['telerik.editor.js'][663]++;
  var document = documentFromRange(this);
  _$jscoverage['telerik.editor.js'][664]++;
  return (function cloneSubtree(iterator) {
  _$jscoverage['telerik.editor.js'][665]++;
  for (var node, frag = document.createDocumentFragment(); (node = iterator.next());) {
    _$jscoverage['telerik.editor.js'][666]++;
    node = node.cloneNode((! iterator.hasPartialSubtree()));
    _$jscoverage['telerik.editor.js'][667]++;
    if (iterator.hasPartialSubtree()) {
      _$jscoverage['telerik.editor.js'][668]++;
      node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));
    }
    _$jscoverage['telerik.editor.js'][669]++;
    frag.appendChild(node);
}
  _$jscoverage['telerik.editor.js'][671]++;
  return frag;
})(new RangeIterator(this));
}), extractContents: (function () {
  _$jscoverage['telerik.editor.js'][676]++;
  var range = this.cloneRange();
  _$jscoverage['telerik.editor.js'][678]++;
  if ((this.startContainer != this.commonAncestorContainer)) {
    _$jscoverage['telerik.editor.js'][679]++;
    this.setStartAfter(findClosestAncestor(this.commonAncestorContainer, this.startContainer));
  }
  _$jscoverage['telerik.editor.js'][681]++;
  this.collapse(true);
  _$jscoverage['telerik.editor.js'][683]++;
  var self = this;
  _$jscoverage['telerik.editor.js'][685]++;
  var document = documentFromRange(this);
  _$jscoverage['telerik.editor.js'][687]++;
  return (function extractSubtree(iterator) {
  _$jscoverage['telerik.editor.js'][688]++;
  for (var node, frag = document.createDocumentFragment(); (node = iterator.next());) {
    _$jscoverage['telerik.editor.js'][689]++;
    (iterator.hasPartialSubtree()? (node = node.cloneNode(false)): iterator.remove(self.originalRange));
    _$jscoverage['telerik.editor.js'][691]++;
    if (iterator.hasPartialSubtree()) {
      _$jscoverage['telerik.editor.js'][692]++;
      node.appendChild(extractSubtree(iterator.getSubtreeIterator()));
    }
    _$jscoverage['telerik.editor.js'][694]++;
    frag.appendChild(node);
}
  _$jscoverage['telerik.editor.js'][697]++;
  return frag;
})(new RangeIterator(range));
}), insertNode: (function (node) {
  _$jscoverage['telerik.editor.js'][702]++;
  if (isDataNode(this.startContainer)) {
    _$jscoverage['telerik.editor.js'][703]++;
    if ((this.startOffset != this.startContainer.nodeValue.length)) {
      _$jscoverage['telerik.editor.js'][704]++;
      splitDataNode(this.startContainer, this.startOffset);
    }
    _$jscoverage['telerik.editor.js'][706]++;
    dom.insertAfter(node, this.startContainer);
  }
  else {
    _$jscoverage['telerik.editor.js'][708]++;
    dom.insertAt(this.startContainer, node, this.startOffset);
  }
  _$jscoverage['telerik.editor.js'][711]++;
  this.setStart(this.startContainer, this.startOffset);
}), cloneRange: (function () {
  _$jscoverage['telerik.editor.js'][716]++;
  return $.extend(new W3CRange(this.ownerDocument), {startContainer: this.startContainer, endContainer: this.endContainer, commonAncestorContainer: this.commonAncestorContainer, startOffset: this.startOffset, endOffset: this.endOffset, collapsed: this.collapsed, originalRange: this});
}), toString: (function () {
  _$jscoverage['telerik.editor.js'][730]++;
  var startNodeName = this.startContainer.nodeName, endNodeName = this.endContainer.nodeName;
  _$jscoverage['telerik.editor.js'][733]++;
  return [((startNodeName == "#text")? this.startContainer.nodeValue: startNodeName), "(", this.startOffset, ") : ", ((endNodeName == "#text")? this.endContainer.nodeValue: endNodeName), "(", this.endOffset, ")"].join("");
})};
  _$jscoverage['telerik.editor.js'][738]++;
  function compareBoundaries(start, end, startOffset, endOffset) {
    _$jscoverage['telerik.editor.js'][739]++;
    if ((start == end)) {
      _$jscoverage['telerik.editor.js'][740]++;
      return (endOffset - startOffset);
    }
    _$jscoverage['telerik.editor.js'][743]++;
    var container = end;
    _$jscoverage['telerik.editor.js'][744]++;
    while ((container && (container.parentNode != start))) {
      _$jscoverage['telerik.editor.js'][745]++;
      container = container.parentNode;
}
    _$jscoverage['telerik.editor.js'][747]++;
    if (container) {
      _$jscoverage['telerik.editor.js'][748]++;
      return (findNodeIndex(container) - startOffset);
    }
    _$jscoverage['telerik.editor.js'][751]++;
    container = start;
    _$jscoverage['telerik.editor.js'][752]++;
    while ((container && (container.parentNode != end))) {
      _$jscoverage['telerik.editor.js'][753]++;
      container = container.parentNode;
}
    _$jscoverage['telerik.editor.js'][755]++;
    if (container) {
      _$jscoverage['telerik.editor.js'][756]++;
      return (endOffset - findNodeIndex(container) - 1);
    }
    _$jscoverage['telerik.editor.js'][759]++;
    var root = dom.commonAncestor(start, end);
    _$jscoverage['telerik.editor.js'][760]++;
    var startAncestor = start;
    _$jscoverage['telerik.editor.js'][762]++;
    while ((startAncestor && (startAncestor.parentNode != root))) {
      _$jscoverage['telerik.editor.js'][763]++;
      startAncestor = startAncestor.parentNode;
}
    _$jscoverage['telerik.editor.js'][765]++;
    if ((! startAncestor)) {
      _$jscoverage['telerik.editor.js'][766]++;
      startAncestor = root;
    }
    _$jscoverage['telerik.editor.js'][768]++;
    var endAncestor = end;
    _$jscoverage['telerik.editor.js'][769]++;
    while ((endAncestor && (endAncestor.parentNode != root))) {
      _$jscoverage['telerik.editor.js'][770]++;
      endAncestor = endAncestor.parentNode;
}
    _$jscoverage['telerik.editor.js'][772]++;
    if ((! endAncestor)) {
      _$jscoverage['telerik.editor.js'][773]++;
      endAncestor = root;
    }
    _$jscoverage['telerik.editor.js'][775]++;
    if ((startAncestor == endAncestor)) {
      _$jscoverage['telerik.editor.js'][776]++;
      return 0;
    }
    _$jscoverage['telerik.editor.js'][778]++;
    return (findNodeIndex(endAncestor) - findNodeIndex(startAncestor));
}
  _$jscoverage['telerik.editor.js'][781]++;
  function fixIvalidRange(range, toStart) {
    _$jscoverage['telerik.editor.js'][782]++;
    function isInvalidRange(range) {
      _$jscoverage['telerik.editor.js'][783]++;
      try {
        _$jscoverage['telerik.editor.js'][784]++;
        return (compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0);
      }
      catch (ex) {
        _$jscoverage['telerik.editor.js'][787]++;
        return true;
      }
}
    _$jscoverage['telerik.editor.js'][791]++;
    if (isInvalidRange(range)) {
      _$jscoverage['telerik.editor.js'][792]++;
      if (toStart) {
        _$jscoverage['telerik.editor.js'][793]++;
        range.commonAncestorContainer = (range.endContainer = range.startContainer);
        _$jscoverage['telerik.editor.js'][794]++;
        range.endOffset = range.startOffset;
      }
      else {
        _$jscoverage['telerik.editor.js'][796]++;
        range.commonAncestorContainer = (range.startContainer = range.endContainer);
        _$jscoverage['telerik.editor.js'][797]++;
        range.startOffset = range.endOffset;
      }
      _$jscoverage['telerik.editor.js'][800]++;
      range.collapsed = true;
    }
}
  _$jscoverage['telerik.editor.js'][804]++;
  function updateRangeProperties(range) {
    _$jscoverage['telerik.editor.js'][805]++;
    range.collapsed = ((range.startContainer == range.endContainer) && (range.startOffset == range.endOffset));
    _$jscoverage['telerik.editor.js'][807]++;
    var node = range.startContainer;
    _$jscoverage['telerik.editor.js'][808]++;
    while ((node && (node != range.endContainer) && (! isAncestorOf(node, range.endContainer)))) {
      _$jscoverage['telerik.editor.js'][809]++;
      node = node.parentNode;
}
    _$jscoverage['telerik.editor.js'][811]++;
    range.commonAncestorContainer = node;
}
  _$jscoverage['telerik.editor.js'][814]++;
  function createRange(document) {
    _$jscoverage['telerik.editor.js'][815]++;
    return (document.createRange? document.createRange(): new W3CRange(document));
}
  _$jscoverage['telerik.editor.js'][819]++;
  function RangeIterator(range) {
    _$jscoverage['telerik.editor.js'][820]++;
    $.extend(this, {range: range, _current: null, _next: null, _end: null});
    _$jscoverage['telerik.editor.js'][827]++;
    if (range.collapsed) {
      _$jscoverage['telerik.editor.js'][828]++;
      return;
    }
    _$jscoverage['telerik.editor.js'][830]++;
    var root = range.commonAncestorContainer;
    _$jscoverage['telerik.editor.js'][832]++;
    this._next = (((range.startContainer == root) && (! isDataNode(range.startContainer)))? range.startContainer.childNodes[range.startOffset]: findClosestAncestor(root, range.startContainer));
    _$jscoverage['telerik.editor.js'][836]++;
    this._end = (((range.endContainer == root) && (! isDataNode(range.endContainer)))? range.endContainer.childNodes[range.endOffset]: findClosestAncestor(root, range.endContainer).nextSibling);
}
  _$jscoverage['telerik.editor.js'][841]++;
  RangeIterator.prototype = {hasNext: (function () {
  _$jscoverage['telerik.editor.js'][843]++;
  return (! (! this._next));
}), next: (function () {
  _$jscoverage['telerik.editor.js'][847]++;
  var current = (this._current = this._next);
  _$jscoverage['telerik.editor.js'][848]++;
  this._next = ((this._current && (this._current.nextSibling != this._end))? this._current.nextSibling: null);
  _$jscoverage['telerik.editor.js'][851]++;
  if (isDataNode(this._current)) {
    _$jscoverage['telerik.editor.js'][852]++;
    if ((this.range.endContainer == this._current)) {
      _$jscoverage['telerik.editor.js'][853]++;
      (current = current.cloneNode(true)).deleteData(this.range.endOffset, (current.length - this.range.endOffset));
    }
    _$jscoverage['telerik.editor.js'][855]++;
    if ((this.range.startContainer == this._current)) {
      _$jscoverage['telerik.editor.js'][856]++;
      (current = current.cloneNode(true)).deleteData(0, this.range.startOffset);
    }
  }
  _$jscoverage['telerik.editor.js'][859]++;
  return current;
}), traverse: (function (callback) {
  _$jscoverage['telerik.editor.js'][863]++;
  function next() {
    _$jscoverage['telerik.editor.js'][864]++;
    this._current = this._next;
    _$jscoverage['telerik.editor.js'][865]++;
    this._next = ((this._current && (this._current.nextSibling != this._end))? this._current.nextSibling: null);
    _$jscoverage['telerik.editor.js'][866]++;
    return this._current;
}
  _$jscoverage['telerik.editor.js'][869]++;
  var current;
  _$jscoverage['telerik.editor.js'][871]++;
  while ((current = next.call(this))) {
    _$jscoverage['telerik.editor.js'][872]++;
    if (this.hasPartialSubtree()) {
      _$jscoverage['telerik.editor.js'][873]++;
      this.getSubtreeIterator().traverse(callback);
    }
    else {
      _$jscoverage['telerik.editor.js'][875]++;
      callback(current);
    }
}
  _$jscoverage['telerik.editor.js'][878]++;
  return current;
}), remove: (function (originalRange) {
  _$jscoverage['telerik.editor.js'][882]++;
  var inStartContainer = (this.range.startContainer == this._current);
  _$jscoverage['telerik.editor.js'][883]++;
  var inEndContainer = (this.range.endContainer == this._current);
  _$jscoverage['telerik.editor.js'][885]++;
  if ((isDataNode(this._current) && (inStartContainer || inEndContainer))) {
    _$jscoverage['telerik.editor.js'][886]++;
    var start = (inStartContainer? this.range.startOffset: 0);
    _$jscoverage['telerik.editor.js'][887]++;
    var end = (inEndContainer? this.range.endOffset: this._current.length);
    _$jscoverage['telerik.editor.js'][888]++;
    var delta = (end - start);
    _$jscoverage['telerik.editor.js'][890]++;
    if ((originalRange && (inStartContainer || inEndContainer))) {
      _$jscoverage['telerik.editor.js'][891]++;
      if (((this._current == originalRange.startContainer) && (start <= originalRange.startOffset))) {
        _$jscoverage['telerik.editor.js'][892]++;
        originalRange.startOffset -= delta;
      }
      _$jscoverage['telerik.editor.js'][894]++;
      if (((this._current == originalRange.endContainer) && (end <= originalRange.endOffset))) {
        _$jscoverage['telerik.editor.js'][895]++;
        originalRange.endOffset -= delta;
      }
    }
    _$jscoverage['telerik.editor.js'][898]++;
    this._current.deleteData(start, delta);
  }
  else {
    _$jscoverage['telerik.editor.js'][900]++;
    var parent = this._current.parentNode;
    _$jscoverage['telerik.editor.js'][902]++;
    if ((originalRange && ((this.range.startContainer == parent) || (this.range.endContainer == parent)))) {
      _$jscoverage['telerik.editor.js'][903]++;
      var nodeIndex = findNodeIndex(this._current);
      _$jscoverage['telerik.editor.js'][905]++;
      if (((parent == originalRange.startContainer) && (nodeIndex <= originalRange.startOffset))) {
        _$jscoverage['telerik.editor.js'][906]++;
        originalRange.startOffset -= 1;
      }
      _$jscoverage['telerik.editor.js'][908]++;
      if (((parent == originalRange.endContainer) && (nodeIndex < originalRange.endOffset))) {
        _$jscoverage['telerik.editor.js'][909]++;
        originalRange.endOffset -= 1;
      }
    }
    _$jscoverage['telerik.editor.js'][912]++;
    dom.remove(this._current);
  }
}), hasPartialSubtree: (function () {
  _$jscoverage['telerik.editor.js'][917]++;
  return ((! isDataNode(this._current)) && (isAncestorOrSelf(this._current, this.range.startContainer) || isAncestorOrSelf(this._current, this.range.endContainer)));
}), getSubtreeIterator: (function () {
  _$jscoverage['telerik.editor.js'][923]++;
  var subRange = this.range.cloneRange();
  _$jscoverage['telerik.editor.js'][924]++;
  subRange.selectNodeContents(this._current);
  _$jscoverage['telerik.editor.js'][926]++;
  if (isAncestorOrSelf(this._current, this.range.startContainer)) {
    _$jscoverage['telerik.editor.js'][927]++;
    subRange.setStart(this.range.startContainer, this.range.startOffset);
  }
  _$jscoverage['telerik.editor.js'][928]++;
  if (isAncestorOrSelf(this._current, this.range.endContainer)) {
    _$jscoverage['telerik.editor.js'][929]++;
    subRange.setEnd(this.range.endContainer, this.range.endOffset);
  }
  _$jscoverage['telerik.editor.js'][931]++;
  return new RangeIterator(subRange);
})};
  _$jscoverage['telerik.editor.js'][935]++;
  function W3CSelection(doc) {
    _$jscoverage['telerik.editor.js'][936]++;
    this.ownerDocument = doc;
    _$jscoverage['telerik.editor.js'][937]++;
    this.rangeCount = 1;
}
  _$jscoverage['telerik.editor.js'][938]++;
  ;
  _$jscoverage['telerik.editor.js'][940]++;
  W3CSelection.prototype = {addRange: (function (range) {
  _$jscoverage['telerik.editor.js'][942]++;
  var textRange = this.ownerDocument.body.createTextRange();
  _$jscoverage['telerik.editor.js'][945]++;
  adoptContainer(textRange, range, false);
  _$jscoverage['telerik.editor.js'][946]++;
  adoptContainer(textRange, range, true);
  _$jscoverage['telerik.editor.js'][948]++;
  textRange.select();
}), removeAllRanges: (function () {
  _$jscoverage['telerik.editor.js'][952]++;
  this.ownerDocument.selection.empty();
}), getRangeAt: (function () {
  _$jscoverage['telerik.editor.js'][956]++;
  var textRange, range = new W3CRange(this.ownerDocument), selection = this.ownerDocument.selection;
  _$jscoverage['telerik.editor.js'][958]++;
  try {
    _$jscoverage['telerik.editor.js'][959]++;
    textRange = selection.createRange();
  }
  catch (ex) {
    _$jscoverage['telerik.editor.js'][961]++;
    return range;
  }
  _$jscoverage['telerik.editor.js'][964]++;
  if ((selection.type == "Control")) {
    _$jscoverage['telerik.editor.js'][965]++;
    range.selectNode(textRange.item(0));
  }
  else {
    _$jscoverage['telerik.editor.js'][967]++;
    adoptEndPoint(textRange, range, true);
    _$jscoverage['telerik.editor.js'][968]++;
    adoptEndPoint(textRange, range, false);
    _$jscoverage['telerik.editor.js'][970]++;
    if ((range.startContainer.nodeType == 9)) {
      _$jscoverage['telerik.editor.js'][971]++;
      range.setStart(range.endContainer, range.startOffset);
    }
    _$jscoverage['telerik.editor.js'][973]++;
    if ((range.endContainer.nodeType == 9)) {
      _$jscoverage['telerik.editor.js'][974]++;
      range.setEnd(range.startContainer, range.endOffset);
    }
    _$jscoverage['telerik.editor.js'][976]++;
    if ((textRange.compareEndPoints("StartToEnd", textRange) == 0)) {
      _$jscoverage['telerik.editor.js'][977]++;
      range.collapse(false);
    }
  }
  _$jscoverage['telerik.editor.js'][979]++;
  return range;
})};
  _$jscoverage['telerik.editor.js'][983]++;
  function adoptContainer(textRange, range, start) {
    _$jscoverage['telerik.editor.js'][985]++;
    var container = range[(start? "startContainer": "endContainer")];
    _$jscoverage['telerik.editor.js'][986]++;
    var offset = range[(start? "startOffset": "endOffset")], textOffset = 0;
    _$jscoverage['telerik.editor.js'][987]++;
    var anchorNode = (isDataNode(container)? container: (container.childNodes[offset] || null));
    _$jscoverage['telerik.editor.js'][988]++;
    var anchorParent = (isDataNode(container)? container.parentNode: container);
    _$jscoverage['telerik.editor.js'][990]++;
    if (((container.nodeType == 3) || (container.nodeType == 4))) {
      _$jscoverage['telerik.editor.js'][991]++;
      textOffset = offset;
    }
    _$jscoverage['telerik.editor.js'][994]++;
    var cursorNode = anchorParent.insertBefore(dom.create(range.ownerDocument, "a"), anchorNode);
    _$jscoverage['telerik.editor.js'][996]++;
    var cursor = range.ownerDocument.body.createTextRange();
    _$jscoverage['telerik.editor.js'][997]++;
    cursor.moveToElementText(cursorNode);
    _$jscoverage['telerik.editor.js'][998]++;
    dom.remove(cursorNode);
    _$jscoverage['telerik.editor.js'][999]++;
    (cursor[(start? "moveStart": "moveEnd")])("character", textOffset);
    _$jscoverage['telerik.editor.js'][1000]++;
    cursor.collapse(false);
    _$jscoverage['telerik.editor.js'][1001]++;
    textRange.setEndPoint((start? "StartToStart": "EndToStart"), cursor);
}
  _$jscoverage['telerik.editor.js'][1004]++;
  function adoptEndPoint(textRange, range, start) {
    _$jscoverage['telerik.editor.js'][1005]++;
    var cursorNode = dom.create(range.ownerDocument, "a"), cursor = textRange.duplicate();
    _$jscoverage['telerik.editor.js'][1006]++;
    cursor.collapse(start);
    _$jscoverage['telerik.editor.js'][1007]++;
    var parent = cursor.parentElement();
    _$jscoverage['telerik.editor.js'][1008]++;
    do {
      _$jscoverage['telerik.editor.js'][1009]++;
      parent.insertBefore(cursorNode, cursorNode.previousSibling);
      _$jscoverage['telerik.editor.js'][1010]++;
      cursor.moveToElementText(cursorNode);
}
    while (((cursor.compareEndPoints((start? "StartToStart": "StartToEnd"), textRange) > 0) && cursorNode.previousSibling));
    _$jscoverage['telerik.editor.js'][1013]++;
    cursor.setEndPoint((start? "EndToStart": "EndToEnd"), textRange);
    _$jscoverage['telerik.editor.js'][1015]++;
    var target = cursorNode.nextSibling;
    _$jscoverage['telerik.editor.js'][1017]++;
    if ((! target)) {
      _$jscoverage['telerik.editor.js'][1019]++;
      target = cursorNode.previousSibling;
      _$jscoverage['telerik.editor.js'][1021]++;
      if ((target && isDataNode(target))) {
        _$jscoverage['telerik.editor.js'][1022]++;
        range.setEnd(target, target.nodeValue.length);
        _$jscoverage['telerik.editor.js'][1023]++;
        dom.remove(cursorNode);
      }
      else {
        _$jscoverage['telerik.editor.js'][1025]++;
        range.selectNodeContents(parent);
        _$jscoverage['telerik.editor.js'][1026]++;
        dom.remove(cursorNode);
        _$jscoverage['telerik.editor.js'][1027]++;
        range.endOffset -= 1;
      }
      _$jscoverage['telerik.editor.js'][1030]++;
      return;
    }
    _$jscoverage['telerik.editor.js'][1033]++;
    dom.remove(cursorNode);
    _$jscoverage['telerik.editor.js'][1035]++;
    if (isDataNode(target)) {
      _$jscoverage['telerik.editor.js'][1036]++;
      (range[(start? "setStart": "setEnd")])(target, cursor.text.length);
    }
    else {
      _$jscoverage['telerik.editor.js'][1038]++;
      (range[(start? "setStartBefore": "setEndBefore")])(target);
    }
}
  _$jscoverage['telerik.editor.js'][1041]++;
  function RangeEnumerator(range) {
    _$jscoverage['telerik.editor.js'][1042]++;
    this.enumerate = (function () {
  _$jscoverage['telerik.editor.js'][1043]++;
  var nodes = [];
  _$jscoverage['telerik.editor.js'][1045]++;
  function visit(node) {
    _$jscoverage['telerik.editor.js'][1046]++;
    if ((dom.is(node, "img") || ((node.nodeType == 3) && (! dom.isWhitespace(node))))) {
      _$jscoverage['telerik.editor.js'][1047]++;
      nodes.push(node);
    }
    else {
      _$jscoverage['telerik.editor.js'][1049]++;
      node = node.firstChild;
      _$jscoverage['telerik.editor.js'][1050]++;
      while (node) {
        _$jscoverage['telerik.editor.js'][1051]++;
        visit(node);
        _$jscoverage['telerik.editor.js'][1052]++;
        node = node.nextSibling;
}
    }
}
  _$jscoverage['telerik.editor.js'][1057]++;
  new RangeIterator(range).traverse(visit);
  _$jscoverage['telerik.editor.js'][1059]++;
  return nodes;
});
}
  _$jscoverage['telerik.editor.js'][1063]++;
  function textNodes(range) {
    _$jscoverage['telerik.editor.js'][1064]++;
    return new RangeEnumerator(range).enumerate();
}
  _$jscoverage['telerik.editor.js'][1067]++;
  function blockParents(nodes) {
    _$jscoverage['telerik.editor.js'][1068]++;
    var blocks = [];
    _$jscoverage['telerik.editor.js'][1070]++;
    for (var i = 0, len = nodes.length; (i < len); (i++)) {
      _$jscoverage['telerik.editor.js'][1071]++;
      var block = dom.parentOfType(nodes[i], blockElements);
      _$jscoverage['telerik.editor.js'][1072]++;
      if ((block && ($.inArray(block, blocks) < 0))) {
        _$jscoverage['telerik.editor.js'][1073]++;
        blocks.push(block);
      }
}
    _$jscoverage['telerik.editor.js'][1076]++;
    return blocks;
}
  _$jscoverage['telerik.editor.js'][1079]++;
  function getMarkers(range) {
    _$jscoverage['telerik.editor.js'][1080]++;
    var markers = [];
    _$jscoverage['telerik.editor.js'][1082]++;
    new RangeIterator(range).traverse((function (node) {
  _$jscoverage['telerik.editor.js'][1083]++;
  if ((node.className == "t-marker")) {
    _$jscoverage['telerik.editor.js'][1084]++;
    markers.push(node);
  }
}));
    _$jscoverage['telerik.editor.js'][1087]++;
    return markers;
}
  _$jscoverage['telerik.editor.js'][1090]++;
  function RestorePoint(range) {
    _$jscoverage['telerik.editor.js'][1091]++;
    var rootNode = documentFromRange(range);
    _$jscoverage['telerik.editor.js'][1093]++;
    this.body = rootNode.body;
    _$jscoverage['telerik.editor.js'][1095]++;
    this.html = this.body.innerHTML;
    _$jscoverage['telerik.editor.js'][1097]++;
    function index(node) {
      _$jscoverage['telerik.editor.js'][1098]++;
      var result = 0, lastType = node.nodeType;
      _$jscoverage['telerik.editor.js'][1100]++;
      while ((node = node.previousSibling)) {
        _$jscoverage['telerik.editor.js'][1101]++;
        var nodeType = node.nodeType;
        _$jscoverage['telerik.editor.js'][1103]++;
        if (((nodeType != 3) || (lastType != nodeType))) {
          _$jscoverage['telerik.editor.js'][1104]++;
          (result++);
        }
        _$jscoverage['telerik.editor.js'][1106]++;
        lastType = nodeType;
}
      _$jscoverage['telerik.editor.js'][1109]++;
      return result;
}
    _$jscoverage['telerik.editor.js'][1112]++;
    function offset(node, value) {
      _$jscoverage['telerik.editor.js'][1113]++;
      if ((node.nodeType == 3)) {
        _$jscoverage['telerik.editor.js'][1114]++;
        while (((node = node.previousSibling) && (node.nodeType == 3))) {
          _$jscoverage['telerik.editor.js'][1115]++;
          value += node.nodeValue.length;
}
      }
      _$jscoverage['telerik.editor.js'][1117]++;
      return value;
}
    _$jscoverage['telerik.editor.js'][1120]++;
    function nodeToPath(node) {
      _$jscoverage['telerik.editor.js'][1121]++;
      var path = [];
      _$jscoverage['telerik.editor.js'][1123]++;
      while ((node != rootNode)) {
        _$jscoverage['telerik.editor.js'][1124]++;
        path.push(index(node));
        _$jscoverage['telerik.editor.js'][1125]++;
        node = node.parentNode;
}
      _$jscoverage['telerik.editor.js'][1128]++;
      return path;
}
    _$jscoverage['telerik.editor.js'][1131]++;
    function pathToNode(path) {
      _$jscoverage['telerik.editor.js'][1132]++;
      var node = rootNode, length = path.length;
      _$jscoverage['telerik.editor.js'][1134]++;
      while ((length--)) {
        _$jscoverage['telerik.editor.js'][1135]++;
        node = node.childNodes[path[length]];
}
      _$jscoverage['telerik.editor.js'][1137]++;
      return node;
}
    _$jscoverage['telerik.editor.js'][1140]++;
    this.startContainer = nodeToPath(range.startContainer);
    _$jscoverage['telerik.editor.js'][1141]++;
    this.endContainer = nodeToPath(range.endContainer);
    _$jscoverage['telerik.editor.js'][1142]++;
    this.startOffset = offset(range.startContainer, range.startOffset);
    _$jscoverage['telerik.editor.js'][1143]++;
    this.endOffset = offset(range.endContainer, range.endOffset);
    _$jscoverage['telerik.editor.js'][1145]++;
    this.toRange = (function () {
  _$jscoverage['telerik.editor.js'][1146]++;
  var result = range.cloneRange();
  _$jscoverage['telerik.editor.js'][1148]++;
  result.setStart(pathToNode(this.startContainer), this.startOffset);
  _$jscoverage['telerik.editor.js'][1149]++;
  result.setEnd(pathToNode(this.endContainer), this.endOffset);
  _$jscoverage['telerik.editor.js'][1151]++;
  return result;
});
}
  _$jscoverage['telerik.editor.js'][1155]++;
  function Marker() {
    _$jscoverage['telerik.editor.js'][1156]++;
    var caret;
    _$jscoverage['telerik.editor.js'][1158]++;
    this.addCaret = (function (range) {
  _$jscoverage['telerik.editor.js'][1159]++;
  caret = dom.create(documentFromRange(range), "span", {className: "t-marker"});
  _$jscoverage['telerik.editor.js'][1160]++;
  range.insertNode(caret);
  _$jscoverage['telerik.editor.js'][1161]++;
  range.selectNode(caret);
  _$jscoverage['telerik.editor.js'][1162]++;
  return caret;
});
    _$jscoverage['telerik.editor.js'][1165]++;
    this.removeCaret = (function (range) {
  _$jscoverage['telerik.editor.js'][1166]++;
  var previous = caret.previousSibling;
  _$jscoverage['telerik.editor.js'][1167]++;
  var startOffset = 0;
  _$jscoverage['telerik.editor.js'][1169]++;
  if (previous) {
    _$jscoverage['telerik.editor.js'][1170]++;
    startOffset = (isDataNode(previous)? previous.nodeValue.length: findNodeIndex(previous));
  }
  _$jscoverage['telerik.editor.js'][1172]++;
  var container = caret.parentNode;
  _$jscoverage['telerik.editor.js'][1173]++;
  var containerIndex = (previous? findNodeIndex(previous): 0);
  _$jscoverage['telerik.editor.js'][1175]++;
  dom.remove(caret);
  _$jscoverage['telerik.editor.js'][1176]++;
  normalize(container);
  _$jscoverage['telerik.editor.js'][1178]++;
  var node = container.childNodes[containerIndex];
  _$jscoverage['telerik.editor.js'][1180]++;
  if (isDataNode(node)) {
    _$jscoverage['telerik.editor.js'][1181]++;
    range.setStart(node, startOffset);
  }
  else {
    _$jscoverage['telerik.editor.js'][1182]++;
    if (node) {
      _$jscoverage['telerik.editor.js'][1183]++;
      var textNode = dom.lastTextNode(node);
      _$jscoverage['telerik.editor.js'][1184]++;
      if (textNode) {
        _$jscoverage['telerik.editor.js'][1185]++;
        range.setStart(textNode, textNode.nodeValue.length);
      }
      else {
        _$jscoverage['telerik.editor.js'][1187]++;
        (range[(previous? "setStartAfter": "setStartBefore")])(node);
      }
    }
    else {
      _$jscoverage['telerik.editor.js'][1189]++;
      if (((! $.browser.msie) && (container.innerHTML == ""))) {
        _$jscoverage['telerik.editor.js'][1190]++;
        container.innerHTML = "<br _moz_dirty=\"\" />";
      }
      _$jscoverage['telerik.editor.js'][1192]++;
      range.selectNodeContents(container);
    }
  }
  _$jscoverage['telerik.editor.js'][1194]++;
  range.collapse(true);
});
    _$jscoverage['telerik.editor.js'][1197]++;
    this.add = (function (range, expand) {
  _$jscoverage['telerik.editor.js'][1198]++;
  if ((expand && range.collapsed)) {
    _$jscoverage['telerik.editor.js'][1199]++;
    this.addCaret(range);
    _$jscoverage['telerik.editor.js'][1200]++;
    range = RangeUtils.expand(range);
  }
  _$jscoverage['telerik.editor.js'][1203]++;
  var rangeBoundary = range.cloneRange();
  _$jscoverage['telerik.editor.js'][1205]++;
  rangeBoundary.collapse(false);
  _$jscoverage['telerik.editor.js'][1206]++;
  this.end = dom.create(documentFromRange(range), "span", {className: "t-marker"});
  _$jscoverage['telerik.editor.js'][1207]++;
  rangeBoundary.insertNode(this.end);
  _$jscoverage['telerik.editor.js'][1209]++;
  rangeBoundary = range.cloneRange();
  _$jscoverage['telerik.editor.js'][1210]++;
  rangeBoundary.collapse(true);
  _$jscoverage['telerik.editor.js'][1211]++;
  this.start = this.end.cloneNode(true);
  _$jscoverage['telerik.editor.js'][1212]++;
  rangeBoundary.insertNode(this.start);
  _$jscoverage['telerik.editor.js'][1214]++;
  range.setStartBefore(this.start);
  _$jscoverage['telerik.editor.js'][1215]++;
  range.setEndAfter(this.end);
  _$jscoverage['telerik.editor.js'][1217]++;
  normalize(range.commonAncestorContainer);
  _$jscoverage['telerik.editor.js'][1219]++;
  return range;
});
    _$jscoverage['telerik.editor.js'][1222]++;
    this.remove = (function (range) {
  _$jscoverage['telerik.editor.js'][1223]++;
  var start = this.start, end = this.end;
  _$jscoverage['telerik.editor.js'][1225]++;
  normalize(range.commonAncestorContainer);
  _$jscoverage['telerik.editor.js'][1227]++;
  while (((! start.nextSibling) && start.parentNode)) {
    _$jscoverage['telerik.editor.js'][1227]++;
    start = start.parentNode;
}
  _$jscoverage['telerik.editor.js'][1228]++;
  while (((! end.previousSibling) && end.parentNode)) {
    _$jscoverage['telerik.editor.js'][1228]++;
    end = end.parentNode;
}
  _$jscoverage['telerik.editor.js'][1230]++;
  var shouldNormalizeStart = (start.previousSibling && (start.previousSibling.nodeType == 3) && (start.nextSibling && (start.nextSibling.nodeType == 3)));
  _$jscoverage['telerik.editor.js'][1233]++;
  var shouldNormalizeEnd = (end.previousSibling && (end.previousSibling.nodeType == 3) && (end.nextSibling && (end.nextSibling.nodeType == 3)));
  _$jscoverage['telerik.editor.js'][1236]++;
  start = start.nextSibling;
  _$jscoverage['telerik.editor.js'][1237]++;
  end = end.previousSibling;
  _$jscoverage['telerik.editor.js'][1239]++;
  var collapsed = false;
  _$jscoverage['telerik.editor.js'][1240]++;
  var collapsedToStart = false;
  _$jscoverage['telerik.editor.js'][1242]++;
  if ((start == this.end)) {
    _$jscoverage['telerik.editor.js'][1243]++;
    collapsedToStart = (! (! this.start.previousSibling));
    _$jscoverage['telerik.editor.js'][1244]++;
    start = (end = (this.start.previousSibling || this.end.nextSibling));
    _$jscoverage['telerik.editor.js'][1245]++;
    collapsed = true;
  }
  _$jscoverage['telerik.editor.js'][1248]++;
  dom.remove(this.start);
  _$jscoverage['telerik.editor.js'][1249]++;
  dom.remove(this.end);
  _$jscoverage['telerik.editor.js'][1251]++;
  if (((start == null) || (end == null))) {
    _$jscoverage['telerik.editor.js'][1252]++;
    range.selectNodeContents(range.commonAncestorContainer);
    _$jscoverage['telerik.editor.js'][1253]++;
    range.collapse(true);
    _$jscoverage['telerik.editor.js'][1254]++;
    return;
  }
  _$jscoverage['telerik.editor.js'][1257]++;
  var startOffset = (collapsed? (isDataNode(start)? start.nodeValue.length: start.childNodes.length): 0);
  _$jscoverage['telerik.editor.js'][1258]++;
  var endOffset = (isDataNode(end)? end.nodeValue.length: end.childNodes.length);
  _$jscoverage['telerik.editor.js'][1260]++;
  if ((start.nodeType == 3)) {
    _$jscoverage['telerik.editor.js'][1261]++;
    while ((start.previousSibling && (start.previousSibling.nodeType == 3))) {
      _$jscoverage['telerik.editor.js'][1262]++;
      start = start.previousSibling;
      _$jscoverage['telerik.editor.js'][1263]++;
      startOffset += start.nodeValue.length;
}
  }
  _$jscoverage['telerik.editor.js'][1266]++;
  if ((end.nodeType == 3)) {
    _$jscoverage['telerik.editor.js'][1267]++;
    while ((end.previousSibling && (end.previousSibling.nodeType == 3))) {
      _$jscoverage['telerik.editor.js'][1268]++;
      end = end.previousSibling;
      _$jscoverage['telerik.editor.js'][1269]++;
      endOffset += end.nodeValue.length;
}
  }
  _$jscoverage['telerik.editor.js'][1271]++;
  var startIndex = findNodeIndex(start), startParent = start.parentNode;
  _$jscoverage['telerik.editor.js'][1272]++;
  var endIndex = findNodeIndex(end), endParent = end.parentNode;
  _$jscoverage['telerik.editor.js'][1274]++;
  for (var startPointer = start; startPointer.previousSibling; (startPointer = startPointer.previousSibling)) {
    _$jscoverage['telerik.editor.js'][1275]++;
    if (((startPointer.nodeType == 3) && (startPointer.previousSibling.nodeType == 3))) {
      _$jscoverage['telerik.editor.js'][1275]++;
      (startIndex--);
    }
}
  _$jscoverage['telerik.editor.js'][1277]++;
  for (var endPointer = end; endPointer.previousSibling; (endPointer = endPointer.previousSibling)) {
    _$jscoverage['telerik.editor.js'][1278]++;
    if (((endPointer.nodeType == 3) && (endPointer.previousSibling.nodeType == 3))) {
      _$jscoverage['telerik.editor.js'][1278]++;
      (endIndex--);
    }
}
  _$jscoverage['telerik.editor.js'][1280]++;
  normalize(startParent);
  _$jscoverage['telerik.editor.js'][1282]++;
  if ((start.nodeType == 3)) {
    _$jscoverage['telerik.editor.js'][1283]++;
    start = startParent.childNodes[startIndex];
  }
  _$jscoverage['telerik.editor.js'][1285]++;
  normalize(endParent);
  _$jscoverage['telerik.editor.js'][1286]++;
  if ((end.nodeType == 3)) {
    _$jscoverage['telerik.editor.js'][1287]++;
    end = endParent.childNodes[endIndex];
  }
  _$jscoverage['telerik.editor.js'][1289]++;
  if (collapsed) {
    _$jscoverage['telerik.editor.js'][1290]++;
    if ((start.nodeType == 3)) {
      _$jscoverage['telerik.editor.js'][1291]++;
      range.setStart(start, startOffset);
    }
    else {
      _$jscoverage['telerik.editor.js'][1293]++;
      (range[(collapsedToStart? "setStartAfter": "setStartBefore")])(start);
    }
    _$jscoverage['telerik.editor.js'][1295]++;
    range.collapse(true);
  }
  else {
    _$jscoverage['telerik.editor.js'][1298]++;
    if ((start.nodeType == 3)) {
      _$jscoverage['telerik.editor.js'][1299]++;
      range.setStart(start, startOffset);
    }
    else {
      _$jscoverage['telerik.editor.js'][1301]++;
      range.setStartBefore(start);
    }
    _$jscoverage['telerik.editor.js'][1303]++;
    if ((end.nodeType == 3)) {
      _$jscoverage['telerik.editor.js'][1304]++;
      range.setEnd(end, endOffset);
    }
    else {
      _$jscoverage['telerik.editor.js'][1306]++;
      range.setEndAfter(end);
    }
  }
  _$jscoverage['telerik.editor.js'][1308]++;
  if (caret) {
    _$jscoverage['telerik.editor.js'][1309]++;
    this.removeCaret(range);
  }
});
}
  _$jscoverage['telerik.editor.js'][1313]++;
  var boundary = /[\u0009-\u000d]|\u0020|\u00a0|\ufeff|\.|,|;|:|!|\(|\)|\?/;
  _$jscoverage['telerik.editor.js'][1315]++;
  var RangeUtils = {nodes: (function (range) {
  _$jscoverage['telerik.editor.js'][1317]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][1318]++;
  if ((! nodes.length)) {
    _$jscoverage['telerik.editor.js'][1319]++;
    range.selectNodeContents(range.commonAncestorContainer);
    _$jscoverage['telerik.editor.js'][1320]++;
    nodes = textNodes(range);
    _$jscoverage['telerik.editor.js'][1321]++;
    if ((! nodes.length)) {
      _$jscoverage['telerik.editor.js'][1322]++;
      nodes = dom.significantChildNodes(range.commonAncestorContainer);
    }
  }
  _$jscoverage['telerik.editor.js'][1324]++;
  return nodes;
}), image: (function (range) {
  _$jscoverage['telerik.editor.js'][1328]++;
  var nodes = [];
  _$jscoverage['telerik.editor.js'][1330]++;
  new RangeIterator(range).traverse((function (node) {
  _$jscoverage['telerik.editor.js'][1331]++;
  if (dom.is(node, "img")) {
    _$jscoverage['telerik.editor.js'][1332]++;
    nodes.push(node);
  }
}));
  _$jscoverage['telerik.editor.js'][1335]++;
  if ((nodes.length == 1)) {
    _$jscoverage['telerik.editor.js'][1336]++;
    return nodes[0];
  }
}), expand: (function (range) {
  _$jscoverage['telerik.editor.js'][1340]++;
  var result = range.cloneRange();
  _$jscoverage['telerik.editor.js'][1342]++;
  var startContainer = result.startContainer.childNodes[((result.startOffset == 0)? 0: (result.startOffset - 1))];
  _$jscoverage['telerik.editor.js'][1343]++;
  var endContainer = result.endContainer.childNodes[result.endOffset];
  _$jscoverage['telerik.editor.js'][1345]++;
  if (((! isDataNode(startContainer)) || (! isDataNode(endContainer)))) {
    _$jscoverage['telerik.editor.js'][1346]++;
    return result;
  }
  _$jscoverage['telerik.editor.js'][1348]++;
  var beforeCaret = startContainer.nodeValue;
  _$jscoverage['telerik.editor.js'][1349]++;
  var afterCaret = endContainer.nodeValue;
  _$jscoverage['telerik.editor.js'][1351]++;
  if (((beforeCaret == "") || (afterCaret == ""))) {
    _$jscoverage['telerik.editor.js'][1352]++;
    return result;
  }
  _$jscoverage['telerik.editor.js'][1354]++;
  var startOffset = beforeCaret.split("").reverse().join("").search(boundary);
  _$jscoverage['telerik.editor.js'][1355]++;
  var endOffset = afterCaret.search(boundary);
  _$jscoverage['telerik.editor.js'][1357]++;
  if (((startOffset == 0) || (endOffset == 0))) {
    _$jscoverage['telerik.editor.js'][1358]++;
    return result;
  }
  _$jscoverage['telerik.editor.js'][1360]++;
  endOffset = ((endOffset == -1)? afterCaret.length: endOffset);
  _$jscoverage['telerik.editor.js'][1361]++;
  startOffset = ((startOffset == -1)? 0: (beforeCaret.length - startOffset));
  _$jscoverage['telerik.editor.js'][1363]++;
  result.setStart(startContainer, startOffset);
  _$jscoverage['telerik.editor.js'][1364]++;
  result.setEnd(endContainer, endOffset);
  _$jscoverage['telerik.editor.js'][1366]++;
  return result;
}), isExpandable: (function (range) {
  _$jscoverage['telerik.editor.js'][1370]++;
  var node = range.startContainer;
  _$jscoverage['telerik.editor.js'][1371]++;
  var document = documentFromRange(range);
  _$jscoverage['telerik.editor.js'][1373]++;
  if (((node == document) || (node == document.body))) {
    _$jscoverage['telerik.editor.js'][1374]++;
    return false;
  }
  _$jscoverage['telerik.editor.js'][1376]++;
  var result = range.cloneRange();
  _$jscoverage['telerik.editor.js'][1378]++;
  var value = node.nodeValue;
  _$jscoverage['telerik.editor.js'][1379]++;
  if ((! value)) {
    _$jscoverage['telerik.editor.js'][1380]++;
    return false;
  }
  _$jscoverage['telerik.editor.js'][1382]++;
  var beforeCaret = value.substring(0, result.startOffset);
  _$jscoverage['telerik.editor.js'][1383]++;
  var afterCaret = value.substring(result.startOffset);
  _$jscoverage['telerik.editor.js'][1385]++;
  var startOffset = 0, endOffset = 0;
  _$jscoverage['telerik.editor.js'][1387]++;
  if ((beforeCaret != "")) {
    _$jscoverage['telerik.editor.js'][1388]++;
    startOffset = beforeCaret.split("").reverse().join("").search(boundary);
  }
  _$jscoverage['telerik.editor.js'][1390]++;
  if ((afterCaret != "")) {
    _$jscoverage['telerik.editor.js'][1391]++;
    endOffset = afterCaret.search(boundary);
  }
  _$jscoverage['telerik.editor.js'][1393]++;
  return ((startOffset != 0) && (endOffset != 0));
})};
  _$jscoverage['telerik.editor.js'][1395]++;
  function Command(options) {
    _$jscoverage['telerik.editor.js'][1396]++;
    var restorePoint = new RestorePoint(options.range);
    _$jscoverage['telerik.editor.js'][1397]++;
    var marker = new Marker();
    _$jscoverage['telerik.editor.js'][1399]++;
    this.formatter = options.formatter;
    _$jscoverage['telerik.editor.js'][1401]++;
    this.getRange = (function () {
  _$jscoverage['telerik.editor.js'][1402]++;
  return restorePoint.toRange();
});
    _$jscoverage['telerik.editor.js'][1405]++;
    this.lockRange = (function (expand) {
  _$jscoverage['telerik.editor.js'][1406]++;
  return marker.add(this.getRange(), expand);
});
    _$jscoverage['telerik.editor.js'][1409]++;
    this.releaseRange = (function (range) {
  _$jscoverage['telerik.editor.js'][1410]++;
  marker.remove(range);
  _$jscoverage['telerik.editor.js'][1411]++;
  selectRange(range);
});
    _$jscoverage['telerik.editor.js'][1414]++;
    this.undo = (function () {
  _$jscoverage['telerik.editor.js'][1415]++;
  restorePoint.body.innerHTML = restorePoint.html;
  _$jscoverage['telerik.editor.js'][1416]++;
  selectRange(restorePoint.toRange());
});
    _$jscoverage['telerik.editor.js'][1419]++;
    this.redo = (function () {
  _$jscoverage['telerik.editor.js'][1420]++;
  this.exec();
});
    _$jscoverage['telerik.editor.js'][1423]++;
    this.exec = (function () {
  _$jscoverage['telerik.editor.js'][1424]++;
  var range = this.lockRange(true);
  _$jscoverage['telerik.editor.js'][1425]++;
  this.formatter.editor = this.editor;
  _$jscoverage['telerik.editor.js'][1426]++;
  this.formatter.toggle(range);
  _$jscoverage['telerik.editor.js'][1427]++;
  this.releaseRange(range);
});
}
  _$jscoverage['telerik.editor.js'][1431]++;
  function GenericCommand(startRestorePoint, endRestorePoint) {
    _$jscoverage['telerik.editor.js'][1432]++;
    var body = startRestorePoint.body;
    _$jscoverage['telerik.editor.js'][1434]++;
    this.redo = (function () {
  _$jscoverage['telerik.editor.js'][1435]++;
  body.innerHTML = endRestorePoint.html;
  _$jscoverage['telerik.editor.js'][1436]++;
  selectRange(endRestorePoint.toRange());
});
    _$jscoverage['telerik.editor.js'][1439]++;
    this.undo = (function () {
  _$jscoverage['telerik.editor.js'][1440]++;
  body.innerHTML = startRestorePoint.html;
  _$jscoverage['telerik.editor.js'][1441]++;
  selectRange(startRestorePoint.toRange());
});
}
  _$jscoverage['telerik.editor.js'][1445]++;
  function InsertHtmlCommand(options) {
    _$jscoverage['telerik.editor.js'][1446]++;
    Command.call(this, options);
    _$jscoverage['telerik.editor.js'][1448]++;
    this.managesUndoRedo = true;
    _$jscoverage['telerik.editor.js'][1450]++;
    this.exec = (function () {
  _$jscoverage['telerik.editor.js'][1451]++;
  var editor = this.editor;
  _$jscoverage['telerik.editor.js'][1452]++;
  var range = editor.getRange();
  _$jscoverage['telerik.editor.js'][1453]++;
  var startRestorePoint = new RestorePoint(range);
  _$jscoverage['telerik.editor.js'][1455]++;
  editor.clipboard.paste((options.value || ""));
  _$jscoverage['telerik.editor.js'][1456]++;
  editor.undoRedoStack.push(new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange())));
  _$jscoverage['telerik.editor.js'][1458]++;
  editor.focus();
});
}
  _$jscoverage['telerik.editor.js'][1461]++;
  function InsertHtmlTool() {
    _$jscoverage['telerik.editor.js'][1462]++;
    Tool.call(this);
    _$jscoverage['telerik.editor.js'][1464]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][1465]++;
  return new InsertHtmlCommand(commandArguments);
});
    _$jscoverage['telerik.editor.js'][1468]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][1469]++;
  $ui.data("tSelectBox").close();
});
    _$jscoverage['telerik.editor.js'][1472]++;
    this.init = (function ($ui, initOptions) {
  _$jscoverage['telerik.editor.js'][1473]++;
  var editor = initOptions.editor;
  _$jscoverage['telerik.editor.js'][1475]++;
  $ui.tSelectBox({data: editor.insertHtml, onItemCreate: (function (e) {
  _$jscoverage['telerik.editor.js'][1478]++;
  e.html = ("<span unselectable=\"on\">" + e.dataItem.Text + "</span>");
}), onChange: (function (e) {
  _$jscoverage['telerik.editor.js'][1481]++;
  Tool.exec(editor, "insertHtml", e.value);
}), highlightFirst: false}).find(".t-input").html(editor.localization.insertHtml);
});
}
  _$jscoverage['telerik.editor.js'][1488]++;
  function UndoRedoStack() {
    _$jscoverage['telerik.editor.js'][1489]++;
    var stack = [], currentCommandIndex = -1;
    _$jscoverage['telerik.editor.js'][1491]++;
    this.push = (function (command) {
  _$jscoverage['telerik.editor.js'][1492]++;
  stack = stack.slice(0, (currentCommandIndex + 1));
  _$jscoverage['telerik.editor.js'][1493]++;
  currentCommandIndex = (stack.push(command) - 1);
});
    _$jscoverage['telerik.editor.js'][1496]++;
    this.undo = (function () {
  _$jscoverage['telerik.editor.js'][1497]++;
  if (this.canUndo()) {
    _$jscoverage['telerik.editor.js'][1498]++;
    stack[(currentCommandIndex--)].undo();
  }
});
    _$jscoverage['telerik.editor.js'][1501]++;
    this.redo = (function () {
  _$jscoverage['telerik.editor.js'][1502]++;
  if (this.canRedo()) {
    _$jscoverage['telerik.editor.js'][1503]++;
    stack[(++currentCommandIndex)].redo();
  }
});
    _$jscoverage['telerik.editor.js'][1506]++;
    this.canUndo = (function () {
  _$jscoverage['telerik.editor.js'][1507]++;
  return (currentCommandIndex >= 0);
});
    _$jscoverage['telerik.editor.js'][1510]++;
    this.canRedo = (function () {
  _$jscoverage['telerik.editor.js'][1511]++;
  return (currentCommandIndex != (stack.length - 1));
});
}
  _$jscoverage['telerik.editor.js'][1515]++;
  function TypingHandler(editor) {
    _$jscoverage['telerik.editor.js'][1516]++;
    this.keydown = (function (e) {
  _$jscoverage['telerik.editor.js'][1517]++;
  var keyboard = editor.keyboard;
  _$jscoverage['telerik.editor.js'][1518]++;
  var isTypingKey = keyboard.isTypingKey(e);
  _$jscoverage['telerik.editor.js'][1520]++;
  if ((! isTypingKey)) {
    _$jscoverage['telerik.editor.js'][1521]++;
    removePendingFormats(editor);
  }
  _$jscoverage['telerik.editor.js'][1523]++;
  if ((isTypingKey && (! keyboard.typingInProgress()))) {
    _$jscoverage['telerik.editor.js'][1524]++;
    this.startRestorePoint = new RestorePoint(editor.getRange());
    _$jscoverage['telerik.editor.js'][1525]++;
    keyboard.startTyping($.proxy((function () {
  _$jscoverage['telerik.editor.js'][1526]++;
  this.endRestorePoint = new RestorePoint(editor.getRange());
  _$jscoverage['telerik.editor.js'][1527]++;
  editor.undoRedoStack.push(new GenericCommand(this.startRestorePoint, this.endRestorePoint));
}), this));
    _$jscoverage['telerik.editor.js'][1530]++;
    return true;
  }
  _$jscoverage['telerik.editor.js'][1533]++;
  return false;
});
    _$jscoverage['telerik.editor.js'][1536]++;
    this.keyup = (function (e) {
  _$jscoverage['telerik.editor.js'][1537]++;
  var keyboard = editor.keyboard;
  _$jscoverage['telerik.editor.js'][1539]++;
  if (keyboard.typingInProgress()) {
    _$jscoverage['telerik.editor.js'][1540]++;
    keyboard.endTyping();
    _$jscoverage['telerik.editor.js'][1541]++;
    return true;
  }
  _$jscoverage['telerik.editor.js'][1544]++;
  return false;
});
}
  _$jscoverage['telerik.editor.js'][1548]++;
  function SystemHandler(editor) {
    _$jscoverage['telerik.editor.js'][1549]++;
    var systemCommandIsInProgress = false;
    _$jscoverage['telerik.editor.js'][1551]++;
    this.createUndoCommand = (function () {
  _$jscoverage['telerik.editor.js'][1552]++;
  this.endRestorePoint = new RestorePoint(editor.getRange());
  _$jscoverage['telerik.editor.js'][1553]++;
  editor.undoRedoStack.push(new GenericCommand(this.startRestorePoint, this.endRestorePoint));
  _$jscoverage['telerik.editor.js'][1554]++;
  this.startRestorePoint = this.endRestorePoint;
});
    _$jscoverage['telerik.editor.js'][1557]++;
    ((this.changed = (function () {
  _$jscoverage['telerik.editor.js'][1558]++;
  if (this.startRestorePoint) {
    _$jscoverage['telerik.editor.js'][1559]++;
    return (this.startRestorePoint.html != editor.body.innerHTML);
  }
  _$jscoverage['telerik.editor.js'][1561]++;
  return false;
})), (this.keydown = (function (e) {
  _$jscoverage['telerik.editor.js'][1565]++;
  var keyboard = editor.keyboard;
  _$jscoverage['telerik.editor.js'][1567]++;
  if (keyboard.isModifierKey(e)) {
    _$jscoverage['telerik.editor.js'][1569]++;
    if (keyboard.typingInProgress()) {
      _$jscoverage['telerik.editor.js'][1570]++;
      keyboard.endTyping(true);
    }
    _$jscoverage['telerik.editor.js'][1572]++;
    this.startRestorePoint = new RestorePoint(editor.getRange());
    _$jscoverage['telerik.editor.js'][1573]++;
    return true;
  }
  _$jscoverage['telerik.editor.js'][1576]++;
  if (keyboard.isSystem(e)) {
    _$jscoverage['telerik.editor.js'][1577]++;
    systemCommandIsInProgress = true;
    _$jscoverage['telerik.editor.js'][1579]++;
    if (this.changed()) {
      _$jscoverage['telerik.editor.js'][1580]++;
      systemCommandIsInProgress = false;
      _$jscoverage['telerik.editor.js'][1581]++;
      this.createUndoCommand();
    }
    _$jscoverage['telerik.editor.js'][1584]++;
    return true;
  }
  _$jscoverage['telerik.editor.js'][1587]++;
  return false;
})));
    _$jscoverage['telerik.editor.js'][1590]++;
    this.keyup = (function (e) {
  _$jscoverage['telerik.editor.js'][1591]++;
  if ((systemCommandIsInProgress && this.changed())) {
    _$jscoverage['telerik.editor.js'][1592]++;
    systemCommandIsInProgress = false;
    _$jscoverage['telerik.editor.js'][1593]++;
    this.createUndoCommand(e);
    _$jscoverage['telerik.editor.js'][1594]++;
    return true;
  }
  _$jscoverage['telerik.editor.js'][1597]++;
  return false;
});
}
  _$jscoverage['telerik.editor.js'][1601]++;
  function Keyboard(handlers) {
    _$jscoverage['telerik.editor.js'][1602]++;
    var typingInProgress = false;
    _$jscoverage['telerik.editor.js'][1603]++;
    var timeout;
    _$jscoverage['telerik.editor.js'][1604]++;
    var onEndTyping;
    _$jscoverage['telerik.editor.js'][1606]++;
    function isCharacter(keyCode) {
      _$jscoverage['telerik.editor.js'][1607]++;
      return (((keyCode >= 48) && (keyCode <= 90)) || ((keyCode >= 96) && (keyCode <= 111)) || ((keyCode >= 186) && (keyCode <= 192)) || ((keyCode >= 219) && (keyCode <= 222)));
}
    _$jscoverage['telerik.editor.js'][1611]++;
    this.toolFromShortcut = (function (tools, e) {
  _$jscoverage['telerik.editor.js'][1612]++;
  var key = String.fromCharCode(e.keyCode);
  _$jscoverage['telerik.editor.js'][1614]++;
  for (var toolName in tools) {
    _$jscoverage['telerik.editor.js'][1615]++;
    var tool = tools[toolName];
    _$jscoverage['telerik.editor.js'][1617]++;
    if ((((tool.key == key) || (tool.key == e.keyCode)) && ((! (! tool.ctrl)) == e.ctrlKey) && ((! (! tool.alt)) == e.altKey) && ((! (! tool.shift)) == e.shiftKey))) {
      _$jscoverage['telerik.editor.js'][1618]++;
      return toolName;
    }
}
});
    _$jscoverage['telerik.editor.js'][1622]++;
    this.isTypingKey = (function (e) {
  _$jscoverage['telerik.editor.js'][1623]++;
  var keyCode = e.keyCode;
  _$jscoverage['telerik.editor.js'][1624]++;
  return ((isCharacter(keyCode) && (! e.ctrlKey) && (! e.altKey)) || (keyCode == 32) || (keyCode == 13) || (keyCode == 8) || ((keyCode == 46) && (! e.shiftKey) && (! e.ctrlKey) && (! e.altKey)));
});
    _$jscoverage['telerik.editor.js'][1628]++;
    this.isModifierKey = (function (e) {
  _$jscoverage['telerik.editor.js'][1629]++;
  var keyCode = e.keyCode;
  _$jscoverage['telerik.editor.js'][1630]++;
  return (((keyCode == 17) && (! e.shiftKey) && (! e.altKey)) || ((keyCode == 16) && (! e.ctrlKey) && (! e.altKey)) || ((keyCode == 18) && (! e.ctrlKey) && (! e.shiftKey)));
});
    _$jscoverage['telerik.editor.js'][1635]++;
    this.isSystem = (function (e) {
  _$jscoverage['telerik.editor.js'][1636]++;
  return ((e.keyCode == 46) && e.ctrlKey && (! e.altKey) && (! e.shiftKey));
});
    _$jscoverage['telerik.editor.js'][1639]++;
    this.startTyping = (function (callback) {
  _$jscoverage['telerik.editor.js'][1640]++;
  onEndTyping = callback;
  _$jscoverage['telerik.editor.js'][1641]++;
  typingInProgress = true;
});
    _$jscoverage['telerik.editor.js'][1644]++;
    function stopTyping() {
      _$jscoverage['telerik.editor.js'][1645]++;
      typingInProgress = false;
      _$jscoverage['telerik.editor.js'][1646]++;
      onEndTyping();
}
    _$jscoverage['telerik.editor.js'][1649]++;
    this.endTyping = (function (force) {
  _$jscoverage['telerik.editor.js'][1650]++;
  this.clearTimeout();
  _$jscoverage['telerik.editor.js'][1651]++;
  if (force) {
    _$jscoverage['telerik.editor.js'][1652]++;
    stopTyping();
  }
  else {
    _$jscoverage['telerik.editor.js'][1654]++;
    timeout = window.setTimeout(stopTyping, 1000);
  }
});
    _$jscoverage['telerik.editor.js'][1657]++;
    this.typingInProgress = (function () {
  _$jscoverage['telerik.editor.js'][1658]++;
  return typingInProgress;
});
    _$jscoverage['telerik.editor.js'][1661]++;
    this.clearTimeout = (function () {
  _$jscoverage['telerik.editor.js'][1662]++;
  window.clearTimeout(timeout);
});
    _$jscoverage['telerik.editor.js'][1665]++;
    function notify(e, what) {
      _$jscoverage['telerik.editor.js'][1666]++;
      for (var i = 0; (i < handlers.length); (i++)) {
        _$jscoverage['telerik.editor.js'][1667]++;
        if ((handlers[i][what])(e)) {
          _$jscoverage['telerik.editor.js'][1668]++;
          break;
        }
}
}
    _$jscoverage['telerik.editor.js'][1671]++;
    this.keydown = (function (e) {
  _$jscoverage['telerik.editor.js'][1672]++;
  notify(e, "keydown");
});
    _$jscoverage['telerik.editor.js'][1675]++;
    this.keyup = (function (e) {
  _$jscoverage['telerik.editor.js'][1676]++;
  notify(e, "keyup");
});
}
  _$jscoverage['telerik.editor.js'][1680]++;
  function Clipboard(editor) {
    _$jscoverage['telerik.editor.js'][1681]++;
    var cleaners = [new MSWordFormatCleaner()];
    _$jscoverage['telerik.editor.js'][1683]++;
    function htmlToFragment(html) {
      _$jscoverage['telerik.editor.js'][1684]++;
      var container = dom.create(editor.document, "div");
      _$jscoverage['telerik.editor.js'][1685]++;
      container.innerHTML = html;
      _$jscoverage['telerik.editor.js'][1687]++;
      var fragment = editor.document.createDocumentFragment();
      _$jscoverage['telerik.editor.js'][1689]++;
      while (container.firstChild) {
        _$jscoverage['telerik.editor.js'][1690]++;
        fragment.appendChild(container.firstChild);
}
      _$jscoverage['telerik.editor.js'][1692]++;
      return fragment;
}
    _$jscoverage['telerik.editor.js'][1695]++;
    function isBlock(html) {
      _$jscoverage['telerik.editor.js'][1696]++;
      return /<(div|p|ul|ol|table|h[1-6])/i.test(html);
}
    _$jscoverage['telerik.editor.js'][1699]++;
    this.oncut = (function (e) {
  _$jscoverage['telerik.editor.js'][1700]++;
  var startRestorePoint = new RestorePoint(editor.getRange());
  _$jscoverage['telerik.editor.js'][1701]++;
  setTimeout((function () {
  _$jscoverage['telerik.editor.js'][1702]++;
  editor.undoRedoStack.push(new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange())));
}));
});
    _$jscoverage['telerik.editor.js'][1706]++;
    this.onpaste = (function (e) {
  _$jscoverage['telerik.editor.js'][1707]++;
  var range = editor.getRange();
  _$jscoverage['telerik.editor.js'][1708]++;
  var startRestorePoint = new RestorePoint(range);
  _$jscoverage['telerik.editor.js'][1710]++;
  var clipboardNode = dom.create(editor.document, "div", {className: "t-paste-container", innerHTML: "\ufeff"});
  _$jscoverage['telerik.editor.js'][1712]++;
  editor.body.appendChild(clipboardNode);
  _$jscoverage['telerik.editor.js'][1714]++;
  if (editor.body.createTextRange) {
    _$jscoverage['telerik.editor.js'][1715]++;
    e.preventDefault();
    _$jscoverage['telerik.editor.js'][1716]++;
    var r = editor.createRange();
    _$jscoverage['telerik.editor.js'][1717]++;
    r.selectNodeContents(clipboardNode);
    _$jscoverage['telerik.editor.js'][1718]++;
    editor.selectRange(r);
    _$jscoverage['telerik.editor.js'][1719]++;
    var textRange = editor.body.createTextRange();
    _$jscoverage['telerik.editor.js'][1720]++;
    textRange.moveToElementText(clipboardNode);
    _$jscoverage['telerik.editor.js'][1721]++;
    $(editor.body).unbind("paste");
    _$jscoverage['telerik.editor.js'][1722]++;
    textRange.execCommand("Paste");
    _$jscoverage['telerik.editor.js'][1723]++;
    $(editor.body).bind("paste", arguments.callee);
  }
  else {
    _$jscoverage['telerik.editor.js'][1725]++;
    var clipboardRange = editor.createRange();
    _$jscoverage['telerik.editor.js'][1726]++;
    clipboardRange.selectNodeContents(clipboardNode);
    _$jscoverage['telerik.editor.js'][1727]++;
    selectRange(clipboardRange);
  }
  _$jscoverage['telerik.editor.js'][1730]++;
  setTimeout((function () {
  _$jscoverage['telerik.editor.js'][1731]++;
  selectRange(range);
  _$jscoverage['telerik.editor.js'][1732]++;
  dom.remove(clipboardNode);
  _$jscoverage['telerik.editor.js'][1734]++;
  if ((clipboardNode.lastChild && dom.is(clipboardNode.lastChild, "br"))) {
    _$jscoverage['telerik.editor.js'][1735]++;
    dom.remove(clipboardNode.lastChild);
  }
  _$jscoverage['telerik.editor.js'][1737]++;
  editor.clipboard.paste(clipboardNode.innerHTML);
  _$jscoverage['telerik.editor.js'][1738]++;
  editor.undoRedoStack.push(new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange())));
}));
});
    _$jscoverage['telerik.editor.js'][1742]++;
    function splittableParent(block, node) {
      _$jscoverage['telerik.editor.js'][1743]++;
      if (block) {
        _$jscoverage['telerik.editor.js'][1744]++;
        return (dom.parentOfType(node, ["p", "ul", "ol"]) || node.parentNode);
      }
      _$jscoverage['telerik.editor.js'][1746]++;
      var parent = node.parentNode;
      _$jscoverage['telerik.editor.js'][1747]++;
      var body = node.ownerDocument.body;
      _$jscoverage['telerik.editor.js'][1749]++;
      if (dom.isInline(parent)) {
        _$jscoverage['telerik.editor.js'][1750]++;
        while (((parent.parentNode != body) && (! dom.isBlock(parent.parentNode)))) {
          _$jscoverage['telerik.editor.js'][1751]++;
          parent = parent.parentNode;
}
      }
      _$jscoverage['telerik.editor.js'][1754]++;
      return parent;
}
    _$jscoverage['telerik.editor.js'][1757]++;
    this.paste = (function (html) {
  _$jscoverage['telerik.editor.js'][1758]++;
  for (var i = 0, l = cleaners.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][1759]++;
    if (cleaners[i].applicable(html)) {
      _$jscoverage['telerik.editor.js'][1760]++;
      html = cleaners[i].clean(html);
    }
}
  _$jscoverage['telerik.editor.js'][1763]++;
  html = html.replace(/^<li/i, "<ul><li").replace(/li>$/g, "li></ul>");
  _$jscoverage['telerik.editor.js'][1765]++;
  var block = isBlock(html);
  _$jscoverage['telerik.editor.js'][1767]++;
  var range = editor.getRange();
  _$jscoverage['telerik.editor.js'][1768]++;
  range.deleteContents();
  _$jscoverage['telerik.editor.js'][1770]++;
  if ((range.startContainer == editor.document)) {
    _$jscoverage['telerik.editor.js'][1771]++;
    range.selectNodeContents(editor.body);
  }
  _$jscoverage['telerik.editor.js'][1773]++;
  var marker = new Marker();
  _$jscoverage['telerik.editor.js'][1774]++;
  var caret = marker.addCaret(range);
  _$jscoverage['telerik.editor.js'][1776]++;
  var parent = splittableParent(block, caret);
  _$jscoverage['telerik.editor.js'][1777]++;
  var unwrap = false;
  _$jscoverage['telerik.editor.js'][1779]++;
  if (((! /body|td/.test(dom.name(parent))) && (block || dom.isInline(parent)))) {
    _$jscoverage['telerik.editor.js'][1780]++;
    range.selectNode(caret);
    _$jscoverage['telerik.editor.js'][1781]++;
    split(range, parent, true);
    _$jscoverage['telerik.editor.js'][1782]++;
    unwrap = true;
  }
  _$jscoverage['telerik.editor.js'][1785]++;
  var fragment = htmlToFragment(html);
  _$jscoverage['telerik.editor.js'][1786]++;
  range.insertNode(fragment);
  _$jscoverage['telerik.editor.js'][1788]++;
  parent = splittableParent(block, caret);
  _$jscoverage['telerik.editor.js'][1789]++;
  if (unwrap) {
    _$jscoverage['telerik.editor.js'][1790]++;
    while ((caret.parentNode != parent)) {
      _$jscoverage['telerik.editor.js'][1791]++;
      dom.unwrap(caret.parentNode);
}
    _$jscoverage['telerik.editor.js'][1793]++;
    dom.unwrap(caret.parentNode);
  }
  _$jscoverage['telerik.editor.js'][1796]++;
  normalize(range.commonAncestorContainer);
  _$jscoverage['telerik.editor.js'][1797]++;
  caret.style.display = "inline";
  _$jscoverage['telerik.editor.js'][1798]++;
  dom.scrollTo(caret);
  _$jscoverage['telerik.editor.js'][1799]++;
  marker.removeCaret(range);
  _$jscoverage['telerik.editor.js'][1800]++;
  selectRange(range);
});
}
  _$jscoverage['telerik.editor.js'][1804]++;
  function MSWordFormatCleaner() {
    _$jscoverage['telerik.editor.js'][1805]++;
    var replacements = [/<!--(.|\n)*?-->/g, "", /mso-[^;"]*;?/gi, "", /<\/?(meta|link|style|o:|v:)[^>]*>((?:.|\n)*?<\/(meta|link|style|o:|v:)[^>]*>)?/gi, ""];
    _$jscoverage['telerik.editor.js'][1811]++;
    this.applicable = (function (html) {
  _$jscoverage['telerik.editor.js'][1812]++;
  return /class="?Mso|style="[^"]*mso-/i.test(html);
});
    _$jscoverage['telerik.editor.js'][1815]++;
    function listType(html) {
      _$jscoverage['telerik.editor.js'][1816]++;
      if (/^[\u2022\u00b7\u00a7\u00d8o\-]\u00a0+/.test(html)) {
        _$jscoverage['telerik.editor.js'][1817]++;
        return "ul";
      }
      _$jscoverage['telerik.editor.js'][1819]++;
      if (/^\s*\w+[\.\)]\u00a0{2,}/.test(html)) {
        _$jscoverage['telerik.editor.js'][1820]++;
        return "ol";
      }
}
    _$jscoverage['telerik.editor.js'][1823]++;
    function lists(html) {
      _$jscoverage['telerik.editor.js'][1824]++;
      var placeholder = dom.create(document, "div", {innerHTML: html});
      _$jscoverage['telerik.editor.js'][1825]++;
      var blockChildren = $(blockElements.join(","), placeholder);
      _$jscoverage['telerik.editor.js'][1827]++;
      var lastMargin = -1, lastType, levels = {"ul": {}, "ol": {}}, li = placeholder;
      _$jscoverage['telerik.editor.js'][1829]++;
      for (var i = 0; (i < blockChildren.length); (i++)) {
        _$jscoverage['telerik.editor.js'][1830]++;
        var p = blockChildren[i];
        _$jscoverage['telerik.editor.js'][1831]++;
        var html = p.innerHTML.replace(/<\/?\w+[^>]*>/g, "").replace(/&nbsp;/g, "\u00a0");
        _$jscoverage['telerik.editor.js'][1832]++;
        var type = listType(html);
        _$jscoverage['telerik.editor.js'][1834]++;
        if (((! type) || (dom.name(p) != "p"))) {
          _$jscoverage['telerik.editor.js'][1835]++;
          if ((p.innerHTML == "")) {
            _$jscoverage['telerik.editor.js'][1836]++;
            dom.remove(p);
          }
          else {
            _$jscoverage['telerik.editor.js'][1838]++;
            levels = {"ul": {}, "ol": {}};
            _$jscoverage['telerik.editor.js'][1839]++;
            li = placeholder;
            _$jscoverage['telerik.editor.js'][1840]++;
            lastMargin = -1;
          }
          _$jscoverage['telerik.editor.js'][1842]++;
          continue;
        }
        _$jscoverage['telerik.editor.js'][1845]++;
        var margin = parseFloat((p.style.marginLeft || 0));
        _$jscoverage['telerik.editor.js'][1846]++;
        var list = levels[type][margin];
        _$jscoverage['telerik.editor.js'][1848]++;
        if (((margin > lastMargin) || (! list))) {
          _$jscoverage['telerik.editor.js'][1849]++;
          list = dom.create(document, type);
          _$jscoverage['telerik.editor.js'][1851]++;
          if ((li == placeholder)) {
            _$jscoverage['telerik.editor.js'][1852]++;
            dom.insertBefore(list, p);
          }
          else {
            _$jscoverage['telerik.editor.js'][1854]++;
            li.appendChild(list);
          }
          _$jscoverage['telerik.editor.js'][1856]++;
          levels[type][margin] = list;
        }
        _$jscoverage['telerik.editor.js'][1859]++;
        if ((lastType != type)) {
          _$jscoverage['telerik.editor.js'][1860]++;
          for (var key in levels) {
            _$jscoverage['telerik.editor.js'][1861]++;
            for (var child in levels[key]) {
              _$jscoverage['telerik.editor.js'][1862]++;
              if ($.contains(list, levels[key][child])) {
                _$jscoverage['telerik.editor.js'][1863]++;
                (delete levels[key][child]);
              }
}
}
        }
        _$jscoverage['telerik.editor.js'][1866]++;
        dom.remove(p.firstChild);
        _$jscoverage['telerik.editor.js'][1867]++;
        li = dom.create(document, "li", {innerHTML: p.innerHTML});
        _$jscoverage['telerik.editor.js'][1868]++;
        list.appendChild(li);
        _$jscoverage['telerik.editor.js'][1869]++;
        dom.remove(p);
        _$jscoverage['telerik.editor.js'][1870]++;
        lastMargin = margin;
        _$jscoverage['telerik.editor.js'][1871]++;
        lastType = type;
}
      _$jscoverage['telerik.editor.js'][1873]++;
      return placeholder.innerHTML;
}
    _$jscoverage['telerik.editor.js'][1876]++;
    this.clean = (function (html) {
  _$jscoverage['telerik.editor.js'][1877]++;
  for (var i = 0, l = replacements.length; (i < l); (i += 2)) {
    _$jscoverage['telerik.editor.js'][1878]++;
    html = html.replace(replacements[i], replacements[(i + 1)]);
}
  _$jscoverage['telerik.editor.js'][1880]++;
  html = lists(html);
  _$jscoverage['telerik.editor.js'][1882]++;
  html = html.replace(/\s+class="?[^"\s>]*"?/gi, "");
  _$jscoverage['telerik.editor.js'][1884]++;
  return html;
});
}
  _$jscoverage['telerik.editor.js'][1886]++;
  ;
  _$jscoverage['telerik.editor.js'][1886]++;
  function InlineFormatFinder(format) {
    _$jscoverage['telerik.editor.js'][1887]++;
    function numberOfSiblings(referenceNode) {
      _$jscoverage['telerik.editor.js'][1888]++;
      var count = 0;
      _$jscoverage['telerik.editor.js'][1890]++;
      for (var node = referenceNode.parentNode.firstChild; node; (node = node.nextSibling)) {
        _$jscoverage['telerik.editor.js'][1891]++;
        if (((node != referenceNode) && (node.className != "t-marker") && (node.nodeType == 1))) {
          _$jscoverage['telerik.editor.js'][1892]++;
          (count++);
        }
}
      _$jscoverage['telerik.editor.js'][1894]++;
      return count;
}
    _$jscoverage['telerik.editor.js'][1897]++;
    this.findSuitable = (function (sourceNode, skip) {
  _$jscoverage['telerik.editor.js'][1898]++;
  if (((! skip) && (numberOfSiblings(sourceNode) > 0))) {
    _$jscoverage['telerik.editor.js'][1899]++;
    return null;
  }
  _$jscoverage['telerik.editor.js'][1901]++;
  return dom.parentOfType(sourceNode, format[0].tags);
});
    _$jscoverage['telerik.editor.js'][1904]++;
    this.findFormat = (function (sourceNode) {
  _$jscoverage['telerik.editor.js'][1905]++;
  for (var i = 0; (i < format.length); (i++)) {
    _$jscoverage['telerik.editor.js'][1906]++;
    var node = sourceNode;
    _$jscoverage['telerik.editor.js'][1907]++;
    var tags = format[i].tags;
    _$jscoverage['telerik.editor.js'][1908]++;
    var attributes = format[i].attr;
    _$jscoverage['telerik.editor.js'][1910]++;
    if ((node && dom.ofType(node, tags) && attrEquals(node, attributes))) {
      _$jscoverage['telerik.editor.js'][1911]++;
      return node;
    }
    _$jscoverage['telerik.editor.js'][1913]++;
    while (node) {
      _$jscoverage['telerik.editor.js'][1914]++;
      node = dom.parentOfType(node, tags);
      _$jscoverage['telerik.editor.js'][1915]++;
      if ((node && attrEquals(node, attributes))) {
        _$jscoverage['telerik.editor.js'][1916]++;
        return node;
      }
}
}
  _$jscoverage['telerik.editor.js'][1920]++;
  return null;
});
    _$jscoverage['telerik.editor.js'][1923]++;
    this.isFormatted = (function (nodes) {
  _$jscoverage['telerik.editor.js'][1924]++;
  for (var i = 0; (i < nodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][1925]++;
    if (this.findFormat(nodes[i])) {
      _$jscoverage['telerik.editor.js'][1926]++;
      return true;
    }
}
  _$jscoverage['telerik.editor.js'][1928]++;
  return false;
});
}
  _$jscoverage['telerik.editor.js'][1932]++;
  function InlineFormatter(format, values) {
    _$jscoverage['telerik.editor.js'][1933]++;
    this.finder = new InlineFormatFinder(format);
    _$jscoverage['telerik.editor.js'][1935]++;
    var attributes = $.extend({}, format[0].attr, values);
    _$jscoverage['telerik.editor.js'][1937]++;
    var tag = format[0].tags[0];
    _$jscoverage['telerik.editor.js'][1939]++;
    function wrap(node) {
      _$jscoverage['telerik.editor.js'][1940]++;
      return dom.wrap(node, dom.create(node.ownerDocument, tag, attributes));
}
    _$jscoverage['telerik.editor.js'][1943]++;
    this.activate = (function (range, nodes) {
  _$jscoverage['telerik.editor.js'][1944]++;
  if (this.finder.isFormatted(nodes)) {
    _$jscoverage['telerik.editor.js'][1945]++;
    this.split(range);
    _$jscoverage['telerik.editor.js'][1946]++;
    this.remove(nodes);
  }
  else {
    _$jscoverage['telerik.editor.js'][1948]++;
    this.apply(nodes);
  }
});
    _$jscoverage['telerik.editor.js'][1951]++;
    this.toggle = (function (range) {
  _$jscoverage['telerik.editor.js'][1952]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][1953]++;
  var isPending = (nodes.length == 0);
  _$jscoverage['telerik.editor.js'][1954]++;
  var caretMarker;
  _$jscoverage['telerik.editor.js'][1956]++;
  if (isPending) {
    _$jscoverage['telerik.editor.js'][1957]++;
    var markers = getMarkers(range);
    _$jscoverage['telerik.editor.js'][1958]++;
    caretMarker = markers[1];
    _$jscoverage['telerik.editor.js'][1959]++;
    var invisibleNode = this.editor.document.createTextNode("\ufeff");
    _$jscoverage['telerik.editor.js'][1960]++;
    dom.insertBefore(invisibleNode, caretMarker);
    _$jscoverage['telerik.editor.js'][1961]++;
    nodes.push(invisibleNode);
    _$jscoverage['telerik.editor.js'][1962]++;
    invisibleNode = invisibleNode.cloneNode(true);
    _$jscoverage['telerik.editor.js'][1963]++;
    dom.insertAfter(invisibleNode, caretMarker);
    _$jscoverage['telerik.editor.js'][1964]++;
    nodes.push(invisibleNode);
    _$jscoverage['telerik.editor.js'][1965]++;
    range.setEndAfter(markers[2]);
  }
  _$jscoverage['telerik.editor.js'][1968]++;
  this.activate(range, nodes);
  _$jscoverage['telerik.editor.js'][1970]++;
  if (isPending) {
    _$jscoverage['telerik.editor.js'][1971]++;
    this.editor.pendingFormats.push(caretMarker.parentNode);
  }
});
    _$jscoverage['telerik.editor.js'][1974]++;
    this.apply = (function (nodes) {
  _$jscoverage['telerik.editor.js'][1975]++;
  var formatNodes = [];
  _$jscoverage['telerik.editor.js'][1976]++;
  for (var i = 0, l = nodes.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][1977]++;
    var node = nodes[i];
    _$jscoverage['telerik.editor.js'][1979]++;
    var formatNode = this.finder.findSuitable(node);
    _$jscoverage['telerik.editor.js'][1980]++;
    if (formatNode) {
      _$jscoverage['telerik.editor.js'][1981]++;
      dom.attr(formatNode, attributes);
    }
    else {
      _$jscoverage['telerik.editor.js'][1983]++;
      formatNode = wrap(node);
    }
    _$jscoverage['telerik.editor.js'][1985]++;
    formatNodes.push(formatNode);
}
  _$jscoverage['telerik.editor.js'][1988]++;
  this.consolidate(formatNodes);
});
    _$jscoverage['telerik.editor.js'][1991]++;
    this.remove = (function (nodes) {
  _$jscoverage['telerik.editor.js'][1992]++;
  for (var i = 0, l = nodes.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][1993]++;
    var formatNode = this.finder.findFormat(nodes[i]);
    _$jscoverage['telerik.editor.js'][1994]++;
    if (formatNode) {
      _$jscoverage['telerik.editor.js'][1995]++;
      dom.unwrap(formatNode);
    }
}
});
    _$jscoverage['telerik.editor.js'][1999]++;
    this.split = (function (range) {
  _$jscoverage['telerik.editor.js'][2000]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2002]++;
  var isPending = (nodes.length == 0);
  _$jscoverage['telerik.editor.js'][2003]++;
  var caretMarker;
  _$jscoverage['telerik.editor.js'][2005]++;
  if (isPending) {
    _$jscoverage['telerik.editor.js'][2006]++;
    caretMarker = getMarkers(range)[1];
    _$jscoverage['telerik.editor.js'][2007]++;
    nodes.push(caretMarker);
  }
  _$jscoverage['telerik.editor.js'][2010]++;
  for (var i = 0, l = nodes.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][2011]++;
    var formatNode = this.finder.findFormat(nodes[i]);
    _$jscoverage['telerik.editor.js'][2012]++;
    if (formatNode) {
      _$jscoverage['telerik.editor.js'][2013]++;
      split(range, formatNode, true);
    }
}
});
    _$jscoverage['telerik.editor.js'][2017]++;
    this.consolidate = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2018]++;
  while ((nodes.length > 1)) {
    _$jscoverage['telerik.editor.js'][2019]++;
    var node = nodes.pop();
    _$jscoverage['telerik.editor.js'][2020]++;
    var last = nodes[(nodes.length - 1)];
    _$jscoverage['telerik.editor.js'][2022]++;
    if ((node.previousSibling && (node.previousSibling.className == "t-marker"))) {
      _$jscoverage['telerik.editor.js'][2023]++;
      last.appendChild(node.previousSibling);
    }
    _$jscoverage['telerik.editor.js'][2026]++;
    if (((node.previousSibling == last) && (node.style.cssText == last.style.cssText))) {
      _$jscoverage['telerik.editor.js'][2027]++;
      while (node.firstChild) {
        _$jscoverage['telerik.editor.js'][2028]++;
        last.appendChild(node.firstChild);
}
      _$jscoverage['telerik.editor.js'][2029]++;
      dom.remove(node);
    }
}
});
}
  _$jscoverage['telerik.editor.js'][2035]++;
  function GreedyInlineFormatFinder(format, greedyProperty) {
    _$jscoverage['telerik.editor.js'][2036]++;
    InlineFormatFinder.call(this, format);
    _$jscoverage['telerik.editor.js'][2038]++;
    function getInlineCssValue(node) {
      _$jscoverage['telerik.editor.js'][2039]++;
      var attributes = node.attributes, trim = $.trim;
      _$jscoverage['telerik.editor.js'][2042]++;
      for (var i = 0, l = attributes.length; (i < l); (i++)) {
        _$jscoverage['telerik.editor.js'][2043]++;
        var attribute = attributes[i];
        _$jscoverage['telerik.editor.js'][2044]++;
        var name = attribute.nodeName;
        _$jscoverage['telerik.editor.js'][2045]++;
        var attributeValue = attribute.nodeValue;
        _$jscoverage['telerik.editor.js'][2047]++;
        if ((attribute.specified && (name == "style"))) {
          _$jscoverage['telerik.editor.js'][2049]++;
          var css = trim((attributeValue || node.style.cssText)).split(";");
          _$jscoverage['telerik.editor.js'][2051]++;
          for (var cssIndex = 0, len = css.length; (cssIndex < len); (cssIndex++)) {
            _$jscoverage['telerik.editor.js'][2052]++;
            var pair = css[cssIndex];
            _$jscoverage['telerik.editor.js'][2053]++;
            if (pair.length) {
              _$jscoverage['telerik.editor.js'][2054]++;
              var propertyAndValue = pair.split(":");
              _$jscoverage['telerik.editor.js'][2055]++;
              var property = trim(propertyAndValue[0].toLowerCase()), value = trim(propertyAndValue[1]);
              _$jscoverage['telerik.editor.js'][2058]++;
              if ((property != greedyProperty)) {
                _$jscoverage['telerik.editor.js'][2059]++;
                continue;
              }
              _$jscoverage['telerik.editor.js'][2061]++;
              return ((property.indexOf("color") >= 0)? dom.toHex(value): value);
            }
}
        }
}
      _$jscoverage['telerik.editor.js'][2067]++;
      return;
}
    _$jscoverage['telerik.editor.js'][2070]++;
    function getFormat(node) {
      _$jscoverage['telerik.editor.js'][2071]++;
      var $node = $((isDataNode(node)? node.parentNode: node));
      _$jscoverage['telerik.editor.js'][2072]++;
      var parents = $node.parents().andSelf();
      _$jscoverage['telerik.editor.js'][2074]++;
      for (var i = 0, len = parents.length; (i < len); (i++)) {
        _$jscoverage['telerik.editor.js'][2075]++;
        var value = ((greedyProperty == "className")? parents[i].className: getInlineCssValue(parents[i]));
        _$jscoverage['telerik.editor.js'][2076]++;
        if (value) {
          _$jscoverage['telerik.editor.js'][2077]++;
          return value;
        }
}
      _$jscoverage['telerik.editor.js'][2080]++;
      return "inherit";
}
    _$jscoverage['telerik.editor.js'][2083]++;
    this.getFormat = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2084]++;
  var result = getFormat(nodes[0]);
  _$jscoverage['telerik.editor.js'][2086]++;
  for (var i = 1, len = nodes.length; (i < len); (i++)) {
    _$jscoverage['telerik.editor.js'][2087]++;
    if ((result != getFormat(nodes[i]))) {
      _$jscoverage['telerik.editor.js'][2088]++;
      return "";
    }
}
  _$jscoverage['telerik.editor.js'][2090]++;
  return result;
});
    _$jscoverage['telerik.editor.js'][2093]++;
    this.isFormatted = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2094]++;
  return (this.getFormat(nodes) !== "");
});
}
  _$jscoverage['telerik.editor.js'][2098]++;
  function GreedyInlineFormatter(format, values, greedyProperty) {
    _$jscoverage['telerik.editor.js'][2099]++;
    InlineFormatter.call(this, format, values);
    _$jscoverage['telerik.editor.js'][2101]++;
    this.finder = new GreedyInlineFormatFinder(format, greedyProperty);
    _$jscoverage['telerik.editor.js'][2103]++;
    this.activate = (function (range, nodes) {
  _$jscoverage['telerik.editor.js'][2104]++;
  this.split(range);
  _$jscoverage['telerik.editor.js'][2105]++;
  if (greedyProperty) {
    _$jscoverage['telerik.editor.js'][2106]++;
    var camelCase = greedyProperty.replace(/-([a-z])/, (function (all, letter) {
  _$jscoverage['telerik.editor.js'][2106]++;
  return letter.toUpperCase();
}));
    _$jscoverage['telerik.editor.js'][2107]++;
    (this[((values.style[camelCase] == "inherit")? "remove": "apply")])(nodes);
  }
  else {
    _$jscoverage['telerik.editor.js'][2109]++;
    this.apply(nodes);
  }
});
}
  _$jscoverage['telerik.editor.js'][2114]++;
  function InlineFormatTool(options) {
    _$jscoverage['telerik.editor.js'][2115]++;
    FormatTool.call(this, $.extend(options, {finder: new InlineFormatFinder(options.format), formatter: (function () {
  _$jscoverage['telerik.editor.js'][2117]++;
  return new InlineFormatter(options.format);
})}));
}
  _$jscoverage['telerik.editor.js'][2121]++;
  function FontTool(options) {
    _$jscoverage['telerik.editor.js'][2122]++;
    Tool.call(this, options);
    _$jscoverage['telerik.editor.js'][2125]++;
    var type = ($.browser.msie? "tSelectBox": "tComboBox");
    _$jscoverage['telerik.editor.js'][2127]++;
    var finder = new GreedyInlineFormatFinder([{tags: ["span"]}], options.cssAttr);
    _$jscoverage['telerik.editor.js'][2129]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][2130]++;
  return new FormatCommand($.extend(commandArguments, {formatter: (function () {
  _$jscoverage['telerik.editor.js'][2132]++;
  var style = {};
  _$jscoverage['telerik.editor.js'][2133]++;
  style[options.domAttr] = commandArguments.value;
  _$jscoverage['telerik.editor.js'][2135]++;
  return new GreedyInlineFormatter([{tags: ["span"]}], {style: style}, options.cssAttr);
})}));
});
    _$jscoverage['telerik.editor.js'][2140]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][2141]++;
  var list = $ui.data(type);
  _$jscoverage['telerik.editor.js'][2142]++;
  list.close();
  _$jscoverage['telerik.editor.js'][2143]++;
  list.value(finder.getFormat(nodes));
});
    _$jscoverage['telerik.editor.js'][2146]++;
    this.init = (function ($ui, initOptions) {
  _$jscoverage['telerik.editor.js'][2147]++;
  var editor = initOptions.editor;
  _$jscoverage['telerik.editor.js'][2149]++;
  ($ui[type])({data: editor[options.name], onChange: (function (e) {
  _$jscoverage['telerik.editor.js'][2152]++;
  Tool.exec(editor, options.name, e.value);
}), highlightFirst: false});
  _$jscoverage['telerik.editor.js'][2157]++;
  $ui.data(type).dropDown.onItemCreate = (function (e) {
  _$jscoverage['telerik.editor.js'][2159]++;
  e.html = ("<span unselectable=\"on\" style=\"" + options.cssAttr + ": " + e.dataItem.Value + "\">" + e.dataItem.Text + "</span>");
});
});
}
  _$jscoverage['telerik.editor.js'][2162]++;
  ;
  _$jscoverage['telerik.editor.js'][2164]++;
  function ColorTool(options) {
    _$jscoverage['telerik.editor.js'][2165]++;
    Tool.call(this, options);
    _$jscoverage['telerik.editor.js'][2167]++;
    var finder = new GreedyInlineFormatFinder([{tags: ["span"]}], options.cssAttr);
    _$jscoverage['telerik.editor.js'][2169]++;
    this.update = (function ($ui) {
  _$jscoverage['telerik.editor.js'][2170]++;
  $ui.data("tColorPicker").close();
});
    _$jscoverage['telerik.editor.js'][2173]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][2175]++;
  return new FormatCommand($.extend(commandArguments, {formatter: (function () {
  _$jscoverage['telerik.editor.js'][2177]++;
  var style = {};
  _$jscoverage['telerik.editor.js'][2178]++;
  style[options.domAttr] = commandArguments.value;
  _$jscoverage['telerik.editor.js'][2180]++;
  return new GreedyInlineFormatter([{tags: ["span"]}], {style: style}, options.cssAttr);
})}));
});
    _$jscoverage['telerik.editor.js'][2185]++;
    this.init = (function ($ui, initOptions) {
  _$jscoverage['telerik.editor.js'][2186]++;
  var editor = initOptions.editor;
  _$jscoverage['telerik.editor.js'][2188]++;
  $ui.tColorPicker({selectedColor: "#000000", onChange: (function (e) {
  _$jscoverage['telerik.editor.js'][2191]++;
  Tool.exec(editor, options.name, e.value);
})});
});
}
  _$jscoverage['telerik.editor.js'][2197]++;
  function StyleTool() {
    _$jscoverage['telerik.editor.js'][2198]++;
    Tool.call(this);
    _$jscoverage['telerik.editor.js'][2199]++;
    var finder = new GreedyInlineFormatFinder([{tags: ["span"]}], "className");
    _$jscoverage['telerik.editor.js'][2201]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][2202]++;
  return new FormatCommand($.extend(commandArguments, {formatter: (function () {
  _$jscoverage['telerik.editor.js'][2204]++;
  return new GreedyInlineFormatter([{tags: ["span"]}], {className: commandArguments.value});
})}));
});
    _$jscoverage['telerik.editor.js'][2209]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][2210]++;
  var list = $ui.data("tSelectBox");
  _$jscoverage['telerik.editor.js'][2211]++;
  list.close();
  _$jscoverage['telerik.editor.js'][2212]++;
  list.value(finder.getFormat(nodes));
});
    _$jscoverage['telerik.editor.js'][2215]++;
    this.init = (function ($ui, initOptions) {
  _$jscoverage['telerik.editor.js'][2216]++;
  var editor = initOptions.editor;
  _$jscoverage['telerik.editor.js'][2218]++;
  $ui.tSelectBox({data: editor.style, title: editor.localization.style, onItemCreate: (function (e) {
  _$jscoverage['telerik.editor.js'][2222]++;
  var style = dom.inlineStyle(editor.document, "span", {className: e.dataItem.Value});
  _$jscoverage['telerik.editor.js'][2224]++;
  e.html = ("<span unselectable=\"on\" style=\"display:block;" + style + "\">" + e.html + "</span>");
}), onChange: (function (e) {
  _$jscoverage['telerik.editor.js'][2227]++;
  Tool.exec(editor, "style", e.value);
})});
});
}
  _$jscoverage['telerik.editor.js'][2231]++;
  ;
  _$jscoverage['telerik.editor.js'][2231]++;
  function BlockFormatFinder(format) {
    _$jscoverage['telerik.editor.js'][2232]++;
    function contains(node, children) {
      _$jscoverage['telerik.editor.js'][2233]++;
      for (var i = 0; (i < children.length); (i++)) {
        _$jscoverage['telerik.editor.js'][2234]++;
        var child = children[i];
        _$jscoverage['telerik.editor.js'][2235]++;
        if (((child == null) || (! isAncestorOrSelf(node, child)))) {
          _$jscoverage['telerik.editor.js'][2236]++;
          return false;
        }
}
      _$jscoverage['telerik.editor.js'][2239]++;
      return true;
}
    _$jscoverage['telerik.editor.js'][2242]++;
    this.findSuitable = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2243]++;
  var suitable = [];
  _$jscoverage['telerik.editor.js'][2245]++;
  for (var i = 0; (i < nodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2246]++;
    var candidate = dom.parentOfType(nodes[i], format[0].tags);
    _$jscoverage['telerik.editor.js'][2247]++;
    if ((! candidate)) {
      _$jscoverage['telerik.editor.js'][2248]++;
      return [];
    }
    _$jscoverage['telerik.editor.js'][2249]++;
    if (($.inArray(candidate, suitable) < 0)) {
      _$jscoverage['telerik.editor.js'][2250]++;
      suitable.push(candidate);
    }
}
  _$jscoverage['telerik.editor.js'][2253]++;
  for (var i = 0; (i < suitable.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2254]++;
    if (contains(suitable[i], suitable)) {
      _$jscoverage['telerik.editor.js'][2255]++;
      return [suitable[i]];
    }
}
  _$jscoverage['telerik.editor.js'][2257]++;
  return suitable;
});
    _$jscoverage['telerik.editor.js'][2260]++;
    this.findFormat = (function (sourceNode) {
  _$jscoverage['telerik.editor.js'][2261]++;
  for (var i = 0; (i < format.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2262]++;
    var node = sourceNode;
    _$jscoverage['telerik.editor.js'][2263]++;
    var tags = format[i].tags;
    _$jscoverage['telerik.editor.js'][2264]++;
    var attributes = format[i].attr;
    _$jscoverage['telerik.editor.js'][2266]++;
    while (node) {
      _$jscoverage['telerik.editor.js'][2267]++;
      if ((dom.ofType(node, tags) && attrEquals(node, attributes))) {
        _$jscoverage['telerik.editor.js'][2268]++;
        return node;
      }
      _$jscoverage['telerik.editor.js'][2269]++;
      node = node.parentNode;
}
}
  _$jscoverage['telerik.editor.js'][2272]++;
  return null;
});
    _$jscoverage['telerik.editor.js'][2275]++;
    this.getFormat = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2276]++;
  var findFormat = $.proxy((function (node) {
  _$jscoverage['telerik.editor.js'][2276]++;
  return this.findFormat((isDataNode(node)? node.parentNode: node));
}), this), result = findFormat(nodes[0]);
  _$jscoverage['telerik.editor.js'][2279]++;
  if ((! result)) {
    _$jscoverage['telerik.editor.js'][2280]++;
    return "";
  }
  _$jscoverage['telerik.editor.js'][2282]++;
  for (var i = 1, len = nodes.length; (i < len); (i++)) {
    _$jscoverage['telerik.editor.js'][2283]++;
    if ((result != findFormat(nodes[i]))) {
      _$jscoverage['telerik.editor.js'][2284]++;
      return "";
    }
}
  _$jscoverage['telerik.editor.js'][2286]++;
  return result.nodeName.toLowerCase();
});
    _$jscoverage['telerik.editor.js'][2289]++;
    this.isFormatted = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2290]++;
  for (var i = 0; (i < nodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2291]++;
    if ((! this.findFormat(nodes[i]))) {
      _$jscoverage['telerik.editor.js'][2292]++;
      return false;
    }
}
  _$jscoverage['telerik.editor.js'][2294]++;
  return true;
});
}
  _$jscoverage['telerik.editor.js'][2298]++;
  function BlockFormatter(format, values) {
    _$jscoverage['telerik.editor.js'][2299]++;
    var finder = new BlockFormatFinder(format);
    _$jscoverage['telerik.editor.js'][2301]++;
    function wrap(tag, attributes, nodes) {
      _$jscoverage['telerik.editor.js'][2302]++;
      var commonAncestor = ((nodes.length == 1)? dom.blockParentOrBody(nodes[0]): dom.commonAncestor.apply(null, nodes));
      _$jscoverage['telerik.editor.js'][2304]++;
      if (dom.isInline(commonAncestor)) {
        _$jscoverage['telerik.editor.js'][2305]++;
        commonAncestor = dom.blockParentOrBody(commonAncestor);
      }
      _$jscoverage['telerik.editor.js'][2307]++;
      var ancestors = dom.significantChildNodes(commonAncestor);
      _$jscoverage['telerik.editor.js'][2309]++;
      var position = findNodeIndex(ancestors[0]);
      _$jscoverage['telerik.editor.js'][2311]++;
      var wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes);
      _$jscoverage['telerik.editor.js'][2313]++;
      for (var i = 0; (i < ancestors.length); (i++)) {
        _$jscoverage['telerik.editor.js'][2314]++;
        var ancestor = ancestors[i];
        _$jscoverage['telerik.editor.js'][2315]++;
        if (dom.isBlock(ancestor)) {
          _$jscoverage['telerik.editor.js'][2316]++;
          dom.attr(ancestor, attributes);
          _$jscoverage['telerik.editor.js'][2318]++;
          if (wrapper.childNodes.length) {
            _$jscoverage['telerik.editor.js'][2319]++;
            dom.insertBefore(wrapper, ancestor);
            _$jscoverage['telerik.editor.js'][2320]++;
            wrapper = wrapper.cloneNode(false);
          }
          _$jscoverage['telerik.editor.js'][2323]++;
          position = (findNodeIndex(ancestor) + 1);
          _$jscoverage['telerik.editor.js'][2325]++;
          continue;
        }
        _$jscoverage['telerik.editor.js'][2328]++;
        wrapper.appendChild(ancestor);
}
      _$jscoverage['telerik.editor.js'][2331]++;
      if (wrapper.firstChild) {
        _$jscoverage['telerik.editor.js'][2332]++;
        dom.insertAt(commonAncestor, wrapper, position);
      }
}
    _$jscoverage['telerik.editor.js'][2335]++;
    this.apply = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2336]++;
  var formatNodes = (dom.is(nodes[0], "img")? [nodes[0]]: finder.findSuitable(nodes));
  _$jscoverage['telerik.editor.js'][2338]++;
  var formatToApply = (formatNodes.length? formatByName(dom.name(formatNodes[0]), format): format[0]);
  _$jscoverage['telerik.editor.js'][2340]++;
  var tag = formatToApply.tags[0];
  _$jscoverage['telerik.editor.js'][2341]++;
  var attributes = $.extend({}, formatToApply.attr, values);
  _$jscoverage['telerik.editor.js'][2343]++;
  if (formatNodes.length) {
    _$jscoverage['telerik.editor.js'][2344]++;
    for (var i = 0; (i < formatNodes.length); (i++)) {
      _$jscoverage['telerik.editor.js'][2345]++;
      dom.attr(formatNodes[i], attributes);
}
  }
  else {
    _$jscoverage['telerik.editor.js'][2347]++;
    wrap(tag, attributes, nodes);
  }
});
    _$jscoverage['telerik.editor.js'][2350]++;
    this.remove = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2351]++;
  for (var i = 0, l = nodes.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][2352]++;
    var formatNode = finder.findFormat(nodes[i]);
    _$jscoverage['telerik.editor.js'][2353]++;
    if (formatNode) {
      _$jscoverage['telerik.editor.js'][2354]++;
      if (dom.ofType(formatNode, ["p", "img", "li"])) {
        _$jscoverage['telerik.editor.js'][2355]++;
        dom.unstyle(formatNode, formatByName(dom.name(formatNode), format).attr.style);
      }
      else {
        _$jscoverage['telerik.editor.js'][2357]++;
        dom.unwrap(formatNode);
      }
    }
}
});
    _$jscoverage['telerik.editor.js'][2361]++;
    this.toggle = (function (range) {
  _$jscoverage['telerik.editor.js'][2362]++;
  var nodes = RangeUtils.nodes(range);
  _$jscoverage['telerik.editor.js'][2363]++;
  if (finder.isFormatted(nodes)) {
    _$jscoverage['telerik.editor.js'][2364]++;
    this.remove(nodes);
  }
  else {
    _$jscoverage['telerik.editor.js'][2366]++;
    this.apply(nodes);
  }
});
}
  _$jscoverage['telerik.editor.js'][2370]++;
  function GreedyBlockFormatter(format, values) {
    _$jscoverage['telerik.editor.js'][2371]++;
    var finder = new BlockFormatFinder(format);
    _$jscoverage['telerik.editor.js'][2373]++;
    this.apply = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2374]++;
  var blocks = blockParents(nodes);
  _$jscoverage['telerik.editor.js'][2375]++;
  var formatTag = format[0].tags[0];
  _$jscoverage['telerik.editor.js'][2376]++;
  if (blocks.length) {
    _$jscoverage['telerik.editor.js'][2377]++;
    for (var i = 0, len = blocks.length; (i < len); (i++)) {
      _$jscoverage['telerik.editor.js'][2378]++;
      if (dom.is(blocks[i], "li")) {
        _$jscoverage['telerik.editor.js'][2379]++;
        var list = blocks[i].parentNode;
        _$jscoverage['telerik.editor.js'][2380]++;
        var formatter = new ListFormatter(list.nodeName.toLowerCase(), formatTag);
        _$jscoverage['telerik.editor.js'][2381]++;
        var range = this.editor.createRange();
        _$jscoverage['telerik.editor.js'][2382]++;
        range.selectNode(blocks[i]);
        _$jscoverage['telerik.editor.js'][2383]++;
        formatter.toggle(range);
      }
      else {
        _$jscoverage['telerik.editor.js'][2385]++;
        dom.changeTag(blocks[i], formatTag);
      }
}
  }
  else {
    _$jscoverage['telerik.editor.js'][2389]++;
    new BlockFormatter(format, values).apply(nodes);
  }
});
    _$jscoverage['telerik.editor.js'][2393]++;
    this.toggle = (function (range) {
  _$jscoverage['telerik.editor.js'][2394]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2395]++;
  if ((! nodes.length)) {
    _$jscoverage['telerik.editor.js'][2396]++;
    range.selectNodeContents(range.commonAncestorContainer);
    _$jscoverage['telerik.editor.js'][2397]++;
    nodes = textNodes(range);
    _$jscoverage['telerik.editor.js'][2398]++;
    if ((! nodes.length)) {
      _$jscoverage['telerik.editor.js'][2399]++;
      nodes = dom.significantChildNodes(range.commonAncestorContainer);
    }
  }
  _$jscoverage['telerik.editor.js'][2402]++;
  this.apply(nodes);
});
}
  _$jscoverage['telerik.editor.js'][2406]++;
  function FormatCommand(options) {
    _$jscoverage['telerik.editor.js'][2407]++;
    options.formatter = options.formatter();
    _$jscoverage['telerik.editor.js'][2408]++;
    Command.call(this, options);
}
  _$jscoverage['telerik.editor.js'][2411]++;
  function BlockFormatTool(options) {
    _$jscoverage['telerik.editor.js'][2412]++;
    FormatTool.call(this, $.extend(options, {finder: new BlockFormatFinder(options.format), formatter: (function () {
  _$jscoverage['telerik.editor.js'][2414]++;
  return new BlockFormatter(options.format);
})}));
}
  _$jscoverage['telerik.editor.js'][2418]++;
  function FormatBlockTool() {
    _$jscoverage['telerik.editor.js'][2419]++;
    Tool.call(this);
    _$jscoverage['telerik.editor.js'][2420]++;
    var finder = new BlockFormatFinder([{tags: blockElements}]);
    _$jscoverage['telerik.editor.js'][2422]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][2423]++;
  return new FormatCommand($.extend(commandArguments, {formatter: (function () {
  _$jscoverage['telerik.editor.js'][2424]++;
  return new GreedyBlockFormatter([{tags: [commandArguments.value]}], {});
})}));
});
    _$jscoverage['telerik.editor.js'][2428]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][2429]++;
  var list = $ui.data("tSelectBox");
  _$jscoverage['telerik.editor.js'][2430]++;
  list.close();
  _$jscoverage['telerik.editor.js'][2431]++;
  list.value(finder.getFormat(nodes));
});
    _$jscoverage['telerik.editor.js'][2434]++;
    this.init = (function ($ui, initOptions) {
  _$jscoverage['telerik.editor.js'][2435]++;
  var editor = initOptions.editor;
  _$jscoverage['telerik.editor.js'][2437]++;
  $ui.tSelectBox({data: editor.formatBlock, title: editor.localization.formatBlock, onItemCreate: (function (e) {
  _$jscoverage['telerik.editor.js'][2441]++;
  var tagName = e.dataItem.Value;
  _$jscoverage['telerik.editor.js'][2442]++;
  e.html = ("<" + tagName + " unselectable=\"on\" style=\"margin: .3em 0;" + dom.inlineStyle(editor.document, tagName) + "\">" + e.dataItem.Text + "</" + tagName + ">");
}), onChange: (function (e) {
  _$jscoverage['telerik.editor.js'][2445]++;
  Tool.exec(editor, "formatBlock", e.value);
}), highlightFirst: false});
});
}
  _$jscoverage['telerik.editor.js'][2450]++;
  ;
  _$jscoverage['telerik.editor.js'][2450]++;
  function ParagraphCommand(options) {
    _$jscoverage['telerik.editor.js'][2451]++;
    Command.call(this, options);
    _$jscoverage['telerik.editor.js'][2453]++;
    this.exec = (function () {
  _$jscoverage['telerik.editor.js'][2454]++;
  var range = this.getRange();
  _$jscoverage['telerik.editor.js'][2456]++;
  var document = documentFromRange(range);
  _$jscoverage['telerik.editor.js'][2458]++;
  var emptyParagraphContent = ($.browser.msie? "": "<br _moz_dirty=\"\" />");
  _$jscoverage['telerik.editor.js'][2461]++;
  var startInBlock = dom.parentOfType(range.startContainer, ["p"]), endInBlock = dom.parentOfType(range.endContainer, ["p"]), shouldTrim = ((startInBlock && (! endInBlock)) || ((! startInBlock) && endInBlock));
  _$jscoverage['telerik.editor.js'][2465]++;
  range.deleteContents();
  _$jscoverage['telerik.editor.js'][2467]++;
  var marker = dom.create(document, "a");
  _$jscoverage['telerik.editor.js'][2468]++;
  range.insertNode(marker);
  _$jscoverage['telerik.editor.js'][2470]++;
  var li = dom.parentOfType(marker, "li".split(","));
  _$jscoverage['telerik.editor.js'][2472]++;
  var next;
  _$jscoverage['telerik.editor.js'][2474]++;
  if (li) {
    _$jscoverage['telerik.editor.js'][2475]++;
    var rng = range.cloneRange();
    _$jscoverage['telerik.editor.js'][2476]++;
    rng.selectNode(li);
    _$jscoverage['telerik.editor.js'][2478]++;
    if ((textNodes(rng).length == 0)) {
      _$jscoverage['telerik.editor.js'][2480]++;
      var paragraph = dom.create(document, "p");
      _$jscoverage['telerik.editor.js'][2482]++;
      if (li.nextSibling) {
        _$jscoverage['telerik.editor.js'][2483]++;
        split(rng, li.parentNode);
      }
      _$jscoverage['telerik.editor.js'][2485]++;
      dom.insertAfter(paragraph, li.parentNode);
      _$jscoverage['telerik.editor.js'][2486]++;
      dom.remove(((li.parentNode.childNodes.length == 1)? li.parentNode: li));
      _$jscoverage['telerik.editor.js'][2487]++;
      paragraph.innerHTML = emptyParagraphContent;
      _$jscoverage['telerik.editor.js'][2488]++;
      next = paragraph;
    }
  }
  _$jscoverage['telerik.editor.js'][2492]++;
  if ((! next)) {
    _$jscoverage['telerik.editor.js'][2493]++;
    if ((! li)) {
      _$jscoverage['telerik.editor.js'][2494]++;
      new BlockFormatter([{tags: ["p"]}]).apply([marker]);
    }
    _$jscoverage['telerik.editor.js'][2496]++;
    range.selectNode(marker);
    _$jscoverage['telerik.editor.js'][2498]++;
    var parent = dom.parentOfType(marker, [(li? "li": "p")]);
    _$jscoverage['telerik.editor.js'][2500]++;
    split(range, parent, shouldTrim);
    _$jscoverage['telerik.editor.js'][2502]++;
    var previous = parent.previousSibling;
    _$jscoverage['telerik.editor.js'][2504]++;
    if ((dom.is(previous, "li") && previous.firstChild && (! dom.is(previous.firstChild, "br")))) {
      _$jscoverage['telerik.editor.js'][2505]++;
      previous = previous.firstChild;
    }
    _$jscoverage['telerik.editor.js'][2507]++;
    next = parent.nextSibling;
    _$jscoverage['telerik.editor.js'][2509]++;
    if ((dom.is(next, "li") && next.firstChild && (! dom.is(next.firstChild, "br")))) {
      _$jscoverage['telerik.editor.js'][2510]++;
      next = next.firstChild;
    }
    _$jscoverage['telerik.editor.js'][2512]++;
    dom.remove(parent);
    _$jscoverage['telerik.editor.js'][2514]++;
    if ((previous.firstChild && dom.is(previous.firstChild, "br"))) {
      _$jscoverage['telerik.editor.js'][2515]++;
      dom.remove(previous.firstChild);
    }
    _$jscoverage['telerik.editor.js'][2517]++;
    if ((isDataNode(previous) && (previous.nodeValue == ""))) {
      _$jscoverage['telerik.editor.js'][2518]++;
      previous = previous.parentNode;
    }
    _$jscoverage['telerik.editor.js'][2520]++;
    if ((previous && (previous.innerHTML == ""))) {
      _$jscoverage['telerik.editor.js'][2521]++;
      previous.innerHTML = emptyParagraphContent;
    }
    _$jscoverage['telerik.editor.js'][2523]++;
    if ((next.firstChild && dom.is(next.firstChild, "br"))) {
      _$jscoverage['telerik.editor.js'][2524]++;
      dom.remove(next.firstChild);
    }
    _$jscoverage['telerik.editor.js'][2526]++;
    if ((isDataNode(next) && (next.nodeValue == ""))) {
      _$jscoverage['telerik.editor.js'][2527]++;
      next = next.parentNode;
    }
    _$jscoverage['telerik.editor.js'][2529]++;
    if ((next.innerHTML == "")) {
      _$jscoverage['telerik.editor.js'][2530]++;
      next.innerHTML = emptyParagraphContent;
    }
    _$jscoverage['telerik.editor.js'][2533]++;
    normalize(previous);
  }
  _$jscoverage['telerik.editor.js'][2536]++;
  normalize(next);
  _$jscoverage['telerik.editor.js'][2538]++;
  range.selectNodeContents(next);
  _$jscoverage['telerik.editor.js'][2539]++;
  range.collapse(true);
  _$jscoverage['telerik.editor.js'][2541]++;
  dom.scrollTo(next);
  _$jscoverage['telerik.editor.js'][2543]++;
  selectRange(range);
});
}
  _$jscoverage['telerik.editor.js'][2547]++;
  function NewLineCommand(options) {
    _$jscoverage['telerik.editor.js'][2548]++;
    Command.call(this, options);
    _$jscoverage['telerik.editor.js'][2550]++;
    this.exec = (function () {
  _$jscoverage['telerik.editor.js'][2551]++;
  var range = this.getRange();
  _$jscoverage['telerik.editor.js'][2552]++;
  range.deleteContents();
  _$jscoverage['telerik.editor.js'][2553]++;
  var br = dom.create(documentFromRange(range), "br");
  _$jscoverage['telerik.editor.js'][2554]++;
  range.insertNode(br);
  _$jscoverage['telerik.editor.js'][2555]++;
  br.parentNode.normalize();
  _$jscoverage['telerik.editor.js'][2556]++;
  if (((! $.browser.msie) && ((! br.nextSibling) || dom.isWhitespace(br.nextSibling)))) {
    _$jscoverage['telerik.editor.js'][2558]++;
    var filler = br.cloneNode(true);
    _$jscoverage['telerik.editor.js'][2559]++;
    filler.setAttribute("_moz_dirty", "");
    _$jscoverage['telerik.editor.js'][2560]++;
    dom.insertAfter(filler, br);
  }
  _$jscoverage['telerik.editor.js'][2562]++;
  range.setStartAfter(br);
  _$jscoverage['telerik.editor.js'][2563]++;
  range.collapse(true);
  _$jscoverage['telerik.editor.js'][2564]++;
  selectRange(range);
});
}
  _$jscoverage['telerik.editor.js'][2566]++;
  ;
  _$jscoverage['telerik.editor.js'][2566]++;
  function ListFormatFinder(tag) {
    _$jscoverage['telerik.editor.js'][2567]++;
    var tags = [((tag == "ul")? "ol": "ul"), tag];
    _$jscoverage['telerik.editor.js'][2569]++;
    BlockFormatFinder.call(this, [{tags: tags}]);
    _$jscoverage['telerik.editor.js'][2571]++;
    this.isFormatted = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2572]++;
  var formatNodes = [], formatNode;
  _$jscoverage['telerik.editor.js'][2574]++;
  for (var i = 0; (i < nodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2575]++;
    if (((formatNode = this.findFormat(nodes[i])) && (dom.name(formatNode) == tag) && ($.inArray(formatNode, formatNodes) < 0))) {
      _$jscoverage['telerik.editor.js'][2576]++;
      formatNodes.push(formatNode);
    }
}
  _$jscoverage['telerik.editor.js'][2578]++;
  return (formatNodes.length == 1);
});
    _$jscoverage['telerik.editor.js'][2581]++;
    this.findSuitable = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2582]++;
  var candidate = dom.parentOfType(nodes[0], tags);
  _$jscoverage['telerik.editor.js'][2583]++;
  if ((candidate && (dom.name(candidate) == tag))) {
    _$jscoverage['telerik.editor.js'][2584]++;
    return candidate;
  }
  _$jscoverage['telerik.editor.js'][2585]++;
  return null;
});
}
  _$jscoverage['telerik.editor.js'][2589]++;
  function ListFormatter(tag, unwrapTag) {
    _$jscoverage['telerik.editor.js'][2590]++;
    var finder = new ListFormatFinder(tag);
    _$jscoverage['telerik.editor.js'][2592]++;
    function wrap(list, nodes) {
      _$jscoverage['telerik.editor.js'][2593]++;
      var li = dom.create(list.ownerDocument, "li");
      _$jscoverage['telerik.editor.js'][2595]++;
      for (var i = 0; (i < nodes.length); (i++)) {
        _$jscoverage['telerik.editor.js'][2596]++;
        var node = nodes[i];
        _$jscoverage['telerik.editor.js'][2598]++;
        if (dom.is(node, "li")) {
          _$jscoverage['telerik.editor.js'][2599]++;
          list.appendChild(node);
          _$jscoverage['telerik.editor.js'][2600]++;
          continue;
        }
        _$jscoverage['telerik.editor.js'][2603]++;
        li.appendChild(node);
        _$jscoverage['telerik.editor.js'][2605]++;
        if (dom.isBlock(node)) {
          _$jscoverage['telerik.editor.js'][2606]++;
          list.appendChild(li);
          _$jscoverage['telerik.editor.js'][2607]++;
          dom.unwrap(node);
          _$jscoverage['telerik.editor.js'][2608]++;
          li = li.cloneNode(false);
        }
}
      _$jscoverage['telerik.editor.js'][2612]++;
      if (li.firstChild) {
        _$jscoverage['telerik.editor.js'][2613]++;
        list.appendChild(li);
      }
}
    _$jscoverage['telerik.editor.js'][2616]++;
    function containsAny(parent, nodes) {
      _$jscoverage['telerik.editor.js'][2617]++;
      for (var i = 0; (i < nodes.length); (i++)) {
        _$jscoverage['telerik.editor.js'][2618]++;
        if (isAncestorOrSelf(parent, nodes[i])) {
          _$jscoverage['telerik.editor.js'][2619]++;
          return true;
        }
}
      _$jscoverage['telerik.editor.js'][2621]++;
      return false;
}
    _$jscoverage['telerik.editor.js'][2624]++;
    function suitable(candidate, nodes) {
      _$jscoverage['telerik.editor.js'][2625]++;
      return (containsAny(candidate, nodes) || dom.isInline(candidate) || (candidate.nodeType == 3));
}
    _$jscoverage['telerik.editor.js'][2628]++;
    this.split = (function (range) {
  _$jscoverage['telerik.editor.js'][2629]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2630]++;
  if (nodes.length) {
    _$jscoverage['telerik.editor.js'][2631]++;
    var start = dom.parentOfType(nodes[0], ["li"]);
    _$jscoverage['telerik.editor.js'][2632]++;
    var end = dom.parentOfType(nodes[(nodes.length - 1)], ["li"]);
    _$jscoverage['telerik.editor.js'][2633]++;
    range.setStartBefore(start);
    _$jscoverage['telerik.editor.js'][2634]++;
    range.setEndAfter(end);
    _$jscoverage['telerik.editor.js'][2636]++;
    for (var i = 0, l = nodes.length; (i < l); (i++)) {
      _$jscoverage['telerik.editor.js'][2637]++;
      var formatNode = finder.findFormat(nodes[i]);
      _$jscoverage['telerik.editor.js'][2638]++;
      if (formatNode) {
        _$jscoverage['telerik.editor.js'][2639]++;
        split(range, formatNode, true);
      }
}
  }
});
    _$jscoverage['telerik.editor.js'][2644]++;
    this.apply = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2645]++;
  var commonAncestor = ((nodes.length == 1)? dom.parentOfType(nodes[0], ["ul", "ol"]): dom.commonAncestor.apply(null, nodes));
  _$jscoverage['telerik.editor.js'][2647]++;
  if ((! commonAncestor)) {
    _$jscoverage['telerik.editor.js'][2648]++;
    commonAncestor = nodes[0].ownerDocument.body;
  }
  _$jscoverage['telerik.editor.js'][2650]++;
  if (dom.isInline(commonAncestor)) {
    _$jscoverage['telerik.editor.js'][2651]++;
    commonAncestor = dom.blockParentOrBody(commonAncestor);
  }
  _$jscoverage['telerik.editor.js'][2653]++;
  var ancestors = [];
  _$jscoverage['telerik.editor.js'][2655]++;
  var formatNode = finder.findSuitable(nodes);
  _$jscoverage['telerik.editor.js'][2657]++;
  if ((! formatNode)) {
    _$jscoverage['telerik.editor.js'][2658]++;
    formatNode = new ListFormatFinder(((tag == "ul")? "ol": "ul")).findSuitable(nodes);
  }
  _$jscoverage['telerik.editor.js'][2660]++;
  var childNodes = dom.significantChildNodes(commonAncestor);
  _$jscoverage['telerik.editor.js'][2662]++;
  for (var i = 0; (i < childNodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][2663]++;
    var child = childNodes[i];
    _$jscoverage['telerik.editor.js'][2664]++;
    var nodeName = dom.name(child);
    _$jscoverage['telerik.editor.js'][2665]++;
    if ((suitable(child, nodes) && ((! formatNode) || (! isAncestorOrSelf(formatNode, child))))) {
      _$jscoverage['telerik.editor.js'][2667]++;
      if ((formatNode && ((nodeName == "ul") || (nodeName == "ol")))) {
        _$jscoverage['telerik.editor.js'][2669]++;
        $.each(child.childNodes, (function () {
  _$jscoverage['telerik.editor.js'][2669]++;
  ancestors.push(this);
}));
        _$jscoverage['telerik.editor.js'][2670]++;
        dom.remove(child);
      }
      else {
        _$jscoverage['telerik.editor.js'][2672]++;
        ancestors.push(child);
      }
    }
}
  _$jscoverage['telerik.editor.js'][2677]++;
  if (((ancestors.length == childNodes.length) && (commonAncestor != nodes[0].ownerDocument.body))) {
    _$jscoverage['telerik.editor.js'][2678]++;
    ancestors = [commonAncestor];
  }
  _$jscoverage['telerik.editor.js'][2680]++;
  if ((! formatNode)) {
    _$jscoverage['telerik.editor.js'][2681]++;
    formatNode = dom.create(commonAncestor.ownerDocument, tag);
    _$jscoverage['telerik.editor.js'][2682]++;
    dom.insertBefore(formatNode, ancestors[0]);
  }
  _$jscoverage['telerik.editor.js'][2685]++;
  wrap(formatNode, ancestors);
  _$jscoverage['telerik.editor.js'][2687]++;
  if ((! dom.is(formatNode, tag))) {
    _$jscoverage['telerik.editor.js'][2688]++;
    dom.changeTag(formatNode, tag);
  }
});
    _$jscoverage['telerik.editor.js'][2691]++;
    function unwrap(ul) {
      _$jscoverage['telerik.editor.js'][2692]++;
      for (var li = ul.firstChild; li; (li = li.nextSibling)) {
        _$jscoverage['telerik.editor.js'][2693]++;
        var p = dom.create(ul.ownerDocument, (unwrapTag || "p"));
        _$jscoverage['telerik.editor.js'][2695]++;
        while (li.firstChild) {
          _$jscoverage['telerik.editor.js'][2696]++;
          var child = li.firstChild;
          _$jscoverage['telerik.editor.js'][2697]++;
          if (dom.isBlock(child)) {
            _$jscoverage['telerik.editor.js'][2698]++;
            dom.insertBefore(child, ul);
          }
          else {
            _$jscoverage['telerik.editor.js'][2700]++;
            p.appendChild(child);
          }
}
        _$jscoverage['telerik.editor.js'][2702]++;
        if (p.firstChild) {
          _$jscoverage['telerik.editor.js'][2703]++;
          dom.insertBefore(p, ul);
        }
}
      _$jscoverage['telerik.editor.js'][2706]++;
      dom.remove(ul);
}
    _$jscoverage['telerik.editor.js'][2709]++;
    this.remove = (function (nodes) {
  _$jscoverage['telerik.editor.js'][2710]++;
  var formatNode;
  _$jscoverage['telerik.editor.js'][2711]++;
  for (var i = 0, l = nodes.length; (i < l); (i++)) {
    _$jscoverage['telerik.editor.js'][2712]++;
    if ((formatNode = finder.findFormat(nodes[i]))) {
      _$jscoverage['telerik.editor.js'][2713]++;
      unwrap(formatNode);
    }
}
});
    _$jscoverage['telerik.editor.js'][2716]++;
    this.toggle = (function (range) {
  _$jscoverage['telerik.editor.js'][2717]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2718]++;
  if ((! nodes.length)) {
    _$jscoverage['telerik.editor.js'][2719]++;
    range.selectNodeContents(range.commonAncestorContainer);
    _$jscoverage['telerik.editor.js'][2720]++;
    nodes = textNodes(range);
    _$jscoverage['telerik.editor.js'][2721]++;
    if ((! nodes.length)) {
      _$jscoverage['telerik.editor.js'][2722]++;
      nodes = dom.significantChildNodes(range.commonAncestorContainer);
    }
  }
  _$jscoverage['telerik.editor.js'][2725]++;
  if (finder.isFormatted(nodes)) {
    _$jscoverage['telerik.editor.js'][2726]++;
    this.split(range);
    _$jscoverage['telerik.editor.js'][2727]++;
    this.remove(nodes);
  }
  else {
    _$jscoverage['telerik.editor.js'][2729]++;
    this.apply(nodes);
  }
});
}
  _$jscoverage['telerik.editor.js'][2733]++;
  function ListCommand(options) {
    _$jscoverage['telerik.editor.js'][2734]++;
    options.formatter = new ListFormatter(options.tag);
    _$jscoverage['telerik.editor.js'][2735]++;
    Command.call(this, options);
}
  _$jscoverage['telerik.editor.js'][2738]++;
  function ListTool(options) {
    _$jscoverage['telerik.editor.js'][2739]++;
    FormatTool.call(this, $.extend(options, {finder: new ListFormatFinder(options.tag)}));
    _$jscoverage['telerik.editor.js'][2743]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][2744]++;
  return new ListCommand($.extend(commandArguments, {tag: options.tag}));
});
}
  _$jscoverage['telerik.editor.js'][2746]++;
  ;
  _$jscoverage['telerik.editor.js'][2746]++;
  function LinkFormatFinder() {
    _$jscoverage['telerik.editor.js'][2747]++;
    this.findSuitable = (function (sourceNode) {
  _$jscoverage['telerik.editor.js'][2748]++;
  return dom.parentOfType(sourceNode, ["a"]);
});
}
  _$jscoverage['telerik.editor.js'][2752]++;
  function LinkFormatter() {
    _$jscoverage['telerik.editor.js'][2753]++;
    this.finder = new LinkFormatFinder();
    _$jscoverage['telerik.editor.js'][2755]++;
    this.apply = (function (range, attributes) {
  _$jscoverage['telerik.editor.js'][2756]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2757]++;
  if ((attributes.innerHTML != undefined)) {
    _$jscoverage['telerik.editor.js'][2758]++;
    var markers = getMarkers(range);
    _$jscoverage['telerik.editor.js'][2759]++;
    var document = documentFromRange(range);
    _$jscoverage['telerik.editor.js'][2760]++;
    range.deleteContents();
    _$jscoverage['telerik.editor.js'][2761]++;
    var a = dom.create(document, "a", attributes);
    _$jscoverage['telerik.editor.js'][2762]++;
    range.insertNode(a);
    _$jscoverage['telerik.editor.js'][2764]++;
    if ((markers.length > 1)) {
      _$jscoverage['telerik.editor.js'][2765]++;
      dom.insertAfter(markers[(markers.length - 1)], a);
      _$jscoverage['telerik.editor.js'][2766]++;
      dom.insertAfter(markers[1], a);
      _$jscoverage['telerik.editor.js'][2767]++;
      (dom[((nodes.length > 0)? "insertBefore": "insertAfter")])(markers[0], a);
    }
  }
  else {
    _$jscoverage['telerik.editor.js'][2770]++;
    var formatter = new InlineFormatter([{tags: ["a"]}], attributes);
    _$jscoverage['telerik.editor.js'][2771]++;
    formatter.finder = this.finder;
    _$jscoverage['telerik.editor.js'][2772]++;
    formatter.apply(nodes);
  }
});
}
  _$jscoverage['telerik.editor.js'][2777]++;
  function UnlinkCommand(options) {
    _$jscoverage['telerik.editor.js'][2778]++;
    options.formatter = {toggle: (function (range) {
  _$jscoverage['telerik.editor.js'][2780]++;
  new InlineFormatter([{tags: ["a"]}]).remove(textNodes(range));
})};
    _$jscoverage['telerik.editor.js'][2784]++;
    Command.call(this, options);
}
  _$jscoverage['telerik.editor.js'][2787]++;
  function LinkCommand(options) {
    _$jscoverage['telerik.editor.js'][2788]++;
    Command.call(this, options);
    _$jscoverage['telerik.editor.js'][2790]++;
    var attributes;
    _$jscoverage['telerik.editor.js'][2792]++;
    this.async = true;
    _$jscoverage['telerik.editor.js'][2794]++;
    var formatter = new LinkFormatter();
    _$jscoverage['telerik.editor.js'][2796]++;
    ((this.exec = (function () {
  _$jscoverage['telerik.editor.js'][2797]++;
  var range = this.getRange();
  _$jscoverage['telerik.editor.js'][2799]++;
  var collapsed = range.collapsed;
  _$jscoverage['telerik.editor.js'][2801]++;
  range = this.lockRange(true);
  _$jscoverage['telerik.editor.js'][2803]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][2805]++;
  var initialText = null;
  _$jscoverage['telerik.editor.js'][2807]++;
  var self = this;
  _$jscoverage['telerik.editor.js'][2809]++;
  function apply(e) {
    _$jscoverage['telerik.editor.js'][2810]++;
    var href = $("#t-editor-link-url", dialog.element).val();
    _$jscoverage['telerik.editor.js'][2812]++;
    if ((href && (href != "http://"))) {
      _$jscoverage['telerik.editor.js'][2813]++;
      attributes = {href: href};
      _$jscoverage['telerik.editor.js'][2815]++;
      var title = $("#t-editor-link-title", dialog.element).val();
      _$jscoverage['telerik.editor.js'][2816]++;
      if (title) {
        _$jscoverage['telerik.editor.js'][2817]++;
        attributes.title = title;
      }
      _$jscoverage['telerik.editor.js'][2819]++;
      var text = $("#t-editor-link-text", dialog.element).val();
      _$jscoverage['telerik.editor.js'][2820]++;
      if ((text !== initialText)) {
        _$jscoverage['telerik.editor.js'][2821]++;
        attributes.innerHTML = text;
      }
      _$jscoverage['telerik.editor.js'][2823]++;
      var target = $("#t-editor-link-target", dialog.element).is(":checked");
      _$jscoverage['telerik.editor.js'][2824]++;
      if (target) {
        _$jscoverage['telerik.editor.js'][2825]++;
        attributes.target = "_blank";
      }
      _$jscoverage['telerik.editor.js'][2827]++;
      formatter.apply(range, attributes);
    }
    _$jscoverage['telerik.editor.js'][2829]++;
    close(e);
    _$jscoverage['telerik.editor.js'][2830]++;
    if (self.change) {
      _$jscoverage['telerik.editor.js'][2831]++;
      self.change();
    }
}
  _$jscoverage['telerik.editor.js'][2834]++;
  function close(e) {
    _$jscoverage['telerik.editor.js'][2835]++;
    e.preventDefault();
    _$jscoverage['telerik.editor.js'][2836]++;
    dialog.destroy();
    _$jscoverage['telerik.editor.js'][2838]++;
    windowFromDocument(documentFromRange(range)).focus();
    _$jscoverage['telerik.editor.js'][2840]++;
    self.releaseRange(range);
}
  _$jscoverage['telerik.editor.js'][2843]++;
  var a = (nodes.length? formatter.finder.findSuitable(nodes[0]): null);
  _$jscoverage['telerik.editor.js'][2845]++;
  var shouldShowText = ((nodes.length <= 1) || ((nodes.length == 2) && collapsed));
  _$jscoverage['telerik.editor.js'][2847]++;
  var dialog = $t.window.create($.extend({}, this.editor.dialogOptions, {title: "Insert link", html: new ($.telerik.stringBuilder)().cat("<div class=\"t-editor-dialog\">").cat("<ol>").cat("<li class=\"t-form-text-row\"><label for=\"t-editor-link-url\">Web address</label><input type=\"text\" id=\"t-editor-link-url\"/></li>").catIf("<li class=\"t-form-text-row\"><label for=\"t-editor-link-text\">Text</label><input type=\"text\" id=\"t-editor-link-text\"/></li>", shouldShowText).cat("<li class=\"t-form-text-row\"><label for=\"t-editor-link-title\">Tooltip</label><input type=\"text\" id=\"t-editor-link-title\"/></li>").cat("<li class=\"t-form-checkbox-row\"><input type=\"checkbox\" id=\"t-editor-link-target\"/><label for=\"t-editor-link-target\">Open link in new window</label></li>").cat("</ol>").cat("<div class=\"t-button-wrapper\">").cat("<button class=\"t-dialog-insert t-button t-state-default\">Insert</button>").cat("&nbsp;or&nbsp;").cat("<a href=\"#\" class=\"t-dialog-close t-link\">Close</a>").cat("</div>").cat("</div>").string(), onClose: close})).hide().find(".t-dialog-insert").click(apply).end().find(".t-dialog-close").click(close).end().find(".t-form-text-row input").keydown((function (e) {
  _$jscoverage['telerik.editor.js'][2870]++;
  if ((e.keyCode == 13)) {
    _$jscoverage['telerik.editor.js'][2871]++;
    apply(e);
  }
  else {
    _$jscoverage['telerik.editor.js'][2872]++;
    if ((e.keyCode == 27)) {
      _$jscoverage['telerik.editor.js'][2873]++;
      close(e);
    }
  }
})).end().delegate(".t-button", "mouseenter", $t.buttonHover).delegate(".t-button", "mouseleave", $t.buttonLeave).find("#t-editor-link-url").val((a? a.getAttribute("href", 2): "http://")).end().find("#t-editor-link-text").val(((nodes.length > 0)? ((nodes.length == 1)? nodes[0].nodeValue: (nodes[0].nodeValue + nodes[1].nodeValue)): "")).end().find("#t-editor-link-title").val((a? a.title: "")).end().find("#t-editor-link-target").attr("checked", (a? (a.target == "_blank"): false)).end().show().data("tWindow").center();
  _$jscoverage['telerik.editor.js'][2886]++;
  if ((shouldShowText && (nodes.length > 0))) {
    _$jscoverage['telerik.editor.js'][2887]++;
    initialText = $("#t-editor-link-text", dialog.element).val();
  }
  _$jscoverage['telerik.editor.js'][2889]++;
  $("#t-editor-link-url", dialog.element).focus().select();
})), (this.redo = (function () {
  _$jscoverage['telerik.editor.js'][2893]++;
  var range = this.lockRange(true);
  _$jscoverage['telerik.editor.js'][2894]++;
  formatter.apply(range, attributes);
  _$jscoverage['telerik.editor.js'][2895]++;
  this.releaseRange(range);
})));
}
  _$jscoverage['telerik.editor.js'][2899]++;
  function UnlinkTool(options) {
    _$jscoverage['telerik.editor.js'][2900]++;
    Tool.call(this, $.extend(options, {command: UnlinkCommand}));
    _$jscoverage['telerik.editor.js'][2902]++;
    var finder = new InlineFormatFinder([{tags: ["a"]}]);
    _$jscoverage['telerik.editor.js'][2904]++;
    this.init = (function ($ui) {
  _$jscoverage['telerik.editor.js'][2905]++;
  $ui.attr("unselectable", "on").addClass("t-state-disabled");
});
    _$jscoverage['telerik.editor.js'][2909]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][2910]++;
  $ui.toggleClass("t-state-disabled", (! finder.isFormatted(nodes))).removeClass("t-state-hover");
});
}
  _$jscoverage['telerik.editor.js'][2914]++;
  function ImageCommand(options) {
    _$jscoverage['telerik.editor.js'][2915]++;
    Command.call(this, options);
    _$jscoverage['telerik.editor.js'][2916]++;
    this.async = true;
    _$jscoverage['telerik.editor.js'][2917]++;
    var attributes;
    _$jscoverage['telerik.editor.js'][2919]++;
    function insertImage(img, range) {
      _$jscoverage['telerik.editor.js'][2920]++;
      if ((attributes.src && (attributes.src != "http://"))) {
        _$jscoverage['telerik.editor.js'][2921]++;
        if ((! img)) {
          _$jscoverage['telerik.editor.js'][2922]++;
          img = dom.create(documentFromRange(range), "img", attributes);
          _$jscoverage['telerik.editor.js'][2923]++;
          img.onload = (img.onerror = (function () {
  _$jscoverage['telerik.editor.js'][2924]++;
  img.removeAttribute("complete");
  _$jscoverage['telerik.editor.js'][2925]++;
  img.removeAttribute("width");
  _$jscoverage['telerik.editor.js'][2926]++;
  img.removeAttribute("height");
}));
          _$jscoverage['telerik.editor.js'][2928]++;
          range.deleteContents();
          _$jscoverage['telerik.editor.js'][2929]++;
          range.insertNode(img);
          _$jscoverage['telerik.editor.js'][2930]++;
          range.setStartAfter(img);
          _$jscoverage['telerik.editor.js'][2931]++;
          range.setEndAfter(img);
          _$jscoverage['telerik.editor.js'][2932]++;
          selectRange(range);
          _$jscoverage['telerik.editor.js'][2933]++;
          return true;
        }
        else {
          _$jscoverage['telerik.editor.js'][2935]++;
          dom.attr(img, attributes);
        }
      }
      _$jscoverage['telerik.editor.js'][2938]++;
      return false;
}
    _$jscoverage['telerik.editor.js'][2941]++;
    this.redo = (function () {
  _$jscoverage['telerik.editor.js'][2942]++;
  var range = this.lockRange();
  _$jscoverage['telerik.editor.js'][2943]++;
  if ((! insertImage(RangeUtils.image(range), range))) {
    _$jscoverage['telerik.editor.js'][2944]++;
    this.releaseRange(range);
  }
});
    _$jscoverage['telerik.editor.js'][2947]++;
    this.exec = (function () {
  _$jscoverage['telerik.editor.js'][2948]++;
  var range = this.lockRange();
  _$jscoverage['telerik.editor.js'][2950]++;
  var applied = false;
  _$jscoverage['telerik.editor.js'][2952]++;
  var img = RangeUtils.image(range);
  _$jscoverage['telerik.editor.js'][2954]++;
  var self = this;
  _$jscoverage['telerik.editor.js'][2956]++;
  function apply(e) {
    _$jscoverage['telerik.editor.js'][2957]++;
    attributes = {src: $("#t-editor-image-url", dialog.element).val(), alt: $("#t-editor-image-title", dialog.element).val()};
    _$jscoverage['telerik.editor.js'][2962]++;
    applied = insertImage(img, range);
    _$jscoverage['telerik.editor.js'][2964]++;
    close(e);
    _$jscoverage['telerik.editor.js'][2966]++;
    if (self.change) {
      _$jscoverage['telerik.editor.js'][2967]++;
      self.change();
    }
}
  _$jscoverage['telerik.editor.js'][2970]++;
  function close(e) {
    _$jscoverage['telerik.editor.js'][2971]++;
    e.preventDefault();
    _$jscoverage['telerik.editor.js'][2972]++;
    dialog.destroy();
    _$jscoverage['telerik.editor.js'][2974]++;
    windowFromDocument(documentFromRange(range)).focus();
    _$jscoverage['telerik.editor.js'][2975]++;
    if ((! applied)) {
      _$jscoverage['telerik.editor.js'][2976]++;
      self.releaseRange(range);
    }
}
  _$jscoverage['telerik.editor.js'][2979]++;
  var dialog = $t.window.create($.extend({}, this.editor.dialogOptions, {title: "Insert image", html: new ($.telerik.stringBuilder)().cat("<div class=\"t-editor-dialog\">").cat("<ol>").cat("<li class=\"t-form-text-row\"><label for=\"t-editor-image-url\">Web address</label><input type=\"text\" id=\"t-editor-image-url\"/></li>").cat("<li class=\"t-form-text-row\"><label for=\"t-editor-image-title\">Tooltip</label><input type=\"text\" id=\"t-editor-image-title\"/></li>").cat("</ol>").cat("<div class=\"t-button-wrapper\">").cat("<button class=\"t-dialog-insert t-button t-state-default\">Insert</button>").cat("&nbsp;or&nbsp;").cat("<a href=\"#\" class=\"t-dialog-close t-link\">Close</a>").cat("</div>").cat("</div>").string(), onClose: close})).hide().find(".t-dialog-insert").click(apply).end().find(".t-dialog-close").click(close).end().find(".t-form-text-row input").keydown((function (e) {
  _$jscoverage['telerik.editor.js'][3000]++;
  if ((e.keyCode == 13)) {
    _$jscoverage['telerik.editor.js'][3001]++;
    apply(e);
  }
  else {
    _$jscoverage['telerik.editor.js'][3002]++;
    if ((e.keyCode == 27)) {
      _$jscoverage['telerik.editor.js'][3003]++;
      close(e);
    }
  }
})).end().delegate(".t-button", "mouseenter", $t.buttonHover).delegate(".t-button", "mouseleave", $t.buttonLeave).find("#t-editor-image-url").val((img? img.getAttribute("src", 2): "http://")).end().find("#t-editor-image-title").val((img? img.alt: "")).end().show().data("tWindow").center();
  _$jscoverage['telerik.editor.js'][3013]++;
  $("#t-editor-image-url", dialog.element).focus().select();
});
}
  _$jscoverage['telerik.editor.js'][3015]++;
  ;
  _$jscoverage['telerik.editor.js'][3017]++;
  $t.selectbox = (function (element, options) {
  _$jscoverage['telerik.editor.js'][3018]++;
  var selectedValue;
  _$jscoverage['telerik.editor.js'][3019]++;
  var $element = $(element);
  _$jscoverage['telerik.editor.js'][3020]++;
  var $text = $element.find(".t-input");
  _$jscoverage['telerik.editor.js'][3022]++;
  var dropDown = (this.dropDown = new ($t.dropDown)({effects: $t.fx.slide.defaults(), onItemCreate: options.onItemCreate, onClick: (function (e) {
  _$jscoverage['telerik.editor.js'][3026]++;
  select(options.data[$(e.item).index()].Value);
  _$jscoverage['telerik.editor.js'][3027]++;
  options.onChange({value: selectedValue});
})}));
  _$jscoverage['telerik.editor.js'][3031]++;
  function fill() {
    _$jscoverage['telerik.editor.js'][3032]++;
    if ((! dropDown.$items)) {
      _$jscoverage['telerik.editor.js'][3033]++;
      dropDown.dataBind(options.data);
    }
}
  _$jscoverage['telerik.editor.js'][3036]++;
  function text(value) {
    _$jscoverage['telerik.editor.js'][3037]++;
    $text.html((value? value: "&nbsp;"));
}
  _$jscoverage['telerik.editor.js'][3040]++;
  function select(item) {
    _$jscoverage['telerik.editor.js'][3041]++;
    fill();
    _$jscoverage['telerik.editor.js'][3042]++;
    var index = -1;
    _$jscoverage['telerik.editor.js'][3044]++;
    for (var i = 0, len = options.data.length; (i < len); (i++)) {
      _$jscoverage['telerik.editor.js'][3045]++;
      if ((options.data[i].Value == item)) {
        _$jscoverage['telerik.editor.js'][3046]++;
        index = i;
        _$jscoverage['telerik.editor.js'][3047]++;
        break;
      }
}
    _$jscoverage['telerik.editor.js'][3051]++;
    if ((index != -1)) {
      _$jscoverage['telerik.editor.js'][3053]++;
      dropDown.$items.removeClass("t-state-selected").eq(index).addClass("t-state-selected");
      _$jscoverage['telerik.editor.js'][3057]++;
      text($(dropDown.$items[index]).text());
      _$jscoverage['telerik.editor.js'][3058]++;
      selectedValue = options.data[index].Value;
    }
}
  _$jscoverage['telerik.editor.js'][3062]++;
  this.value = (function (value) {
  _$jscoverage['telerik.editor.js'][3063]++;
  select(value);
  _$jscoverage['telerik.editor.js'][3065]++;
  if ((selectedValue != value)) {
    _$jscoverage['telerik.editor.js'][3066]++;
    text((options.title || value));
  }
});
  _$jscoverage['telerik.editor.js'][3069]++;
  this.close = (function () {
  _$jscoverage['telerik.editor.js'][3070]++;
  dropDown.close();
});
  _$jscoverage['telerik.editor.js'][3073]++;
  text((options.title || $text.text()));
  _$jscoverage['telerik.editor.js'][3075]++;
  $element.bind("click", (function (e) {
  _$jscoverage['telerik.editor.js'][3076]++;
  fill();
  _$jscoverage['telerik.editor.js'][3077]++;
  if (dropDown.isOpened()) {
    _$jscoverage['telerik.editor.js'][3078]++;
    dropDown.close();
  }
  else {
    _$jscoverage['telerik.editor.js'][3080]++;
    dropDown.open({offset: $element.offset(), outerHeight: $element.outerHeight(), outerWidth: $element.outerWidth(), zIndex: $t.getElementZIndex($element[0])});
  }
})).find("*").attr("unselectable", "on");
  _$jscoverage['telerik.editor.js'][3090]++;
  dropDown.$element.css("direction", (($element.closest(".t-rtl").length > 0)? "rtl": ""));
  _$jscoverage['telerik.editor.js'][3092]++;
  $(document.documentElement).bind("mousedown", $.proxy((function (e) {
  _$jscoverage['telerik.editor.js'][3093]++;
  var $dropDown = dropDown.$element;
  _$jscoverage['telerik.editor.js'][3094]++;
  var isDropDown = ($dropDown && ($dropDown.parent().length > 0));
  _$jscoverage['telerik.editor.js'][3096]++;
  if ((isDropDown && (! $.contains(element, e.target)) && (! $.contains($dropDown.parent()[0], e.target)))) {
    _$jscoverage['telerik.editor.js'][3097]++;
    dropDown.close();
  }
}), this));
});
  _$jscoverage['telerik.editor.js'][3103]++;
  $.fn.tSelectBox = (function (options) {
  _$jscoverage['telerik.editor.js'][3104]++;
  return $t.create(this, {name: "tSelectBox", init: (function (element, options) {
  _$jscoverage['telerik.editor.js'][3107]++;
  return new ($t.selectbox)(element, options);
}), options: options});
});
  _$jscoverage['telerik.editor.js'][3113]++;
  $.fn.tSelectBox.defaults = {effects: $.fn.tDropDownList.defaults.effects};
  _$jscoverage['telerik.editor.js'][3119]++;
  $t.colorpicker = (function (element, options) {
  _$jscoverage['telerik.editor.js'][3120]++;
  this.element = element;
  _$jscoverage['telerik.editor.js'][3121]++;
  var $element = $(element);
  _$jscoverage['telerik.editor.js'][3123]++;
  $.extend(this, options);
  _$jscoverage['telerik.editor.js'][3125]++;
  $element.bind("click", $.proxy(this.click, this)).find("*").attr("unselectable", "on");
  _$jscoverage['telerik.editor.js'][3129]++;
  if (this.selectedColor) {
    _$jscoverage['telerik.editor.js'][3130]++;
    $element.find(".t-selected-color").css("background-color", this.selectedColor);
  }
  _$jscoverage['telerik.editor.js'][3132]++;
  $(element.ownerDocument.documentElement).bind("mousedown", $.proxy((function (e) {
  _$jscoverage['telerik.editor.js'][3134]++;
  if ((! $(e.target).closest(".t-colorpicker-popup").length)) {
    _$jscoverage['telerik.editor.js'][3135]++;
    this.close();
  }
}), this));
  _$jscoverage['telerik.editor.js'][3138]++;
  $t.bind(this, {change: this.onChange, load: this.onLoad});
});
  _$jscoverage['telerik.editor.js'][3144]++;
  $t.colorpicker.prototype = {select: (function (color) {
  _$jscoverage['telerik.editor.js'][3146]++;
  if (color) {
    _$jscoverage['telerik.editor.js'][3147]++;
    color = dom.toHex(color);
    _$jscoverage['telerik.editor.js'][3148]++;
    if ((! $t.trigger(this.element, "change", {value: color}))) {
      _$jscoverage['telerik.editor.js'][3149]++;
      this.value(color);
      _$jscoverage['telerik.editor.js'][3150]++;
      this.close();
    }
  }
  else {
    _$jscoverage['telerik.editor.js'][3153]++;
    $t.trigger(this.element, "change", {value: this.selectedColor});
  }
}), open: (function () {
  _$jscoverage['telerik.editor.js'][3157]++;
  var $popup = this.popup();
  _$jscoverage['telerik.editor.js'][3158]++;
  var $element = $(this.element);
  _$jscoverage['telerik.editor.js'][3160]++;
  var elementPosition = $element.offset();
  _$jscoverage['telerik.editor.js'][3161]++;
  elementPosition.top += $element.outerHeight();
  _$jscoverage['telerik.editor.js'][3163]++;
  if ($element.closest(".t-rtl").length) {
    _$jscoverage['telerik.editor.js'][3164]++;
    elementPosition.left -= ($popup.outerWidth() - $element.outerWidth());
  }
  _$jscoverage['telerik.editor.js'][3166]++;
  var zIndex = "auto";
  _$jscoverage['telerik.editor.js'][3168]++;
  $element.parents().andSelf().each((function () {
  _$jscoverage['telerik.editor.js'][3169]++;
  zIndex = $(this).css("zIndex");
  _$jscoverage['telerik.editor.js'][3170]++;
  if (Number(zIndex)) {
    _$jscoverage['telerik.editor.js'][3171]++;
    zIndex = (Number(zIndex) + 1);
    _$jscoverage['telerik.editor.js'][3172]++;
    return false;
  }
}));
  _$jscoverage['telerik.editor.js'][3176]++;
  $t.fx._wrap($popup).css($.extend({position: "absolute", zIndex: zIndex}, elementPosition));
  _$jscoverage['telerik.editor.js'][3181]++;
  $popup.find(".t-item").bind("click", $.proxy((function (e) {
  _$jscoverage['telerik.editor.js'][3183]++;
  var color = $(e.target, e.target.ownerDocument).css("background-color");
  _$jscoverage['telerik.editor.js'][3184]++;
  this.select(color);
}), this));
  _$jscoverage['telerik.editor.js'][3188]++;
  $t.fx.play(this.effects, $popup, {direction: "bottom"});
}), close: (function () {
  _$jscoverage['telerik.editor.js'][3192]++;
  if ((! this.$popup)) {
    _$jscoverage['telerik.editor.js'][3192]++;
    return;
  }
  _$jscoverage['telerik.editor.js'][3194]++;
  $t.fx.rewind(this.effects, this.$popup, {direction: "bottom"}, $.proxy((function () {
  _$jscoverage['telerik.editor.js'][3195]++;
  dom.remove(this.$popup[0].parentNode);
  _$jscoverage['telerik.editor.js'][3196]++;
  this.$popup = null;
}), this));
}), toggle: (function () {
  _$jscoverage['telerik.editor.js'][3201]++;
  if (((! this.$popup) || (! this.$popup.is(":visible")))) {
    _$jscoverage['telerik.editor.js'][3202]++;
    this.open();
  }
  else {
    _$jscoverage['telerik.editor.js'][3204]++;
    this.close();
  }
}), click: (function (e) {
  _$jscoverage['telerik.editor.js'][3208]++;
  if (($(e.target).closest(".t-tool-icon").length > 0)) {
    _$jscoverage['telerik.editor.js'][3209]++;
    this.select();
  }
  else {
    _$jscoverage['telerik.editor.js'][3211]++;
    this.toggle();
  }
}), value: (function (color) {
  _$jscoverage['telerik.editor.js'][3215]++;
  if ((! color)) {
    _$jscoverage['telerik.editor.js'][3216]++;
    return this.selectedColor;
  }
  _$jscoverage['telerik.editor.js'][3218]++;
  color = dom.toHex(color);
  _$jscoverage['telerik.editor.js'][3220]++;
  this.selectedColor = color;
  _$jscoverage['telerik.editor.js'][3222]++;
  $(".t-selected-color", this.element).css("background-color", color);
}), popup: (function () {
  _$jscoverage['telerik.editor.js'][3227]++;
  if ((! this.$popup)) {
    _$jscoverage['telerik.editor.js'][3228]++;
    this.$popup = $($t.colorpicker.buildPopup(this)).hide().appendTo(document.body).find("*").attr("unselectable", "on").end();
  }
  _$jscoverage['telerik.editor.js'][3235]++;
  return this.$popup;
})};
  _$jscoverage['telerik.editor.js'][3239]++;
  $.extend($t.colorpicker, {buildPopup: (function (component) {
  _$jscoverage['telerik.editor.js'][3241]++;
  var html = new ($t.stringBuilder)();
  _$jscoverage['telerik.editor.js'][3243]++;
  html.cat("<div class=\"t-popup t-group t-colorpicker-popup\">").cat("<ul class=\"t-reset\">");
  _$jscoverage['telerik.editor.js'][3246]++;
  var data = component.data;
  _$jscoverage['telerik.editor.js'][3247]++;
  var currentColor = (component.value() || "").substring(1);
  _$jscoverage['telerik.editor.js'][3249]++;
  for (var i = 0, len = data.length; (i < len); (i++)) {
    _$jscoverage['telerik.editor.js'][3250]++;
    html.cat("<li class=\"t-item").catIf(" t-selected", (data[i] == currentColor)).cat("\" style=\"background-color:#").cat(data[i]).cat("\"></li>");
}
  _$jscoverage['telerik.editor.js'][3257]++;
  html.cat("</ul></div>");
  _$jscoverage['telerik.editor.js'][3259]++;
  return html.string();
})});
  _$jscoverage['telerik.editor.js'][3263]++;
  $.fn.tColorPicker = (function (options) {
  _$jscoverage['telerik.editor.js'][3264]++;
  return $t.create(this, {name: "tColorPicker", init: (function (element, options) {
  _$jscoverage['telerik.editor.js'][3267]++;
  return new ($t.colorpicker)(element, options);
}), options: options});
});
  _$jscoverage['telerik.editor.js'][3273]++;
  $.fn.tColorPicker.defaults = {data: "000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7".split(","), selectedColor: null, effects: $.fn.tDropDownList.defaults.effects};
  _$jscoverage['telerik.editor.js'][3277]++;
  function IndentFormatter() {
    _$jscoverage['telerik.editor.js'][3278]++;
    var finder = new BlockFormatFinder([{tags: blockElements}]);
    _$jscoverage['telerik.editor.js'][3280]++;
    function margin(node) {
      _$jscoverage['telerik.editor.js'][3281]++;
      return (node.style.marginLeft || 0);
}
    _$jscoverage['telerik.editor.js'][3284]++;
    this.apply = (function (nodes) {
  _$jscoverage['telerik.editor.js'][3285]++;
  var formatNodes = finder.findSuitable(nodes);
  _$jscoverage['telerik.editor.js'][3286]++;
  if (formatNodes.length) {
    _$jscoverage['telerik.editor.js'][3287]++;
    var targets = [];
    _$jscoverage['telerik.editor.js'][3288]++;
    for (var i = 0; (i < formatNodes.length); (i++)) {
      _$jscoverage['telerik.editor.js'][3289]++;
      if (dom.is(formatNodes[i], "li")) {
        _$jscoverage['telerik.editor.js'][3290]++;
        if (($(formatNodes[i]).index() == 0)) {
          _$jscoverage['telerik.editor.js'][3291]++;
          targets.push(formatNodes[i].parentNode);
        }
        else {
          _$jscoverage['telerik.editor.js'][3292]++;
          if (($.inArray(formatNodes[i].parentNode, targets) < 0)) {
            _$jscoverage['telerik.editor.js'][3293]++;
            targets.push(formatNodes[i]);
          }
        }
      }
      else {
        _$jscoverage['telerik.editor.js'][3296]++;
        targets.push(formatNodes[i]);
      }
}
    _$jscoverage['telerik.editor.js'][3298]++;
    while (targets.length) {
      _$jscoverage['telerik.editor.js'][3299]++;
      var formatNode = targets.shift();
      _$jscoverage['telerik.editor.js'][3300]++;
      if (dom.is(formatNode, "li")) {
        _$jscoverage['telerik.editor.js'][3301]++;
        var parentList = formatNode.parentNode;
        _$jscoverage['telerik.editor.js'][3302]++;
        var $sibling = $(formatNode).prev("li");
        _$jscoverage['telerik.editor.js'][3303]++;
        var nestedList = $sibling.find(">ul")[0];
        _$jscoverage['telerik.editor.js'][3305]++;
        if ((! nestedList)) {
          _$jscoverage['telerik.editor.js'][3306]++;
          nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList));
          _$jscoverage['telerik.editor.js'][3307]++;
          $sibling.append(nestedList);
        }
        _$jscoverage['telerik.editor.js'][3310]++;
        while ((formatNode && (formatNode.parentNode == parentList))) {
          _$jscoverage['telerik.editor.js'][3311]++;
          nestedList.appendChild(formatNode);
          _$jscoverage['telerik.editor.js'][3312]++;
          formatNode = targets.shift();
}
      }
      else {
        _$jscoverage['telerik.editor.js'][3315]++;
        var marginLeft = (parseInt(margin(formatNode)) + 30);
        _$jscoverage['telerik.editor.js'][3316]++;
        dom.style(formatNode, {marginLeft: marginLeft});
      }
}
  }
  else {
    _$jscoverage['telerik.editor.js'][3320]++;
    var formatter = new BlockFormatter([{tags: blockElements}], {style: {marginLeft: 30}});
    _$jscoverage['telerik.editor.js'][3322]++;
    formatter.apply(nodes);
  }
});
    _$jscoverage['telerik.editor.js'][3326]++;
    this.remove = (function (nodes) {
  _$jscoverage['telerik.editor.js'][3327]++;
  var formatNodes = finder.findSuitable(nodes);
  _$jscoverage['telerik.editor.js'][3328]++;
  for (var i = 0; (i < formatNodes.length); (i++)) {
    _$jscoverage['telerik.editor.js'][3329]++;
    var $formatNode = $(formatNodes[i]);
    _$jscoverage['telerik.editor.js'][3331]++;
    if ($formatNode.is("li")) {
      _$jscoverage['telerik.editor.js'][3332]++;
      var $list = $formatNode.parent();
      _$jscoverage['telerik.editor.js'][3333]++;
      var $listParent = $list.parent();
      _$jscoverage['telerik.editor.js'][3335]++;
      if (($listParent.is("li") && (! margin($list[0])))) {
        _$jscoverage['telerik.editor.js'][3336]++;
        var $siblings = $formatNode.nextAll("li");
        _$jscoverage['telerik.editor.js'][3337]++;
        if ($siblings.length) {
          _$jscoverage['telerik.editor.js'][3338]++;
          $($list[0].cloneNode(false)).appendTo($formatNode).append($siblings);
        }
        _$jscoverage['telerik.editor.js'][3340]++;
        $formatNode.insertAfter($listParent);
        _$jscoverage['telerik.editor.js'][3342]++;
        if ((! $list.children("li").length)) {
          _$jscoverage['telerik.editor.js'][3343]++;
          $list.remove();
        }
        _$jscoverage['telerik.editor.js'][3345]++;
        continue;
      }
      else {
        _$jscoverage['telerik.editor.js'][3347]++;
        $formatNode = $list;
      }
    }
    _$jscoverage['telerik.editor.js'][3351]++;
    var marginLeft = (parseInt(margin($formatNode[0])) - 30);
    _$jscoverage['telerik.editor.js'][3352]++;
    (dom[((marginLeft <= 0)? "unstyle": "style")])($formatNode[0], {marginLeft: marginLeft});
}
});
}
  _$jscoverage['telerik.editor.js'][3357]++;
  function IndentCommand(options) {
    _$jscoverage['telerik.editor.js'][3358]++;
    options.formatter = {toggle: (function (range) {
  _$jscoverage['telerik.editor.js'][3360]++;
  new IndentFormatter().apply(RangeUtils.nodes(range));
})};
    _$jscoverage['telerik.editor.js'][3363]++;
    Command.call(this, options);
}
  _$jscoverage['telerik.editor.js'][3366]++;
  function OutdentCommand(options) {
    _$jscoverage['telerik.editor.js'][3367]++;
    options.formatter = {toggle: (function (range) {
  _$jscoverage['telerik.editor.js'][3369]++;
  new IndentFormatter().remove(RangeUtils.nodes(range));
})};
    _$jscoverage['telerik.editor.js'][3373]++;
    Command.call(this, options);
}
  _$jscoverage['telerik.editor.js'][3376]++;
  function OutdentTool() {
    _$jscoverage['telerik.editor.js'][3377]++;
    Tool.call(this, {command: OutdentCommand});
    _$jscoverage['telerik.editor.js'][3379]++;
    var finder = new BlockFormatFinder([{tags: blockElements}]);
    _$jscoverage['telerik.editor.js'][3381]++;
    this.init = (function ($ui) {
  _$jscoverage['telerik.editor.js'][3382]++;
  $ui.attr("unselectable", "on").addClass("t-state-disabled");
});
    _$jscoverage['telerik.editor.js'][3386]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][3387]++;
  var suitable = finder.findSuitable(nodes);
  _$jscoverage['telerik.editor.js'][3388]++;
  for (var i = 0; (i < suitable.length); (i++)) {
    _$jscoverage['telerik.editor.js'][3389]++;
    if ((dom.is(suitable[i], "li") || suitable[i].style.marginLeft)) {
      _$jscoverage['telerik.editor.js'][3390]++;
      $ui.removeClass("t-state-disabled");
      _$jscoverage['telerik.editor.js'][3391]++;
      return;
    }
}
  _$jscoverage['telerik.editor.js'][3394]++;
  $ui.addClass("t-state-disabled").removeClass("t-state-hover");
});
}
  _$jscoverage['telerik.editor.js'][3396]++;
  ;
  _$jscoverage['telerik.editor.js'][3396]++;
  function createContentElement($textarea, stylesheets) {
    _$jscoverage['telerik.editor.js'][3397]++;
    $textarea.hide();
    _$jscoverage['telerik.editor.js'][3398]++;
    var iframe = $("<iframe />", {src: "javascript:\"<html></html>\"", frameBorder: "0", className: "t-content"}).css("display", "").insertBefore($textarea)[0];
    _$jscoverage['telerik.editor.js'][3402]++;
    var window = (iframe.contentWindow || iframe);
    _$jscoverage['telerik.editor.js'][3403]++;
    var document = (window.document || iframe.contentDocument);
    _$jscoverage['telerik.editor.js'][3406]++;
    var html = $textarea.val().replace(/(<\/?img[^>]*>)[\r\n\v\f\t ]+/gi, "$1");
    _$jscoverage['telerik.editor.js'][3408]++;
    if (((! html.length) && $.browser.mozilla)) {
      _$jscoverage['telerik.editor.js'][3409]++;
      html = "<br _moz_dirty=\"true\" />";
    }
    _$jscoverage['telerik.editor.js'][3411]++;
    document.designMode = "On";
    _$jscoverage['telerik.editor.js'][3412]++;
    document.open();
    _$jscoverage['telerik.editor.js'][3413]++;
    document.write(new ($t.stringBuilder)().cat("<!DOCTYPE html><html><head>").cat("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />").cat("<style type=\"text/css\">").cat("html,body{padding:0;margin:0;font-family:Verdana,Geneva,sans-serif;background:#fff;}").cat("html{font-size:100%}body{font-size:.75em;line-height:1.5em;padding-top:1px;margin-top:-1px;").catIf("direction:rtl;", $textarea.closest(".t-rtl").length).cat("}").cat("h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}").cat("p{margin:1em 0;padding:0 .2em}.t-marker{display:none;}.t-paste-container{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}").cat("ul,ol{padding-left:2.5em}").cat("a{color:#00a}").cat("code{font-size:1.23em}").cat("</style>").cat($.map(stylesheets, (function (href) {
  _$jscoverage['telerik.editor.js'][3428]++;
  return ["<link type=\"text/css\" href=\"", href, "\" rel=\"stylesheet\"/>"].join("");
})).join("")).cat("</head><body spellcheck=\"false\">").cat(html).cat("</body></html>").string());
    _$jscoverage['telerik.editor.js'][3434]++;
    document.close();
    _$jscoverage['telerik.editor.js'][3436]++;
    return window;
}
  _$jscoverage['telerik.editor.js'][3437]++;
  ;
  _$jscoverage['telerik.editor.js'][3439]++;
  function selectionChanged(editor) {
    _$jscoverage['telerik.editor.js'][3440]++;
    $t.trigger(editor.element, "selectionChange");
}
  _$jscoverage['telerik.editor.js'][3443]++;
  function removePendingFormats(editor) {
    _$jscoverage['telerik.editor.js'][3444]++;
    if ((editor.pendingFormats.length == 0)) {
      _$jscoverage['telerik.editor.js'][3444]++;
      return;
    }
    _$jscoverage['telerik.editor.js'][3446]++;
    editor.pendingFormats.reverse();
    _$jscoverage['telerik.editor.js'][3448]++;
    $.each(editor.pendingFormats, (function () {
  _$jscoverage['telerik.editor.js'][3449]++;
  for (var node = this.firstChild; node; (node = node.nextSibling)) {
    _$jscoverage['telerik.editor.js'][3450]++;
    while (((node.nodeType == 3) && ((charIndex = node.nodeValue.indexOf("\ufeff")) >= 0))) {
      _$jscoverage['telerik.editor.js'][3451]++;
      node.deleteData(charIndex, 1);
}
}
}));
    _$jscoverage['telerik.editor.js'][3454]++;
    $.each(editor.pendingFormats, (function () {
  _$jscoverage['telerik.editor.js'][3455]++;
  if (((this.innerHTML == "") && this.parentNode)) {
    _$jscoverage['telerik.editor.js'][3456]++;
    dom.remove(this);
  }
}));
    _$jscoverage['telerik.editor.js'][3459]++;
    editor.pendingFormats = [];
}
  _$jscoverage['telerik.editor.js'][3462]++;
  $t.editor = (function (element, options) {
  _$jscoverage['telerik.editor.js'][3464]++;
  if (/Mobile.*Safari/.test(navigator.userAgent)) {
    _$jscoverage['telerik.editor.js'][3465]++;
    return;
  }
  _$jscoverage['telerik.editor.js'][3467]++;
  var self = this;
  _$jscoverage['telerik.editor.js'][3469]++;
  this.element = element;
  _$jscoverage['telerik.editor.js'][3471]++;
  var $element = $(element);
  _$jscoverage['telerik.editor.js'][3473]++;
  $element.closest("form").bind("submit", (function () {
  _$jscoverage['telerik.editor.js'][3474]++;
  self.update();
}));
  _$jscoverage['telerik.editor.js'][3477]++;
  $.extend(this, options);
  _$jscoverage['telerik.editor.js'][3479]++;
  $t.bind(this, {load: this.onLoad, selectionChange: this.onSelectionChange, change: this.onChange, execute: this.onExecute});
  _$jscoverage['telerik.editor.js'][3486]++;
  this.textarea = $element.find("textarea").attr("autocomplete", "off")[0];
  _$jscoverage['telerik.editor.js'][3487]++;
  this.window = createContentElement($(this.textarea), this.stylesheets);
  _$jscoverage['telerik.editor.js'][3488]++;
  this.document = (this.window.contentDocument || this.window.document);
  _$jscoverage['telerik.editor.js'][3489]++;
  this.body = this.document.body;
  _$jscoverage['telerik.editor.js'][3490]++;
  this.keyboard = new Keyboard([new TypingHandler(this), new SystemHandler(this)]);
  _$jscoverage['telerik.editor.js'][3492]++;
  this.clipboard = new Clipboard(this);
  _$jscoverage['telerik.editor.js'][3494]++;
  this.pendingFormats = [];
  _$jscoverage['telerik.editor.js'][3496]++;
  this.undoRedoStack = new UndoRedoStack();
  _$jscoverage['telerik.editor.js'][3498]++;
  function toolFromClassName(element) {
    _$jscoverage['telerik.editor.js'][3499]++;
    var tool = $.grep(element.className.split(" "), (function (x) {
  _$jscoverage['telerik.editor.js'][3500]++;
  return (! /^t-(widget|tool-icon|state-hover|header|combobox|dropdown|selectbox|colorpicker)$/i.test(x));
}));
    _$jscoverage['telerik.editor.js'][3502]++;
    return (tool[0]? tool[0].substring(2): "custom");
}
  _$jscoverage['telerik.editor.js'][3505]++;
  function appendShortcutSequence(localizedText, tool) {
    _$jscoverage['telerik.editor.js'][3506]++;
    if ((! tool.key)) {
      _$jscoverage['telerik.editor.js'][3507]++;
      return localizedText;
    }
    _$jscoverage['telerik.editor.js'][3509]++;
    return new ($t.stringBuilder)().cat(localizedText).cat(" (").catIf("Ctrl + ", tool.ctrl).catIf("Shift + ", tool.shift).catIf("Alt + ", tool.alt).cat(tool.key).cat(")").string();
}
  _$jscoverage['telerik.editor.js'][3520]++;
  $(this.window).bind("blur", (function () {
  _$jscoverage['telerik.editor.js'][3521]++;
  var old = self.textarea.value;
  _$jscoverage['telerik.editor.js'][3522]++;
  var value = self.encodedValue();
  _$jscoverage['telerik.editor.js'][3523]++;
  self.update(value);
  _$jscoverage['telerik.editor.js'][3524]++;
  if ((value != old)) {
    _$jscoverage['telerik.editor.js'][3525]++;
    $t.trigger(self.element, "change");
  }
}));
  _$jscoverage['telerik.editor.js'][3528]++;
  var toolbarItems = ".t-editor-toolbar > li > *";
  _$jscoverage['telerik.editor.js'][3530]++;
  var buttons = ".t-editor-button .t-tool-icon:not(.t-state-disabled)";
  _$jscoverage['telerik.editor.js'][3531]++;
  $element.delegate(buttons, "mouseenter", $t.hover).delegate(buttons, "mouseleave", $t.leave).delegate(buttons, "mousedown", $t.preventDefault).delegate(buttons, "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.editor.js'][3536]++;
  self.focus();
  _$jscoverage['telerik.editor.js'][3537]++;
  self.exec(toolFromClassName(this));
}))).find(toolbarItems).each((function () {
  _$jscoverage['telerik.editor.js'][3541]++;
  var toolName = toolFromClassName(this), tool = self.tools[toolName], description = self.localization[toolName], $this = $(this);
  _$jscoverage['telerik.editor.js'][3546]++;
  if ((! tool)) {
    _$jscoverage['telerik.editor.js'][3547]++;
    return;
  }
  _$jscoverage['telerik.editor.js'][3549]++;
  if (((toolName == "fontSize") || (toolName == "fontName"))) {
    _$jscoverage['telerik.editor.js'][3550]++;
    var inheritText = (self.localization[(toolName + "Inherit")] || localization[(toolName + "Inherit")]);
    _$jscoverage['telerik.editor.js'][3551]++;
    self[toolName][0].Text = inheritText;
    _$jscoverage['telerik.editor.js'][3552]++;
    $this.find("input").val(inheritText).end().find("span.t-input").text(inheritText).end();
  }
  _$jscoverage['telerik.editor.js'][3556]++;
  tool.init($this, {title: appendShortcutSequence(description, tool), editor: self});
})).end().bind("selectionChange", (function () {
  _$jscoverage['telerik.editor.js'][3563]++;
  var range = self.getRange();
  _$jscoverage['telerik.editor.js'][3564]++;
  self.selectionRestorePoint = new RestorePoint(range);
  _$jscoverage['telerik.editor.js'][3565]++;
  var nodes = textNodes(range);
  _$jscoverage['telerik.editor.js'][3566]++;
  if ((! nodes.length)) {
    _$jscoverage['telerik.editor.js'][3567]++;
    nodes = [range.startContainer];
  }
  _$jscoverage['telerik.editor.js'][3569]++;
  $element.find(toolbarItems).each((function () {
  _$jscoverage['telerik.editor.js'][3570]++;
  var tool = self.tools[toolFromClassName(this)];
  _$jscoverage['telerik.editor.js'][3571]++;
  if (tool) {
    _$jscoverage['telerik.editor.js'][3572]++;
    tool.update($(this), nodes);
  }
}));
}));
  _$jscoverage['telerik.editor.js'][3576]++;
  $(document).bind("mousedown", (function () {
  _$jscoverage['telerik.editor.js'][3577]++;
  if (self.keyboard.typingInProgress()) {
    _$jscoverage['telerik.editor.js'][3578]++;
    self.keyboard.endTyping(true);
  }
})).bind("DOMNodeInserted", (function (e) {
  _$jscoverage['telerik.editor.js'][3581]++;
  if (($.contains(e.target, self.element) || (self.element == e.target))) {
    _$jscoverage['telerik.editor.js'][3582]++;
    $(self.element).find("iframe").remove();
    _$jscoverage['telerik.editor.js'][3583]++;
    self.window = createContentElement($(self.textarea), self.stylesheets);
    _$jscoverage['telerik.editor.js'][3584]++;
    self.document = (self.window.contentDocument || self.window.document);
    _$jscoverage['telerik.editor.js'][3585]++;
    self.body = self.document.body;
  }
}));
  _$jscoverage['telerik.editor.js'][3589]++;
  $(this.document).bind({keydown: (function (e) {
  _$jscoverage['telerik.editor.js'][3592]++;
  var toolName = self.keyboard.toolFromShortcut(self.tools, e);
  _$jscoverage['telerik.editor.js'][3593]++;
  if (toolName) {
    _$jscoverage['telerik.editor.js'][3594]++;
    e.preventDefault();
    _$jscoverage['telerik.editor.js'][3595]++;
    self.exec(toolName);
    _$jscoverage['telerik.editor.js'][3596]++;
    return false;
  }
  _$jscoverage['telerik.editor.js'][3599]++;
  self.keyboard.clearTimeout();
  _$jscoverage['telerik.editor.js'][3601]++;
  self.keyboard.keydown(e);
}), keyup: (function (e) {
  _$jscoverage['telerik.editor.js'][3604]++;
  var selectionCodes = [8, 9, 13, 33, 34, 35, 36, 37, 38, 39, 40, 40, 45, 46];
  _$jscoverage['telerik.editor.js'][3606]++;
  if (($.inArray(e.keyCode, selectionCodes) > -1)) {
    _$jscoverage['telerik.editor.js'][3607]++;
    selectionChanged(self);
  }
  _$jscoverage['telerik.editor.js'][3609]++;
  self.keyboard.keyup(e);
}), mouseup: (function () {
  _$jscoverage['telerik.editor.js'][3612]++;
  selectionChanged(self);
})});
  _$jscoverage['telerik.editor.js'][3616]++;
  $(this.body).bind("cut paste", (function (e) {
  _$jscoverage['telerik.editor.js'][3618]++;
  (self.clipboard[("on" + e.type)])(e);
}));
});
  _$jscoverage['telerik.editor.js'][3622]++;
  $.extend($t.editor, {Dom: dom, RestorePoint: RestorePoint, Marker: Marker, RangeUtils: RangeUtils, RangeEnumerator: RangeEnumerator, LinkFormatter: LinkFormatter, LinkFormatFinder: LinkFormatFinder, LinkCommand: LinkCommand, UnlinkCommand: UnlinkCommand, InlineFormatter: InlineFormatter, GreedyInlineFormatter: GreedyInlineFormatter, InlineFormatFinder: InlineFormatFinder, GreedyInlineFormatFinder: GreedyInlineFormatFinder, BlockFormatter: BlockFormatter, GreedyBlockFormatter: GreedyBlockFormatter, BlockFormatFinder: BlockFormatFinder, FormatCommand: FormatCommand, IndentFormatter: IndentFormatter, IndentCommand: IndentCommand, OutdentCommand: OutdentCommand, ListFormatFinder: ListFormatFinder, ListFormatter: ListFormatter, ListCommand: ListCommand, ParagraphCommand: ParagraphCommand, NewLineCommand: NewLineCommand, ImageCommand: ImageCommand, InsertHtmlCommand: InsertHtmlCommand, GenericCommand: GenericCommand, UndoRedoStack: UndoRedoStack, TypingHandler: TypingHandler, SystemHandler: SystemHandler, Keyboard: Keyboard, MSWordFormatCleaner: MSWordFormatCleaner});
  _$jscoverage['telerik.editor.js'][3659]++;
  $t.editor.prototype = {value: (function (html) {
  _$jscoverage['telerik.editor.js'][3661]++;
  var body = this.body;
  _$jscoverage['telerik.editor.js'][3662]++;
  if ((html === undefined)) {
    _$jscoverage['telerik.editor.js'][3662]++;
    return domToXhtml(body);
  }
  _$jscoverage['telerik.editor.js'][3665]++;
  html = html.replace(/<!\[CDATA\[(.*)?\]\]>/g, "<!--[CDATA[$1]]-->");
  _$jscoverage['telerik.editor.js'][3668]++;
  html = html.replace(/<script([^>]*)>(.*)?<\/script>/gi, "<telerik:script $1>$2</telerik:script>");
  _$jscoverage['telerik.editor.js'][3670]++;
  if ($.browser.msie) {
    _$jscoverage['telerik.editor.js'][3672]++;
    html = ("<br/>" + html);
    _$jscoverage['telerik.editor.js'][3674]++;
    var originalSrc = "originalsrc", originalHref = "originalhref";
    _$jscoverage['telerik.editor.js'][3678]++;
    html = html.replace(/href\s*=\s*(?:'|")?([^'">\s]*)(?:'|")?/, (originalHref + "=\"$1\""));
    _$jscoverage['telerik.editor.js'][3679]++;
    html = html.replace(/src\s*=\s*(?:'|")?([^'">\s]*)(?:'|")?/, (originalSrc + "=\"$1\""));
    _$jscoverage['telerik.editor.js'][3681]++;
    body.innerHTML = html;
    _$jscoverage['telerik.editor.js'][3682]++;
    dom.remove(body.firstChild);
    _$jscoverage['telerik.editor.js'][3684]++;
    $(body).find("telerik\\:script,script,link,img,a").each((function () {
  _$jscoverage['telerik.editor.js'][3685]++;
  var node = this;
  _$jscoverage['telerik.editor.js'][3686]++;
  if (node[originalHref]) {
    _$jscoverage['telerik.editor.js'][3687]++;
    node.setAttribute("href", node[originalHref]);
    _$jscoverage['telerik.editor.js'][3688]++;
    node.removeAttribute(originalHref);
  }
  _$jscoverage['telerik.editor.js'][3690]++;
  if (node[originalSrc]) {
    _$jscoverage['telerik.editor.js'][3691]++;
    node.setAttribute("src", node[originalSrc]);
    _$jscoverage['telerik.editor.js'][3692]++;
    node.removeAttribute(originalSrc);
  }
}));
  }
  else {
    _$jscoverage['telerik.editor.js'][3696]++;
    body.innerHTML = html;
  }
  _$jscoverage['telerik.editor.js'][3699]++;
  this.update();
}), focus: (function () {
  _$jscoverage['telerik.editor.js'][3703]++;
  this.window.focus();
}), update: (function (value) {
  _$jscoverage['telerik.editor.js'][3707]++;
  this.textarea.value = ((value || this.encoded)? this.encodedValue(): this.value());
}), encodedValue: (function () {
  _$jscoverage['telerik.editor.js'][3711]++;
  return dom.encode(this.value());
}), createRange: (function (document) {
  _$jscoverage['telerik.editor.js'][3715]++;
  return createRange((document || this.document));
}), getSelection: (function () {
  _$jscoverage['telerik.editor.js'][3719]++;
  return selectionFromDocument(this.document);
}), selectRange: (function (range) {
  _$jscoverage['telerik.editor.js'][3723]++;
  var selection = this.getSelection();
  _$jscoverage['telerik.editor.js'][3724]++;
  selection.removeAllRanges();
  _$jscoverage['telerik.editor.js'][3725]++;
  selection.addRange(range);
}), getRange: (function () {
  _$jscoverage['telerik.editor.js'][3729]++;
  var selection = this.getSelection();
  _$jscoverage['telerik.editor.js'][3730]++;
  return ((selection.rangeCount > 0)? selection.getRangeAt(0): this.createRange());
}), selectedHtml: (function () {
  _$jscoverage['telerik.editor.js'][3734]++;
  return domToXhtml(this.getRange().cloneContents());
}), paste: (function (html) {
  _$jscoverage['telerik.editor.js'][3738]++;
  this.clipboard.paste(html);
}), exec: (function (name, params) {
  _$jscoverage['telerik.editor.js'][3742]++;
  name = name.toLowerCase();
  _$jscoverage['telerik.editor.js'][3743]++;
  var tool = "";
  _$jscoverage['telerik.editor.js'][3745]++;
  for (var id in this.tools) {
    _$jscoverage['telerik.editor.js'][3746]++;
    if ((id.toLowerCase() == name)) {
      _$jscoverage['telerik.editor.js'][3747]++;
      tool = this.tools[id];
      _$jscoverage['telerik.editor.js'][3748]++;
      break;
    }
}
  _$jscoverage['telerik.editor.js'][3751]++;
  if (tool) {
    _$jscoverage['telerik.editor.js'][3752]++;
    var range = this.getRange();
    _$jscoverage['telerik.editor.js'][3753]++;
    var command = (tool.command? tool.command($.extend({range: range}, params)): null);
    _$jscoverage['telerik.editor.js'][3755]++;
    $t.trigger(this.element, "execute", {name: name, command: command});
    _$jscoverage['telerik.editor.js'][3757]++;
    if (/undo|redo/i.test(name)) {
      _$jscoverage['telerik.editor.js'][3758]++;
      (this.undoRedoStack[name])();
    }
    else {
      _$jscoverage['telerik.editor.js'][3759]++;
      if (command) {
        _$jscoverage['telerik.editor.js'][3760]++;
        if ((! command.managesUndoRedo)) {
          _$jscoverage['telerik.editor.js'][3761]++;
          this.undoRedoStack.push(command);
        }
        _$jscoverage['telerik.editor.js'][3763]++;
        command.editor = this;
        _$jscoverage['telerik.editor.js'][3764]++;
        command.exec();
        _$jscoverage['telerik.editor.js'][3766]++;
        if (command.async) {
          _$jscoverage['telerik.editor.js'][3767]++;
          command.change = $.proxy((function () {
  _$jscoverage['telerik.editor.js'][3767]++;
  selectionChanged(this);
}), this);
          _$jscoverage['telerik.editor.js'][3768]++;
          return;
        }
      }
    }
    _$jscoverage['telerik.editor.js'][3772]++;
    selectionChanged(this);
  }
})};
  _$jscoverage['telerik.editor.js'][3777]++;
  $.fn.tEditor = (function (options) {
  _$jscoverage['telerik.editor.js'][3778]++;
  return $t.create(this, {name: "tEditor", init: (function (element, options) {
  _$jscoverage['telerik.editor.js'][3781]++;
  return new ($t.editor)(element, options);
}), options: options});
});
  _$jscoverage['telerik.editor.js'][3787]++;
  var formats = {bold: [{tags: ["strong"]}, {tags: ["span"], attr: {style: {fontWeight: "bold"}}}], italic: [{tags: ["em"]}, {tags: ["span"], attr: {style: {fontStyle: "italic"}}}], underline: [{tags: ["span"], attr: {style: {textDecoration: "underline"}}}], strikethrough: [{tags: ["del"]}, {tags: ["span"], attr: {style: {textDecoration: "line-through"}}}], justifyLeft: [{tags: blockElements, attr: {style: {textAlign: "left"}}}, {tags: ["img"], attr: {style: {"float": "left"}}}], justifyCenter: [{tags: blockElements, attr: {style: {textAlign: "center"}}}, {tags: ["img"], attr: {style: {display: "block", marginLeft: "auto", marginRight: "auto"}}}], justifyRight: [{tags: blockElements, attr: {style: {textAlign: "right"}}}, {tags: ["img"], attr: {style: {"float": "right"}}}], justifyFull: [{tags: blockElements, attr: {style: {textAlign: "justify"}}}]};
  _$jscoverage['telerik.editor.js'][3825]++;
  function formatByName(name, format) {
    _$jscoverage['telerik.editor.js'][3826]++;
    for (var i = 0; (i < format.length); (i++)) {
      _$jscoverage['telerik.editor.js'][3827]++;
      if (($.inArray(name, format[i].tags) >= 0)) {
        _$jscoverage['telerik.editor.js'][3828]++;
        return format[i];
      }
}
}
  _$jscoverage['telerik.editor.js'][3831]++;
  function Tool(options) {
    _$jscoverage['telerik.editor.js'][3832]++;
    $.extend(this, options);
    _$jscoverage['telerik.editor.js'][3834]++;
    this.init = (function ($ui, options) {
  _$jscoverage['telerik.editor.js'][3835]++;
  $ui.attr({unselectable: "on", title: options.title});
});
    _$jscoverage['telerik.editor.js'][3838]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][3839]++;
  return new (options.command)(commandArguments);
});
    _$jscoverage['telerik.editor.js'][3842]++;
    this.update = (function () {
});
}
  _$jscoverage['telerik.editor.js'][3847]++;
  Tool.exec = (function (editor, name, value) {
  _$jscoverage['telerik.editor.js'][3848]++;
  editor.focus();
  _$jscoverage['telerik.editor.js'][3849]++;
  if (editor.selectionRestorePoint) {
    _$jscoverage['telerik.editor.js'][3850]++;
    editor.selectRange(editor.selectionRestorePoint.toRange());
  }
  _$jscoverage['telerik.editor.js'][3852]++;
  editor.exec(name, {value: value});
});
  _$jscoverage['telerik.editor.js'][3855]++;
  function FormatTool(options) {
    _$jscoverage['telerik.editor.js'][3856]++;
    Tool.call(this, options);
    _$jscoverage['telerik.editor.js'][3858]++;
    this.command = (function (commandArguments) {
  _$jscoverage['telerik.editor.js'][3859]++;
  return new FormatCommand($.extend(commandArguments, {formatter: options.formatter}));
});
    _$jscoverage['telerik.editor.js'][3864]++;
    this.update = (function ($ui, nodes) {
  _$jscoverage['telerik.editor.js'][3865]++;
  $ui.toggleClass("t-state-active", options.finder.isFormatted(nodes));
});
}
  _$jscoverage['telerik.editor.js'][3869]++;
  var emptyFinder = (function () {
  _$jscoverage['telerik.editor.js'][3869]++;
  return ({isFormatted: (function () {
  _$jscoverage['telerik.editor.js'][3869]++;
  return false;
})});
});
  _$jscoverage['telerik.editor.js'][3871]++;
  var localization = {bold: "Bold", italic: "Italic", underline: "Underline", strikethrough: "Strikethrough", justifyCenter: "Center text", justifyLeft: "Align text left", justifyRight: "Align text right", justifyFull: "Justify", insertUnorderedList: "Insert unordered list", insertOrderedList: "Insert ordered list", indent: "Indent", outdent: "Outdent", createLink: "Insert hyperlink", unlink: "Remove hyperlink", insertImage: "Insert image", insertHtml: "Insert HTML", fontName: "Select font family", fontNameInherit: "(inherited font)", fontSize: "Select font size", fontSizeInherit: "(inherited size)", formatBlock: "Format", style: "Styles"};
  _$jscoverage['telerik.editor.js'][3896]++;
  $.fn.tEditor.defaults = {localization: localization, formats: formats, encoded: true, stylesheets: [], dialogOptions: {modal: true, resizable: false, draggable: true, effects: {list: [{name: "toggle"}]}}, fontName: [{Text: localization.fontNameInherit, Value: "inherit"}, {Text: "Arial", Value: "Arial,Helvetica,sans-serif"}, {Text: "Courier New", Value: "'Courier New',Courier,monospace"}, {Text: "Georgia", Value: "Georgia,serif"}, {Text: "Impact", Value: "Impact,Charcoal,sans-serif"}, {Text: "Lucida Console", Value: "'Lucida Console',Monaco,monospace"}, {Text: "Tahoma", Value: "Tahoma,Geneva,sans-serif"}, {Text: "Times New Roman", Value: "'Times New Roman',Times,serif"}, {Text: "Trebuchet MS", Value: "'Trebuchet MS',Helvetica,sans-serif"}, {Text: "Verdana", Value: "Verdana,Geneva,sans-serif"}], fontSize: [{Text: localization.fontSizeInherit, Value: "inherit"}, {Text: "1 (8pt)", Value: "xx-small"}, {Text: "2 (10pt)", Value: "x-small"}, {Text: "3 (12pt)", Value: "small"}, {Text: "4 (14pt)", Value: "medium"}, {Text: "5 (18pt)", Value: "large"}, {Text: "6 (24pt)", Value: "x-large"}, {Text: "7 (36pt)", Value: "xx-large"}], formatBlock: [{Text: "Paragraph", Value: "p"}, {Text: "Quotation", Value: "blockquote"}, {Text: "Heading 1", Value: "h1"}, {Text: "Heading 2", Value: "h2"}, {Text: "Heading 3", Value: "h3"}, {Text: "Heading 4", Value: "h4"}, {Text: "Heading 5", Value: "h5"}, {Text: "Heading 6", Value: "h6"}], tools: {bold: new InlineFormatTool({key: "B", ctrl: true, format: formats.bold}), italic: new InlineFormatTool({key: "I", ctrl: true, format: formats.italic}), underline: new InlineFormatTool({key: "U", ctrl: true, format: formats.underline}), strikethrough: new InlineFormatTool({format: formats.strikethrough}), undo: {key: "Z", ctrl: true}, redo: {key: "Y", ctrl: true}, insertLineBreak: new Tool({key: 13, shift: true, command: NewLineCommand}), insertParagraph: new Tool({key: 13, command: ParagraphCommand}), justifyCenter: new BlockFormatTool({format: formats.justifyCenter}), justifyLeft: new BlockFormatTool({format: formats.justifyLeft}), justifyRight: new BlockFormatTool({format: formats.justifyRight}), justifyFull: new BlockFormatTool({format: formats.justifyFull}), insertUnorderedList: new ListTool({tag: "ul"}), insertOrderedList: new ListTool({tag: "ol"}), createLink: new Tool({key: "K", ctrl: true, command: LinkCommand}), unlink: new UnlinkTool({key: "K", ctrl: true, shift: true}), insertImage: new Tool({command: ImageCommand}), indent: new Tool({command: IndentCommand}), outdent: new OutdentTool(), insertHtml: new InsertHtmlTool(), style: new StyleTool(), fontName: new FontTool({cssAttr: "font-family", domAttr: "fontFamily", name: "fontName"}), fontSize: new FontTool({cssAttr: "font-size", domAttr: "fontSize", name: "fontSize"}), formatBlock: new FormatBlockTool(), foreColor: new ColorTool({cssAttr: "color", domAttr: "color", name: "foreColor"}), backColor: new ColorTool({cssAttr: "background-color", domAttr: "backgroundColor", name: "backColor"})}};
})(jQuery);
