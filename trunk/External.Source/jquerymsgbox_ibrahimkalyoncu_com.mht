From: "Saved by Windows Internet Explorer 9"
Subject: 
Date: Mon, 28 May 2012 21:41:08 +1000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CD3D1A.97D70E70"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" =
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML=20
xmlns=3D"http://www.w3.org/1999/xhtml" xmlns:fb =3D=20
"http://ogp.me/ns/fb#"><HEAD><TITLE></TITLE>
<META content=3D"text/html; charset=3Dutf-8" =
http-equiv=3D"Content-Type">
<SCRIPT type=3D"text/javascript" =
src=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery-1.4.1.js"><=
/SCRIPT>
<!--    <script src=3D"Scripts/jquery.msgBox.min.js" =
type=3D"text/javascript"></script>-->
<SCRIPT type=3D"text/javascript" =
src=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery.msgBox.js">=
</SCRIPT>
<LINK rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Styles/msgBoxLight.css"><=
LINK=20
rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Styles/styles.css">
<SCRIPT type=3D"text/javascript">=0A=
        $(function () {=0A=
            $(window).scroll(function () {=0A=
                var top =3D $(window).scrollTop();=0A=
                $("div.social").css({ position: (top > 260 ? "fixed" : =
"absolute"), top: top > 260 ? 10 : 260 });=0A=
            });=0A=
        });=0A=
    </SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
        function setCodeView(mainCode) {=0A=
            var code =3D mainCode.split('');=0A=
            var temp =3D "";=0A=
            var spanRed =3D "<span style=3D\"color:red;\">";=0A=
            var spanGreen =3D "<span style=3D\"color:green;\">";=0A=
            var spanClose =3D "</span>";=0A=
            var isOpen =3D false;=0A=
            var lastIndex =3D 0;=0A=
            for (var i =3D 0; i < code.length; i++) {=0A=
                if (code[i] =3D=3D '"' || code[i] =3D=3D '\'') {=0A=
                    temp +=3D (isOpen ? code[i] + spanClose : spanRed + =
code[i]);=0A=
                    lastIndex =3D i;=0A=
                    isOpen =3D !isOpen;=0A=
                }=0A=
                else if (code[i] =3D=3D ',' || code[i] =3D=3D ':' || =
code[i] =3D=3D '{' || code[i] =3D=3D '}') {=0A=
                    temp +=3D spanGreen + code[i] + spanClose;=0A=
                }=0A=
                else if (code[i] =3D=3D '<') {=0A=
                    temp +=3D "&#060";=0A=
                }=0A=
                else if (code[i] =3D=3D '>') {=0A=
                    temp +=3D "&#062";=0A=
                }=0A=
                else if (code[i] =3D=3D '\n') {=0A=
                    temp +=3D i =3D=3D 0 ? "" : (i =3D=3D code.length - =
1 ? "" : "<br/>");=0A=
                }=0A=
                else if (code[i] =3D=3D ' ') {=0A=
                    temp +=3D ' ';=0A=
                }=0A=
                else {=0A=
                    temp +=3D code[i];=0A=
                }=0A=
            }=0A=
            return temp;=0A=
        }=0A=
=0A=
        function SetCodeBlocks() {=0A=
            $("div.codeBlock>code").each(function (index, domEle) {=0A=
                var code =3D setCodeView($(this).html());=0A=
                $(this).html(code);=0A=
            });=0A=
        }=0A=
        $(function () {=0A=
            SetCodeBlocks();=0A=
        });=0A=
    </SCRIPT>

<SCRIPT type=3D"text/javascript">=0A=
        function example1() {=0A=
            $.msgBox({=0A=
                title: "Selam / Hello",=0A=
                content: "Merhaba D=C3=BCnya! / Hello World!"=0A=
            });=0A=
        }=0A=
=0A=
        function example2() {=0A=
            $.msgBox({=0A=
                title: "Selam / Hello",=0A=
                content: "Merhaba D=C3=BCnya! / Hello World!",=0A=
                type:"info"=0A=
            });=0A=
        }=0A=
=0A=
        function example3() {=0A=
            $.msgBox({=0A=
                title: "Are You Sure",=0A=
                content: "Would you like a cup of coffee?",=0A=
                type: "confirm",=0A=
                buttons: [{ value: "Yes" }, { value: "No" }, { value: =
"Cancel"}],=0A=
                success: function (result) {=0A=
                    if (result =3D=3D "Yes") {=0A=
                        alert("One cup of coffee coming right up!");=0A=
                    }=0A=
                }=0A=
            });=0A=
        }=0A=
=0A=
        function example4() {=0A=
            $.msgBox({=0A=
                title: "Ooops",=0A=
                content: "Ohh dear! You broke it!!!",=0A=
                type: "error",=0A=
                buttons: [{ value: "Ok"}],=0A=
                afterShow: function (result) { alert("Message has been =
shown!"); }=0A=
            });=0A=
        }=0A=
=0A=
        function example5() {=0A=
            $.msgBox({=0A=
                title: "Ooops",=0A=
                content: "Ohh dear! You broke it!!!",=0A=
                type: "error",=0A=
                beforeClose: function () { alert("Message will be =
closed!"); },=0A=
                showButtons: false,=0A=
                opacity: 0.9=0A=
            });=0A=
        }=0A=
=0A=
        function example6() {=0A=
            $.msgBox({=0A=
                title: "Ooops",=0A=
                content: "Ohh dear! You broke it!!!",=0A=
                type: "error",=0A=
                showButtons: false,=0A=
                opacity: 0.9,=0A=
                autoClose:true=0A=
            });=0A=
        }=0A=
=0A=
        function example7() {=0A=
            $.msgBox({ type: "prompt",=0A=
                title: "Log In",=0A=
                inputs: [=0A=
                { header: "User Name", type: "text", name: "userName" },=0A=
                { header: "Password", type: "password", name: "password" =
},=0A=
                { header: "Remember me", type: "checkbox", name: =
"rememberMe", value: "theValue"}],=0A=
                buttons: [=0A=
                { value: "Login" }, { value: "Cancel"}],=0A=
                success: function (result, values) {=0A=
                    var v =3D result + " has been clicked\n";=0A=
                    $(values).each(function (index, input) {=0A=
                        v +=3D input.name + " : " + input.value + =0A=
                        (input.checked !=3D null ? (" - checked: " + =
input.checked) : "") + "\n";=0A=
                    });=0A=
                    alert(v);=0A=
                }=0A=
            });=0A=
        }=0A=
    </SCRIPT>

<META name=3D"GENERATOR" content=3D"MSHTML 9.00.8112.16443"></HEAD>
<BODY>
<DIV id=3D"fb-root"></DIV>
<SCRIPT>    (function (d, s, id) {=0A=
        var js, fjs =3D d.getElementsByTagName(s)[0];=0A=
        if (d.getElementById(id)) { return; }=0A=
        js =3D d.createElement(s); js.id =3D id;=0A=
        js.src =3D "//connect.facebook.net/tr_TR/all.js#xfbml=3D1";=0A=
        fjs.parentNode.insertBefore(js, fjs);=0A=
    } (document, 'script', 'facebook-jssdk'));</SCRIPT>

<DIV class=3D"header"></DIV>
<DIV id=3D"centered">
<DIV class=3D"social">
<DIV><fb:like show_faces=3D"true" width=3D"45" layout=3D"box_count" =
send=3D"false" href=3D"http://jquerymsgbox.net.tc/"></fb:like></DIV>
<DIV><!-- Bu etiketi ba=C5=9Fl=C4=B1=C4=9F=C4=B1n=C4=B1za veya =
kapan=C4=B1=C5=9F g=C3=B6vde etiketinden hemen =C3=B6nceye =
yerle=C5=9Ftirin.  -->
<SCRIPT type=3D"text/javascript" =
src=3D"https://apis.google.com/js/plusone.js">=0A=
            { lang: 'en-GB' }=0A=
        </SCRIPT>
<!-- Bu etiketi +1 d=C3=BC=C4=9Fmesinin g=C3=B6r=C3=BCnmesini =
istedi=C4=9Finiz yere yerle=C5=9Ftirin --><g:plusone></g:plusone></DIV>
</DIV>
<H1>Examples</H1><!--Example 1 End-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title:"Selam / Hello",   =20
content:"Merhaba D=C3=BCnya! / Hello World!" });    </CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example1();" =
value=3D"Example 1" type=3D"button">
</DIV><!--Example 1 End--><!--Example 2-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title:"Selam / Hello",   =20
content:"Merhaba D=C3=BCnya! / Hello World!",    type:"info" });    =
</CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example2();" =
value=3D"Example 2" type=3D"button">
</DIV><!--Example 2 End--><!--Example 3-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title: "Are You Sure",    =
content:=20
"Would you like a cup of coffee?",    type: "confirm",    buttons: [{ =
value:=20
"Yes" }, { value: "No" }, { value: "Cancel"}],    success: function =
(result) {  =20
     if (result =3D=3D "Yes") {            alert("One cup of coffee =
coming right=20
up!");        }    } });    </CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example3();" =
value=3D"Example 3" type=3D"button">
</DIV><!--Example 3 End--><!--Example 4-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title: "Ooops",    content: =
"Ohh=20
dear! You broke it!!!",    type: "error",    buttons: [{ value: "Ok" }], =
  =20
afterShow: function (result) { alert("Message has been shown!"); } });   =
=20
</CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example4();" =
value=3D"Example 4" type=3D"button">
</DIV><!--Example 4 End--><!--Example 5-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title: "Ooops",    content: =
"Ohh=20
dear! You broke it!!!",    type: "error",    beforeClose: function () {=20
alert("Message will be closed!"); },    showButtons:false,    =
opacity:0.9 });   =20
</CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example5();" =
value=3D"Example 5" type=3D"button">
</DIV><!--Example 5 End--><!--Example 6-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({    title: "Ooops",    content: =
"Ohh=20
dear! You broke it!!!",    type: "error",    showButtons: false,    =
opacity:=20
0.9,    autoClose:true });    </CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example6();" =
value=3D"Example 6" type=3D"button">
</DIV><!--Example 6 End--><!--Example 7-->
<DIV class=3D"codeBlock"><CODE>$.msgBox({ type: "prompt",    title: "Log =
In",   =20
inputs: [    { header: "User Name", type: "text", name: "userName" },    =
{=20
header: "Password", type: "password", name: "password" },    { header: =
"Remember=20
me", type: "checkbox", name: "rememberMe", value: "theValue" }],    =
buttons: [  =20
 { value: "Login" }, {value:"Cancel"}],    success: function (result, =
values) { =20
      var v =3D result + " has been clicked\n";        =
$(values).each(function=20
(index, input) {            v +=3D input.name + " : " + input.value +    =
        =20
(input.checked !=3D null ? (" - checked: " + input.checked) : "") + =
"\n";       =20
});        alert(v);    } });    </CODE></DIV>
<DIV class=3D"buttonBlock"><INPUT onclick=3D"example7();" =
value=3D"Example 7" type=3D"button">
</DIV><!--Example 7 End--><!--Explanation-->
<H1>Explanations</H1>
<DIV class=3D"explanation"><SPAN>jQuery.msgBox is a plug-in to make =
smarter=20
displaying messages. Also usage of the plug-in is so easy. You just need =
to add=20
following  files to your page as shown below and the images named =
'alert.png',=20
'confirm.png', 'error.png', 'info.png', 'msgBoxBackGround.png' used by =
plug-in=20
to 'Images' folder in the root directory. That's all!!!</SPAN></DIV>
<DIV class=3D"codeBlock"><CODE>
<SCRIPT type=3D"text/javascript" =
src=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery-1.4.1.js"><=
/SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery.msgBox.js">=
</SCRIPT>
<LINK rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://jquerymsgbox.ibrahimkalyoncu.com/Styles/msgBoxLight.css"><=
/CODE>
</DIV>
<H1>Options</H1>
<DIV class=3D"explanation"><SPAN>Once you have linked/added theese tree =
required=20
files to your page, you can call 'jQuery.msgBox()' function with =
following=20
options.</SPAN>
<TABLE style=3D"border-color: rgb(82, 44, 27);" border=3D"1" =
cellSpacing=3D"0"=20
cellPadding=3D"3">
  <TBODY>
  <TR>
    <TH>Option</TH>
    <TH>Confirmable Values</TH>
    <TH>Description</TH></TR>
  <TR>
    <TD>content</TD>
    <TD>any string</TD>
    <TD>the message text. as default:'Message'</TD></TR>
  <TR>
    <TD>title</TD>
    <TD>any string</TD>
    <TD>the title of the message as             =
default:'Warning'</TD></TR>
  <TR>
    <TD>type</TD>
    <TD>'alert','confirm','error','info','prompt'</TD>
    <TD>type of the message will be shown. as default:'alert'</TD></TR>
  <TR>
    <TD>autoClose</TD>
    <TD>boolean values</TD>
    <TD>true for activating auto-closing, else false. as =
default:false</TD></TR>
  <TR>
    <TD>timeOut</TD>
    <TD>milisecons</TD>
    <TD>auto-close timeout. as             default:content.length * =
70</TD></TR>
  <TR>
    <TD>showButtons</TD>
    <TD>boolean values</TD>
    <TD>true for displayin buttons on             message, else false. =
as=20
      default:true</TD></TR>
  <TR>
    <TD>buttons</TD>
    <TD>array</TD>
    <TD>format:[{value:"Button1"},{value:"Button2"}].             as=20
      default:[{value:"Ok"}]</TD></TR>
  <TR>
    <TD>success</TD>
    <TD>callback</TD>
    <TD>a callback function that passed the value             of the =
button=20
      has been clicked.</TD></TR>
  <TR>
    <TD>beforeShow</TD>
    <TD>callback</TD>
    <TD>a callback before message             shown.</TD></TR>
  <TR>
    <TD>afterShow</TD>
    <TD>callback</TD>
    <TD>a callback after message             shown.</TD></TR>
  <TR>
    <TD>beforeClose</TD>
    <TD>callback</TD>
    <TD>a callback before message             closed.</TD></TR>
  <TR>
    <TD>afterClose</TD>
    <TD>callback</TD>
    <TD>a callback after message closed.</TD></TR>
  <TR>
    <TD>opacity</TD>
    <TD>a value 1 between 0</TD>
    <TD>the css property of the back             panel of message box. =
as=20
      default:0.1</TD></TR></TBODY></TABLE></DIV>
<H1 style=3D"color: rgb(255, 95, 61);">Download</H1>
<DIV style=3D"font-size: 8pt; background-color: rgb(255, 142, 80);" =
class=3D"explanation"><A=20
href=3D"http://jquerymsgbox.ibrahimkalyoncu.com/jquery.msgBox(v1.0).rar">=
Download=20
- jquery.msgBox.rar (v1.0)</A> Thanks to Oliver Kopp=20
(koppdev@googlemail.com)<BR><A =
href=3D"http://jquerymsgbox.ibrahimkalyoncu.com/jquery.msgBox.rar">Downlo=
ad=20
- jquery.msgBox.rar (v0.9)</A></DIV>
<DIV style=3D"text-align: right; font-size: 8pt; margin-top: 25px;" =
class=3D"explanation"><SPAN>Halil=20
=C4=B0brahim Kalyoncu - 2011</SPAN></DIV><!--Explanation =
End--></DIV></BODY></HTML>

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/Styles/msgBoxLight.css

div.msgBox {
	padding: 4px 10px; border-radius: 6px; width: 430px; color: rgb(0, 51, =
94); font-family: Verdana; position: fixed; z-index: 1000; min-height: =
160px; box-shadow: 0px 0px 11px #000000; background-image: =
url("../Images/msgBoxBackGround.png"); -moz-border-radius: 6px; =
-webkit-border-radius: 6px; -moz-box-shadow: 0px 0px 11px #000000; =
-webkit-box-shadow: 0px 0px 11px #000000;
}
div.msgBoxBackGround {
	margin: 0px; padding: 0px; left: 0px; top: 0px; width: 100%; height: =
100%; position: absolute; z-index: 999; opacity: 0.9; background-color: =
rgb(0, 0, 0);
}
div.msgBoxTitle {
	padding: 5px 0px; width: 100%; color: rgb(0, 51, 94); font-size: 16pt; =
font-variant: small-caps; font-weight: lighter; border-bottom-color: =
rgb(0, 44, 95); border-bottom-width: 1px; border-bottom-style: solid;
}
div.msgBoxImage {
	margin: 20px 5px 0px; width: 75px; height: 75px; float: left; display: =
inline-block;
}
div.msgBoxImage img {
	width: 75px; height: 75px;
}
div.msgBoxContent {
	margin: 0px 3px 6px; width: 319px; height: 90px; font-size: 11pt; =
float: left; display: inline-block;
}
div.msgBoxContent p {
	margin: 0px; padding: 0px; width: 100%; height: 100%; display: table;
}
div.msgBoxContent span {
	color: rgb(0, 51, 94); vertical-align: middle; display: table-cell;
}
div.msgBoxButtons {
	width: 100%; text-align: right; display: inline-block;
}
div.msgBoxButtons input[type=3D'button'] {
	margin: 2px; border-radius: 6px; border: 1px solid rgb(175, 175, 175); =
width: 90px; height: 35px; color: rgb(255, 255, 255); cursor: pointer; =
background-color: rgb(0, 64, 118); -moz-border-radius: 6px; =
-webkit-border-radius: 6px;
}
div.msgBoxButtons input[type=3D'button']:hover {
	color: white; background-color: rgb(0, 84, 156);
}
div.msgBoxButtons input[type=3D'button']:active {
	color: white; background-color: rgb(170, 170, 170);
}
div.msgBoxInputs {
	margin: 5px auto 0px; width: 195px; padding-top: 2px; padding-bottom: =
2px;
}
div.msgInput input[type=3D'text'] {
	padding: 4px; border: 1px solid rgb(223, 223, 223); width: 180px; =
color: rgb(47, 47, 47);
}
div.msgInput input[type=3D'password'] {
	padding: 4px; border: 1px solid rgb(223, 223, 223); width: 180px; =
color: rgb(47, 47, 47);
}
div.msgInput text {
	color: rgb(47, 47, 47); font-size: 10pt;
}

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/Styles/styles.css

body {
	margin: 0px; padding: 0px; background-image: =
url("../Images/background.png");
}
a {
	color: white;
}
a:visited {
	color: white;
}
a:active {
	color: white;
}
#centered {
	margin: 0px auto; width: 900px;
}
div.header {
	margin: 0px auto; width: 900px;
}
div.header {
	padding: 0px; width: 900px; height: 250px; border-bottom-color: =
rgb(183, 183, 183); border-bottom-width: 1px; border-bottom-style: =
solid; background-image: url("../Images/headerBackground.png"); =
background-repeat: no-repeat;
}
div.codeBlock {
	margin: 5px 15px; padding: 5px 10px; border: 1px solid rgb(175, 175, =
175); color: rgb(42, 42, 42); font-family: Verdana; font-size: 10pt; =
background-color: rgb(250, 250, 250);
}
div.buttonBlock {
	margin: 5px 15px; padding: 5px 10px; border: 1px solid rgb(175, 175, =
175); color: rgb(42, 42, 42); font-family: Verdana; font-size: 10pt; =
background-color: rgb(250, 250, 250);
}
div.explanation {
	margin: 5px 15px; padding: 5px 10px; border: 1px solid rgb(175, 175, =
175); color: rgb(42, 42, 42); font-family: Verdana; font-size: 10pt; =
background-color: rgb(250, 250, 250);
}
.buttonBlock {
	text-align: center;
}
div.buttonBlock input[type=3D'button'] {
	margin: 2px; border-radius: 6px; border: 1px solid rgb(175, 175, 175); =
width: 90px; height: 35px; color: rgb(255, 255, 255); cursor: pointer; =
background-color: rgb(0, 64, 118); -moz-border-radius: 6px; =
-webkit-border-radius: 6px;
}
div.buttonBlock input[type=3D'button']:hover {
	color: white; background-color: rgb(0, 84, 156);
}
div.buttonBlock input[type=3D'button']:active {
	color: white; background-color: rgb(170, 170, 170);
}
div.explanation table {
	border-color: rgb(82, 44, 27); width: 100%; margin-top: 5px; =
margin-bottom: 5px; border-bottom-style: solid;
}
h1 {
	color: rgb(183, 183, 183); font-family: Verdana;
}
div.social {
	top: 260px; width: 900px; text-align: right; position: absolute;
}
div.social > div {
	margin: 0px; padding: 0px; width: 65px; float: right;
}

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/Styles/msgBoxLight.css

div.msgBox {
	padding: 4px 10px; border-radius: 6px; width: 430px; color: rgb(0, 51, =
94); font-family: Verdana; position: fixed; z-index: 1000; min-height: =
160px; box-shadow: 0px 0px 11px #000000; background-image: =
url("../Images/msgBoxBackGround.png"); -moz-border-radius: 6px; =
-webkit-border-radius: 6px; -moz-box-shadow: 0px 0px 11px #000000; =
-webkit-box-shadow: 0px 0px 11px #000000;
}
div.msgBoxBackGround {
	margin: 0px; padding: 0px; left: 0px; top: 0px; width: 100%; height: =
100%; position: absolute; z-index: 999; opacity: 0.9; background-color: =
rgb(0, 0, 0);
}
div.msgBoxTitle {
	padding: 5px 0px; width: 100%; color: rgb(0, 51, 94); font-size: 16pt; =
font-variant: small-caps; font-weight: lighter; border-bottom-color: =
rgb(0, 44, 95); border-bottom-width: 1px; border-bottom-style: solid;
}
div.msgBoxImage {
	margin: 20px 5px 0px; width: 75px; height: 75px; float: left; display: =
inline-block;
}
div.msgBoxImage img {
	width: 75px; height: 75px;
}
div.msgBoxContent {
	margin: 0px 3px 6px; width: 319px; height: 90px; font-size: 11pt; =
float: left; display: inline-block;
}
div.msgBoxContent p {
	margin: 0px; padding: 0px; width: 100%; height: 100%; display: table;
}
div.msgBoxContent span {
	color: rgb(0, 51, 94); vertical-align: middle; display: table-cell;
}
div.msgBoxButtons {
	width: 100%; text-align: right; display: inline-block;
}
div.msgBoxButtons input[type=3D'button'] {
	margin: 2px; border-radius: 6px; border: 1px solid rgb(175, 175, 175); =
width: 90px; height: 35px; color: rgb(255, 255, 255); cursor: pointer; =
background-color: rgb(0, 64, 118); -moz-border-radius: 6px; =
-webkit-border-radius: 6px;
}
div.msgBoxButtons input[type=3D'button']:hover {
	color: white; background-color: rgb(0, 84, 156);
}
div.msgBoxButtons input[type=3D'button']:active {
	color: white; background-color: rgb(170, 170, 170);
}
div.msgBoxInputs {
	margin: 5px auto 0px; width: 195px; padding-top: 2px; padding-bottom: =
2px;
}
div.msgInput input[type=3D'text'] {
	padding: 4px; border: 1px solid rgb(223, 223, 223); width: 180px; =
color: rgb(47, 47, 47);
}
div.msgInput input[type=3D'password'] {
	padding: 4px; border: 1px solid rgb(223, 223, 223); width: 180px; =
color: rgb(47, 47, 47);
}
div.msgInput text {
	color: rgb(47, 47, 47); font-size: 10pt;
}

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery-1.4.1.js

/*!
 * jQuery JavaScript Library v1.4.1
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *=20
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *=20
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS =
BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN =
ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * Date: Mon Jan 25 19:43:33 2010 -0500
 */
(function( window, undefined ) {

// Define a local copy of jQuery
var jQuery =3D function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context );
	},

	// Map over jQuery in case of overwrite
	_jQuery =3D window.jQuery,

	// Map over the $ in case of overwrite
	_$ =3D window.$,

	// Use the correct document accordingly with window argument (sandbox)
	document =3D window.document,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// (both of which we optimize for)
	quickExpr =3D /^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,

	// Is it a simple selector
	isSimple =3D /^.[^:#\[\.,]*$/,

	// Check if a string has a non-whitespace character in it
	rnotwhite =3D /\S/,

	// Used for trimming whitespace
	rtrim =3D /^(\s|\u00A0)+|(\s|\u00A0)+$/g,

	// Match a standalone tag
	rsingleTag =3D /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// Keep a UserAgent string for use with jQuery.browser
	userAgent =3D navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,
=09
	// Has the ready events already been bound?
	readyBound =3D false,
=09
	// The functions to execute on DOM ready
	readyList =3D [],

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString =3D Object.prototype.toString,
	hasOwnProperty =3D Object.prototype.hasOwnProperty,
	push =3D Array.prototype.push,
	slice =3D Array.prototype.slice,
	indexOf =3D Array.prototype.indexOf;

jQuery.fn =3D jQuery.prototype =3D {
	init: function( selector, context ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context =3D this[0] =3D selector;
			this.length =3D 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector =3D=3D=3D "string" ) {
			// Are we dealing with HTML string or an ID?
			match =3D quickExpr.exec( selector );

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					doc =3D (context ? context.ownerDocument || context : document);

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret =3D rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector =3D [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector =3D [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret =3D buildFragment( [ match[1] ], [ doc ] );
						selector =3D (ret.cacheable ? ret.fragment.cloneNode(true) : =
ret.fragment).childNodes;
					}

				// HANDLE: $("#id")
				} else {
					elem =3D document.getElementById( match[2] );

					if ( elem ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !=3D=3D match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery =
object
						this.length =3D 1;
						this[0] =3D elem;
					}

					this.context =3D document;
					this.selector =3D selector;
					return this;
				}

			// HANDLE: $("TAG")
			} else if ( !context && /^\w+$/.test( selector ) ) {
				this.selector =3D selector;
				this.context =3D document;
				selector =3D document.getElementsByTagName( selector );

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return (context || rootjQuery).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return jQuery( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if (selector.selector !=3D=3D undefined) {
			this.selector =3D selector.selector;
			this.context =3D selector.context;
		}

		return jQuery.isArray( selector ) ?
			this.setArray( selector ) :
			jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.4.1",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num =3D=3D null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this.slice(num)[ 0 ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret =3D jQuery( elems || null );

		// Add the old object onto the stack (as a reference)
		ret.prevObject =3D this;

		ret.context =3D this.context;

		if ( name =3D=3D=3D "find" ) {
			ret.selector =3D this.selector + (this.selector ? " " : "") + =
selector;
		} else if ( name ) {
			ret.selector =3D this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Force the current matched set of elements to become
	// the specified array of elements (destroying the stack in the =
process)
	// You should use pushStack() in order to do this, but maintain the =
stack
	setArray: function( elems ) {
		// Resetting the length to 0, then using the native Array push
		// is a super-fast way to populate an object with array-like =
properties
		this.length =3D 0;
		push.apply( this, elems );

		return this;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},
=09
	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// If the DOM is already ready
		if ( jQuery.isReady ) {
			// Execute the function immediately
			fn.call( document, jQuery );

		// Otherwise, remember the function for later
		} else if ( readyList ) {
			// Add the function to the wait list
			readyList.push( fn );
		}

		return this;
	},
=09
	eq: function( i ) {
		return i =3D=3D=3D -1 ?
			this.slice( i ) :
			this.slice( i, +i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},
=09
	end: function() {
		return this.prevObject || jQuery(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype =3D jQuery.fn;

jQuery.extend =3D jQuery.fn.extend =3D function() {
	// copy reference to target object
	var target =3D arguments[0] || {}, i =3D 1, length =3D =
arguments.length, deep =3D false, options, name, src, copy;

	// Handle a deep copy situation
	if ( typeof target =3D=3D=3D "boolean" ) {
		deep =3D target;
		target =3D arguments[1] || {};
		// skip the boolean and the target
		i =3D 2;
	}

	// Handle case when target is a string or something (possible in deep =
copy)
	if ( typeof target !=3D=3D "object" && !jQuery.isFunction(target) ) {
		target =3D {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length =3D=3D=3D i ) {
		target =3D this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options =3D arguments[ i ]) !=3D null ) {
			// Extend the base object
			for ( name in options ) {
				src =3D target[ name ];
				copy =3D options[ name ];

				// Prevent never-ending loop
				if ( target =3D=3D=3D copy ) {
					continue;
				}

				// Recurse if we're merging object literal values or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || =
jQuery.isArray(copy) ) ) {
					var clone =3D src && ( jQuery.isPlainObject(src) || =
jQuery.isArray(src) ) ? src
						: jQuery.isArray(copy) ? [] : {};

					// Never move original objects, clone them
					target[ name ] =3D jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !=3D=3D undefined ) {
					target[ name ] =3D copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		window.$ =3D _$;

		if ( deep ) {
			window.jQuery =3D _jQuery;
		}

		return jQuery;
	},
=09
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,
=09
	// Handle when the DOM is ready
	ready: function() {
		// Make sure that the DOM is not already loaded
		if ( !jQuery.isReady ) {
			// Make sure body exists, at least, in case IE gets a little =
overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 13 );
			}

			// Remember that the DOM is ready
			jQuery.isReady =3D true;

			// If there are functions bound, to execute
			if ( readyList ) {
				// Execute all of them
				var fn, i =3D 0;
				while ( (fn =3D readyList[ i++ ]) ) {
					fn.call( document, jQuery );
				}

				// Reset the list of functions
				readyList =3D null;
			}

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
			}
		}
	},
=09
	bindReady: function() {
		if ( readyBound ) {
			return;
		}

		readyBound =3D true;

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState =3D=3D=3D "complete" ) {
			return jQuery.ready();
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, =
false );
		=09
			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent("onreadystatechange", DOMContentLoaded);
		=09
			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel =3D false;

			try {
				toplevel =3D window.frameElement =3D=3D null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return toString.call(obj) =3D=3D=3D "[object Function]";
	},

	isArray: function( obj ) {
		return toString.call(obj) =3D=3D=3D "[object Array]";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the =
constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as =
well
		if ( !obj || toString.call(obj) !=3D=3D "[object Object]" || =
obj.nodeType || obj.setInterval ) {
			return false;
		}
	=09
		// Not own constructor property must be Object
		if ( obj.constructor
			&& !hasOwnProperty.call(obj, "constructor")
			&& !hasOwnProperty.call(obj.constructor.prototype, "isPrototypeOf") ) =
{
			return false;
		}
	=09
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
=09
		var key;
		for ( key in obj ) {}
	=09
		return key =3D=3D=3D undefined || hasOwnProperty.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},
=09
	error: function( msg ) {
		throw msg;
	},
=09
	parseJSON: function( data ) {
		if ( typeof data !=3D=3D "string" || !data ) {
			return null;
		}
	=09
		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( =
/^[\],:{}\s]*$/.test(data.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, =
"@")
			=
.replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?=
/g, "]")
			.replace(/(?:^|:|,)(?:\s*\[)+/g, "")) ) {

			// Try to use the native JSON parser first
			return window.JSON && window.JSON.parse ?
				window.JSON.parse( data ) :
				(new Function("return " + data))();

		} else {
			jQuery.error( "Invalid JSON: " + data );
		}
	},

	noop: function() {},

	// Evalulates a script in a global context
	globalEval: function( data ) {
		if ( data && rnotwhite.test(data) ) {
			// Inspired by code by Andrea Giammarchi
			// =
http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom=
.html
			var head =3D document.getElementsByTagName("head")[0] || =
document.documentElement,
				script =3D document.createElement("script");

			script.type =3D "text/javascript";

			if ( jQuery.support.scriptEval ) {
				script.appendChild( document.createTextNode( data ) );
			} else {
				script.text =3D data;
			}

			// Use insertBefore instead of appendChild to circumvent an IE6 bug.
			// This arises when a base node is used (#2709).
			head.insertBefore( script, head.firstChild );
			head.removeChild( script );
		}
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() =3D=3D=3D =
name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i =3D 0,
			length =3D object.length,
			isObj =3D length =3D=3D=3D undefined || jQuery.isFunction(object);

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) =3D=3D=3D false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) =3D=3D=3D false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) =
=3D=3D=3D false ) {
						break;
					}
				}
			} else {
				for ( var value =3D object[0];
					i < length && callback.call( value, i, value ) !=3D=3D false; value =
=3D object[++i] ) {}
			}
		}

		return object;
	},

	trim: function( text ) {
		return (text || "").replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret =3D results || [];

		if ( array !=3D null ) {
			// The window, strings (and functions) also have 'length'
			// The extra typeof function check is to prevent crashes
			// in Safari 2 (See: #3039)
			if ( array.length =3D=3D null || typeof array =3D=3D=3D "string" || =
jQuery.isFunction(array) || (typeof array !=3D=3D "function" && =
array.setInterval) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array ) {
		if ( array.indexOf ) {
			return array.indexOf( elem );
		}

		for ( var i =3D 0, length =3D array.length; i < length; i++ ) {
			if ( array[ i ] =3D=3D=3D elem ) {
				return i;
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i =3D first.length, j =3D 0;

		if ( typeof second.length =3D=3D=3D "number" ) {
			for ( var l =3D second.length; j < l; j++ ) {
				first[ i++ ] =3D second[ j ];
			}
		} else {
			while ( second[j] !=3D=3D undefined ) {
				first[ i++ ] =3D second[ j++ ];
			}
		}

		first.length =3D i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret =3D [];

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i =3D 0, length =3D elems.length; i < length; i++ ) {
			if ( !inv !=3D=3D !callback( elems[ i ], i ) ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var ret =3D [], value;

		// Go through the array, translating each of the items to their
		// new value (or values).
		for ( var i =3D 0, length =3D elems.length; i < length; i++ ) {
			value =3D callback( elems[ i ], i, arg );

			if ( value !=3D null ) {
				ret[ ret.length ] =3D value;
			}
		}

		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	proxy: function( fn, proxy, thisObject ) {
		if ( arguments.length =3D=3D=3D 2 ) {
			if ( typeof proxy =3D=3D=3D "string" ) {
				thisObject =3D fn;
				fn =3D thisObject[ proxy ];
				proxy =3D undefined;

			} else if ( proxy && !jQuery.isFunction( proxy ) ) {
				thisObject =3D proxy;
				proxy =3D undefined;
			}
		}

		if ( !proxy && fn ) {
			proxy =3D function() {
				return fn.apply( thisObject || this, arguments );
			};
		}

		// Set the guid of unique handler to the same of original handler, so =
it can be removed
		if ( fn ) {
			proxy.guid =3D fn.guid =3D fn.guid || proxy.guid || jQuery.guid++;
		}

		// So proxy can be declared as an argument
		return proxy;
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua =3D ua.toLowerCase();

		var match =3D /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
			/(opera)(?:.*version)?[ \/]([\w.]+)/.exec( ua ) ||
			/(msie) ([\w.]+)/.exec( ua ) ||
			!/compatible/.test( ua ) && /(mozilla)(?:.*? rv:([\w.]+))?/.exec( ua =
) ||
		  	[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	browser: {}
});

browserMatch =3D jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] =3D true;
	jQuery.browser.version =3D browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari =3D true;
}

if ( indexOf ) {
	jQuery.inArray =3D function( elem, array ) {
		return indexOf.call( array, elem );
	};
}

// All jQuery objects should point back to these
rootjQuery =3D jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded =3D function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, =
false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded =3D function() {
		// Make sure body exists, at least, in case IE gets a little =
overzealous (ticket #5443).
		if ( document.readyState =3D=3D=3D "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch( error ) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

function evalScript( i, elem ) {
	if ( elem.src ) {
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});
	} else {
		jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || =
"" );
	}

	if ( elem.parentNode ) {
		elem.parentNode.removeChild( elem );
	}
}

// Mutifunctional method to get and set values to a collection
// The value/s can be optionally by executed if its a function
function access( elems, key, value, exec, fn, pass ) {
	var length =3D elems.length;
=09
	// Setting many attributes
	if ( typeof key =3D=3D=3D "object" ) {
		for ( var k in key ) {
			access( elems, k, key[k], exec, fn, value );
		}
		return elems;
	}
=09
	// Setting one attribute
	if ( value !=3D=3D undefined ) {
		// Optionally, function values get executed if exec is true
		exec =3D !pass && exec && jQuery.isFunction(value);
	=09
		for ( var i =3D 0; i < length; i++ ) {
			fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key =
) ) : value, pass );
		}
	=09
		return elems;
	}
=09
	// Getting an attribute
	return length ? fn( elems[0], key ) : null;
}

function now() {
	return (new Date).getTime();
}
(function() {

	jQuery.support =3D {};

	var root =3D document.documentElement,
		script =3D document.createElement("script"),
		div =3D document.createElement("div"),
		id =3D "script" + now();

	div.style.display =3D "none";
	div.innerHTML =3D "   <link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";

	var all =3D div.getElementsByTagName("*"),
		a =3D div.getElementsByTagName("a")[0];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return;
	}

	jQuery.support =3D {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: div.firstChild.nodeType =3D=3D=3D 3,

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText insted)
		style: /red/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: a.getAttribute("href") =3D=3D=3D "/a",

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55$/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: div.getElementsByTagName("input")[0].value =3D=3D=3D "on",

		// Make sure that a selected-by-default option has a working selected =
property.
		// (WebKit defaults to false instead of true, IE too, if it's in an =
optgroup)
		optSelected: document.createElement("select").appendChild( =
document.createElement("option") ).selected,

		// Will be defined later
		checkClone: false,
		scriptEval: false,
		noCloneEvent: true,
		boxModel: null
	};

	script.type =3D "text/javascript";
	try {
		script.appendChild( document.createTextNode( "window." + id + "=3D1;" =
) );
	} catch(e) {}

	root.insertBefore( script, root.firstChild );

	// Make sure that the execution of code works by injecting a script
	// tag with appendChild/createTextNode
	// (IE doesn't support this, fails, and uses .text instead)
	if ( window[ id ] ) {
		jQuery.support.scriptEval =3D true;
		delete window[ id ];
	}

	root.removeChild( script );

	if ( div.attachEvent && div.fireEvent ) {
		div.attachEvent("onclick", function click() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			jQuery.support.noCloneEvent =3D false;
			div.detachEvent("onclick", click);
		});
		div.cloneNode(true).fireEvent("onclick");
	}

	div =3D document.createElement("div");
	div.innerHTML =3D "<input type=3D'radio' name=3D'radiotest' =
checked=3D'checked'/>";

	var fragment =3D document.createDocumentFragment();
	fragment.appendChild( div.firstChild );

	// WebKit doesn't clone checked state correctly in fragments
	jQuery.support.checkClone =3D =
fragment.cloneNode(true).cloneNode(true).lastChild.checked;

	// Figure out if the W3C box model works as expected
	// document.body must exist before we can do this
	jQuery(function() {
		var div =3D document.createElement("div");
		div.style.width =3D div.style.paddingLeft =3D "1px";

		document.body.appendChild( div );
		jQuery.boxModel =3D jQuery.support.boxModel =3D div.offsetWidth =
=3D=3D=3D 2;
		document.body.removeChild( div ).style.display =3D 'none';
		div =3D null;
	});

	// Technique from Juriy Zaytsev
	// =
http://thinkweb2.com/projects/prototype/detecting-event-support-without-b=
rowser-sniffing/
	var eventSupported =3D function( eventName ) {=20
		var el =3D document.createElement("div");=20
		eventName =3D "on" + eventName;=20

		var isSupported =3D (eventName in el);=20
		if ( !isSupported ) {=20
			el.setAttribute(eventName, "return;");=20
			isSupported =3D typeof el[eventName] =3D=3D=3D "function";=20
		}=20
		el =3D null;=20

		return isSupported;=20
	};
=09
	jQuery.support.submitBubbles =3D eventSupported("submit");
	jQuery.support.changeBubbles =3D eventSupported("change");

	// release memory in IE
	root =3D script =3D div =3D all =3D a =3D null;
})();

jQuery.props =3D {
	"for": "htmlFor",
	"class": "className",
	readonly: "readOnly",
	maxlength: "maxLength",
	cellspacing: "cellSpacing",
	rowspan: "rowSpan",
	colspan: "colSpan",
	tabindex: "tabIndex",
	usemap: "useMap",
	frameborder: "frameBorder"
};
var expando =3D "jQuery" + now(), uuid =3D 0, windowData =3D {};
var emptyObject =3D {};

jQuery.extend({
	cache: {},
=09
	expando:expando,

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		"object": true,
		"applet": true
	},

	data: function( elem, name, data ) {
		if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
			return;
		}

		elem =3D elem =3D=3D window ?
			windowData :
			elem;

		var id =3D elem[ expando ], cache =3D jQuery.cache, thisCache;

		// Handle the case where there's no name immediately
		if ( !name && !id ) {
			return null;
		}

		// Compute a unique ID for the element
		if ( !id ) {=20
			id =3D ++uuid;
		}

		// Avoid generating a new cache unless none exists and we
		// want to manipulate it.
		if ( typeof name =3D=3D=3D "object" ) {
			elem[ expando ] =3D id;
			thisCache =3D cache[ id ] =3D jQuery.extend(true, {}, name);
		} else if ( cache[ id ] ) {
			thisCache =3D cache[ id ];
		} else if ( typeof data =3D=3D=3D "undefined" ) {
			thisCache =3D emptyObject;
		} else {
			thisCache =3D cache[ id ] =3D {};
		}

		// Prevent overriding the named cache with undefined values
		if ( data !=3D=3D undefined ) {
			elem[ expando ] =3D id;
			thisCache[ name ] =3D data;
		}

		return typeof name =3D=3D=3D "string" ? thisCache[ name ] : thisCache;
	},

	removeData: function( elem, name ) {
		if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
			return;
		}

		elem =3D elem =3D=3D window ?
			windowData :
			elem;

		var id =3D elem[ expando ], cache =3D jQuery.cache, thisCache =3D =
cache[ id ];

		// If we want to remove a specific section of the element's data
		if ( name ) {
			if ( thisCache ) {
				// Remove the section of cache data
				delete thisCache[ name ];

				// If we've removed all the data, remove the element's cache
				if ( jQuery.isEmptyObject(thisCache) ) {
					jQuery.removeData( elem );
				}
			}

		// Otherwise, we want to remove all of the element's data
		} else {
			// Clean up the element expando
			try {
				delete elem[ expando ];
			} catch( e ) {
				// IE has trouble directly removing the expando
				// but it's ok with using removeAttribute
				if ( elem.removeAttribute ) {
					elem.removeAttribute( expando );
				}
			}

			// Completely remove the data cache
			delete cache[ id ];
		}
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		if ( typeof key =3D=3D=3D "undefined" && this.length ) {
			return jQuery.data( this[0] );

		} else if ( typeof key =3D=3D=3D "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		var parts =3D key.split(".");
		parts[1] =3D parts[1] ? "." + parts[1] : "";

		if ( value =3D=3D=3D undefined ) {
			var data =3D this.triggerHandler("getData" + parts[1] + "!", =
[parts[0]]);

			if ( data =3D=3D=3D undefined && this.length ) {
				data =3D jQuery.data( this[0], key );
			}
			return data =3D=3D=3D undefined && parts[1] ?
				this.data( parts[0] ) :
				data;
		} else {
			return this.trigger("setData" + parts[1] + "!", [parts[0], =
value]).each(function() {
				jQuery.data( this, key, value );
			});
		}
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});
jQuery.extend({
	queue: function( elem, type, data ) {
		if ( !elem ) {
			return;
		}

		type =3D (type || "fx") + "queue";
		var q =3D jQuery.data( elem, type );

		// Speed up dequeue by getting out quickly if this is just a lookup
		if ( !data ) {
			return q || [];
		}

		if ( !q || jQuery.isArray(data) ) {
			q =3D jQuery.data( elem, type, jQuery.makeArray(data) );

		} else {
			q.push( data );
		}

		return q;
	},

	dequeue: function( elem, type ) {
		type =3D type || "fx";

		var queue =3D jQuery.queue( elem, type ), fn =3D queue.shift();

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn =3D=3D=3D "inprogress" ) {
			fn =3D queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type =3D=3D=3D "fx" ) {
				queue.unshift("inprogress");
			}

			fn.call(elem, function() {
				jQuery.dequeue(elem, type);
			});
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		if ( typeof type !=3D=3D "string" ) {
			data =3D type;
			type =3D "fx";
		}

		if ( data =3D=3D=3D undefined ) {
			return jQuery.queue( this[0], type );
		}
		return this.each(function( i, elem ) {
			var queue =3D jQuery.queue( this, type, data );

			if ( type =3D=3D=3D "fx" && queue[0] !=3D=3D "inprogress" ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},

	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time =3D jQuery.fx ? jQuery.fx.speeds[time] || time : time;
		type =3D type || "fx";

		return this.queue( type, function() {
			var elem =3D this;
			setTimeout(function() {
				jQuery.dequeue( elem, type );
			}, time );
		});
	},

	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	}
});
var rclass =3D /[\n\t]/g,
	rspace =3D /\s+/,
	rreturn =3D /\r/g,
	rspecialurl =3D /href|src|style/,
	rtype =3D /(button|input)/i,
	rfocusable =3D /(button|input|object|select|textarea)/i,
	rclickable =3D /^(a|area)$/i,
	rradiocheck =3D /radio|checkbox/;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, name, value, true, jQuery.attr );
	},

	removeAttr: function( name, fn ) {
		return this.each(function(){
			jQuery.attr( this, name, "" );
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.removeAttribute( name );
			}
		});
	},

	addClass: function( value ) {
		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.addClass( value.call(this, i, self.attr("class")) );
			});
		}

		if ( value && typeof value =3D=3D=3D "string" ) {
			var classNames =3D (value || "").split( rspace );

			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var elem =3D this[i];

				if ( elem.nodeType =3D=3D=3D 1 ) {
					if ( !elem.className ) {
						elem.className =3D value;

					} else {
						var className =3D " " + elem.className + " ";
						for ( var c =3D 0, cl =3D classNames.length; c < cl; c++ ) {
							if ( className.indexOf( " " + classNames[c] + " " ) < 0 ) {
								elem.className +=3D " " + classNames[c];
							}
						}
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.removeClass( value.call(this, i, self.attr("class")) );
			});
		}

		if ( (value && typeof value =3D=3D=3D "string") || value =3D=3D=3D =
undefined ) {
			var classNames =3D (value || "").split(rspace);

			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var elem =3D this[i];

				if ( elem.nodeType =3D=3D=3D 1 && elem.className ) {
					if ( value ) {
						var className =3D (" " + elem.className + " ").replace(rclass, " =
");
						for ( var c =3D 0, cl =3D classNames.length; c < cl; c++ ) {
							className =3D className.replace(" " + classNames[c] + " ", " ");
						}
						elem.className =3D className.substring(1, className.length - 1);

					} else {
						elem.className =3D "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type =3D typeof value, isBool =3D typeof stateVal =3D=3D=3D =
"boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.toggleClass( value.call(this, i, self.attr("class"), stateVal), =
stateVal );
			});
		}

		return this.each(function() {
			if ( type =3D=3D=3D "string" ) {
				// toggle individual class names
				var className, i =3D 0, self =3D jQuery(this),
					state =3D stateVal,
					classNames =3D value.split( rspace );

				while ( (className =3D classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state =3D isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type =3D=3D=3D "undefined" || type =3D=3D=3D "boolean" ) =
{
				if ( this.className ) {
					// store className if set
					jQuery.data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className =3D this.className || value =3D=3D=3D false ? "" : =
jQuery.data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className =3D " " + selector + " ";
		for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
			if ( (" " + this[i].className + " ").replace(rclass, " ").indexOf( =
className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		if ( value =3D=3D=3D undefined ) {
			var elem =3D this[0];

			if ( elem ) {
				if ( jQuery.nodeName( elem, "option" ) ) {
					return (elem.attributes.value || {}).specified ? elem.value : =
elem.text;
				}

				// We need to handle select boxes special
				if ( jQuery.nodeName( elem, "select" ) ) {
					var index =3D elem.selectedIndex,
						values =3D [],
						options =3D elem.options,
						one =3D elem.type =3D=3D=3D "select-one";

					// Nothing was selected
					if ( index < 0 ) {
						return null;
					}

					// Loop through all the selected options
					for ( var i =3D one ? index : 0, max =3D one ? index + 1 : =
options.length; i < max; i++ ) {
						var option =3D options[ i ];

						if ( option.selected ) {
							// Get the specifc value for the option
							value =3D jQuery(option).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				}

				// Handle the case where in Webkit "" is returned instead of "on" if =
a value isn't specified
				if ( rradiocheck.test( elem.type ) && !jQuery.support.checkOn ) {
					return elem.getAttribute("value") =3D=3D=3D null ? "on" : =
elem.value;
				}
			=09

				// Everything else, we just grab the value
				return (elem.value || "").replace(rreturn, "");

			}

			return undefined;
		}

		var isFunction =3D jQuery.isFunction(value);

		return this.each(function(i) {
			var self =3D jQuery(this), val =3D value;

			if ( this.nodeType !=3D=3D 1 ) {
				return;
			}

			if ( isFunction ) {
				val =3D value.call(this, i, self.val());
			}

			// Typecast each time if the value is a Function and the appended
			// value is therefore different each time.
			if ( typeof val =3D=3D=3D "number" ) {
				val +=3D "";
			}

			if ( jQuery.isArray(val) && rradiocheck.test( this.type ) ) {
				this.checked =3D jQuery.inArray( self.val(), val ) >=3D 0;

			} else if ( jQuery.nodeName( this, "select" ) ) {
				var values =3D jQuery.makeArray(val);

				jQuery( "option", this ).each(function() {
					this.selected =3D jQuery.inArray( jQuery(this).val(), values ) >=3D =
0;
				});

				if ( !values.length ) {
					this.selectedIndex =3D -1;
				}

			} else {
				this.value =3D val;
			}
		});
	}
});

jQuery.extend({
	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},
	=09
	attr: function( elem, name, value, pass ) {
		// don't set attributes on text and comment nodes
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) =
{
			return undefined;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery(elem)[name](value);
		}

		var notxml =3D elem.nodeType !=3D=3D 1 || !jQuery.isXMLDoc( elem ),
			// Whether we are setting (or getting)
			set =3D value !=3D=3D undefined;

		// Try to normalize/fix the name
		name =3D notxml && jQuery.props[ name ] || name;

		// Only do all the following if this is a node (faster for style)
		if ( elem.nodeType =3D=3D=3D 1 ) {
			// These attributes require special treatment
			var special =3D rspecialurl.test( name );

			// Safari mis-reports the default selected property of an option
			// Accessing the parent's selectedIndex property fixes it
			if ( name =3D=3D=3D "selected" && !jQuery.support.optSelected ) {
				var parent =3D elem.parentNode;
				if ( parent ) {
					parent.selectedIndex;
=09
					// Make sure that it also works with optgroups, see #5701
					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
			}

			// If applicable, access the attribute via the DOM 0 way
			if ( name in elem && notxml && !special ) {
				if ( set ) {
					// We can't allow the type property to be changed (since it causes =
problems in IE)
					if ( name =3D=3D=3D "type" && rtype.test( elem.nodeName ) && =
elem.parentNode ) {
						jQuery.error( "type property can't be changed" );
					}

					elem[ name ] =3D value;
				}

				// browsers index elements by id/name on forms, give priority to =
attributes.
				if ( jQuery.nodeName( elem, "form" ) && elem.getAttributeNode(name) =
) {
					return elem.getAttributeNode( name ).nodeValue;
				}

				// elem.tabIndex doesn't always return the correct value when it =
hasn't been explicitly set
				// =
http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabi=
ndex-values-with-javascript/
				if ( name =3D=3D=3D "tabIndex" ) {
					var attributeNode =3D elem.getAttributeNode( "tabIndex" );

					return attributeNode && attributeNode.specified ?
						attributeNode.value :
						rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName =
) && elem.href ?
							0 :
							undefined;
				}

				return elem[ name ];
			}

			if ( !jQuery.support.style && notxml && name =3D=3D=3D "style" ) {
				if ( set ) {
					elem.style.cssText =3D "" + value;
				}

				return elem.style.cssText;
			}

			if ( set ) {
				// convert the value to a string (all browsers do this but IE) see =
#1070
				elem.setAttribute( name, "" + value );
			}

			var attr =3D !jQuery.support.hrefNormalized && notxml && special ?
					// Some attributes require a special call on IE
					elem.getAttribute( name, 2 ) :
					elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return attr =3D=3D=3D null ? undefined : attr;
		}

		// elem is actually elem.style ... set the style
		// Using attr for specific style information is now deprecated. Use =
style insead.
		return jQuery.style( elem, name, value );
	}
});
var fcleanup =3D function( nm ) {
	return nm.replace(/[^\w\s\.\|`]/g, function( ch ) {
		return "\\" + ch;
	});
};

/*
 * A number of helper functions used for managing events.
 * Many of the ideas behind this code originated from
 * Dean Edwards' addEvent library.
 */
jQuery.event =3D {

	// Bind an event to an element
	// Original by Dean Edwards
	add: function( elem, types, handler, data ) {
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {
			return;
		}

		// For whatever reason, IE has trouble passing the window object
		// around, causing it to be cloned in the process
		if ( elem.setInterval && ( elem !=3D=3D window && !elem.frameElement ) =
) {
			elem =3D window;
		}

		// Make sure that the function being executed has a unique ID
		if ( !handler.guid ) {
			handler.guid =3D jQuery.guid++;
		}

		// if data is passed, bind to handler
		if ( data !=3D=3D undefined ) {
			// Create temporary function pointer to original handler
			var fn =3D handler;

			// Create unique handler function, wrapped around original handler
			handler =3D jQuery.proxy( fn );

			// Store data in unique handler
			handler.data =3D data;
		}

		// Init the element's event structure
		var events =3D jQuery.data( elem, "events" ) || jQuery.data( elem, =
"events", {} ),
			handle =3D jQuery.data( elem, "handle" ), eventHandle;

		if ( !handle ) {
			eventHandle =3D function() {
				// Handle the second event of a trigger and when
				// an event is called after a page has unloaded
				return typeof jQuery !=3D=3D "undefined" && !jQuery.event.triggered =
?
					jQuery.event.handle.apply( eventHandle.elem, arguments ) :
					undefined;
			};

			handle =3D jQuery.data( elem, "handle", eventHandle );
		}

		// If no handle is found then we must be trying to bind to one of the
		// banned noData elements
		if ( !handle ) {
			return;
		}

		// Add elem as a property of the handle function
		// This is to prevent a memory leak with non-native
		// event in IE.
		handle.elem =3D elem;

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types =3D types.split( /\s+/ );

		var type, i =3D 0;

		while ( (type =3D types[ i++ ]) ) {
			// Namespaced event handlers
			var namespaces =3D type.split(".");
			type =3D namespaces.shift();

			if ( i > 1 ) {
				handler =3D jQuery.proxy( handler );

				if ( data !=3D=3D undefined ) {
					handler.data =3D data;
				}
			}

			handler.type =3D namespaces.slice(0).sort().join(".");

			// Get the current list of functions bound to this event
			var handlers =3D events[ type ],
				special =3D this.special[ type ] || {};

			// Init the event handler queue
			if ( !handlers ) {
				handlers =3D events[ type ] =3D {};

				// Check for a special event handler
				// Only use addEventListener/attachEvent if the special
				// events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, =
handler) =3D=3D=3D false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, handle, false );
					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, handle );
					}
				}
			}
		=09
			if ( special.add ) {=20
				var modifiedHandler =3D special.add.call( elem, handler, data, =
namespaces, handlers );=20
				if ( modifiedHandler && jQuery.isFunction( modifiedHandler ) ) {=20
					modifiedHandler.guid =3D modifiedHandler.guid || handler.guid;=20
					modifiedHandler.data =3D modifiedHandler.data || handler.data;=20
					modifiedHandler.type =3D modifiedHandler.type || handler.type;=20
					handler =3D modifiedHandler;=20
				}=20
			}=20
		=09
			// Add the function to the element's handler list
			handlers[ handler.guid ] =3D handler;

			// Keep track of which events have been used, for global triggering
			this.global[ type ] =3D true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem =3D null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler ) {
		// don't do events on text and comment nodes
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) {
			return;
		}

		var events =3D jQuery.data( elem, "events" ), ret, type, fn;

		if ( events ) {
			// Unbind all events for the element
			if ( types =3D=3D=3D undefined || (typeof types =3D=3D=3D "string" && =
types.charAt(0) =3D=3D=3D ".") ) {
				for ( type in events ) {
					this.remove( elem, type + (types || "") );
				}
			} else {
				// types is actually an event object here
				if ( types.type ) {
					handler =3D types.handler;
					types =3D types.type;
				}

				// Handle multiple events separated by a space
				// jQuery(...).unbind("mouseover mouseout", fn);
				types =3D types.split(/\s+/);
				var i =3D 0;
				while ( (type =3D types[ i++ ]) ) {
					// Namespaced event handlers
					var namespaces =3D type.split(".");
					type =3D namespaces.shift();
					var all =3D !namespaces.length,
						cleaned =3D jQuery.map( namespaces.slice(0).sort(), fcleanup ),
						namespace =3D new RegExp("(^|\\.)" + cleaned.join("\\.(?:.*\\.)?") =
+ "(\\.|$)"),
						special =3D this.special[ type ] || {};

					if ( events[ type ] ) {
						// remove the given handler for the given type
						if ( handler ) {
							fn =3D events[ type ][ handler.guid ];
							delete events[ type ][ handler.guid ];

						// remove all handlers for the given type
						} else {
							for ( var handle in events[ type ] ) {
								// Handle the removal of namespaced events
								if ( all || namespace.test( events[ type ][ handle ].type ) ) {
									delete events[ type ][ handle ];
								}
							}
						}

						if ( special.remove ) {
							special.remove.call( elem, namespaces, fn);
						}

						// remove generic event handler if no more handlers exist
						for ( ret in events[ type ] ) {
							break;
						}
						if ( !ret ) {
							if ( !special.teardown || special.teardown.call( elem, namespaces =
) =3D=3D=3D false ) {
								if ( elem.removeEventListener ) {
									elem.removeEventListener( type, jQuery.data( elem, "handle" ), =
false );
								} else if ( elem.detachEvent ) {
									elem.detachEvent( "on" + type, jQuery.data( elem, "handle" ) );
								}
							}
							ret =3D null;
							delete events[ type ];
						}
					}
				}
			}

			// Remove the expando if it's no longer used
			for ( ret in events ) {
				break;
			}
			if ( !ret ) {
				var handle =3D jQuery.data( elem, "handle" );
				if ( handle ) {
					handle.elem =3D null;
				}
				jQuery.removeData( elem, "events" );
				jQuery.removeData( elem, "handle" );
			}
		}
	},

	// bubbling is internal
	trigger: function( event, data, elem /*, bubbling */ ) {
		// Event object or event type
		var type =3D event.type || event,
			bubbling =3D arguments[3];

		if ( !bubbling ) {
			event =3D typeof event =3D=3D=3D "object" ?
				// jQuery.Event object
				event[expando] ? event :
				// Object literal
				jQuery.extend( jQuery.Event(type), event ) :
				// Just the event type (string)
				jQuery.Event(type);

			if ( type.indexOf("!") >=3D 0 ) {
				event.type =3D type =3D type.slice(0, -1);
				event.exclusive =3D true;
			}

			// Handle a global trigger
			if ( !elem ) {
				// Don't bubble custom events when global (to avoid too much =
overhead)
				event.stopPropagation();

				// Only trigger if we've ever bound an event for it
				if ( this.global[ type ] ) {
					jQuery.each( jQuery.cache, function() {
						if ( this.events && this.events[type] ) {
							jQuery.event.trigger( event, data, this.handle.elem );
						}
					});
				}
			}

			// Handle triggering a single element

			// don't do events on text and comment nodes
			if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 =
) {
				return undefined;
			}

			// Clean up in case it is reused
			event.result =3D undefined;
			event.target =3D elem;

			// Clone the incoming data, if any
			data =3D jQuery.makeArray( data );
			data.unshift( event );
		}

		event.currentTarget =3D elem;

		// Trigger the event, it is assumed that "handle" is a function
		var handle =3D jQuery.data( elem, "handle" );
		if ( handle ) {
			handle.apply( elem, data );
		}

		var parent =3D elem.parentNode || elem.ownerDocument;

		// Trigger an inline bound script
		try {
			if ( !(elem && elem.nodeName && =
jQuery.noData[elem.nodeName.toLowerCase()]) ) {
				if ( elem[ "on" + type ] && elem[ "on" + type ].apply( elem, data ) =
=3D=3D=3D false ) {
					event.result =3D false;
				}
			}

		// prevent IE from throwing an error for some elements with some event =
types, see #3533
		} catch (e) {}

		if ( !event.isPropagationStopped() && parent ) {
			jQuery.event.trigger( event, data, parent, true );

		} else if ( !event.isDefaultPrevented() ) {
			var target =3D event.target, old,
				isClick =3D jQuery.nodeName(target, "a") && type =3D=3D=3D "click";

			if ( !isClick && !(target && target.nodeName && =
jQuery.noData[target.nodeName.toLowerCase()]) ) {
				try {
					if ( target[ type ] ) {
						// Make sure that we don't accidentally re-trigger the onFOO =
events
						old =3D target[ "on" + type ];

						if ( old ) {
							target[ "on" + type ] =3D null;
						}

						this.triggered =3D true;
						target[ type ]();
					}

				// prevent IE from throwing an error for some elements with some =
event types, see #3533
				} catch (e) {}

				if ( old ) {
					target[ "on" + type ] =3D old;
				}

				this.triggered =3D false;
			}
		}
	},

	handle: function( event ) {
		// returned undefined or false
		var all, handlers;

		event =3D arguments[0] =3D jQuery.event.fix( event || window.event );
		event.currentTarget =3D this;

		// Namespaced event handlers
		var namespaces =3D event.type.split(".");
		event.type =3D namespaces.shift();

		// Cache this now, all =3D true means, any handler
		all =3D !namespaces.length && !event.exclusive;

		var namespace =3D new RegExp("(^|\\.)" + =
namespaces.slice(0).sort().join("\\.(?:.*\\.)?") + "(\\.|$)");

		handlers =3D ( jQuery.data(this, "events") || {} )[ event.type ];

		for ( var j in handlers ) {
			var handler =3D handlers[ j ];

			// Filter the functions by class
			if ( all || namespace.test(handler.type) ) {
				// Pass in a reference to the handler function itself
				// So that we can later remove it
				event.handler =3D handler;
				event.data =3D handler.data;

				var ret =3D handler.apply( this, arguments );

				if ( ret !=3D=3D undefined ) {
					event.result =3D ret;
					if ( ret =3D=3D=3D false ) {
						event.preventDefault();
						event.stopPropagation();
					}
				}

				if ( event.isImmediatePropagationStopped() ) {
					break;
				}

			}
		}

		return event.result;
	},

	props: "altKey attrChange attrName bubbles button cancelable charCode =
clientX clientY ctrlKey currentTarget data detail eventPhase fromElement =
handler keyCode layerX layerY metaKey newValue offsetX offsetY =
originalTarget pageX pageY prevValue relatedNode relatedTarget screenX =
screenY shiftKey srcElement target toElement view wheelDelta =
which".split(" "),

	fix: function( event ) {
		if ( event[ expando ] ) {
			return event;
		}

		// store a copy of the original event object
		// and "clone" to set read-only properties
		var originalEvent =3D event;
		event =3D jQuery.Event( originalEvent );

		for ( var i =3D this.props.length, prop; i; ) {
			prop =3D this.props[ --i ];
			event[ prop ] =3D originalEvent[ prop ];
		}

		// Fix target property, if necessary
		if ( !event.target ) {
			event.target =3D event.srcElement || document; // Fixes #1925 where =
srcElement might not be defined either
		}

		// check if target is a textnode (safari)
		if ( event.target.nodeType =3D=3D=3D 3 ) {
			event.target =3D event.target.parentNode;
		}

		// Add relatedTarget, if necessary
		if ( !event.relatedTarget && event.fromElement ) {
			event.relatedTarget =3D event.fromElement =3D=3D=3D event.target ? =
event.toElement : event.fromElement;
		}

		// Calculate pageX/Y if missing and clientX/Y available
		if ( event.pageX =3D=3D null && event.clientX !=3D null ) {
			var doc =3D document.documentElement, body =3D document.body;
			event.pageX =3D event.clientX + (doc && doc.scrollLeft || body && =
body.scrollLeft || 0) - (doc && doc.clientLeft || body && =
body.clientLeft || 0);
			event.pageY =3D event.clientY + (doc && doc.scrollTop  || body && =
body.scrollTop  || 0) - (doc && doc.clientTop  || body && body.clientTop =
 || 0);
		}

		// Add which for key events
		if ( !event.which && ((event.charCode || event.charCode =3D=3D=3D 0) ? =
event.charCode : event.keyCode) ) {
			event.which =3D event.charCode || event.keyCode;
		}

		// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for =
Macs)
		if ( !event.metaKey && event.ctrlKey ) {
			event.metaKey =3D event.ctrlKey;
		}

		// Add which for click: 1 =3D=3D=3D left; 2 =3D=3D=3D middle; 3 =
=3D=3D=3D right
		// Note: button is not normalized, so don't use it
		if ( !event.which && event.button !=3D=3D undefined ) {
			event.which =3D (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( =
event.button & 4 ? 2 : 0 ) ));
		}

		return event;
	},

	// Deprecated, use jQuery.guid instead
	guid: 1E8,

	// Deprecated, use jQuery.proxy instead
	proxy: jQuery.proxy,

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady,
			teardown: jQuery.noop
		},

		live: {
			add: function( proxy, data, namespaces, live ) {
				jQuery.extend( proxy, data || {} );

				proxy.guid +=3D data.selector + data.live;=20
				data.liveProxy =3D proxy;

				jQuery.event.add( this, data.live, liveHandler, data );=20
			=09
			},

			remove: function( namespaces ) {
				if ( namespaces.length ) {
					var remove =3D 0, name =3D new RegExp("(^|\\.)" + namespaces[0] + =
"(\\.|$)");

					jQuery.each( (jQuery.data(this, "events").live || {}), function() {
						if ( name.test(this.type) ) {
							remove++;
						}
					});

					if ( remove < 1 ) {
						jQuery.event.remove( this, namespaces[0], liveHandler );
					}
				}
			},
			special: {}
		},
		beforeunload: {
			setup: function( data, namespaces, fn ) {
				// We only want to do this special case on windows
				if ( this.setInterval ) {
					this.onbeforeunload =3D fn;
				}

				return false;
			},
			teardown: function( namespaces, fn ) {
				if ( this.onbeforeunload =3D=3D=3D fn ) {
					this.onbeforeunload =3D null;
				}
			}
		}
	}
};

jQuery.Event =3D function( src ) {
	// Allow instantiation without the 'new' keyword
	if ( !this.preventDefault ) {
		return new jQuery.Event( src );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent =3D src;
		this.type =3D src.type;
	// Event type
	} else {
		this.type =3D src;
	}

	// timeStamp is buggy for some events on Firefox(#3843)
	// So we won't rely on the native value
	this.timeStamp =3D now();

	// Mark it as fixed
	this[ expando ] =3D true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript =
Language Binding
// =
http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-bind=
ing.html
jQuery.Event.prototype =3D {
	preventDefault: function() {
		this.isDefaultPrevented =3D returnTrue;

		var e =3D this.originalEvent;
		if ( !e ) {
			return;
		}
	=09
		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();
		}
		// otherwise set the returnValue property of the original event to =
false (IE)
		e.returnValue =3D false;
	},
	stopPropagation: function() {
		this.isPropagationStopped =3D returnTrue;

		var e =3D this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to =
true (IE)
		e.cancelBubble =3D true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped =3D returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Checks if an event happened on an element within another element
// Used in jQuery.event.special.mouseenter and mouseleave handlers
var withinElement =3D function( event ) {
	// Check if mouse(over|out) are still within the same parent element
	var parent =3D event.relatedTarget;

	// Traverse up the tree
	while ( parent && parent !=3D=3D this ) {
		// Firefox sometimes assigns relatedTarget a XUL element
		// which we cannot access the parentNode property of
		try {
			parent =3D parent.parentNode;

		// assuming we've left the element since we most likely mousedover a =
xul element
		} catch(e) {
			break;
		}
	}

	if ( parent !=3D=3D this ) {
		// set the correct event type
		event.type =3D event.data;

		// handle event if we actually just moused on to a non sub-element
		jQuery.event.handle.apply( this, arguments );
	}

},

// In case of event delegation, we only need to rename the event.type,
// liveHandler will take care of the rest.
delegate =3D function( event ) {
	event.type =3D event.data;
	jQuery.event.handle.apply( this, arguments );
};

// Create mouseenter and mouseleave events
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] =3D {
		setup: function( data ) {
			jQuery.event.add( this, fix, data && data.selector ? delegate : =
withinElement, orig );
		},
		teardown: function( data ) {
			jQuery.event.remove( this, fix, data && data.selector ? delegate : =
withinElement );
		}
	};
});

// submit delegation
if ( !jQuery.support.submitBubbles ) {

jQuery.event.special.submit =3D {
	setup: function( data, namespaces, fn ) {
		if ( this.nodeName.toLowerCase() !=3D=3D "form" ) {
			jQuery.event.add(this, "click.specialSubmit." + fn.guid, function( e =
) {
				var elem =3D e.target, type =3D elem.type;

				if ( (type =3D=3D=3D "submit" || type =3D=3D=3D "image") && jQuery( =
elem ).closest("form").length ) {
					return trigger( "submit", this, arguments );
				}
			});
	=20
			jQuery.event.add(this, "keypress.specialSubmit." + fn.guid, function( =
e ) {
				var elem =3D e.target, type =3D elem.type;

				if ( (type =3D=3D=3D "text" || type =3D=3D=3D "password") && jQuery( =
elem ).closest("form").length && e.keyCode =3D=3D=3D 13 ) {
					return trigger( "submit", this, arguments );
				}
			});

		} else {
			return false;
		}
	},

	remove: function( namespaces, fn ) {
		jQuery.event.remove( this, "click.specialSubmit" + (fn ? "."+fn.guid : =
"") );
		jQuery.event.remove( this, "keypress.specialSubmit" + (fn ? =
"."+fn.guid : "") );
	}
};

}

// change delegation, happens here so we have bind.
if ( !jQuery.support.changeBubbles ) {

var formElems =3D /textarea|input|select/i;

function getVal( elem ) {
	var type =3D elem.type, val =3D elem.value;

	if ( type =3D=3D=3D "radio" || type =3D=3D=3D "checkbox" ) {
		val =3D elem.checked;

	} else if ( type =3D=3D=3D "select-multiple" ) {
		val =3D elem.selectedIndex > -1 ?
			jQuery.map( elem.options, function( elem ) {
				return elem.selected;
			}).join("-") :
			"";

	} else if ( elem.nodeName.toLowerCase() =3D=3D=3D "select" ) {
		val =3D elem.selectedIndex;
	}

	return val;
}

function testChange( e ) {
		var elem =3D e.target, data, val;

		if ( !formElems.test( elem.nodeName ) || elem.readOnly ) {
			return;
		}

		data =3D jQuery.data( elem, "_change_data" );
		val =3D getVal(elem);

		// the current data will be also retrieved by beforeactivate
		if ( e.type !=3D=3D "focusout" || elem.type !=3D=3D "radio" ) {
			jQuery.data( elem, "_change_data", val );
		}
	=09
		if ( data =3D=3D=3D undefined || val =3D=3D=3D data ) {
			return;
		}

		if ( data !=3D null || val ) {
			e.type =3D "change";
			return jQuery.event.trigger( e, arguments[1], elem );
		}
}

jQuery.event.special.change =3D {
	filters: {
		focusout: testChange,=20

		click: function( e ) {
			var elem =3D e.target, type =3D elem.type;

			if ( type =3D=3D=3D "radio" || type =3D=3D=3D "checkbox" || =
elem.nodeName.toLowerCase() =3D=3D=3D "select" ) {
				return testChange.call( this, e );
			}
		},

		// Change has to be called before submit
		// Keydown will be called before keypress, which is used in =
submit-event delegation
		keydown: function( e ) {
			var elem =3D e.target, type =3D elem.type;

			if ( (e.keyCode =3D=3D=3D 13 && elem.nodeName.toLowerCase() !=3D=3D =
"textarea") ||
				(e.keyCode =3D=3D=3D 32 && (type =3D=3D=3D "checkbox" || type =
=3D=3D=3D "radio")) ||
				type =3D=3D=3D "select-multiple" ) {
				return testChange.call( this, e );
			}
		},

		// Beforeactivate happens also before the previous element is blurred
		// with this event you can't trigger a change event, but you can store
		// information/focus[in] is not needed anymore
		beforeactivate: function( e ) {
			var elem =3D e.target;

			if ( elem.nodeName.toLowerCase() =3D=3D=3D "input" && elem.type =
=3D=3D=3D "radio" ) {
				jQuery.data( elem, "_change_data", getVal(elem) );
			}
		}
	},
	setup: function( data, namespaces, fn ) {
		for ( var type in changeFilters ) {
			jQuery.event.add( this, type + ".specialChange." + fn.guid, =
changeFilters[type] );
		}

		return formElems.test( this.nodeName );
	},
	remove: function( namespaces, fn ) {
		for ( var type in changeFilters ) {
			jQuery.event.remove( this, type + ".specialChange" + (fn ? =
"."+fn.guid : ""), changeFilters[type] );
		}

		return formElems.test( this.nodeName );
	}
};

var changeFilters =3D jQuery.event.special.change.filters;

}

function trigger( type, elem, args ) {
	args[0].type =3D type;
	return jQuery.event.handle.apply( elem, args );
}

// Create "bubbling" focus and blur events
if ( document.addEventListener ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix =
) {
		jQuery.event.special[ fix ] =3D {
			setup: function() {
				this.addEventListener( orig, handler, true );
			},=20
			teardown: function() {=20
				this.removeEventListener( orig, handler, true );
			}
		};

		function handler( e ) {=20
			e =3D jQuery.event.fix( e );
			e.type =3D fix;
			return jQuery.event.handle.call( this, e );
		}
	});
}

jQuery.each(["bind", "one"], function( i, name ) {
	jQuery.fn[ name ] =3D function( type, data, fn ) {
		// Handle object literals
		if ( typeof type =3D=3D=3D "object" ) {
			for ( var key in type ) {
				this[ name ](key, data, type[key], fn);
			}
			return this;
		}
	=09
		if ( jQuery.isFunction( data ) ) {
			fn =3D data;
			data =3D undefined;
		}

		var handler =3D name =3D=3D=3D "one" ? jQuery.proxy( fn, function( =
event ) {
			jQuery( this ).unbind( event, handler );
			return fn.apply( this, arguments );
		}) : fn;

		return type =3D=3D=3D "unload" && name !=3D=3D "one" ?
			this.one( type, data, fn ) :
			this.each(function() {
				jQuery.event.add( this, type, handler, data );
			});
	};
});

jQuery.fn.extend({
	unbind: function( type, fn ) {
		// Handle object literals
		if ( typeof type =3D=3D=3D "object" && !type.preventDefault ) {
			for ( var key in type ) {
				this.unbind(key, type[key]);
			}
			return this;
		}

		return this.each(function() {
			jQuery.event.remove( this, type, fn );
		});
	},
	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},

	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			var event =3D jQuery.Event( type );
			event.preventDefault();
			event.stopPropagation();
			jQuery.event.trigger( event, data, this[0] );
			return event.result;
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args =3D arguments, i =3D 1;

		// link all the functions, so any of them can unbind this click =
handler
		while ( i < args.length ) {
			jQuery.proxy( fn, args[ i++ ] );
		}

		return this.click( jQuery.proxy( fn, function( event ) {
			// Figure out which function to execute
			var lastToggle =3D ( jQuery.data( this, "lastToggle" + fn.guid ) || 0 =
) % i;
			jQuery.data( this, "lastToggle" + fn.guid, lastToggle + 1 );

			// Make sure that clicks stop
			event.preventDefault();

			// and execute the function
			return args[ lastToggle ].apply( this, arguments ) || false;
		}));
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each(["live", "die"], function( i, name ) {
	jQuery.fn[ name ] =3D function( types, data, fn ) {
		var type, i =3D 0;

		if ( jQuery.isFunction( data ) ) {
			fn =3D data;
			data =3D undefined;
		}

		types =3D (types || "").split( /\s+/ );

		while ( (type =3D types[ i++ ]) !=3D null ) {
			type =3D type =3D=3D=3D "focus" ? "focusin" : // focus --> focusin
					type =3D=3D=3D "blur" ? "focusout" : // blur --> focusout
					type =3D=3D=3D "hover" ? types.push("mouseleave") && "mouseenter" : =
// hover support
					type;
		=09
			if ( name =3D=3D=3D "live" ) {
				// bind live handler
				jQuery( this.context ).bind( liveConvert( type, this.selector ), {
					data: data, selector: this.selector, live: type
				}, fn );

			} else {
				// unbind live handler
				jQuery( this.context ).unbind( liveConvert( type, this.selector ), =
fn ? { guid: fn.guid + this.selector + type } : null );
			}
		}
	=09
		return this;
	}
});

function liveHandler( event ) {
	var stop, elems =3D [], selectors =3D [], args =3D arguments,
		related, match, fn, elem, j, i, l, data,
		live =3D jQuery.extend({}, jQuery.data( this, "events" ).live);

	// Make sure we avoid non-left-click bubbling in Firefox (#3861)
	if ( event.button && event.type =3D=3D=3D "click" ) {
		return;
	}

	for ( j in live ) {
		fn =3D live[j];
		if ( fn.live =3D=3D=3D event.type ||
				fn.altLive && jQuery.inArray(event.type, fn.altLive) > -1 ) {

			data =3D fn.data;
			if ( !(data.beforeFilter && data.beforeFilter[event.type] &&=20
					!data.beforeFilter[event.type](event)) ) {
				selectors.push( fn.selector );
			}
		} else {
			delete live[j];
		}
	}

	match =3D jQuery( event.target ).closest( selectors, =
event.currentTarget );

	for ( i =3D 0, l =3D match.length; i < l; i++ ) {
		for ( j in live ) {
			fn =3D live[j];
			elem =3D match[i].elem;
			related =3D null;

			if ( match[i].selector =3D=3D=3D fn.selector ) {
				// Those two events require additional checking
				if ( fn.live =3D=3D=3D "mouseenter" || fn.live =3D=3D=3D =
"mouseleave" ) {
					related =3D jQuery( event.relatedTarget ).closest( fn.selector =
)[0];
				}

				if ( !related || related !=3D=3D elem ) {
					elems.push({ elem: elem, fn: fn });
				}
			}
		}
	}

	for ( i =3D 0, l =3D elems.length; i < l; i++ ) {
		match =3D elems[i];
		event.currentTarget =3D match.elem;
		event.data =3D match.fn.data;
		if ( match.fn.apply( match.elem, args ) =3D=3D=3D false ) {
			stop =3D false;
			break;
		}
	}

	return stop;
}

function liveConvert( type, selector ) {
	return "live." + (type ? type + "." : "") + selector.replace(/\./g, =
"`").replace(/ /g, "&");
}

jQuery.each( ("blur focus focusin focusout load resize scroll unload =
click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " =
+
	"change select submit keydown keypress keyup error").split(" "), =
function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] =3D function( fn ) {
		return fn ? this.bind( name, fn ) : this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] =3D true;
	}
});

// Prevent memory leaks in IE
// Window isn't included so as not to unbind existing unload events
// More info:
//  - http://isaacschlueter.com/2006/10/msie-memory-leaks/
if ( window.attachEvent && !window.addEventListener ) {
	window.attachEvent("onunload", function() {
		for ( var id in jQuery.cache ) {
			if ( jQuery.cache[ id ].handle ) {
				// Try/Catch is to handle iframes being unloaded, see #4280
				try {
					jQuery.event.remove( jQuery.cache[ id ].handle.elem );
				} catch(e) {}
			}
		}
	});
}
/*!
 * Sizzle CSS Selector Engine - v1.0
 *  Copyright 2009, The Dojo Foundation
 *  More information: http://sizzlejs.com/
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *=20
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *=20
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS =
BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN =
ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
(function(){

var chunker =3D =
/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+=
)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	done =3D 0,
	toString =3D Object.prototype.toString,
	hasDuplicate =3D false,
	baseHasDuplicate =3D true;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function(){
	baseHasDuplicate =3D false;
	return 0;
});

var Sizzle =3D function(selector, context, results, seed) {
	results =3D results || [];
	var origContext =3D context =3D context || document;

	if ( context.nodeType !=3D=3D 1 && context.nodeType !=3D=3D 9 ) {
		return [];
	}
=09
	if ( !selector || typeof selector !=3D=3D "string" ) {
		return results;
	}

	var parts =3D [], m, set, checkSet, extra, prune =3D true, contextXML =
=3D isXML(context),
		soFar =3D selector;
=09
	// Reset the position of the chunker regexp (start from head)
	while ( (chunker.exec(""), m =3D chunker.exec(soFar)) !=3D=3D null ) {
		soFar =3D m[3];
	=09
		parts.push( m[1] );
	=09
		if ( m[2] ) {
			extra =3D m[3];
			break;
		}
	}

	if ( parts.length > 1 && origPOS.exec( selector ) ) {
		if ( parts.length =3D=3D=3D 2 && Expr.relative[ parts[0] ] ) {
			set =3D posProcess( parts[0] + parts[1], context );
		} else {
			set =3D Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector =3D parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector +=3D parts.shift();
				}
			=09
				set =3D posProcess( selector, set );
			}
		}
	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType =3D=3D=3D 9 && =
!contextXML &&
				Expr.match.ID.test(parts[0]) && =
!Expr.match.ID.test(parts[parts.length - 1]) ) {
			var ret =3D Sizzle.find( parts.shift(), context, contextXML );
			context =3D ret.expr ? Sizzle.filter( ret.expr, ret.set )[0] : =
ret.set[0];
		}

		if ( context ) {
			var ret =3D seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length =3D=3D=3D 1 && (parts[0] =
=3D=3D=3D "~" || parts[0] =3D=3D=3D "+") && context.parentNode ? =
context.parentNode : context, contextXML );
			set =3D ret.expr ? Sizzle.filter( ret.expr, ret.set ) : ret.set;

			if ( parts.length > 0 ) {
				checkSet =3D makeArray(set);
			} else {
				prune =3D false;
			}

			while ( parts.length ) {
				var cur =3D parts.pop(), pop =3D cur;

				if ( !Expr.relative[ cur ] ) {
					cur =3D "";
				} else {
					pop =3D parts.pop();
				}

				if ( pop =3D=3D null ) {
					pop =3D context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}
		} else {
			checkSet =3D parts =3D [];
		}
	}

	if ( !checkSet ) {
		checkSet =3D set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) =3D=3D=3D "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );
		} else if ( context && context.nodeType =3D=3D=3D 1 ) {
			for ( var i =3D 0; checkSet[i] !=3D null; i++ ) {
				if ( checkSet[i] && (checkSet[i] =3D=3D=3D true || =
checkSet[i].nodeType =3D=3D=3D 1 && contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}
		} else {
			for ( var i =3D 0; checkSet[i] !=3D null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType =3D=3D=3D 1 ) {
					results.push( set[i] );
				}
			}
		}
	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort =3D function(results){
	if ( sortOrder ) {
		hasDuplicate =3D baseHasDuplicate;
		results.sort(sortOrder);

		if ( hasDuplicate ) {
			for ( var i =3D 1; i < results.length; i++ ) {
				if ( results[i] =3D=3D=3D results[i-1] ) {
					results.splice(i--, 1);
				}
			}
		}
	}

	return results;
};

Sizzle.matches =3D function(expr, set){
	return Sizzle(expr, null, null, set);
};

Sizzle.find =3D function(expr, context, isXML){
	var set, match;

	if ( !expr ) {
		return [];
	}

	for ( var i =3D 0, l =3D Expr.order.length; i < l; i++ ) {
		var type =3D Expr.order[i], match;
	=09
		if ( (match =3D Expr.leftMatch[ type ].exec( expr )) ) {
			var left =3D match[1];
			match.splice(1,1);

			if ( left.substr( left.length - 1 ) !=3D=3D "\\" ) {
				match[1] =3D (match[1] || "").replace(/\\/g, "");
				set =3D Expr.find[ type ]( match, context, isXML );
				if ( set !=3D null ) {
					expr =3D expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set =3D context.getElementsByTagName("*");
	}

	return {set: set, expr: expr};
};

Sizzle.filter =3D function(expr, set, inplace, not){
	var old =3D expr, result =3D [], curLoop =3D set, match, anyFound,
		isXMLFilter =3D set && set[0] && isXML(set[0]);

	while ( expr && set.length ) {
		for ( var type in Expr.filter ) {
			if ( (match =3D Expr.leftMatch[ type ].exec( expr )) !=3D null && =
match[2] ) {
				var filter =3D Expr.filter[ type ], found, item, left =3D match[1];
				anyFound =3D false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) =3D=3D=3D "\\" ) {
					continue;
				}

				if ( curLoop =3D=3D=3D result ) {
					result =3D [];
				}

				if ( Expr.preFilter[ type ] ) {
					match =3D Expr.preFilter[ type ]( match, curLoop, inplace, result, =
not, isXMLFilter );

					if ( !match ) {
						anyFound =3D found =3D true;
					} else if ( match =3D=3D=3D true ) {
						continue;
					}
				}

				if ( match ) {
					for ( var i =3D 0; (item =3D curLoop[i]) !=3D null; i++ ) {
						if ( item ) {
							found =3D filter( item, match, i, curLoop );
							var pass =3D not ^ !!found;

							if ( inplace && found !=3D null ) {
								if ( pass ) {
									anyFound =3D true;
								} else {
									curLoop[i] =3D false;
								}
							} else if ( pass ) {
								result.push( item );
								anyFound =3D true;
							}
						}
					}
				}

				if ( found !=3D=3D undefined ) {
					if ( !inplace ) {
						curLoop =3D result;
					}

					expr =3D expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr =3D=3D=3D old ) {
			if ( anyFound =3D=3D null ) {
				Sizzle.error( expr );
			} else {
				break;
			}
		}

		old =3D expr;
	}

	return curLoop;
};

Sizzle.error =3D function( msg ) {
	throw "Syntax error, unrecognized expression: " + msg;
};

var Expr =3D Sizzle.selectors =3D {
	order: [ "ID", "NAME", "TAG" ],
	match: {
		ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
		NAME: /\[name=3D['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,
		ATTR: =
/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=3D)\s*(['"]*)(.*?)\3|)\s*\]=
/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^-]|$)/,
		PSEUDO: =
/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\)=
)?/
	},
	leftMatch: {},
	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},
	attrHandle: {
		href: function(elem){
			return elem.getAttribute("href");
		}
	},
	relative: {
		"+": function(checkSet, part){
			var isPartStr =3D typeof part =3D=3D=3D "string",
				isTag =3D isPartStr && !/\W/.test(part),
				isPartStrNotTag =3D isPartStr && !isTag;

			if ( isTag ) {
				part =3D part.toLowerCase();
			}

			for ( var i =3D 0, l =3D checkSet.length, elem; i < l; i++ ) {
				if ( (elem =3D checkSet[i]) ) {
					while ( (elem =3D elem.previousSibling) && elem.nodeType !=3D=3D 1 =
) {}

					checkSet[i] =3D isPartStrNotTag || elem && =
elem.nodeName.toLowerCase() =3D=3D=3D part ?
						elem || false :
						elem =3D=3D=3D part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},
		">": function(checkSet, part){
			var isPartStr =3D typeof part =3D=3D=3D "string";

			if ( isPartStr && !/\W/.test(part) ) {
				part =3D part.toLowerCase();

				for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
					var elem =3D checkSet[i];
					if ( elem ) {
						var parent =3D elem.parentNode;
						checkSet[i] =3D parent.nodeName.toLowerCase() =3D=3D=3D part ? =
parent : false;
					}
				}
			} else {
				for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
					var elem =3D checkSet[i];
					if ( elem ) {
						checkSet[i] =3D isPartStr ?
							elem.parentNode :
							elem.parentNode =3D=3D=3D part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},
		"": function(checkSet, part, isXML){
			var doneName =3D done++, checkFn =3D dirCheck;

			if ( typeof part =3D=3D=3D "string" && !/\W/.test(part) ) {
				var nodeCheck =3D part =3D part.toLowerCase();
				checkFn =3D dirNodeCheck;
			}

			checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML);
		},
		"~": function(checkSet, part, isXML){
			var doneName =3D done++, checkFn =3D dirCheck;

			if ( typeof part =3D=3D=3D "string" && !/\W/.test(part) ) {
				var nodeCheck =3D part =3D part.toLowerCase();
				checkFn =3D dirNodeCheck;
			}

			checkFn("previousSibling", part, doneName, checkSet, nodeCheck, =
isXML);
		}
	},
	find: {
		ID: function(match, context, isXML){
			if ( typeof context.getElementById !=3D=3D "undefined" && !isXML ) {
				var m =3D context.getElementById(match[1]);
				return m ? [m] : [];
			}
		},
		NAME: function(match, context){
			if ( typeof context.getElementsByName !=3D=3D "undefined" ) {
				var ret =3D [], results =3D context.getElementsByName(match[1]);

				for ( var i =3D 0, l =3D results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") =3D=3D=3D match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length =3D=3D=3D 0 ? null : ret;
			}
		},
		TAG: function(match, context){
			return context.getElementsByTagName(match[1]);
		}
	},
	preFilter: {
		CLASS: function(match, curLoop, inplace, result, not, isXML){
			match =3D " " + match[1].replace(/\\/g, "") + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i =3D 0, elem; (elem =3D curLoop[i]) !=3D null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " =
").replace(/[\t\n]/g, " ").indexOf(match) >=3D 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}
					} else if ( inplace ) {
						curLoop[i] =3D false;
					}
				}
			}

			return false;
		},
		ID: function(match){
			return match[1].replace(/\\/g, "");
		},
		TAG: function(match, curLoop){
			return match[1].toLowerCase();
		},
		CHILD: function(match){
			if ( match[1] =3D=3D=3D "nth" ) {
				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', =
'-n+6'
				var test =3D /(-?)(\d*)n((?:\+|-)?\d*)/.exec(
					match[2] =3D=3D=3D "even" && "2n" || match[2] =3D=3D=3D "odd" && =
"2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are =
negative
				match[2] =3D (test[1] + (test[2] || 1)) - 0;
				match[3] =3D test[3] - 0;
			}

			// TODO: Move to normal caching system
			match[0] =3D done++;

			return match;
		},
		ATTR: function(match, curLoop, inplace, result, not, isXML){
			var name =3D match[1].replace(/\\/g, "");
		=09
			if ( !isXML && Expr.attrMap[name] ) {
				match[1] =3D Expr.attrMap[name];
			}

			if ( match[2] =3D=3D=3D "~=3D" ) {
				match[4] =3D " " + match[4] + " ";
			}

			return match;
		},
		PSEUDO: function(match, curLoop, inplace, result, not){
			if ( match[1] =3D=3D=3D "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || =
/^\w/.test(match[3]) ) {
					match[3] =3D Sizzle(match[3], null, null, curLoop);
				} else {
					var ret =3D Sizzle.filter(match[3], curLoop, inplace, true ^ not);
					if ( !inplace ) {
						result.push.apply( result, ret );
					}
					return false;
				}
			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( =
match[0] ) ) {
				return true;
			}
		=09
			return match;
		},
		POS: function(match){
			match.unshift( true );
			return match;
		}
	},
	filters: {
		enabled: function(elem){
			return elem.disabled =3D=3D=3D false && elem.type !=3D=3D "hidden";
		},
		disabled: function(elem){
			return elem.disabled =3D=3D=3D true;
		},
		checked: function(elem){
			return elem.checked =3D=3D=3D true;
		},
		selected: function(elem){
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			elem.parentNode.selectedIndex;
			return elem.selected =3D=3D=3D true;
		},
		parent: function(elem){
			return !!elem.firstChild;
		},
		empty: function(elem){
			return !elem.firstChild;
		},
		has: function(elem, i, match){
			return !!Sizzle( match[3], elem ).length;
		},
		header: function(elem){
			return /h\d/i.test( elem.nodeName );
		},
		text: function(elem){
			return "text" =3D=3D=3D elem.type;
		},
		radio: function(elem){
			return "radio" =3D=3D=3D elem.type;
		},
		checkbox: function(elem){
			return "checkbox" =3D=3D=3D elem.type;
		},
		file: function(elem){
			return "file" =3D=3D=3D elem.type;
		},
		password: function(elem){
			return "password" =3D=3D=3D elem.type;
		},
		submit: function(elem){
			return "submit" =3D=3D=3D elem.type;
		},
		image: function(elem){
			return "image" =3D=3D=3D elem.type;
		},
		reset: function(elem){
			return "reset" =3D=3D=3D elem.type;
		},
		button: function(elem){
			return "button" =3D=3D=3D elem.type || elem.nodeName.toLowerCase() =
=3D=3D=3D "button";
		},
		input: function(elem){
			return /input|select|textarea|button/i.test(elem.nodeName);
		}
	},
	setFilters: {
		first: function(elem, i){
			return i =3D=3D=3D 0;
		},
		last: function(elem, i, match, array){
			return i =3D=3D=3D array.length - 1;
		},
		even: function(elem, i){
			return i % 2 =3D=3D=3D 0;
		},
		odd: function(elem, i){
			return i % 2 =3D=3D=3D 1;
		},
		lt: function(elem, i, match){
			return i < match[3] - 0;
		},
		gt: function(elem, i, match){
			return i > match[3] - 0;
		},
		nth: function(elem, i, match){
			return match[3] - 0 =3D=3D=3D i;
		},
		eq: function(elem, i, match){
			return match[3] - 0 =3D=3D=3D i;
		}
	},
	filter: {
		PSEUDO: function(elem, match, i, array){
			var name =3D match[1], filter =3D Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			} else if ( name =3D=3D=3D "contains" ) {
				return (elem.textContent || elem.innerText || getText([ elem ]) || =
"").indexOf(match[3]) >=3D 0;
			} else if ( name =3D=3D=3D "not" ) {
				var not =3D match[3];

				for ( var i =3D 0, l =3D not.length; i < l; i++ ) {
					if ( not[i] =3D=3D=3D elem ) {
						return false;
					}
				}

				return true;
			} else {
				Sizzle.error( "Syntax error, unrecognized expression: " + name );
			}
		},
		CHILD: function(elem, match){
			var type =3D match[1], node =3D elem;
			switch (type) {
				case 'only':
				case 'first':
					while ( (node =3D node.previousSibling) )	 {
						if ( node.nodeType =3D=3D=3D 1 ) {=20
							return false;=20
						}
					}
					if ( type =3D=3D=3D "first" ) {=20
						return true;=20
					}
					node =3D elem;
				case 'last':
					while ( (node =3D node.nextSibling) )	 {
						if ( node.nodeType =3D=3D=3D 1 ) {=20
							return false;=20
						}
					}
					return true;
				case 'nth':
					var first =3D match[2], last =3D match[3];

					if ( first =3D=3D=3D 1 && last =3D=3D=3D 0 ) {
						return true;
					}
				=09
					var doneName =3D match[0],
						parent =3D elem.parentNode;
=09
					if ( parent && (parent.sizcache !=3D=3D doneName || =
!elem.nodeIndex) ) {
						var count =3D 0;
						for ( node =3D parent.firstChild; node; node =3D node.nextSibling =
) {
							if ( node.nodeType =3D=3D=3D 1 ) {
								node.nodeIndex =3D ++count;
							}
						}=20
						parent.sizcache =3D doneName;
					}
				=09
					var diff =3D elem.nodeIndex - last;
					if ( first =3D=3D=3D 0 ) {
						return diff =3D=3D=3D 0;
					} else {
						return ( diff % first =3D=3D=3D 0 && diff / first >=3D 0 );
					}
			}
		},
		ID: function(elem, match){
			return elem.nodeType =3D=3D=3D 1 && elem.getAttribute("id") =3D=3D=3D =
match;
		},
		TAG: function(elem, match){
			return (match =3D=3D=3D "*" && elem.nodeType =3D=3D=3D 1) || =
elem.nodeName.toLowerCase() =3D=3D=3D match;
		},
		CLASS: function(elem, match){
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},
		ATTR: function(elem, match){
			var name =3D match[1],
				result =3D Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] !=3D null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value =3D result + "",
				type =3D match[2],
				check =3D match[4];

			return result =3D=3D null ?
				type =3D=3D=3D "!=3D" :
				type =3D=3D=3D "=3D" ?
				value =3D=3D=3D check :
				type =3D=3D=3D "*=3D" ?
				value.indexOf(check) >=3D 0 :
				type =3D=3D=3D "~=3D" ?
				(" " + value + " ").indexOf(check) >=3D 0 :
				!check ?
				value && result !=3D=3D false :
				type =3D=3D=3D "!=3D" ?
				value !=3D=3D check :
				type =3D=3D=3D "^=3D" ?
				value.indexOf(check) =3D=3D=3D 0 :
				type =3D=3D=3D "$=3D" ?
				value.substr(value.length - check.length) =3D=3D=3D check :
				type =3D=3D=3D "|=3D" ?
				value =3D=3D=3D check || value.substr(0, check.length + 1) =3D=3D=3D =
check + "-" :
				false;
		},
		POS: function(elem, match, i, array){
			var name =3D match[2], filter =3D Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS =3D Expr.match.POS;

for ( var type in Expr.match ) {
	Expr.match[ type ] =3D new RegExp( Expr.match[ type ].source + =
/(?![^\[]*\])(?![^\(]*\))/.source );
	Expr.leftMatch[ type ] =3D new RegExp( /(^(?:.|\r|\n)*?)/.source + =
Expr.match[ type ].source.replace(/\\(\d+)/g, function(all, num){
		return "\\" + (num - 0 + 1);
	}));
}

var makeArray =3D function(array, results) {
	array =3D Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
=09
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 );

// Provide a fallback method if it does not work
} catch(e){
	makeArray =3D function(array, results) {
		var ret =3D results || [];

		if ( toString.call(array) =3D=3D=3D "[object Array]" ) {
			Array.prototype.push.apply( ret, array );
		} else {
			if ( typeof array.length =3D=3D=3D "number" ) {
				for ( var i =3D 0, l =3D array.length; i < l; i++ ) {
					ret.push( array[i] );
				}
			} else {
				for ( var i =3D 0; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder =3D function( a, b ) {
		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.compareDocumentPosition ? -1 : 1;
		}

		var ret =3D a.compareDocumentPosition(b) & 4 ? -1 : a =3D=3D=3D b ? 0 =
: 1;
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
} else if ( "sourceIndex" in document.documentElement ) {
	sortOrder =3D function( a, b ) {
		if ( !a.sourceIndex || !b.sourceIndex ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.sourceIndex ? -1 : 1;
		}

		var ret =3D a.sourceIndex - b.sourceIndex;
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
} else if ( document.createRange ) {
	sortOrder =3D function( a, b ) {
		if ( !a.ownerDocument || !b.ownerDocument ) {
			if ( a =3D=3D b ) {
				hasDuplicate =3D true;
			}
			return a.ownerDocument ? -1 : 1;
		}

		var aRange =3D a.ownerDocument.createRange(), bRange =3D =
b.ownerDocument.createRange();
		aRange.setStart(a, 0);
		aRange.setEnd(a, 0);
		bRange.setStart(b, 0);
		bRange.setEnd(b, 0);
		var ret =3D aRange.compareBoundaryPoints(Range.START_TO_END, bRange);
		if ( ret =3D=3D=3D 0 ) {
			hasDuplicate =3D true;
		}
		return ret;
	};
}

// Utility function for retreiving the text value of an array of DOM =
nodes
function getText( elems ) {
	var ret =3D "", elem;

	for ( var i =3D 0; elems[i]; i++ ) {
		elem =3D elems[i];

		// Get the text from text nodes and CDATA nodes
		if ( elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 4 ) {
			ret +=3D elem.nodeValue;

		// Traverse everything else, except comment nodes
		} else if ( elem.nodeType !=3D=3D 8 ) {
			ret +=3D getText( elem.childNodes );
		}
	}

	return ret;
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form =3D document.createElement("div"),
		id =3D "script" + (new Date).getTime();
	form.innerHTML =3D "<a name=3D'" + id + "'/>";

	// Inject it into the root element, check its status, and remove it =
quickly
	var root =3D document.documentElement;
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID =3D function(match, context, isXML){
			if ( typeof context.getElementById !=3D=3D "undefined" && !isXML ) {
				var m =3D context.getElementById(match[1]);
				return m ? m.id =3D=3D=3D match[1] || typeof m.getAttributeNode =
!=3D=3D "undefined" && m.getAttributeNode("id").nodeValue =3D=3D=3D =
match[1] ? [m] : undefined : [];
			}
		};

		Expr.filter.ID =3D function(elem, match){
			var node =3D typeof elem.getAttributeNode !=3D=3D "undefined" && =
elem.getAttributeNode("id");
			return elem.nodeType =3D=3D=3D 1 && node && node.nodeValue =3D=3D=3D =
match;
		};
	}

	root.removeChild( form );
	root =3D form =3D null; // release memory in IE
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div =3D document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG =3D function(match, context){
			var results =3D context.getElementsByTagName(match[1]);

			// Filter out possible comments
			if ( match[1] =3D=3D=3D "*" ) {
				var tmp =3D [];

				for ( var i =3D 0; results[i]; i++ ) {
					if ( results[i].nodeType =3D=3D=3D 1 ) {
						tmp.push( results[i] );
					}
				}

				results =3D tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML =3D "<a href=3D'#'></a>";
	if ( div.firstChild && typeof div.firstChild.getAttribute !=3D=3D =
"undefined" &&
			div.firstChild.getAttribute("href") !=3D=3D "#" ) {
		Expr.attrHandle.href =3D function(elem){
			return elem.getAttribute("href", 2);
		};
	}

	div =3D null; // release memory in IE
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle =3D Sizzle, div =3D document.createElement("div");
		div.innerHTML =3D "<p class=3D'TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length =
=3D=3D=3D 0 ) {
			return;
		}
=09
		Sizzle =3D function(query, context, extra, seed){
			context =3D context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && context.nodeType =3D=3D=3D 9 && !isXML(context) ) {
				try {
					return makeArray( context.querySelectorAll(query), extra );
				} catch(e){}
			}
	=09
			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] =3D oldSizzle[ prop ];
		}

		div =3D null; // release memory in IE
	})();
}

(function(){
	var div =3D document.createElement("div");

	div.innerHTML =3D "<div class=3D'test e'></div><div =
class=3D'test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || =
div.getElementsByClassName("e").length =3D=3D=3D 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className =3D "e";

	if ( div.getElementsByClassName("e").length =3D=3D=3D 1 ) {
		return;
	}
=09
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS =3D function(match, context, isXML) {
		if ( typeof context.getElementsByClassName !=3D=3D "undefined" && =
!isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	div =3D null; // release memory in IE
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) =
{
	for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
		var elem =3D checkSet[i];
		if ( elem ) {
			elem =3D elem[dir];
			var match =3D false;

			while ( elem ) {
				if ( elem.sizcache =3D=3D=3D doneName ) {
					match =3D checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType =3D=3D=3D 1 && !isXML ){
					elem.sizcache =3D doneName;
					elem.sizset =3D i;
				}

				if ( elem.nodeName.toLowerCase() =3D=3D=3D cur ) {
					match =3D elem;
					break;
				}

				elem =3D elem[dir];
			}

			checkSet[i] =3D match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i =3D 0, l =3D checkSet.length; i < l; i++ ) {
		var elem =3D checkSet[i];
		if ( elem ) {
			elem =3D elem[dir];
			var match =3D false;

			while ( elem ) {
				if ( elem.sizcache =3D=3D=3D doneName ) {
					match =3D checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType =3D=3D=3D 1 ) {
					if ( !isXML ) {
						elem.sizcache =3D doneName;
						elem.sizset =3D i;
					}
					if ( typeof cur !=3D=3D "string" ) {
						if ( elem =3D=3D=3D cur ) {
							match =3D true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match =3D elem;
						break;
					}
				}

				elem =3D elem[dir];
			}

			checkSet[i] =3D match;
		}
	}
}

var contains =3D document.compareDocumentPosition ? function(a, b){
	return a.compareDocumentPosition(b) & 16;
} : function(a, b){
	return a !=3D=3D b && (a.contains ? a.contains(b) : true);
};

var isXML =3D function(elem){
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)=20
	var documentElement =3D (elem ? elem.ownerDocument || elem : =
0).documentElement;
	return documentElement ? documentElement.nodeName !=3D=3D "HTML" : =
false;
};

var posProcess =3D function(selector, context){
	var tmpSet =3D [], later =3D "", match,
		root =3D context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match =3D Expr.match.PSEUDO.exec( selector )) ) {
		later +=3D match[0];
		selector =3D selector.replace( Expr.match.PSEUDO, "" );
	}

	selector =3D Expr.relative[selector] ? selector + "*" : selector;

	for ( var i =3D 0, l =3D root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
jQuery.find =3D Sizzle;
jQuery.expr =3D Sizzle.selectors;
jQuery.expr[":"] =3D jQuery.expr.filters;
jQuery.unique =3D Sizzle.uniqueSort;
jQuery.getText =3D getText;
jQuery.isXMLDoc =3D isXML;
jQuery.contains =3D contains;

return;

window.Sizzle =3D Sizzle;

})();
var runtil =3D /Until$/,
	rparentsprev =3D /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector =3D /,/,
	slice =3D Array.prototype.slice;

// Implement the identical functionality for filter and not
var winnow =3D function( elements, qualifier, keep ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) =3D=3D=3D keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return (elem =3D=3D=3D qualifier) =3D=3D=3D keep;
		});

	} else if ( typeof qualifier =3D=3D=3D "string" ) {
		var filtered =3D jQuery.grep(elements, function( elem ) {
			return elem.nodeType =3D=3D=3D 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier =3D jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return (jQuery.inArray( elem, qualifier ) >=3D 0) =3D=3D=3D keep;
	});
};

jQuery.fn.extend({
	find: function( selector ) {
		var ret =3D this.pushStack( "", "find", selector ), length =3D 0;

		for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
			length =3D ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( var n =3D length; n < ret.length; n++ ) {
					for ( var r =3D 0; r < length; r++ ) {
						if ( ret[r] =3D=3D=3D ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets =3D jQuery( target );
		return this.filter(function() {
			for ( var i =3D 0, l =3D targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", =
selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", =
selector );
	},
=09
	is: function( selector ) {
		return !!selector && jQuery.filter( selector, this ).length > 0;
	},

	closest: function( selectors, context ) {
		if ( jQuery.isArray( selectors ) ) {
			var ret =3D [], cur =3D this[0], match, matches =3D {}, selector;

			if ( cur && selectors.length ) {
				for ( var i =3D 0, l =3D selectors.length; i < l; i++ ) {
					selector =3D selectors[i];

					if ( !matches[selector] ) {
						matches[selector] =3D jQuery.expr.match.POS.test( selector ) ?=20
							jQuery( selector, context || this.context ) :
							selector;
					}
				}

				while ( cur && cur.ownerDocument && cur !=3D=3D context ) {
					for ( selector in matches ) {
						match =3D matches[selector];

						if ( match.jquery ? match.index(cur) > -1 : jQuery(cur).is(match) =
) {
							ret.push({ selector: selector, elem: cur });
							delete matches[selector];
						}
					}
					cur =3D cur.parentNode;
				}
			}

			return ret;
		}

		var pos =3D jQuery.expr.match.POS.test( selectors ) ?=20
			jQuery( selectors, context || this.context ) : null;

		return this.map(function( i, cur ) {
			while ( cur && cur.ownerDocument && cur !=3D=3D context ) {
				if ( pos ? pos.index(cur) > -1 : jQuery(cur).is(selectors) ) {
					return cur;
				}
				cur =3D cur.parentNode;
			}
			return null;
		});
	},
=09
	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {
		if ( !elem || typeof elem =3D=3D=3D "string" ) {
			return jQuery.inArray( this[0],
				// If it receives a string, the selector is used
				// If it receives nothing, the siblings are used
				elem ? jQuery( elem ) : this.parent().children() );
		}
		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set =3D typeof selector =3D=3D=3D "string" ?
				jQuery( selector, context || this.context ) :
				jQuery.makeArray( selector ),
			all =3D jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( =
all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType =3D=3D=3D =
11;
}

jQuery.each({
	parent: function( elem ) {
		var parent =3D elem.parentNode;
		return parent && parent.nodeType !=3D=3D 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( elem.parentNode.firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] =3D function( until, selector ) {
		var ret =3D jQuery.map( this, fn, until );
	=09
		if ( !runtil.test( name ) ) {
			selector =3D until;
		}

		if ( selector && typeof selector =3D=3D=3D "string" ) {
			ret =3D jQuery.filter( selector, ret );
		}

		ret =3D this.length > 1 ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && =
rparentsprev.test( name ) ) {
			ret =3D ret.reverse();
		}

		return this.pushStack( ret, name, slice.call(arguments).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr =3D ":not(" + expr + ")";
		}

		return jQuery.find.matches(expr, elems);
	},
=09
	dir: function( elem, dir, until ) {
		var matched =3D [], cur =3D elem[dir];
		while ( cur && cur.nodeType !=3D=3D 9 && (until =3D=3D=3D undefined || =
cur.nodeType !=3D=3D 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType =3D=3D=3D 1 ) {
				matched.push( cur );
			}
			cur =3D cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result =3D result || 1;
		var num =3D 0;

		for ( ; cur; cur =3D cur[dir] ) {
			if ( cur.nodeType =3D=3D=3D 1 && ++num =3D=3D=3D result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r =3D [];

		for ( ; n; n =3D n.nextSibling ) {
			if ( n.nodeType =3D=3D=3D 1 && n !=3D=3D elem ) {
				r.push( n );
			}
		}

		return r;
	}
});
var rinlinejQuery =3D / jQuery\d+=3D"(?:\d+|null)"/g,
	rleadingWhitespace =3D /^\s+/,
	rxhtmlTag =3D /(<([\w:]+)[^>]*?)\/>/g,
	rselfClosing =3D =
/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,
	rtagName =3D /<([\w:]+)/,
	rtbody =3D /<tbody/i,
	rhtml =3D /<|&\w+;/,
	rchecked =3D /checked\s*(?:[^=3D]|=3D\s*.checked.)/i,  // =
checked=3D"checked" or checked (html5)
	fcloseTag =3D function( all, front, tag ) {
		return rselfClosing.test( tag ) ?
			all :
			front + "></" + tag + ">";
	},
	wrapMap =3D {
		option: [ 1, "<select multiple=3D'multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	};

wrapMap.optgroup =3D wrapMap.option;
wrapMap.tbody =3D wrapMap.tfoot =3D wrapMap.colgroup =3D wrapMap.caption =
=3D wrapMap.thead;
wrapMap.th =3D wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default =3D [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( text ) {
		if ( jQuery.isFunction(text) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				self.text( text.call(this, i, self.text()) );
			});
		}

		if ( typeof text !=3D=3D "object" && text !=3D=3D undefined ) {
			return this.empty().append( (this[0] && this[0].ownerDocument || =
document).createTextNode( text ) );
		}

		return jQuery.getText( this );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap =3D jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem =3D this;

				while ( elem.firstChild && elem.firstChild.nodeType =3D=3D=3D 1 ) {
					elem =3D elem.firstChild;
				}

				return elem;
			}).append(this);
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self =3D jQuery( this ), contents =3D self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		return this.each(function() {
			jQuery( this ).wrapAll( html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType =3D=3D=3D 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set =3D jQuery(arguments[0]);
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set =3D this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery(arguments[0]).toArray() );
			return set;
		}
	},

	clone: function( events ) {
		// Do the clone
		var ret =3D this.map(function() {
			if ( !jQuery.support.noCloneEvent && !jQuery.isXMLDoc(this) ) {
				// IE copies events bound via attachEvent when
				// using cloneNode. Calling detachEvent on the
				// clone will also remove the events from the orignal
				// In order to get around this, we use innerHTML.
				// Unfortunately, this means some modifications to
				// attributes in IE that are actually only stored
				// as properties will not be copied (such as the
				// the name attribute on an input).
				var html =3D this.outerHTML, ownerDocument =3D this.ownerDocument;
				if ( !html ) {
					var div =3D ownerDocument.createElement("div");
					div.appendChild( this.cloneNode(true) );
					html =3D div.innerHTML;
				}

				return jQuery.clean([html.replace(rinlinejQuery, "")
					.replace(rleadingWhitespace, "")], ownerDocument)[0];
			} else {
				return this.cloneNode(true);
			}
		});

		// Copy the events from the original to the clone
		if ( events =3D=3D=3D true ) {
			cloneCopyEvent( this, ret );
			cloneCopyEvent( this.find("*"), ret.find("*") );
		}

		// Return the cloned set
		return ret;
	},

	html: function( value ) {
		if ( value =3D=3D=3D undefined ) {
			return this[0] && this[0].nodeType =3D=3D=3D 1 ?
				this[0].innerHTML.replace(rinlinejQuery, "") :
				null;

		// See if we can take a shortcut and just use innerHTML
		} else if ( typeof value =3D=3D=3D "string" && !/<script/i.test( value =
) &&
			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value =
)) &&
			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

			value =3D value.replace(rxhtmlTag, fcloseTag);

			try {
				for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
					// Remove element nodes and prevent memory leaks
					if ( this[i].nodeType =3D=3D=3D 1 ) {
						jQuery.cleanData( this[i].getElementsByTagName("*") );
						this[i].innerHTML =3D value;
					}
				}

			// If using innerHTML throws an exception, use the fallback method
			} catch(e) {
				this.empty().append( value );
			}

		} else if ( jQuery.isFunction( value ) ) {
			this.each(function(i){
				var self =3D jQuery(this), old =3D self.html();
				self.empty().append(function(){
					return value.call( this, i, old );
				});
			});

		} else {
			this.empty().append( value );
		}

		return this;
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they =
are inserted
			// this can help fix replacing a parent with child elements
			if ( !jQuery.isFunction( value ) ) {
				value =3D jQuery( value ).detach();

			} else {
				return this.each(function(i) {
					var self =3D jQuery(this), old =3D self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			return this.each(function() {
				var next =3D this.nextSibling, parent =3D this.parentNode;

				jQuery(this).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.pushStack( jQuery(jQuery.isFunction(value) ? value() : =
value), "replaceWith", value );
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, value =3D args[0], scripts =3D [];

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length =3D=3D=3D 3 && =
typeof value =3D=3D=3D "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self =3D jQuery(this);
				args[0] =3D value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			// If we're in a fragment, just use that instead of building a new =
one
			if ( args[0] && args[0].parentNode && args[0].parentNode.nodeType =
=3D=3D=3D 11 ) {
				results =3D { fragment: args[0].parentNode };
			} else {
				results =3D buildFragment( args, this, scripts );
			}

			first =3D results.fragment.firstChild;

			if ( first ) {
				table =3D table && jQuery.nodeName( first, "tr" );

				for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						results.cacheable || this.length > 1 || i > 0 ?
							results.fragment.cloneNode(true) :
							results.fragment
					);
				}
			}

			if ( scripts ) {
				jQuery.each( scripts, evalScript );
			}
		}

		return this;

		function root( elem, cur ) {
			return jQuery.nodeName(elem, "table") ?
				(elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
				elem;
		}
	}
});

function cloneCopyEvent(orig, ret) {
	var i =3D 0;

	ret.each(function() {
		if ( this.nodeName !=3D=3D (orig[i] && orig[i].nodeName) ) {
			return;
		}

		var oldData =3D jQuery.data( orig[i++] ), curData =3D jQuery.data( =
this, oldData ), events =3D oldData && oldData.events;

		if ( events ) {
			delete curData.handle;
			curData.events =3D {};

			for ( var type in events ) {
				for ( var handler in events[ type ] ) {
					jQuery.event.add( this, type, events[ type ][ handler ], events[ =
type ][ handler ].data );
				}
			}
		}
	});
}

function buildFragment( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults, doc;

	// webkit does not clone 'checked' attribute of radio inputs on =
cloneNode, so don't cache if string has a checked
	if ( args.length =3D=3D=3D 1 && typeof args[0] =3D=3D=3D "string" && =
args[0].length < 512 && args[0].indexOf("<option") < 0 && =
(jQuery.support.checkClone || !rchecked.test( args[0] )) ) {
		cacheable =3D true;
		cacheresults =3D jQuery.fragments[ args[0] ];
		if ( cacheresults ) {
			if ( cacheresults !=3D=3D 1 ) {
				fragment =3D cacheresults;
			}
		}
	}

	if ( !fragment ) {
		doc =3D (nodes && nodes[0] ? nodes[0].ownerDocument || nodes[0] : =
document);
		fragment =3D doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ args[0] ] =3D cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
}

jQuery.fragments =3D {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] =3D function( selector ) {
		var ret =3D [], insert =3D jQuery( selector );

		for ( var i =3D 0, l =3D insert.length; i < l; i++ ) {
			var elems =3D (i > 0 ? this.clone(true) : this).get();
			jQuery.fn[ original ].apply( jQuery(insert[i]), elems );
			ret =3D ret.concat( elems );
		}
		return this.pushStack( ret, name, insert.selector );
	};
});

jQuery.each({
	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		if ( !selector || jQuery.filter( selector, [ this ] ).length ) {
			if ( !keepData && this.nodeType =3D=3D=3D 1 ) {
				jQuery.cleanData( this.getElementsByTagName("*") );
				jQuery.cleanData( [ this ] );
			}

			if ( this.parentNode ) {
				 this.parentNode.removeChild( this );
			}
		}
	},

	empty: function() {
		// Remove element nodes and prevent memory leaks
		if ( this.nodeType =3D=3D=3D 1 ) {
			jQuery.cleanData( this.getElementsByTagName("*") );
		}

		// Remove any remaining nodes
		while ( this.firstChild ) {
			this.removeChild( this.firstChild );
		}
	}
}, function( name, fn ) {
	jQuery.fn[ name ] =3D function() {
		return this.each( fn, arguments );
	};
});

jQuery.extend({
	clean: function( elems, context, fragment, scripts ) {
		context =3D context || document;

		// !context.createElement fails in IE with an error but returns typeof =
'object'
		if ( typeof context.createElement =3D=3D=3D "undefined" ) {
			context =3D context.ownerDocument || context[0] && =
context[0].ownerDocument || document;
		}

		var ret =3D [];

		jQuery.each(elems, function( i, elem ) {
			if ( typeof elem =3D=3D=3D "number" ) {
				elem +=3D "";
			}

			if ( !elem ) {
				return;
			}

			// Convert html string into DOM nodes
			if ( typeof elem =3D=3D=3D "string" && !rhtml.test( elem ) ) {
				elem =3D context.createTextNode( elem );

			} else if ( typeof elem =3D=3D=3D "string" ) {
				// Fix "XHTML"-style tags in all browsers
				elem =3D elem.replace(rxhtmlTag, fcloseTag);

				// Trim whitespace, otherwise indexOf won't work as expected
				var tag =3D (rtagName.exec( elem ) || ["", ""])[1].toLowerCase(),
					wrap =3D wrapMap[ tag ] || wrapMap._default,
					depth =3D wrap[0],
					div =3D context.createElement("div");

				// Go to html and back, then peel off extra wrappers
				div.innerHTML =3D wrap[1] + elem + wrap[2];

				// Move to the right depth
				while ( depth-- ) {
					div =3D div.lastChild;
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !jQuery.support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					var hasBody =3D rtbody.test(elem),
						tbody =3D tag =3D=3D=3D "table" && !hasBody ?
							div.firstChild && div.firstChild.childNodes :

							// String was a bare <thead> or <tfoot>
							wrap[1] =3D=3D=3D "<table>" && !hasBody ?
								div.childNodes :
								[];

					for ( var j =3D tbody.length - 1; j >=3D 0 ; --j ) {
						if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j =
].childNodes.length ) {
							tbody[ j ].parentNode.removeChild( tbody[ j ] );
						}
					}

				}

				// IE completely kills leading whitespace when innerHTML is used
				if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( =
elem ) ) {
					div.insertBefore( context.createTextNode( =
rleadingWhitespace.exec(elem)[0] ), div.firstChild );
				}

				elem =3D jQuery.makeArray( div.childNodes );
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret =3D jQuery.merge( ret, elem );
			}

		});

		if ( fragment ) {
			for ( var i =3D 0; ret[i]; i++ ) {
				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type =
|| ret[i].type.toLowerCase() =3D=3D=3D "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( =
ret[i] ) : ret[i] );
				} else {
					if ( ret[i].nodeType =3D=3D=3D 1 ) {
						ret.splice.apply( ret, [i + 1, =
0].concat(jQuery.makeArray(ret[i].getElementsByTagName("script"))) );
					}
					fragment.appendChild( ret[i] );
				}
			}
		}

		return ret;
	},
=09
	cleanData: function( elems ) {
		for ( var i =3D 0, elem, id; (elem =3D elems[i]) !=3D null; i++ ) {
			jQuery.event.remove( elem );
			jQuery.removeData( elem );
		}
	}
});
// exclude the following css properties to add px
var rexclude =3D /z-?index|font-?weight|opacity|zoom|line-?height/i,
	ralpha =3D /alpha\([^)]*\)/,
	ropacity =3D /opacity=3D([^)]*)/,
	rfloat =3D /float/i,
	rdashAlpha =3D /-([a-z])/ig,
	rupper =3D /([A-Z])/g,
	rnumpx =3D /^-?\d+(?:px)?$/i,
	rnum =3D /^-?\d/,

	cssShow =3D { position: "absolute", visibility: "hidden", =
display:"block" },
	cssWidth =3D [ "Left", "Right" ],
	cssHeight =3D [ "Top", "Bottom" ],

	// cache check for defaultView.getComputedStyle
	getComputedStyle =3D document.defaultView && =
document.defaultView.getComputedStyle,
	// normalize float css property
	styleFloat =3D jQuery.support.cssFloat ? "cssFloat" : "styleFloat",
	fcamelCase =3D function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn.css =3D function( name, value ) {
	return access( this, name, value, true, function( elem, name, value ) {
		if ( value =3D=3D=3D undefined ) {
			return jQuery.curCSS( elem, name );
		}
	=09
		if ( typeof value =3D=3D=3D "number" && !rexclude.test(name) ) {
			value +=3D "px";
		}

		jQuery.style( elem, name, value );
	});
};

jQuery.extend({
	style: function( elem, name, value ) {
		// don't set styles on text and comment nodes
		if ( !elem || elem.nodeType =3D=3D=3D 3 || elem.nodeType =3D=3D=3D 8 ) =
{
			return undefined;
		}

		// ignore negative width and height values #1599
		if ( (name =3D=3D=3D "width" || name =3D=3D=3D "height") && =
parseFloat(value) < 0 ) {
			value =3D undefined;
		}

		var style =3D elem.style || elem, set =3D value !=3D=3D undefined;

		// IE uses filters for opacity
		if ( !jQuery.support.opacity && name =3D=3D=3D "opacity" ) {
			if ( set ) {
				// IE has trouble with opacity if it does not have layout
				// Force it by setting the zoom level
				style.zoom =3D 1;

				// Set the alpha filter to set the opacity
				var opacity =3D parseInt( value, 10 ) + "" =3D=3D=3D "NaN" ? "" : =
"alpha(opacity=3D" + value * 100 + ")";
				var filter =3D style.filter || jQuery.curCSS( elem, "filter" ) || =
"";
				style.filter =3D ralpha.test(filter) ? filter.replace(ralpha, =
opacity) : opacity;
			}

			return style.filter && style.filter.indexOf("opacity=3D") >=3D 0 ?
				(parseFloat( ropacity.exec(style.filter)[1] ) / 100) + "":
				"";
		}

		// Make sure we're using the right name for getting the float value
		if ( rfloat.test( name ) ) {
			name =3D styleFloat;
		}

		name =3D name.replace(rdashAlpha, fcamelCase);

		if ( set ) {
			style[ name ] =3D value;
		}

		return style[ name ];
	},

	css: function( elem, name, force, extra ) {
		if ( name =3D=3D=3D "width" || name =3D=3D=3D "height" ) {
			var val, props =3D cssShow, which =3D name =3D=3D=3D "width" ? =
cssWidth : cssHeight;

			function getWH() {
				val =3D name =3D=3D=3D "width" ? elem.offsetWidth : =
elem.offsetHeight;

				if ( extra =3D=3D=3D "border" ) {
					return;
				}

				jQuery.each( which, function() {
					if ( !extra ) {
						val -=3D parseFloat(jQuery.curCSS( elem, "padding" + this, true)) =
|| 0;
					}

					if ( extra =3D=3D=3D "margin" ) {
						val +=3D parseFloat(jQuery.curCSS( elem, "margin" + this, true)) =
|| 0;
					} else {
						val -=3D parseFloat(jQuery.curCSS( elem, "border" + this + =
"Width", true)) || 0;
					}
				});
			}

			if ( elem.offsetWidth !=3D=3D 0 ) {
				getWH();
			} else {
				jQuery.swap( elem, props, getWH );
			}

			return Math.max(0, Math.round(val));
		}

		return jQuery.curCSS( elem, name, force );
	},

	curCSS: function( elem, name, force ) {
		var ret, style =3D elem.style, filter;

		// IE uses filters for opacity
		if ( !jQuery.support.opacity && name =3D=3D=3D "opacity" && =
elem.currentStyle ) {
			ret =3D ropacity.test(elem.currentStyle.filter || "") ?
				(parseFloat(RegExp.$1) / 100) + "" :
				"";

			return ret =3D=3D=3D "" ?
				"1" :
				ret;
		}

		// Make sure we're using the right name for getting the float value
		if ( rfloat.test( name ) ) {
			name =3D styleFloat;
		}

		if ( !force && style && style[ name ] ) {
			ret =3D style[ name ];

		} else if ( getComputedStyle ) {

			// Only "float" is needed here
			if ( rfloat.test( name ) ) {
				name =3D "float";
			}

			name =3D name.replace( rupper, "-$1" ).toLowerCase();

			var defaultView =3D elem.ownerDocument.defaultView;

			if ( !defaultView ) {
				return null;
			}

			var computedStyle =3D defaultView.getComputedStyle( elem, null );

			if ( computedStyle ) {
				ret =3D computedStyle.getPropertyValue( name );
			}

			// We should always get a number back from opacity
			if ( name =3D=3D=3D "opacity" && ret =3D=3D=3D "" ) {
				ret =3D "1";
			}

		} else if ( elem.currentStyle ) {
			var camelCase =3D name.replace(rdashAlpha, fcamelCase);

			ret =3D elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];

			// From the awesome hack by Dean Edwards
			// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

			// If we're not dealing with a regular pixel number
			// but a number that has a weird ending, we need to convert it to =
pixels
			if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {
				// Remember the original values
				var left =3D style.left, rsLeft =3D elem.runtimeStyle.left;

				// Put in the new values to get a computed value out
				elem.runtimeStyle.left =3D elem.currentStyle.left;
				style.left =3D camelCase =3D=3D=3D "fontSize" ? "1em" : (ret || 0);
				ret =3D style.pixelLeft + "px";

				// Revert the changed values
				style.left =3D left;
				elem.runtimeStyle.left =3D rsLeft;
			}
		}

		return ret;
	},

	// A method for quickly swapping in/out CSS properties to get correct =
calculations
	swap: function( elem, options, callback ) {
		var old =3D {};

		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] =3D elem.style[ name ];
			elem.style[ name ] =3D options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( var name in options ) {
			elem.style[ name ] =3D old[ name ];
		}
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden =3D function( elem ) {
		var width =3D elem.offsetWidth, height =3D elem.offsetHeight,
			skip =3D elem.nodeName.toLowerCase() =3D=3D=3D "tr";

		return width =3D=3D=3D 0 && height =3D=3D=3D 0 && !skip ?
			true :
			width > 0 && height > 0 && !skip ?
				false :
				jQuery.curCSS(elem, "display") =3D=3D=3D "none";
	};

	jQuery.expr.filters.visible =3D function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}
var jsc =3D now(),
	rscript =3D /<script(.|\s)*?\/script>/gi,
	rselectTextarea =3D /select|textarea/i,
	rinput =3D =
/color|date|datetime|email|hidden|month|number|password|range|search|tel|=
text|time|url|week/i,
	jsre =3D /=3D\?(&|$)/,
	rquery =3D /\?/,
	rts =3D /(\?|&)_=3D.*?(&|$)/,
	rurl =3D /^(\w+:)?\/\/([^\/?#]+)/,
	r20 =3D /%20/g;

jQuery.fn.extend({
	// Keep a copy of the old load
	_load: jQuery.fn.load,

	load: function( url, params, callback ) {
		if ( typeof url !=3D=3D "string" ) {
			return this._load( url );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off =3D url.indexOf(" ");
		if ( off >=3D 0 ) {
			var selector =3D url.slice(off, url.length);
			url =3D url.slice(0, off);
		}

		// Default to a GET request
		var type =3D "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback =3D params;
				params =3D null;

			// Otherwise, build a param string
			} else if ( typeof params =3D=3D=3D "object" ) {
				params =3D jQuery.param( params, jQuery.ajaxSettings.traditional );
				type =3D "POST";
			}
		}

		var self =3D this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			complete: function( res, status ) {
				// If successful, inject the HTML into all the matched elements
				if ( status =3D=3D=3D "success" || status =3D=3D=3D "notmodified" ) =
{
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div />")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(res.responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						res.responseText );
				}

				if ( callback ) {
					self.each( callback, [res.responseText, status, res] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param(this.serializeArray());
	},
	serializeArray: function() {
		return this.map(function() {
			return this.elements ? jQuery.makeArray(this.elements) : this;
		})
		.filter(function() {
			return this.name && !this.disabled &&
				(this.checked || rselectTextarea.test(this.nodeName) ||
					rinput.test(this.type));
		})
		.map(function( i, elem ) {
			var val =3D jQuery(this).val();

			return val =3D=3D null ?
				null :
				jQuery.isArray(val) ?
					jQuery.map( val, function( val, i ) {
						return { name: elem.name, value: val };
					}) :
					{ name: elem.name, value: val };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess =
ajaxSend".split(" "), function( i, o ) {
	jQuery.fn[o] =3D function( f ) {
		return this.bind(o, f);
	};
});

jQuery.extend({

	get: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type =3D type || callback;
			callback =3D data;
			data =3D null;
		}

		return jQuery.ajax({
			type: "GET",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	getScript: function( url, callback ) {
		return jQuery.get(url, null, callback, "script");
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get(url, data, callback, "json");
	},

	post: function( url, data, callback, type ) {
		// shift arguments if data argument was omited
		if ( jQuery.isFunction( data ) ) {
			type =3D type || callback;
			callback =3D data;
			data =3D {};
		}

		return jQuery.ajax({
			type: "POST",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	ajaxSetup: function( settings ) {
		jQuery.extend( jQuery.ajaxSettings, settings );
	},

	ajaxSettings: {
		url: location.href,
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		username: null,
		password: null,
		traditional: false,
		*/
		// Create the request object; Microsoft failed to properly
		// implement the XMLHttpRequest in IE7 (can't request local files),
		// so we use the ActiveXObject when it is available
		// This function can be overriden by calling jQuery.ajaxSetup
		xhr: window.XMLHttpRequest && (window.location.protocol !=3D=3D =
"file:" || !window.ActiveXObject) ?
			function() {
				return new window.XMLHttpRequest();
			} :
			function() {
				try {
					return new window.ActiveXObject("Microsoft.XMLHTTP");
				} catch(e) {}
			},
		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			script: "text/javascript, application/javascript",
			json: "application/json, text/javascript",
			text: "text/plain",
			_default: "*/*"
		}
	},

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajax: function( origSettings ) {
		var s =3D jQuery.extend(true, {}, jQuery.ajaxSettings, origSettings);
	=09
		var jsonp, status, data,
			callbackContext =3D origSettings && origSettings.context || s,
			type =3D s.type.toUpperCase();

		// convert data if not already a string
		if ( s.data && s.processData && typeof s.data !=3D=3D "string" ) {
			s.data =3D jQuery.param( s.data, s.traditional );
		}

		// Handle JSONP Parameter Callbacks
		if ( s.dataType =3D=3D=3D "jsonp" ) {
			if ( type =3D=3D=3D "GET" ) {
				if ( !jsre.test( s.url ) ) {
					s.url +=3D (rquery.test( s.url ) ? "&" : "?") + (s.jsonp || =
"callback") + "=3D?";
				}
			} else if ( !s.data || !jsre.test(s.data) ) {
				s.data =3D (s.data ? s.data + "&" : "") + (s.jsonp || "callback") + =
"=3D?";
			}
			s.dataType =3D "json";
		}

		// Build temporary JSONP function
		if ( s.dataType =3D=3D=3D "json" && (s.data && jsre.test(s.data) || =
jsre.test(s.url)) ) {
			jsonp =3D s.jsonpCallback || ("jsonp" + jsc++);

			// Replace the =3D? sequence both in the query string and the data
			if ( s.data ) {
				s.data =3D (s.data + "").replace(jsre, "=3D" + jsonp + "$1");
			}

			s.url =3D s.url.replace(jsre, "=3D" + jsonp + "$1");

			// We need to make sure
			// that a JSONP style response is executed properly
			s.dataType =3D "script";

			// Handle JSONP-style loading
			window[ jsonp ] =3D window[ jsonp ] || function( tmp ) {
				data =3D tmp;
				success();
				complete();
				// Garbage collect
				window[ jsonp ] =3D undefined;

				try {
					delete window[ jsonp ];
				} catch(e) {}

				if ( head ) {
					head.removeChild( script );
				}
			};
		}

		if ( s.dataType =3D=3D=3D "script" && s.cache =3D=3D=3D null ) {
			s.cache =3D false;
		}

		if ( s.cache =3D=3D=3D false && type =3D=3D=3D "GET" ) {
			var ts =3D now();

			// try replacing _=3D if it is there
			var ret =3D s.url.replace(rts, "$1_=3D" + ts + "$2");

			// if nothing was replaced, add timestamp to the end
			s.url =3D ret + ((ret =3D=3D=3D s.url) ? (rquery.test(s.url) ? "&" : =
"?") + "_=3D" + ts : "");
		}

		// If data is available, append data to url for get requests
		if ( s.data && type =3D=3D=3D "GET" ) {
			s.url +=3D (rquery.test(s.url) ? "&" : "?") + s.data;
		}

		// Watch for a new set of requests
		if ( s.global && ! jQuery.active++ ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Matches an absolute URL, and saves the domain
		var parts =3D rurl.exec( s.url ),
			remote =3D parts && (parts[1] && parts[1] !=3D=3D location.protocol =
|| parts[2] !=3D=3D location.host);

		// If we're requesting a remote document
		// and trying to load JSON or Script with a GET
		if ( s.dataType =3D=3D=3D "script" && type =3D=3D=3D "GET" && remote ) =
{
			var head =3D document.getElementsByTagName("head")[0] || =
document.documentElement;
			var script =3D document.createElement("script");
			script.src =3D s.url;
			if ( s.scriptCharset ) {
				script.charset =3D s.scriptCharset;
			}

			// Handle Script loading
			if ( !jsonp ) {
				var done =3D false;

				// Attach handlers for all browsers
				script.onload =3D script.onreadystatechange =3D function() {
					if ( !done && (!this.readyState ||
							this.readyState =3D=3D=3D "loaded" || this.readyState =3D=3D=3D =
"complete") ) {
						done =3D true;
						success();
						complete();

						// Handle memory leak in IE
						script.onload =3D script.onreadystatechange =3D null;
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}
					}
				};
			}

			// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
			// This arises when a base node is used (#2709 and #4378).
			head.insertBefore( script, head.firstChild );

			// We handle everything using the script element injection
			return undefined;
		}

		var requestDone =3D false;

		// Create the request object
		var xhr =3D s.xhr();

		if ( !xhr ) {
			return;
		}

		// Open the socket
		// Passing null username, generates a login popup on Opera (#2865)
		if ( s.username ) {
			xhr.open(type, s.url, s.async, s.username, s.password);
		} else {
			xhr.open(type, s.url, s.async);
		}

		// Need an extra try/catch for cross domain requests in Firefox 3
		try {
			// Set the correct header, if data is being sent
			if ( s.data || origSettings && origSettings.contentType ) {
				xhr.setRequestHeader("Content-Type", s.contentType);
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in =
ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[s.url] ) {
					xhr.setRequestHeader("If-Modified-Since", =
jQuery.lastModified[s.url]);
				}

				if ( jQuery.etag[s.url] ) {
					xhr.setRequestHeader("If-None-Match", jQuery.etag[s.url]);
				}
			}

			// Set header so the called script knows that it's an XMLHttpRequest
			// Only send the header if it's not a remote XHR
			if ( !remote ) {
				xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
			}

			// Set the Accepts header for the server, depending on the dataType
			xhr.setRequestHeader("Accept", s.dataType && s.accepts[ s.dataType ] =
?
				s.accepts[ s.dataType ] + ", */*" :
				s.accepts._default );
		} catch(e) {}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && s.beforeSend.call(callbackContext, xhr, s) =
=3D=3D=3D false ) {
			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active ) {
				jQuery.event.trigger( "ajaxStop" );
			}

			// close opended socket
			xhr.abort();
			return false;
		}

		if ( s.global ) {
			trigger("ajaxSend", [xhr, s]);
		}

		// Wait for a response to come back
		var onreadystatechange =3D xhr.onreadystatechange =3D function( =
isTimeout ) {
			// The request was aborted
			if ( !xhr || xhr.readyState =3D=3D=3D 0 || isTimeout =3D=3D=3D =
"abort" ) {
				// Opera doesn't call onreadystatechange before this point
				// so we simulate the call
				if ( !requestDone ) {
					complete();
				}

				requestDone =3D true;
				if ( xhr ) {
					xhr.onreadystatechange =3D jQuery.noop;
				}

			// The transfer is complete and the data is available, or the request =
timed out
			} else if ( !requestDone && xhr && (xhr.readyState =3D=3D=3D 4 || =
isTimeout =3D=3D=3D "timeout") ) {
				requestDone =3D true;
				xhr.onreadystatechange =3D jQuery.noop;

				status =3D isTimeout =3D=3D=3D "timeout" ?
					"timeout" :
					!jQuery.httpSuccess( xhr ) ?
						"error" :
						s.ifModified && jQuery.httpNotModified( xhr, s.url ) ?
							"notmodified" :
							"success";

				var errMsg;

				if ( status =3D=3D=3D "success" ) {
					// Watch for, and catch, XML document parse errors
					try {
						// process the data (runs the xml through httpData regardless of =
callback)
						data =3D jQuery.httpData( xhr, s.dataType, s );
					} catch(err) {
						status =3D "parsererror";
						errMsg =3D err;
					}
				}

				// Make sure that the request was successful or notmodified
				if ( status =3D=3D=3D "success" || status =3D=3D=3D "notmodified" ) =
{
					// JSONP handles its own success callback
					if ( !jsonp ) {
						success();
					}
				} else {
					jQuery.handleError(s, xhr, status, errMsg);
				}

				// Fire the complete handlers
				complete();

				if ( isTimeout =3D=3D=3D "timeout" ) {
					xhr.abort();
				}

				// Stop memory leaks
				if ( s.async ) {
					xhr =3D null;
				}
			}
		};

		// Override the abort handler, if we can (IE doesn't allow it, but =
that's OK)
		// Opera doesn't fire onreadystatechange at all on abort
		try {
			var oldAbort =3D xhr.abort;
			xhr.abort =3D function() {
				if ( xhr ) {
					oldAbort.call( xhr );
				}

				onreadystatechange( "abort" );
			};
		} catch(e) { }

		// Timeout checker
		if ( s.async && s.timeout > 0 ) {
			setTimeout(function() {
				// Check to see if the request is still happening
				if ( xhr && !requestDone ) {
					onreadystatechange( "timeout" );
				}
			}, s.timeout);
		}

		// Send the data
		try {
			xhr.send( type =3D=3D=3D "POST" || type =3D=3D=3D "PUT" || type =
=3D=3D=3D "DELETE" ? s.data : null );
		} catch(e) {
			jQuery.handleError(s, xhr, null, e);
			// Fire the complete handlers
			complete();
		}

		// firefox 1.5 doesn't fire statechange for sync requests
		if ( !s.async ) {
			onreadystatechange();
		}

		function success() {
			// If a local callback was specified, fire it and pass it the data
			if ( s.success ) {
				s.success.call( callbackContext, data, status, xhr );
			}

			// Fire the global callback
			if ( s.global ) {
				trigger( "ajaxSuccess", [xhr, s] );
			}
		}

		function complete() {
			// Process result
			if ( s.complete ) {
				s.complete.call( callbackContext, xhr, status);
			}

			// The request was completed
			if ( s.global ) {
				trigger( "ajaxComplete", [xhr, s] );
			}

			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active ) {
				jQuery.event.trigger( "ajaxStop" );
			}
		}
	=09
		function trigger(type, args) {
			(s.context ? jQuery(s.context) : jQuery.event).trigger(type, args);
		}

		// return XMLHttpRequest to allow aborting the request etc.
		return xhr;
	},

	handleError: function( s, xhr, status, e ) {
		// If a local callback was specified, fire it
		if ( s.error ) {
			s.error.call( s.context || s, xhr, status, e );
		}

		// Fire the global callback
		if ( s.global ) {
			(s.context ? jQuery(s.context) : jQuery.event).trigger( "ajaxError", =
[xhr, s, e] );
		}
	},

	// Counter for holding the number of active queries
	active: 0,

	// Determines if an XMLHttpRequest was successful or not
	httpSuccess: function( xhr ) {
		try {
			// IE error sometimes returns 1223 when it should be 204 so treat it =
as success, see #1450
			return !xhr.status && location.protocol =3D=3D=3D "file:" ||
				// Opera returns 0 when status is 304
				( xhr.status >=3D 200 && xhr.status < 300 ) ||
				xhr.status =3D=3D=3D 304 || xhr.status =3D=3D=3D 1223 || xhr.status =
=3D=3D=3D 0;
		} catch(e) {}

		return false;
	},

	// Determines if an XMLHttpRequest returns NotModified
	httpNotModified: function( xhr, url ) {
		var lastModified =3D xhr.getResponseHeader("Last-Modified"),
			etag =3D xhr.getResponseHeader("Etag");

		if ( lastModified ) {
			jQuery.lastModified[url] =3D lastModified;
		}

		if ( etag ) {
			jQuery.etag[url] =3D etag;
		}

		// Opera returns 0 when status is 304
		return xhr.status =3D=3D=3D 304 || xhr.status =3D=3D=3D 0;
	},

	httpData: function( xhr, type, s ) {
		var ct =3D xhr.getResponseHeader("content-type") || "",
			xml =3D type =3D=3D=3D "xml" || !type && ct.indexOf("xml") >=3D 0,
			data =3D xml ? xhr.responseXML : xhr.responseText;

		if ( xml && data.documentElement.nodeName =3D=3D=3D "parsererror" ) {
			jQuery.error( "parsererror" );
		}

		// Allow a pre-filtering function to sanitize the response
		// s is checked to keep backwards compatibility
		if ( s && s.dataFilter ) {
			data =3D s.dataFilter( data, type );
		}

		// The filter can actually parse the response
		if ( typeof data =3D=3D=3D "string" ) {
			// Get the JavaScript object, if JSON is used.
			if ( type =3D=3D=3D "json" || !type && ct.indexOf("json") >=3D 0 ) {
				data =3D jQuery.parseJSON( data );

			// If the type is "script", eval it in global context
			} else if ( type =3D=3D=3D "script" || !type && =
ct.indexOf("javascript") >=3D 0 ) {
				jQuery.globalEval( data );
			}
		}

		return data;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s =3D [];
	=09
		// Set traditional to true for jQuery <=3D 1.3.2 behavior.
		if ( traditional =3D=3D=3D undefined ) {
			traditional =3D jQuery.ajaxSettings.traditional;
		}
	=09
		// If an array was passed in, assume that it is an array of form =
elements.
		if ( jQuery.isArray(a) || a.jquery ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});
		=09
		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[prefix] );
			}
		}

		// Return the resulting serialization
		return s.join("&").replace(r20, "+");

		function buildParams( prefix, obj ) {
			if ( jQuery.isArray(obj) ) {
				// Serialize array item.
				jQuery.each( obj, function( i, v ) {
					if ( traditional ) {
						// Treat each array item as a scalar.
						add( prefix, v );
					} else {
						// If array item is non-scalar (array or object), encode its
						// numeric index to resolve deserialization ambiguity issues.
						// Note that rack (as of 1.0.0) can't currently deserialize
						// nested arrays properly, and attempting to do so may cause
						// a server error. Possible fixes are to modify rack's
						// deserialization algorithm or to provide an option or flag
						// to force array serialization to be shallow.
						buildParams( prefix + "[" + ( typeof v =3D=3D=3D "object" || =
jQuery.isArray(v) ? i : "" ) + "]", v );
					}
				});
				=09
			} else if ( !traditional && obj !=3D null && typeof obj =3D=3D=3D =
"object" ) {
				// Serialize object item.
				jQuery.each( obj, function( k, v ) {
					buildParams( prefix + "[" + k + "]", v );
				});
				=09
			} else {
				// Serialize scalar item.
				add( prefix, obj );
			}
		}

		function add( key, value ) {
			// If value is a function, invoke it and return its value
			value =3D jQuery.isFunction(value) ? value() : value;
			s[ s.length ] =3D encodeURIComponent(key) + "=3D" + =
encodeURIComponent(value);
		}
	}
});
var elemdisplay =3D {},
	rfxtypes =3D /toggle|show|hide/,
	rfxnum =3D /^([+-]=3D)?([\d+-.]+)(.*)$/,
	timerId,
	fxAttrs =3D [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" =
],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" =
],
		// opacity animations
		[ "opacity" ]
	];

jQuery.fn.extend({
	show: function( speed, callback ) {
		if ( speed || speed =3D=3D=3D 0) {
			return this.animate( genFx("show", 3), speed, callback);

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var old =3D jQuery.data(this[i], "olddisplay");

				this[i].style.display =3D old || "";

				if ( jQuery.css(this[i], "display") =3D=3D=3D "none" ) {
					var nodeName =3D this[i].nodeName, display;

					if ( elemdisplay[ nodeName ] ) {
						display =3D elemdisplay[ nodeName ];

					} else {
						var elem =3D jQuery("<" + nodeName + " />").appendTo("body");

						display =3D elem.css("display");

						if ( display =3D=3D=3D "none" ) {
							display =3D "block";
						}

						elem.remove();

						elemdisplay[ nodeName ] =3D display;
					}

					jQuery.data(this[i], "olddisplay", display);
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( var j =3D 0, k =3D this.length; j < k; j++ ) {
				this[j].style.display =3D jQuery.data(this[j], "olddisplay") || "";
			}

			return this;
		}
	},

	hide: function( speed, callback ) {
		if ( speed || speed =3D=3D=3D 0 ) {
			return this.animate( genFx("hide", 3), speed, callback);

		} else {
			for ( var i =3D 0, l =3D this.length; i < l; i++ ) {
				var old =3D jQuery.data(this[i], "olddisplay");
				if ( !old && old !=3D=3D "none" ) {
					jQuery.data(this[i], "olddisplay", jQuery.css(this[i], "display"));
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( var j =3D 0, k =3D this.length; j < k; j++ ) {
				this[j].style.display =3D "none";
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2 ) {
		var bool =3D typeof fn =3D=3D=3D "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn =3D=3D null || bool ) {
			this.each(function() {
				var state =3D bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2);
		}

		return this;
	},

	fadeTo: function( speed, to, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall =3D jQuery.speed(speed, easing, callback);

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete );
		}

		return this[ optall.queue =3D=3D=3D false ? "each" : "queue" =
](function() {
			var opt =3D jQuery.extend({}, optall), p,
				hidden =3D this.nodeType =3D=3D=3D 1 && jQuery(this).is(":hidden"),
				self =3D this;

			for ( p in prop ) {
				var name =3D p.replace(rdashAlpha, fcamelCase);

				if ( p !=3D=3D name ) {
					prop[ name ] =3D prop[ p ];
					delete prop[ p ];
					p =3D name;
				}

				if ( prop[p] =3D=3D=3D "hide" && hidden || prop[p] =3D=3D=3D "show" =
&& !hidden ) {
					return opt.complete.call(this);
				}

				if ( ( p =3D=3D=3D "height" || p =3D=3D=3D "width" ) && this.style ) =
{
					// Store display property
					opt.display =3D jQuery.css(this, "display");

					// Make sure that nothing sneaks out
					opt.overflow =3D this.style.overflow;
				}

				if ( jQuery.isArray( prop[p] ) ) {
					// Create (if needed) and add to specialEasing
					(opt.specialEasing =3D opt.specialEasing || {})[p] =3D prop[p][1];
					prop[p] =3D prop[p][0];
				}
			}

			if ( opt.overflow !=3D null ) {
				this.style.overflow =3D "hidden";
			}

			opt.curAnim =3D jQuery.extend({}, prop);

			jQuery.each( prop, function( name, val ) {
				var e =3D new jQuery.fx( self, opt, name );

				if ( rfxtypes.test(val) ) {
					e[ val =3D=3D=3D "toggle" ? hidden ? "show" : "hide" : val ]( prop =
);

				} else {
					var parts =3D rfxnum.exec(val),
						start =3D e.cur(true) || 0;

					if ( parts ) {
						var end =3D parseFloat( parts[2] ),
							unit =3D parts[3] || "px";

						// We need to compute starting value
						if ( unit !=3D=3D "px" ) {
							self.style[ name ] =3D (end || 1) + unit;
							start =3D ((end || 1) / e.cur(true)) * start;
							self.style[ name ] =3D start + unit;
						}

						// If a +=3D/-=3D token was provided, we're doing a relative =
animation
						if ( parts[1] ) {
							end =3D ((parts[1] =3D=3D=3D "-=3D" ? -1 : 1) * end) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			});

			// For JS strict compliance
			return true;
		});
	},

	stop: function( clearQueue, gotoEnd ) {
		var timers =3D jQuery.timers;

		if ( clearQueue ) {
			this.queue([]);
		}

		this.each(function() {
			// go in reverse order so anything added to the queue during the loop =
is ignored
			for ( var i =3D timers.length - 1; i >=3D 0; i-- ) {
				if ( timers[i].elem =3D=3D=3D this ) {
					if (gotoEnd) {
						// force the next step to be the last
						timers[i](true);
					}

					timers.splice(i, 1);
				}
			}
		});

		// start the next in the queue if the last step wasn't forced
		if ( !gotoEnd ) {
			this.dequeue();
		}

		return this;
	}

});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show", 1),
	slideUp: genFx("hide", 1),
	slideToggle: genFx("toggle", 1),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" }
}, function( name, props ) {
	jQuery.fn[ name ] =3D function( speed, callback ) {
		return this.animate( props, speed, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt =3D speed && typeof speed =3D=3D=3D "object" ? speed : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction(easing) && =
easing
		};

		opt.duration =3D jQuery.fx.off ? 0 : typeof opt.duration =3D=3D=3D =
"number" ? opt.duration :
			jQuery.fx.speeds[opt.duration] || jQuery.fx.speeds._default;

		// Queueing
		opt.old =3D opt.complete;
		opt.complete =3D function() {
			if ( opt.queue !=3D=3D false ) {
				jQuery(this).dequeue();
			}
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options =3D options;
		this.elem =3D elem;
		this.prop =3D prop;

		if ( !options.orig ) {
			options.orig =3D {};
		}
	}

});

jQuery.fx.prototype =3D {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );

		// Set display property to block for height/width animations
		if ( ( this.prop =3D=3D=3D "height" || this.prop =3D=3D=3D "width" ) =
&& this.elem.style ) {
			this.elem.style.display =3D "block";
		}
	},

	// Get the current size
	cur: function( force ) {
		if ( this.elem[this.prop] !=3D null && (!this.elem.style || =
this.elem.style[this.prop] =3D=3D null) ) {
			return this.elem[ this.prop ];
		}

		var r =3D parseFloat(jQuery.css(this.elem, this.prop, force));
		return r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, =
this.prop)) || 0;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		this.startTime =3D now();
		this.start =3D from;
		this.end =3D to;
		this.unit =3D unit || this.unit || "px";
		this.now =3D this.start;
		this.pos =3D this.state =3D 0;

		var self =3D this;
		function t( gotoEnd ) {
			return self.step(gotoEnd);
		}

		t.elem =3D this.elem;

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			timerId =3D setInterval(jQuery.fx.tick, 13);
		}
	},

	// Simple 'show' function
	show: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] =3D jQuery.style( this.elem, this.prop );
		this.options.show =3D true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any
		// flash of content
		this.custom(this.prop =3D=3D=3D "width" || this.prop =3D=3D=3D =
"height" ? 1 : 0, this.cur());

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] =3D jQuery.style( this.elem, this.prop );
		this.options.hide =3D true;

		// Begin the animation
		this.custom(this.cur(), 0);
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var t =3D now(), done =3D true;

		if ( gotoEnd || t >=3D this.options.duration + this.startTime ) {
			this.now =3D this.end;
			this.pos =3D this.state =3D 1;
			this.update();

			this.options.curAnim[ this.prop ] =3D true;

			for ( var i in this.options.curAnim ) {
				if ( this.options.curAnim[i] !=3D=3D true ) {
					done =3D false;
				}
			}

			if ( done ) {
				if ( this.options.display !=3D null ) {
					// Reset the overflow
					this.elem.style.overflow =3D this.options.overflow;

					// Reset the display
					var old =3D jQuery.data(this.elem, "olddisplay");
					this.elem.style.display =3D old ? old : this.options.display;

					if ( jQuery.css(this.elem, "display") =3D=3D=3D "none" ) {
						this.elem.style.display =3D "block";
					}
				}

				// Hide the element if the "hide" operation was done
				if ( this.options.hide ) {
					jQuery(this.elem).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( this.options.hide || this.options.show ) {
					for ( var p in this.options.curAnim ) {
						jQuery.style(this.elem, p, this.options.orig[p]);
					}
				}

				// Execute the complete function
				this.options.complete.call( this.elem );
			}

			return false;

		} else {
			var n =3D t - this.startTime;
			this.state =3D n / this.options.duration;

			// Perform the easing function, defaults to swing
			var specialEasing =3D this.options.specialEasing && =
this.options.specialEasing[this.prop];
			var defaultEasing =3D this.options.easing || (jQuery.easing.swing ? =
"swing" : "linear");
			this.pos =3D jQuery.easing[specialEasing || =
defaultEasing](this.state, n, 0, 1, this.options.duration);
			this.now =3D this.start + ((this.end - this.start) * this.pos);

			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		var timers =3D jQuery.timers;

		for ( var i =3D 0; i < timers.length; i++ ) {
			if ( !timers[i]() ) {
				timers.splice(i--, 1);
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},
	=09
	stop: function() {
		clearInterval( timerId );
		timerId =3D null;
	},
=09
	speeds: {
		slow: 600,
 		fast: 200,
 		// Default speed
 		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style(fx.elem, "opacity", fx.now);
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] !=3D null ) {
				fx.elem.style[ fx.prop ] =3D (fx.prop =3D=3D=3D "width" || fx.prop =
=3D=3D=3D "height" ? Math.max(0, fx.now) : fx.now) + fx.unit;
			} else {
				fx.elem[ fx.prop ] =3D fx.now;
			}
		}
	}
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated =3D function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem =3D=3D=3D fn.elem;
		}).length;
	};
}

function genFx( type, num ) {
	var obj =3D {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function() =
{
		obj[ this ] =3D type;
	});

	return obj;
}
if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset =3D function( options ) {
		var elem =3D this[0];

		if ( options ) {=20
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem =3D=3D=3D elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		var box =3D elem.getBoundingClientRect(), doc =3D elem.ownerDocument, =
body =3D doc.body, docElem =3D doc.documentElement,
			clientTop =3D docElem.clientTop || body.clientTop || 0, clientLeft =
=3D docElem.clientLeft || body.clientLeft || 0,
			top  =3D box.top  + (self.pageYOffset || jQuery.support.boxModel && =
docElem.scrollTop  || body.scrollTop ) - clientTop,
			left =3D box.left + (self.pageXOffset || jQuery.support.boxModel && =
docElem.scrollLeft || body.scrollLeft) - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset =3D function( options ) {
		var elem =3D this[0];

		if ( options ) {=20
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem =3D=3D=3D elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		jQuery.offset.initialize();

		var offsetParent =3D elem.offsetParent, prevOffsetParent =3D elem,
			doc =3D elem.ownerDocument, computedStyle, docElem =3D =
doc.documentElement,
			body =3D doc.body, defaultView =3D doc.defaultView,
			prevComputedStyle =3D defaultView ? defaultView.getComputedStyle( =
elem, null ) : elem.currentStyle,
			top =3D elem.offsetTop, left =3D elem.offsetLeft;

		while ( (elem =3D elem.parentNode) && elem !=3D=3D body && elem =
!=3D=3D docElem ) {
			if ( jQuery.offset.supportsFixedPosition && =
prevComputedStyle.position =3D=3D=3D "fixed" ) {
				break;
			}

			computedStyle =3D defaultView ? defaultView.getComputedStyle(elem, =
null) : elem.currentStyle;
			top  -=3D elem.scrollTop;
			left -=3D elem.scrollLeft;

			if ( elem =3D=3D=3D offsetParent ) {
				top  +=3D elem.offsetTop;
				left +=3D elem.offsetLeft;

				if ( jQuery.offset.doesNotAddBorder && =
!(jQuery.offset.doesAddBorderForTableAndCells && =
/^t(able|d|h)$/i.test(elem.nodeName)) ) {
					top  +=3D parseFloat( computedStyle.borderTopWidth  ) || 0;
					left +=3D parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent =3D offsetParent, offsetParent =3D =
elem.offsetParent;
			}

			if ( jQuery.offset.subtractsBorderForOverflowNotVisible && =
computedStyle.overflow !=3D=3D "visible" ) {
				top  +=3D parseFloat( computedStyle.borderTopWidth  ) || 0;
				left +=3D parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle =3D computedStyle;
		}

		if ( prevComputedStyle.position =3D=3D=3D "relative" || =
prevComputedStyle.position =3D=3D=3D "static" ) {
			top  +=3D body.offsetTop;
			left +=3D body.offsetLeft;
		}

		if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position =
=3D=3D=3D "fixed" ) {
			top  +=3D Math.max( docElem.scrollTop, body.scrollTop );
			left +=3D Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset =3D {
	initialize: function() {
		var body =3D document.body, container =3D =
document.createElement("div"), innerDiv, checkDiv, table, td, =
bodyMarginTop =3D parseFloat( jQuery.curCSS(body, "marginTop", true) ) =
|| 0,
			html =3D "<div =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";

		jQuery.extend( container.style, { position: "absolute", top: 0, left: =
0, margin: 0, border: 0, width: "1px", height: "1px", visibility: =
"hidden" } );

		container.innerHTML =3D html;
		body.insertBefore( container, body.firstChild );
		innerDiv =3D container.firstChild;
		checkDiv =3D innerDiv.firstChild;
		td =3D innerDiv.nextSibling.firstChild.firstChild;

		this.doesNotAddBorder =3D (checkDiv.offsetTop !=3D=3D 5);
		this.doesAddBorderForTableAndCells =3D (td.offsetTop =3D=3D=3D 5);

		checkDiv.style.position =3D "fixed", checkDiv.style.top =3D "20px";
		// safari subtracts parent border width here which is 5px
		this.supportsFixedPosition =3D (checkDiv.offsetTop =3D=3D=3D 20 || =
checkDiv.offsetTop =3D=3D=3D 15);
		checkDiv.style.position =3D checkDiv.style.top =3D "";

		innerDiv.style.overflow =3D "hidden", innerDiv.style.position =3D =
"relative";
		this.subtractsBorderForOverflowNotVisible =3D (checkDiv.offsetTop =
=3D=3D=3D -5);

		this.doesNotIncludeMarginInBodyOffset =3D (body.offsetTop !=3D=3D =
bodyMarginTop);

		body.removeChild( container );
		body =3D container =3D innerDiv =3D checkDiv =3D table =3D td =3D =
null;
		jQuery.offset.initialize =3D jQuery.noop;
	},

	bodyOffset: function( body ) {
		var top =3D body.offsetTop, left =3D body.offsetLeft;

		jQuery.offset.initialize();

		if ( jQuery.offset.doesNotIncludeMarginInBodyOffset ) {
			top  +=3D parseFloat( jQuery.curCSS(body, "marginTop",  true) ) || 0;
			left +=3D parseFloat( jQuery.curCSS(body, "marginLeft", true) ) || 0;
		}

		return { top: top, left: left };
	},
=09
	setOffset: function( elem, options, i ) {
		// set position first, in-case top/left are set even on static elem
		if ( /static/.test( jQuery.curCSS( elem, "position" ) ) ) {
			elem.style.position =3D "relative";
		}
		var curElem   =3D jQuery( elem ),
			curOffset =3D curElem.offset(),
			curTop    =3D parseInt( jQuery.curCSS( elem, "top",  true ), 10 ) || =
0,
			curLeft   =3D parseInt( jQuery.curCSS( elem, "left", true ), 10 ) || =
0;

		if ( jQuery.isFunction( options ) ) {
			options =3D options.call( elem, i, curOffset );
		}

		var props =3D {
			top:  (options.top  - curOffset.top)  + curTop,
			left: (options.left - curOffset.left) + curLeft
		};
	=09
		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({
	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem =3D this[0],

		// Get *real* offsetParent
		offsetParent =3D this.offsetParent(),

		// Get correct offsets
		offset       =3D this.offset(),
		parentOffset =3D /^body|html$/i.test(offsetParent[0].nodeName) ? { =
top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and =
marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -=3D parseFloat( jQuery.curCSS(elem, "marginTop",  true) ) =
|| 0;
		offset.left -=3D parseFloat( jQuery.curCSS(elem, "marginLeft", true) ) =
|| 0;

		// Add offsetParent borders
		parentOffset.top  +=3D parseFloat( jQuery.curCSS(offsetParent[0], =
"borderTopWidth",  true) ) || 0;
		parentOffset.left +=3D parseFloat( jQuery.curCSS(offsetParent[0], =
"borderLeftWidth", true) ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent =3D this.offsetParent || document.body;
			while ( offsetParent && (!/^body|html$/i.test(offsetParent.nodeName) =
&& jQuery.css(offsetParent, "position") =3D=3D=3D "static") ) {
				offsetParent =3D offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method =3D "scroll" + name;

	jQuery.fn[ method ] =3D function(val) {
		var elem =3D this[0], win;
	=09
		if ( !elem ) {
			return null;
		}

		if ( val !=3D=3D undefined ) {
			// Set the scroll offset
			return this.each(function() {
				win =3D getWindow( this );

				if ( win ) {
					win.scrollTo(
						!i ? val : jQuery(win).scrollLeft(),
						 i ? val : jQuery(win).scrollTop()
					);

				} else {
					this[ method ] =3D val;
				}
			});
		} else {
			win =3D getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : =
"pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}
	};
});

function getWindow( elem ) {
	return ("scrollTo" in elem && elem.document) ?
		elem :
		elem.nodeType =3D=3D=3D 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type =3D name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn["inner" + name] =3D function() {
		return this[0] ?
			jQuery.css( this[0], type, false, "padding" ) :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn["outer" + name] =3D function( margin ) {
		return this[0] ?
			jQuery.css( this[0], type, false, margin ? "margin" : "border" ) :
			null;
	};

	jQuery.fn[ type ] =3D function( size ) {
		// Get window width or height
		var elem =3D this[0];
		if ( !elem ) {
			return size =3D=3D null ? null : this;
		}
	=09
		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self =3D jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		return ("scrollTo" in elem && elem.document) ? // does it walk and =
quack like a window?
			// Everyone else use document.documentElement or document.body =
depending on Quirks vs Standards mode
			elem.document.compatMode =3D=3D=3D "CSS1Compat" && =
elem.document.documentElement[ "client" + name ] ||
			elem.document.body[ "client" + name ] :

			// Get document width or height
			(elem.nodeType =3D=3D=3D 9) ? // is it a document
				// Either scroll[Width/Height] or offset[Width/Height], whichever is =
greater
				Math.max(
					elem.documentElement["client" + name],
					elem.body["scroll" + name], elem.documentElement["scroll" + name],
					elem.body["offset" + name], elem.documentElement["offset" + name]
				) :

				// Get or set width or height on the element
				size =3D=3D=3D undefined ?
					// Get width or height on the element
					jQuery.css( elem, type ) :

					// Set the width or height on the element (default to pixels if =
value is unitless)
					this.css( type, typeof size =3D=3D=3D "string" ? size : size + "px" =
);
	};

});
// Expose jQuery to the global object
window.jQuery =3D window.$ =3D jQuery;

})(window);

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://jquerymsgbox.ibrahimkalyoncu.com/Scripts/jquery.msgBox.js

=EF=BB=BF/*
jQuery.msgBox plugin=20
Copyright 2011, Halil =C4=B0brahim Kalyoncu
License: BSD
modified by Oliver Kopp, 2012.
 * added support for configurable image paths
 * a new msgBox can be shown within an existing msgBox
*/

// users may change this variable to fit their needs
var msgBoxImagePath =3D "Images/";

jQuery.msgBox =3D msg;
function msg (options) {
    var isShown =3D false;
    var typeOfValue =3D typeof options;
    var defaults =3D {
        content: (typeOfValue =3D=3D "string" ? options : "Message"),
        title: "Warning",
        type: "alert",
        autoClose: false,
        timeOut: 0,
        showButtons: true,
        buttons: [{ value: "Ok"}],
        inputs: [{ type: "text", name:"userName", header: "User Name" }, =
{ type: "password",name:"password", header: "Password"}],
        success: function (result) { },
        beforeShow: function () { },
        afterShow: function () { },
        beforeClose: function () { },
        afterClose: function () { },
        opacity: 0.1
    };
    options =3D typeOfValue =3D=3D "string" ? defaults : options;
    if (options.type !=3D null) {
        switch (options.type) {
            case "alert":
                options.title =3D options.title =3D=3D null ? "Warning" =
: options.title;
                break;
            case "info":
                options.title =3D options.title =3D=3D null ? =
"Information" : options.title;
                break;
            case "error":
                options.title =3D options.title =3D=3D null ? "Error" : =
options.title;
                break;
            case "confirm":
                options.title =3D options.title =3D=3D null ? =
"Confirmation" : options.title;
                options.buttons =3D options.buttons =3D=3D null ? [{ =
value: "Yes" }, { value: "No" }, { value: "Cancel"}] : options.buttons;
                break;
            case "prompt":
                options.title =3D options.title =3D=3D null ? "Log In" : =
options.title;
                options.buttons =3D options.buttons =3D=3D null ? [{ =
value: "Login" }, { value: "Cancel"}] : options.buttons;
                break;
            default:
                image =3D "alert.png";
        }
    }
    options.timeOut =3D options.timeOut =3D=3D null ? (options.content =
=3D=3D null ? 500 : options.content.length * 70) : options.timeOut;
    options =3D $.extend(defaults, options);
    if (options.autoClose) {
        setTimeout(hide, options.timeOut);
    }
    var image =3D "";
    switch (options.type) {
        case "alert":
            image =3D "alert.png";
            break;
        case "info":
            image =3D "info.png";
            break;
        case "error":
            image =3D "error.png";
            break;
        case "confirm":
            image =3D "confirm.png";
            break;
        default:
            image =3D "alert.png";
    }
   =20
    var divId =3D "msgBox" + new Date().getTime();
   =20
    var divMsgBoxId =3D divId;=20
    var divMsgBoxContentId =3D divId+"Content";=20
    var divMsgBoxImageId =3D divId+"Image";
    var divMsgBoxButtonsId =3D divId+"Buttons";
    var divMsgBoxBackGroundId =3D divId+"BackGround";
   =20
    var buttons =3D "";
    $(options.buttons).each(function (index, button) {
        buttons +=3D "<input class=3D\"msgButton\" type=3D\"button\" =
name=3D\"" + button.value + "\" value=3D\"" + button.value + "\" />";
    });

    var inputs =3D "";
    $(options.inputs).each(function (index, input) {
        var type =3D input.type;
        if (type=3D=3D"checkbox" || type =3D=3D"radiobutton") {
            inputs +=3D "<div class=3D\"msgInput\">" +
            "<input type=3D\"" + input.type + "\" name=3D\"" + =
input.name + "\" "+(input.checked =3D=3D null ? "" : "checked =
=3D'"+input.checked+"'")+" value=3D\"" + (typeof input.value =3D=3D =
"undefined" ? "" : input.value) + "\" />" +
            "<text>"+input.header +"</text>"+
            "</div>";
        }
        else {
            inputs +=3D "<div class=3D\"msgInput\">" +
            "<span class=3D\"msgInputHeader\">" + input.header + =
"<span>" +
            "<input type=3D\"" + input.type + "\" name=3D\"" + =
input.name + "\" value=3D\"" + (typeof input.value =3D=3D "undefined" ? =
"" : input.value) + "\" />" +
            "</div>";
        }
    });

    var divBackGround =3D "<div id=3D" + divMsgBoxBackGroundId + " =
class=3D\"msgBoxBackGround\"></div>";
    var divTitle =3D "<div class=3D\"msgBoxTitle\">" + options.title + =
"</div>";
    var divContainer =3D "<div class=3D\"msgBoxContainer\"><div id=3D" + =
divMsgBoxImageId + " class=3D\"msgBoxImage\"><img src=3D\"" + =
msgBoxImagePath + image + "\"/></div><div id=3D" + divMsgBoxContentId + =
" class=3D\"msgBoxContent\"><p><span>" + options.content + =
"</span></p></div></div>";
    var divButtons =3D "<div id=3D" + divMsgBoxButtonsId + " =
class=3D\"msgBoxButtons\">" + buttons + "</div>";
    var divInputs =3D "<div class=3D\"msgBoxInputs\">" + inputs + =
"</div>";

    var divMsgBox;=20
    var divMsgBoxContent;=20
    var divMsgBoxImage;
    var divMsgBoxButtons;
    var divMsgBoxBackGround;
   =20
    if (options.type =3D=3D "prompt") {
        $("html").append(divBackGround + "<div id=3D" + divMsgBoxId + " =
class=3D\"msgBox\">" + divTitle + "<div>" + divContainer + =
(options.showButtons ? divButtons + "</div>" : "</div>") + "</div>");
        divMsgBox =3D $("#"+divMsgBoxId);=20
        divMsgBoxContent =3D $("#"+divMsgBoxContentId);=20
        divMsgBoxImage =3D $("#"+divMsgBoxImageId);
        divMsgBoxButtons =3D $("#"+divMsgBoxButtonsId);
        divMsgBoxBackGround =3D $("#"+divMsgBoxBackGroundId);

        divMsgBoxImage.remove();
        =
divMsgBoxButtons.css({"text-align":"center","margin-top":"5px"});
        divMsgBoxContent.css({"width":"100%","height":"100%"});
        divMsgBoxContent.html(divInputs);
    }
    else {
        $("html").append(divBackGround + "<div id=3D" + divMsgBoxId + " =
class=3D\"msgBox\">" + divTitle + "<div>" + divContainer + =
(options.showButtons ? divButtons + "</div>" : "</div>") + "</div>");
        divMsgBox=3D $("#"+divMsgBoxId);=20
        divMsgBoxContent =3D $("#"+divMsgBoxContentId);=20
        divMsgBoxImage =3D $("#"+divMsgBoxImageId);
        divMsgBoxButtons =3D $("#"+divMsgBoxButtonsId);
        divMsgBoxBackGround =3D $("#"+divMsgBoxBackGroundId);
    }

    var width =3D divMsgBox.width();
    var height =3D divMsgBox.height();
    var windowHeight =3D $(window).height();
    var windowWidth =3D $(window).width();

    var top =3D windowHeight / 2 - height / 2;
    var left =3D windowWidth / 2 - width / 2;

    show();

    function show() {
        if (isShown) {
            return;
        }
        divMsgBox.css({ opacity: 0, top: top - 50, left: left });
        divMsgBox.css("background-image", =
"url('"+msgBoxImagePath+"msgBoxBackGround.png')");
        divMsgBoxBackGround.css({ opacity: options.opacity });
        options.beforeShow();
        divMsgBoxBackGround.css({ "width": $(document).width(), =
"height": getDocHeight() });
        $(divMsgBoxId+","+divMsgBoxBackGroundId).fadeIn(0);
        divMsgBox.animate({ opacity: 1, "top": top, "left": left }, =
200);
        setTimeout(options.afterShow, 200);
        isShown =3D true;
        $(window).bind("resize", function (e) {
            var width =3D divMsgBox.width();
            var height =3D divMsgBox.height();
            var windowHeight =3D $(window).height();
            var windowWidth =3D $(window).width();

            var top =3D windowHeight / 2 - height / 2;
            var left =3D windowWidth / 2 - width / 2;

            divMsgBox.css({ "top": top, "left": left });
        });
    }

    function hide() {
        if (!isShown) {
            return;
        }
        options.beforeClose();
        divMsgBox.animate({ opacity: 0, "top": top - 50, "left": left }, =
200);
        divMsgBoxBackGround.fadeOut(300);
        setTimeout(function () { divMsgBox.remove(); =
divMsgBoxBackGround.remove(); }, 300);
        setTimeout(options.afterClose, 300);
        isShown =3D false;
    }

    function getDocHeight() {
        var D =3D document;
        return Math.max(
        Math.max(D.body.scrollHeight, D.documentElement.scrollHeight),
        Math.max(D.body.offsetHeight, D.documentElement.offsetHeight),
        Math.max(D.body.clientHeight, D.documentElement.clientHeight));
    }

    function getFocus() {
    	divMsgBox.fadeOut(200).fadeIn(200);
    }

    $("input.msgButton").click(function (e) {
        e.preventDefault();
        var value =3D $(this).val();
        if (options.type !=3D "prompt") {
            options.success(value);
        }
        else {
            var inputValues =3D [];
            $("div.msgInput input").each(function (index, domEle) {
                var name =3D $(this).attr("name");
                var value =3D $(this).val();
                var type =3D $(this).attr("type");
                if (type =3D=3D "checkbox" || type =3D=3D "radiobutton") =
{
                    inputValues.push({ name: name, value: value,checked: =
$(this).attr("checked")});
                }
                else {
                    inputValues.push({ name: name, value: value });
                }
            });
            options.success(value,inputValues);
        }
        hide();
    });

    divMsgBoxBackGround.click(function (e) {
        if (!options.showButtons || options.autoClose) {
            hide();
        }
        else {
            getFocus();
        }
    });
};

------=_NextPart_000_0000_01CD3D1A.97D70E70
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: https://apis.google.com/js/plusone.js

var gapi=3Dwindow.gapi=3Dwindow.gapi||{};(function(){var g=3Dvoid =
0,h=3D!0,i=3D!1,j=3Dwindow,m=3Ddocument,n=3D"push",o=3D"replace",p=3D"ind=
exOf",q=3D"length",r=3D"call",s=3D"apply",u=3D"join";var =
v=3Dj,x=3Dm,aa=3Dv.location,ba=3Dfunction(){},z=3Dfunction(a,b,c){return =
a[b]=3Da[b]||c},A=3Dfunction(a){for(var =
b=3D0;b<this[q];b++)if(this[b]=3D=3D=3Da)return =
b;return-1},ca=3Dfunction(a){for(var =
a=3Da.sort(),b=3D[],c=3Dg,d=3D0;d<a[q];d++){var =
e=3Da[d];e!=3Dc&&b[n](e);c=3De}return b},B=3Dfunction(){var =
a;if((a=3DObject.create)&&/\[native =
code\]/.test(a))a=3Da(null);else{a=3D{};for(var b in a)a[b]=3Dg}return =
a},da=3Dfunction(a){return =
function(){v.setTimeout(a,0)}},C=3Dz(v,"gapi",{});var E=3Dfunction(){var =
a=3Daa.href,b=3DD.h,c=3DRegExp("([?#].*&|[?#])jsh=3D([^&#]*)","g");if(a=3D=
a&&c.exec(a))try{b=3DdecodeURIComponent(a[2])}catch(d){}return b};var =
D;D=3Dz(v,"___jsl",B());z(D,"I",0);var F=3Dfunction(a){return =
z(z(D,"H",B()),a,B())},ea=3Dfunction(a,b){z(D,"df",B())[a]=3Db};var =
G=3DB(),H=3D[];H[n](["jsl",function(a){for(var b in =
a)if(Object.prototype.hasOwnProperty[r](a,b)){var =
c=3Da[b];"object"=3D=3Dtypeof =
c?D[b]=3Dz(D,b,[]).concat(c):z(D,b,c)}if(a=3Da.u)b=3Dz(D,"us",[]),b[n](a)=
,(c=3D/^https:(.*)$/.exec(a))&&b[n]("http:"+c[1]),z(D,"u",a)}]);G.m=3Dfun=
ction(a){var =
b=3DD.ms||"https://apis.google.com",a=3Da[0];if(!a||0<=3Da[p](".."))throw=
"Bad hint";return b+a};=0A=
var I=3Dfunction(a){return =
a[u](",")[o](/\./g,"_")[o](/-/g,"_")},J=3Dfunction(a,b){for(var =
c=3D[],d=3D0;d<a[q];++d){var e=3Da[d];e&&0>A[r](b,e)&&c[n](e)}return =
c},fa=3Dfunction(){var a=3DE();if(!a)throw"Bad hint";return =
a},ga=3Dfunction(a){var =
b=3Da.split(";"),c=3DG[b.shift()],b=3Dc&&c(b);if(!b)throw"Bad =
hint:"+a;return =
b},ha=3Dfunction(a){"loading"!=3Dx.readyState?K(a):x.write(['<script =
src=3D"',a,'"><\/script>'][u](""))},K=3Dfunction(a){var =
b=3Dx.createElement("script");b.setAttribute("src",a);b.async=3D"true";a=3D=
x.getElementsByTagName("script")[0];=0A=
a.parentNode.insertBefore(b,a)},ia=3Dfunction(a,b){var =
c=3Db&&b._c;if(c)for(var d=3D0;d<H[q];d++){var =
e=3DH[d][0],f=3DH[d][1];f&&Object.prototype.hasOwnProperty[r](c,e)&&f(c[e=
],a,b)}},L=3Dfunction(){return i},O=3Dfunction(){return =
h},P=3Dfunction(a,b){var c=3Db||{};"function"=3D=3Dtypeof =
b&&(c=3D{},c.callback=3Db);ia(a,c);var =
d=3Dc.h||fa(),e=3Dc.callback,f=3Dc.config,l=3Dz(F(d),"r",[]).sort(),k=3Dz=
(F(d),"L",[]).sort(),M=3Dfunction(a){k[n][s](k,w);var =
b=3D((C||{}).config||{}).update;b?b(f):f&&z(D,"cu",[])[n](f);if(a){b=3DE(=
);b=3Dd=3D=3D=3Db?z(C,"_",=0A=
B()):B();b=3Dz(F(d),"_",b);a(b)}e&&e();return =
1},t=3Da?ca(a.split(":")):[],w=3DJ(t,k);if(!w[q])return M();var =
w=3DJ(t,l),N=3DD.I++,y=3D"loaded_"+N;if(!L(w,c,d,y)){C[y]=3Dfunction(a){i=
f(!a)return 0;var b=3Dfunction(){C[y]=3Dnull;return =
M(a)};if(C["loaded_"+(N-1)])C[y]=3Db;else for(b();b=3DC["loaded_"+ =
++N];)if(!b())break};if(!w[q])return =
C[y](ba);t=3Dga(d);t=3Dt[o]("__features__",I(w))[o](/\/$/,"")+(l[q]?"/ed=3D=
1/exm=3D"+I(l):"")+(O(d)?"/cb=3Dgapi."+y:"");l[n][s](l,w);c.sync||v.___ga=
pisync?ha(t):K(t)}};C.load=3DP;var Q=3Dfunction(a){var b=3DD.cm;return =
function(){b&&b();if(D.p)D.cm=3DQ(a);else{var =
c=3Da.shift();c&&P[s]({},c)}}},L=3Dfunction(a,b,c,d){var =
e=3Dz(D,"SL",[]);if(D.p)return =
e[n]([a[u](":"),b]),D.cm=3DQ(e),h;if(O(c))return i;if(D.LP)return =
e[n]([a[u](":"),b]),h;D.LP=3Dh;D.cm=3Dfunction(){C[d](function(){D.p=3Dg;=
D.LP=3Di;var a=3De.shift();a&&P[s]({},a)})};D.p=3Da;return =
i},O=3Dfunction(a){return!/\/widget\/|ms=3Dwidget/.test(a)};var =
R=3Dfunction(){return j.___jsl=3Dj.___jsl||{}},S=3Dfunction(a){var =
b=3DR();b[a]=3Db[a]||[];return b[a]},T=3Dfunction(a){var =
b=3DR();b.cfg=3D!a&&b.cfg||{};return =
b.cfg},U=3Dfunction(a){return"object"=3D=3D=3Dtypeof a&&/\[native =
code\]/.test(a[n])},V=3Dfunction(a,b){if(b)for(var c in =
b)b.hasOwnProperty(c)&&(a[c]&&b[c]&&"object"=3D=3D=3Dtypeof =
a[c]&&"object"=3D=3D=3Dtypeof =
b[c]&&!U(a[c])&&!U(b[c])?V(a[c],b[c]):b[c]&&"object"=3D=3D=3Dtypeof =
b[c]?(a[c]=3DU(b[c])?[]:{},V(a[c],b[c])):a[c]=3Db[c])},W=3Dfunction(a){if=
(a){var b=3D"",c=3Da.nodeType;if(3=3D=3Dc||=0A=
4=3D=3Dc)b=3Da.nodeValue;else if(a.innerText)b=3Da.innerText;else =
if(a.innerHTML)b=3Da.innerHTML;else =
if(a.firstChild){b=3D[];for(a=3Da.firstChild;a;a=3Da.nextSibling)b[n](W(a=
));b=3Db[u]("")}return b}},X=3Dfunction(){for(var =
a=3D["parsetags"],b=3DT(),c=3D0,d=3Da[q];b&&"object"=3D=3D=3Dtypeof =
b&&c<d;++c)b=3Db[a[c]];return =
c=3D=3D=3Da[q]&&b!=3D=3Dg?b:g},ja=3Dfunction(){T(h);var =
a=3Dj.___gcfg,b=3DS("cu");if(a&&a!=3D=3Dj.___gu){var =
c=3D{};V(c,a);b[n](c);j.___gu=3Da}var =
a=3DS("cu"),d=3Dm.scripts||m.getElementsByTagName("script")||[],c=3D[],e=3D=
[],f=3DR().u;f&&e[n](f);R().us&&=0A=
e[n][s](e,R().us);for(f=3D0;f<d[q];++f)for(var =
l=3Dd[f],k=3D0;k<e[q];++k)l.src&&0=3D=3Dl.src[p](e[k])&&c[n](l);0=3D=3Dc[=
q]&&d[d[q]-1].src&&c[n](d[d[q]-1]);for(d=3D0;d<c[q];++d)if(!c[d].getAttri=
bute("gapi_processed")){c[d].setAttribute("gapi_processed",h);if(e=3DW(c[=
d])){for(;0=3D=3De.charCodeAt(e[q]-1);)e=3De.substring(0,e[q]-1);f=3Dg;tr=
y{f=3D(new Function("return =
("+e+"\n)"))()}catch(M){}if("object"=3D=3D=3Dtypeof =
f)e=3Df;else{try{f=3D(new Function("return =
({"+e+"\n})"))()}catch(t){}e=3D"object"=3D=3D=3Dtypeof f?f:{}}}else =
e=3Dg;e&&a[n](e)}d=3D=0A=
S("cd");a=3D0;for(c=3Dd[q];a<c;++a)V(T(),d[a]);d=3DS("ci");a=3D0;for(c=3D=
d[q];a<c;++a)V(T(),d[a]);a=3D0;for(c=3Db[q];a<c;++a)V(T(),b[a])};var =
ka=3Dfunction(){var =
a=3Dj.__GOOGLEAPIS;a&&(z(D,"ci",[])[n](a),j.__GOOGLEAPIS=3Dg)};var =
Y=3Dj,la=3Dm,ma=3Dfunction(a){if("complete"=3D=3D=3Dla.readyState)a();els=
e{var b=3Di,c=3Dfunction(){if(!b)return =
b=3Dh,a[s](this,arguments)};Y.addEventListener?(Y.addEventListener("load"=
,c,i),Y.addEventListener("DOMContentLoaded",c,i)):Y.attachEvent&&(Y.attac=
hEvent("onreadystatechange",function(){"complete"=3D=3D=3Dla.readyState&&=
c[s](this,arguments)}),Y.attachEvent("onload",c))}};var =
na=3DB(),Z=3Dz(D,"FW",[]),oa=3Dfunction(){for(var =
a=3DB(),b=3Dx.getElementsByTagName("*"),c=3D0;c<b[q];++c){var =
d=3Db[c],e=3Dd.nodeName.toLowerCase(),f=3Dg;if(!d.getAttribute("data-gapi=
scan")&&(0=3D=3De[p]("g:")?f=3De.substr(2):(e=3D""+(d.className||d.getAtt=
ribute("class")))&&0=3D=3De[p]("g-")&&(f=3De.substr(2)),f&&na[f]))d.setAt=
tribute("data-gapiscan",h),z(a,f,[])[n](d)}return a},$=3Dfunction(a){var =
b=3Doa(),c=3D[],d=3D"explicit"=3D=3DX(),e;for(e in =
b)Z[n](e),(C[e]&&C[e].go||d)&&c[n](e);b=3D{};if(0<c[q])var =
f=3Da,a=3Dfunction(){for(var a=3D0;a<=0A=
c[q];a++)C[c[a]].go();f&&f()};b.callback=3Da;P(Z[u](":"),b)},pa=3Dfunctio=
n(a,b){for(var =
c=3Dz(b._c,"ds",[]),d=3D0;d<a[q];d++)c[n](["gapi",a[d],"go"][u](".")),c[n=
](["gapi",a[d],"render"][u]("."))};H[n](["platform",function(a,b,c){b&&Z[=
n](b);for(b=3D0;b<a[q];b++)na[a[b]]=3D1;c&&pa(a,c);ka();ja();if("explicit=
"!=3DX()){var =
d;if(c&&(a=3Dc.callback))d=3Dda(a),c.callback=3Dg;ma(function(){$(d)});$(=
)}}]);z(C,"platform",{}).go=3D$;H[n](["ds",function(a,b,c){for(var =
d=3D[].slice,b=3D0,e;e=3Da[b];++b){for(var =
f=3Dv,l=3De.split("."),k=3D0;k<l[q]-1;++k)f=3Dz(f,l[k],{});k=3Dl[k];f[k]|=
|(f[k]=3Dfunction(){var =
a=3D3=3D=3Dl[q]?l[l[q]-2]:"",b=3Dc._c.platform,f=3D"gapi"=3D=3Dl[0]&&b&&0=
<=3DA[r](b,a),k=3D[];ea(e,function(a){for(var =
b=3D0;k[b];++b)a[s](v,k[b])});return =
function(){k[n](d[r](arguments,0));f&&P(a)}}())}}]);})();=0A=
gapi.load("plusone",{callback:window["gapi_onload"],_c:{"platform":["plus=
one","plus","additnow"],"jsl":{"u":"https://apis.google.com/js/plusone.js=
","ci":{"lexps":[34,38,65,36,40,44,15,45,17,48,52,57,62,60,30],"oauth-flo=
w":{},"iframes":{"additnow":{"url":"https://apis.google.com/additnow/addi=
tnow.html?bsv=3Dp"},"plus":{"url":":socialhost:/u/:session_index:/_/pages=
/badge?bsv=3Dp"},":socialhost:":"https://plusone.google.com","configurato=
r":{"url":":socialhost:/:session_prefix:_/plusbuttonconfigurator"},":sign=
uphost:":"https://plus.google.com","plusone":{"preloadUrl":["https://ssl.=
gstatic.com/s2/oz/images/stars/po/Publisher/sprite4-a67f741843ffc4220554c=
34bd01bb0bb.png"],"params":{"count":"","url":"","size":""},"url":":social=
host:/:session_prefix:_/+1/fastbutton?bsv=3Dp"},"plus_share":{"params":{"=
url":""},"url":":socialhost:/:session_prefix:_/+1/sharebutton?plusShare=3D=
true&bsv=3Dp"}},"googleapis.config":{"mobilesignupurl":"https://m.google.=
com/app/plus/oob?"}},"h":"m;/_/apps-static/_/js/gapi/__features__/rt=3Dj/=
ver=3DuiiZL-9y1Qw.zh_CN./sv=3D1/am=3D!gFuVl93svF6I1poz5g/d=3D1/rs=3DAItRS=
TMPsbDoDrM42iGHFYbcDRm23CiYYw"},"ds":["gapi.plusone.go","gapi.plusone.ren=
der","gapi.plus.go","gapi.plus.render"]}});
------=_NextPart_000_0000_01CD3D1A.97D70E70--
