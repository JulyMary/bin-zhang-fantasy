<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
	xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">
    
    <LinearGradientBrush x:Key="TextBoxBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TextboxBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TextboxForeground" Color="Black"/>
    <SolidColorBrush x:Key="WatermarkForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="TextboxMouseOverBorderBrush" Color="#FF99C1E2"/>
    <SolidColorBrush x:Key="TextboxFocusedBorderBrush" Color="#FF6DBDD1"/>
    <SolidColorBrush x:Key="ReadOnlyBackground" Color="#5EC9C9C9"/>
    <LinearGradientBrush x:Key="DisabledBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" />
        <GradientStop Color="#FF62676A"
                  Offset="1" />
        <GradientStop Color="#FFD1D4D6"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFA9AFB5"
                  Offset="0.425" />
    </LinearGradientBrush>

    <utilsOuter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

    <SolidColorBrush x:Key="DisabledTextBrushKey.ShinyRed" Color="#FF636363"/>

    <SolidColorBrush x:Key="DisabledBorderBrushKey.ShinyRed" Color="#AAA"/>

    <Style x:Key="NumericUpDownDoubleTextBoxStyle"  TargetType="{x:Type local:DoubleTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource TextboxFocusedBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextboxBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource TextboxForeground}"/>
        <Setter Property="WatermarkTextForeground" Value="{StaticResource WatermarkForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="PositiveForeground" Value="{StaticResource TextboxForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type local:DoubleTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}"/>
                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" IsTabStop="False" IsHitTestVisible="False" 
                                                 Background="{TemplateBinding WatermarkBackground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                                 FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                                 Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                                 Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0"/>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOver_Border" BorderBrush="{StaticResource TextboxMouseOverBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"/>
                        <Border x:Name="Focused_Border" BorderBrush="{TemplateBinding FocusedBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"/>
                        <Border/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ShinyRed -->
    <LinearGradientBrush x:Key="ButtonBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FFCE6865"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFAF231E"
                  Offset="0.418" />
        <!--<GradientStop Color="#FF601818"
                  Offset="1" />-->
        <GradientStop Color="#FFF1BCBE"
                  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBorderBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FF000000"
                  Offset="1" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="HighlightBrushKey.ShinyRed">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.804" ScaleY="0.743" />
                <SkewTransform CenterX="0.5" CenterY="0.5" />
                <RotateTransform CenterX="0.5" CenterY="0.5" />
                <TranslateTransform Y="0.47999998927116394" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FFFFC398" Offset="0.209" />
        <GradientStop Color="#00FFB598" Offset="1" />
        <GradientStop Color="#FFFFFFFF" Offset="0" />
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="BorderBrushKey.ShinyRed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FF000000" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundBrushKey.ShinyRed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD1D4D6" Offset="0" />
        <GradientStop Color="#FFFFFFFF" Offset="0.1" />
        <GradientStop Color="#FFFFFFFF" Offset="1" />
    </LinearGradientBrush>

    <Thickness x:Key="BorderThickness.ShinyRed">2</Thickness>
    <Thickness x:Key="BorderThickness.Default">1</Thickness>

    <SolidColorBrush x:Key="TextBrushKey.ShinyRed" Color="#FF000000"/>

    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid x:Name="Grid">
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="0" Opacity="0"/>
            </Border>

            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Name="content"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>

            <Border x:Name="FocusVisualElement" IsHitTestVisible="false" BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}" BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Background" Value="{StaticResource DefaultedBorderBrushKey.ShinyRed}"/>
                        </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrushKey.ShinyRed}" TargetName="Background"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrushKey.ShinyRed}" TargetName="Background"/>
                <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource DisabledTextBrushKey.ShinyRed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="RepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"  Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrushKey.ShinyRed}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}"/>
    </Style>


    <!-- Style for UpDown -->
    <Style x:Key="ShinyRedUpDownStyle"  TargetType="{x:Type local:UpDown}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrushKey.ShinyRed}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FocusedBackground" Value="{StaticResource BackgroundBrushKey.ShinyRed}"/>
        <Setter Property="FocusedBorderBrush" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
        <Setter Property="FocusedForeground" Value="{StaticResource TextBrushKey.ShinyRed}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UpDown}">
                    <Border x:Name="Border" SnapsToDevicePixels="True"  CornerRadius="{TemplateBinding CornerRadius}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid ClipToBounds="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8*"></ColumnDefinition>
                                <ColumnDefinition Width="2*">
                                </ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>

<local:DoubleTextBox x:Name="SecondBlock" Grid.Column="0" Grid.RowSpan="2"  Cursor="None" HorizontalContentAlignment="Center" BorderBrush="Transparent"
                                                 VerticalContentAlignment="Center"  Visibility="Collapsed"  BorderThickness="0" 
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 NumberFormat="{TemplateBinding NumberFormatInfo}"
                                                 HorizontalAlignment="Stretch" Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding UpDownBackground}"  PositiveForeground="{TemplateBinding UpDownForeground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 />

                            <local:DoubleTextBox x:Name="textBox" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed"
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 BorderThickness="0" 
                                                 BorderBrush="Transparent" NumberFormat="{TemplateBinding NumberFormatInfo}" Grid.Column="0" Grid.RowSpan="2" 
                                                 Style="{StaticResource NumericUpDownDoubleTextBoxStyle}"  Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding UpDownBackground}"  PositiveForeground="{TemplateBinding UpDownForeground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 />

                            <local:DoubleTextBox x:Name="DoubleTextBox" Grid.Column="0" Grid.RowSpan="2" TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 Background="{TemplateBinding UpDownBackground}"  PositiveForeground="{TemplateBinding UpDownForeground}"
                                                 CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="0" BorderBrush="Transparent" VerticalAlignment="Stretch" 
                                                 HorizontalContentAlignment="Center"  HorizontalAlignment="Stretch"  VerticalContentAlignment="Center" 
                                                 MinValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValue, Mode=TwoWay}"
                                                 MaxValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValue, Mode=TwoWay}" 
                                                 NumberFormat="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberFormatInfo, Mode=TwoWay}"                                                  
                                                 UseNullOption="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UseNullOption, Mode=TwoWay}"
                                                 NullValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NullValue, Mode=TwoWay}"
                                                 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
                                                 Culture="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Culture, Mode=TwoWay}"
                                                 ScrollInterval="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Step, Mode=TwoWay}"
                                                 Step="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Step, Mode=TwoWay}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 MaxValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValidation, Mode=TwoWay}"
                                                 MinValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValidation, Mode=TwoWay}"
                                                 MaxValueOnExceedMaxDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValueOnExceedMaxDigit, Mode=TwoWay}"
                                                 MinValueOnExceedMinDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValueOnExceedMinDigit, Mode=TwoWay}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"                                               
                                                 Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" />

                           <TextBox x:Name="text" Grid.Column="0" Grid.RowSpan="2" Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}" BorderThickness="0" BorderBrush="Transparent" 
                                     Foreground="{TemplateBinding UpDownForeground}" 
                                     Background="{TemplateBinding UpDownBackground}" 
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Converter={StaticResource NullToVisibilityConverter},Mode=TwoWay}" 
                                     Text="{TemplateBinding NullValueText}" HorizontalContentAlignment="Left"
                                     VerticalContentAlignment="Center"/>
                            
                            <RepeatButton x:Name="upbutton" IsTabStop="False" Command="local:UpDown.m_upValue" Grid.Row="0" Grid.Column="1"  Style="{StaticResource RepeatButtonStyle}">
                                <Path Data="M 1,5 L 4.5,1 L 8,5" Fill="White" HorizontalAlignment="Stretch" Margin="3,2,3,2" Stretch="Uniform" VerticalAlignment="Stretch" Width="8" Height="5"/>
                            </RepeatButton>
                            <RepeatButton x:Name="downbutton" IsTabStop="False" Command="local:UpDown.m_downValue" Grid.Row="2" Grid.Column="1" Style="{StaticResource RepeatButtonStyle}">
                                <Path Data="M 1,0 L 4.5,5 L 8,0" Fill="White" HorizontalAlignment="Stretch" Height="5" Margin="3,2,3,2" Stretch="Uniform" VerticalAlignment="Stretch" Width="8"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="ApplyZeroColor" Value="False"/>
                            <Setter Property="EnableNegativeColors" Value="False"/>
                            <Setter Property="EnableFocusedColors" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="ApplyZeroColor" Value="True"/>
                            <Setter Property="EnableNegativeColors" Value="True"/>
                            <Setter Property="EnableFocusedColors" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource ShinyRedUpDownStyle}" TargetType="{x:Type local:UpDown}"/>
</ResourceDictionary>