<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:conv="clr-namespace:Syncfusion.Windows.Tools"
	xmlns:syncfusion="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">

    <conv:ValueToStringConverter x:Key="FloatToString"></conv:ValueToStringConverter>
    <conv:ColorToStringConverter x:Key="ColorToString"></conv:ColorToStringConverter>
    <conv:ColorToValueConverter x:Key="ColorToValue"></conv:ColorToValueConverter>
    <conv:ColorToBrushConverter x:Key="ColorToBrush"></conv:ColorToBrushConverter>
    <conv:ColorToWordKnownColorsConverter x:Key="ColorToWordKnownColors"></conv:ColorToWordKnownColorsConverter>
    <conv:RGBToStringConverter x:Key="RGBToString"></conv:RGBToStringConverter>
    <conv:RangedFloatToStringConverter x:Key="RangedFloatToString"></conv:RangedFloatToStringConverter>

    <local:ColorItemList x:Key="ColorList"/>

    <PathGeometry x:Key="geometry" Figures="M0,0L3.5,4 7,0z"/>

    <!--Brushes-->   
    <LinearGradientBrush x:Key="VS2010.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFF0F0F0" Offset="0"/>
            <GradientStop Color="#FFF0F0F0" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MouseOverPathFill" Color="#FF2C3D5A"/>
    <SolidColorBrush x:Key="VS2010.BorderBrush" Color="#FF2C3D5A"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="Black" />
    <SolidColorBrush x:Key="BlackBrush" Color="Black" />

    <SolidColorBrush x:Key="ToggleButton.VS2010.BorderBrush.IsMouseOver" Color="#FFE5C365"/>

    <LinearGradientBrush x:Key="Office2007Blue.SliderPolygonFillColor" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FFFFDE" Offset="1"/>
        <GradientStop Color="#FFD442" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButton.VS2010.Background.IsMouseOver" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FFFFF9E6" Offset="0.053"/>
        <GradientStop Color="#FFFFF3CE" Offset="0.421"/>
        <GradientStop Color="#FFFFECB5" Offset="0.474"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBackgroundBrushKey.VS2010" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCE4A0" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.021"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PressedBorderBrushKey.VS2010" Color="#FFD2B564"/>
    <SolidColorBrush x:Key="PathOverMouseBrush" Color="#FF2C3D5A"/>

    <!--<LinearGradientBrush x:Key="Office2007Blue.ColorEditContainerBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#DCE7F4" Offset="1"/>
        <GradientStop Color="#BFDBFF" Offset="0.8"/>
        <GradientStop Color="#D1E5FF" Offset="0.7"/>
        <GradientStop Color="#EDF2F8" Offset="0"/>
    </LinearGradientBrush>-->

    <LinearGradientBrush x:Key="VS2010.ColorPickerBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF1F3F8" Offset="0"/>
        <GradientStop Color="#FFF1F3F8" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBrushKey" Color="#FF231F20"/>

    <LinearGradientBrush x:Key="GradientBrushKey" StartPoint="0.000856509,0.499997" EndPoint="0.999144,0.499997">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF231F20" Offset="0"/>
            <GradientStop Color="#FFEBF0F9" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LinearBrushKey" StartPoint="0.000974544,0.500002" EndPoint="0.999026,0.500002">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0.00543478"/>
            <GradientStop Color="#FFF9FCFF" Offset="0.315217"/>
            <GradientStop Color="#FF55ADE1" Offset="0.847826"/>
            <GradientStop Color="#FF55ADE1" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="RadialBrushKey" RadiusX="0.440736" RadiusY="0.589752" Center="0.5,0.499998" GradientOrigin="0.5,0.499998">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0.00543478"/>
            <GradientStop Color="#FFFFFFFF" Offset="0.309783"/>
            <GradientStop Color="#FF55ADE1" Offset="1"/>
        </RadialGradientBrush.GradientStops>
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup/>
        </RadialGradientBrush.RelativeTransform>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="Default.SliderPolygonFillColor" Color="#FFCB62"/>

    <SolidColorBrush x:Key="Office2007Blue.SliderPolygonStrokeColor">#A9B1B8</SolidColorBrush>

    <DrawingBrush x:Key="ReverseBrushKey">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FF56ACE0" Geometry="F1 M 525.582,372.181C 525.582,382.142 517.492,390.23 507.544,390.23L 294.037,390.23C 284.076,390.23 276.007,382.142 276.007,372.181L 276.007,221.829C 276.007,211.854 284.076,203.784 294.037,203.784L 507.544,203.784C 517.492,203.784 525.582,211.854 525.582,221.829L 525.582,372.181 Z ">
                        <GeometryDrawing.Pen>
                            <Pen Thickness="0.666667" MiterLimit="2.75" Brush="#FF231F20"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF231F20" Geometry="F1 M 346.828,184.195L 346.828,184.195C 359.001,183.472 371.46,184.042 383.884,185.9L 385.615,186.164L 393.101,187.347C 393.101,187.347 397.428,154.632 398.359,147.599C 404.453,154.59 468.36,228.006 470.573,230.552C 467.539,232.165 420.592,256.839 420.592,256.839C 420.592,256.839 387.632,274.188 380.941,277.715C 381.811,271.218 386.714,234.67 386.714,234.67L 380.614,232.966C 374.604,231.282 368.503,229.975 362.431,229.063C 352.72,227.616 342.911,227.178 333.256,227.749C 286.281,230.496 259.208,258.307 249.837,295.648C 248.794,292.671 247.486,289.665 246.826,286.73C 234.068,231.637 270.039,188.718 346.828,184.195 Z "/>
                    <GeometryDrawing Geometry="F1 M 342.668,181.288L 342.668,181.288C 354.563,180.592 366.701,181.135 378.791,182.951L 380.503,183.215L 391.48,184.94C 391.48,184.94 394.889,159.084 396.175,149.578C 405.246,160.002 458.76,221.453 461.056,224.11C 456.395,226.552 413.656,249.069 413.656,249.069C 413.656,249.069 391.744,260.561 380.503,266.473C 381.721,257.396 385.74,227.408 385.74,227.408L 376.781,224.917C 370.583,223.164 364.253,221.808 358.014,220.876C 347.976,219.38 337.847,218.921 327.893,219.52C 286.934,221.919 258.06,242.864 245.17,278.55C 233.783,223.575 271.68,185.469 342.668,181.288 Z ">
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0.995353,0.66323" EndPoint="1.98894,0.66323">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <SkewTransform CenterX="0.995353" CenterY="0.66323" AngleX="9.78536" AngleY="0"/>
                                        <RotateTransform CenterX="0.995353" CenterY="0.66323" Angle="194.119"/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFFAC43E" Offset="0"/>
                                    <GradientStop Color="#FFE27526" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF231F20" Geometry="F1 M 473.222,418.814L 473.222,418.814C 461.925,420.714 450.246,421.43 438.462,420.999L 436.828,420.936L 429.718,420.582C 429.718,420.582 429.065,451.139 428.94,457.734C 422.518,451.891 355.321,390.704 352.998,388.59C 355.662,386.802 396.885,359.318 396.885,359.318C 396.885,359.318 425.823,340.05 431.687,336.119C 431.562,342.192 430.776,376.332 430.776,376.332L 436.647,377.306C 442.414,378.232 448.243,378.823 453.996,379.066C 463.212,379.428 472.402,378.816 481.354,377.335C 524.872,370.051 547.243,341.712 552.113,306.382C 553.399,309.018 554.923,311.654 555.841,314.298C 573.468,363.756 544.35,406.919 473.222,418.814 Z "/>
                    <GeometryDrawing Geometry="F1 M 477.368,421.082L 477.368,421.082C 466.363,422.918 454.983,423.65 443.526,423.184L 441.877,423.121L 431.477,422.634C 431.477,422.634 430.984,446.8 430.776,455.689C 421.217,447.001 364.97,395.79 362.549,393.585C 366.632,390.85 404.175,365.815 404.175,365.815C 404.175,365.815 423.416,353.002 433.273,346.428C 433.085,354.922 432.424,382.927 432.424,382.927L 441.071,384.332C 447.005,385.32 453.063,385.926 458.997,386.142C 468.485,386.53 477.98,385.926 487.225,384.374C 525.151,378.038 549.915,355.826 558.248,321.643C 574.561,371.15 543.16,410.077 477.368,421.082 Z ">
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0.00581518,0.469229" EndPoint="1.00287,0.469229">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <SkewTransform CenterX="0.00581518" CenterY="0.469229" AngleX="2.62024" AngleY="0"/>
                                        <RotateTransform CenterX="0.00581518" CenterY="0.469229" Angle="3.27035"/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFFAC43E" Offset="0"/>
                                    <GradientStop Color="#FFE27526" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>


    <DrawingBrush x:Key="BrushForTransparency" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!--ToggleDropDownButtonStyle-->
    <Style x:Key="ToggleDropDownButtonStyle" TargetType="ToggleButton">
        <Setter Property="FrameworkElement.MinWidth" Value="0"/>
        <Setter Property="FrameworkElement.MinHeight" Value="0"/>
        <Setter Property="FrameworkElement.Width" Value="Auto"/>
        <Setter Property="FrameworkElement.Height" Value="Auto"/>
        <Setter Property="Panel.Background" Value="{StaticResource VS2010.ColorPickerBackground}"/>
        <Setter Property="UIElement.Focusable" Value="False"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource VS2010.BorderBrush}"/>
        <Setter Property="Border.BorderThickness" Value="0"/>
        <Setter Property="Path.Fill" Value="{StaticResource PathOverMouseBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border  Background="Transparent" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0"  RecognizesAccessKey="True"
                    Content="{TemplateBinding ContentControl.Content}"
                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                    Margin="{TemplateBinding Control.Padding}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                            <Border Grid.Column="1" Width="20"
                    Background="{TemplateBinding Panel.Background}"
                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}">
                                <Viewbox  Width="7" Height="9">
                                    <Path Data="{StaticResource geometry}" Fill="{TemplateBinding Path.Fill}"/>
                                </Viewbox>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Panel.Background" Value="{StaticResource ToggleButton.VS2010.Background.IsMouseOver}"/>
                <Setter Property="Border.BorderBrush" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"/>
                <Setter Property="Path.Fill" Value="{StaticResource PathOverMouseBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Panel.Background" Value="{StaticResource PressedBackgroundBrushKey.VS2010}"/>
                <Setter Property="Border.BorderBrush" Value="{StaticResource PressedBorderBrushKey.VS2010}"/>
                <Setter Property="Path.Fill" Value="{StaticResource PathOverMouseBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Office2007Blue.ColorEditStyle-->
    <!--<Style x:Key="Office2007Blue.ColorEditStyle" TargetType="{x:Type local:ColorEdit}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#9EBAE1" />
    </Style>-->

    <!--colorNameStyle-->
    <Style x:Key="colorNameStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ColorItemTemplate-->
    <DataTemplate x:Key="ColorItemTemplate">
        <StackPanel Orientation="Horizontal" Name="colorName" Style="{StaticResource colorNameStyle}">
            <Border Width="20" Height="12" BorderThickness="1" BorderBrush="Black"  Margin="1,1,3,1"
				Background="{Binding Path=Brush}">
            </Border>
            <TextBlock
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Text="{Binding Path=Name}"/>
        </StackPanel>
    </DataTemplate>

    <!--TextBlockStyle-->
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="3,2,0,0" />
    </Style>

    <!--ToolTip_CustomStyle-->
    <Style x:Key="ToolTip_CustomStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush>
                    <SolidColorBrush.Color>
                        <Color A="200"  R="255" G="255" B="255"/>
                    </SolidColorBrush.Color>
                </SolidColorBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Office2007Blue.SliderPolygonStyle-->
    <Style x:Key="Office2007Blue.SliderPolygonStyle" TargetType="{x:Type Polygon}">
        <Setter Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}" />
        <Setter Property="Stroke" Value="#A9B1B8" />
    </Style>

    <SolidColorBrush x:Key="ColorEditThumb1BorderBrushKey" Color="#FF333333"/>
    <SolidColorBrush x:Key="ColorEditThumb1FillBrushKey" Color="White"/>

    <!--ThumbStyle-->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Polygon Points="0,18 0,14 8,8 15,14 15,18" Name="polygon" Style="{StaticResource Office2007Blue.SliderPolygonStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ThumbStyle-->
    <Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <!--<Polygon Points="0,18 0,14 8,8 15,14 15,18" Name="polygon" Style="{StaticResource Blend.SliderPolygonStyle}" />-->
                    <Grid Margin="0">
                        <Path x:Name="Background" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Uniform" Height="10" Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" VerticalAlignment="Bottom" 
                              Data="M419,269 L414,282 L424,282 z">
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbVerticalStyle1" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <!--<Polygon Name="polygon" Points="0,0 0,10 10,10 15,5 10,0" Stroke="{StaticResource Aero.SliderPolygonStrokeColor}" Fill="{StaticResource Default.SliderPolygonFillColor}"/>-->
                    <Grid>
                        <Grid Margin="0">
                            <Path x:Name="Background" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Fill" Height="7" 
                              Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" VerticalAlignment="Bottom" 
                              Data="M20.500004,0.5 L20.500004,8.5 L13.591003,4.5 z M0.5,0.5 L8.2729988,4.5 L0.5,8.5 z">
                            </Path>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	     <Style x:Key="SliderButtonStyle"  TargetType="{x:Type RepeatButton}">
  <Setter Property="SnapsToDevicePixels" Value="true" />
  <Setter Property="OverridesDefaultStyle" Value="true" />
  <Setter Property="IsTabStop" Value="false" />
  <Setter Property="Focusable" Value="false" />
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type RepeatButton}">
        <Border Background="Transparent" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

    <!--Slider_CustomStyle-->
    <Style x:Key="Slider_CustomStyle" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="1"/>
        <Setter Property="IsMoveToPointEnabled" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid ClipToBounds="false">
                        <Border Margin="5,4,5,4" CornerRadius="3" Background="{StaticResource BrushForTransparency}"/>
                        <Border Margin="5,4,5,4"  CornerRadius="3" Background="{TemplateBinding Background}"
							BorderBrush="Black" BorderThickness="1"/>
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ThumbStyle}" />
                            </Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Slider_CustomStyleVertical1" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="IsMoveToPointEnabled" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid ClipToBounds="false">
                        <Border Margin="5,4,5,4"  CornerRadius="3" Background="{TemplateBinding Background}"
                        BorderBrush="Black" BorderThickness="1"/>
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ThumbVerticalStyle1}"/>
                            </Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TogglePopupButtonTemplate-->
    <ControlTemplate x:Key="TogglePopupButtonTemplate" TargetType="ToggleButton">
        <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>

                <ContentPresenter RecognizesAccessKey="True"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Margin="{TemplateBinding Control.Padding}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                <Path Name="Arrow" StrokeThickness="2"                                 
                                  Stroke="#FFCED4DD"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger  Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToggleButton.VS2010.Background.IsMouseOver}"/>
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"/>
                <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource MouseOverPathFill}"/>
            </Trigger>           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ThumbVerticalStyle-->
    <Style x:Key="ThumbVerticalStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Polygon Name="polygon" Points="0,0 0,10 10,10 15,5 10,0" Stroke="{StaticResource Office2007Blue.SliderPolygonStrokeColor}" Fill="{StaticResource Office2007Blue.SliderPolygonFillColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Slider_CustomStyleVertical-->
    <Style x:Key="Slider_CustomStyleVertical" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="IsMoveToPointEnabled" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid ClipToBounds="false">
                        <Border Margin="5,4,5,4"  CornerRadius="3" Background="{TemplateBinding Background}"
                        BorderBrush="Black" BorderThickness="1"/>
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ThumbVerticalStyle}"/>
                            </Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Slider_CustomStyle1" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="1"/>
        <Setter Property="IsMoveToPointEnabled" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid ClipToBounds="false">
                        <Border Height="6" CornerRadius="1" Background="{StaticResource BrushForTransparency}" />
                        <Border Height="6" CornerRadius="1" Background="{TemplateBinding Background}"
							BorderBrush="Black" BorderThickness="1"/>
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ThumbStyle1}" />
                            </Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource SliderButtonStyle}"/>
							</Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ThumbTemplate-->
    <ControlTemplate x:Key="ThumbTemplateKey">
        <Polygon x:Name="Poly" Fill="{StaticResource Office2007Blue.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"/>
            </Trigger>

            <Trigger Property="Canvas.ZIndex" Value="1">
                <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--RGBPopUpTemplate-->
    <ControlTemplate TargetType="{x:Type local:ColorEdit}" x:Key="RGBPopup">
        <Border MinWidth="250" Name="ColorEditBorder"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Name="Grid" Margin="2,2,2,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="24"/>

                    <ColumnDefinition Width="76"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					R:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Red</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					G:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Green</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					B:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Blue</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                <TextBlock Grid.Column="0" Name="AlphaText" Grid.Row="3" Style="{StaticResource TextBlockStyle}" Visibility="Visible" HorizontalAlignment="Left">
					A:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Alpha</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                <Slider Grid.Column="1" Grid.Row="0"  Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundR}" Value="{Binding Path=R, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Slider Grid.Column="1" Grid.Row="1" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundG}" Value="{Binding Path=G, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Slider Grid.Column="1" Grid.Row="2" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundB}" Value="{Binding Path=B, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Slider Grid.Column="1" Grid.Row="3" Name="AlphaSlider"   Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundA}" Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"/>
                <TextBlock  Grid.Column="2" Grid.Row="0" Text="{local:ScRGBColorExtension R}" Margin="1,0,1,0"/>
                <TextBlock Grid.Column="2" Grid.Row="1" Text="{local:ScRGBColorExtension G}" Margin="1,0,1,0"/>
                <TextBlock Grid.Column="2" Grid.Row="2" Text="{local:ScRGBColorExtension B}" Margin="1,0,1,0"/>
                <TextBlock Grid.Column="2" Grid.Row="3" Name="AlphaValue" Visibility="Visible" Text="{local:ScRGBColorExtension A}" Margin="1,0,1,0"/>
                <Rectangle Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Fill="{StaticResource BrushForTransparency}"/>
                <Rectangle Name="ColorRect"  Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>
                <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,1,5,1">
                    <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorWhite">
                        <Button.Template>
                            <ControlTemplate>
                                <Border BorderThickness="1" BorderBrush="Black" CornerRadius="3" Background="White"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorBlack">
                        <Button.Template>
                            <ControlTemplate>
                                <Border CornerRadius="3" Background="Black"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <!--Background="{Binding Path=Color, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrush}}"-->
                    <!--Visibility="{Binding Path=IsMouseCaptured, ElementName=EyeDropBorder, Converter={shared:Converter shared:BooleanToVisibilityConverterEx}, ConverterParameter=inverse}"-->
                    <local:BorderEyeDrop CornerRadius="3"
					                     BorderThickness="1" 
                               BorderBrush="Gray" 
                               Width="20" 
					                     x:Name="EyeDropBorder">
                        <Image Width="15" Height="15" Name="PART_Image"
							     VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropGray.png"/>
                    </local:BorderEyeDrop>

                </StackPanel>
                <TextBox Grid.Column="3" Name="PART_ColorStringEditor" Grid.Row="3" Height="17" Margin="5,0,5,0" TextBlock.FontSize="10" Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" />
                <local:ColorBar Grid.Row="4" Grid.ColumnSpan="3" x:Name="PickerColorBar" 
                       
                        Height="20" HorizontalAlignment="Stretch"/>

                <StackPanel Grid.Column="4" Grid.Row="4" HorizontalAlignment="Center" Name="EnableSwitch"  Height="20" Orientation="Horizontal">
                    <Button Width="30" Margin="0,2,3,1" Name="Solid">
                        <Button.Template>
                            <ControlTemplate>
                                <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Width="30" Margin="0,2,2,1" Name="Gradient">
                        <Button.Template>
                            <ControlTemplate>
                                <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                <Border Grid.Row="5" Margin="-2,4,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" Grid.ColumnSpan="4" >
                    <Grid>
                        <Grid Name="GridGradient" Margin="0,2,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>

                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                <Canvas Height="25" x:Name="GradientBar" >
                                    <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                <GradientStop Color="#FF000000" Offset="0"/>
                                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Canvas>
                            </Grid>

                            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>
                                <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>
                                <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>

                            </StackPanel>
                            <Grid Grid.Row="1" Visibility="Visible" Grid.ColumnSpan="2" Name="GridPopup">
                                <!--Background="{shared:SkinObject BrushBackground}"-->
                                <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">
                                </ToggleButton>
                                <Popup Name="GradPopup" PopupAnimation="Slide" MinWidth="249" AllowsTransparency="True" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName=PopButton, Path=IsChecked}" >

                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3.5*"/>
                                                    <ColumnDefinition Width="6.5*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="1" Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="75"/>
                                                        <ColumnDefinition Width="75"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                    <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                </Grid>


                                                <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx" ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty" ></syncfusion:UpDown>
                                                </StackPanel>
                                                <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></syncfusion:UpDown>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="1" Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="75"/>
                                                        <ColumnDefinition Width="75"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                    <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                </Grid>

                                                <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></syncfusion:UpDown>
                                                </StackPanel>
                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></syncfusion:UpDown>
                                                </StackPanel>
                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">
                                                    <syncfusion:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></syncfusion:UpDown>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid >
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="EyeDropBorder" Property="IsMouseCaptured" Value="True">
                <Setter TargetName="EyeDropBorder" Property="Color" Value="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                <Setter TargetName="PART_Image" Property="Source" Value="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropColor.png"/>
            </Trigger>
            <Trigger Property="IsAlphaVisible" Value="False">
                <Setter TargetName="AlphaText" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="AlphaSlider" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
            <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="PickerColorBar" Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"/>
                <Setter Property="Grid.ColumnSpan" TargetName="PickerColorBar" Value="4"/>
            </Trigger>
            <Trigger Property="BrushMode" Value="Solid">
                <Setter TargetName="GridBorder" Property="Visibility" Value="Collapsed"></Setter>
                <Setter Property="Margin" TargetName="Grid" Value="2"/>
            </Trigger>
            <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
            </Trigger>
            <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
            </Trigger>
            <Trigger Property="IsGradientPropertyEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                    <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--HSVPopUpTemplate-->
    <ControlTemplate TargetType="{x:Type local:ColorEdit}" x:Key="HSVPopup">
        <Border Background="{TemplateBinding Background}" Name="ColorEditBorder"
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid ClipToBounds="True" 
            Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}">
                </Border>
                <Canvas Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" ClipToBounds="True">
                    <Ellipse
            Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                    </Ellipse>
                    <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
            HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                            <Border.Background>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <Color A="200"  R="255" G="255" B="255"/>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </Border.Background>
                            <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                            </TextBox>
                        </Border>
                    </Popup>
                </Canvas>
                <Slider Grid.Column="1"
                Grid.RowSpan="2"
                Margin="5,0,0,0"
                Orientation="Vertical"
                Grid.Row="0"
                Background="{local:HSVBackgroundBrush VerticalSlider}"
                Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource Slider_CustomStyleVertical}"
                Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                <StackPanel Grid.Column="2" Grid.Row="1" Margin="1,2,0,0" Orientation="Horizontal">
                    <TextBox  Name="PART_ColorStringEditor"                
                 Height="20" 
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                    </TextBox>
                    <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">

                        <Button Width="20" Margin="2,2,3,1" Name="Solid">
                            <Button.Template>
                                <ControlTemplate>
                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                            <Button.Template>
                                <ControlTemplate>
                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Column="2" Grid.Row="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="29"/>
                        <ColumnDefinition Width="44"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="29"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="21"/>
                        <!--<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>-->
                    </Grid.RowDefinitions>
                    <RadioButton Grid.Column="0" Grid.Row="1"  Foreground="{TemplateBinding Foreground}" Content="H" Name="ButtomH" >
                        <RadioButton.ToolTip>
                            <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                <TextBlock>Hue.</TextBlock>
                            </ToolTip>
                        </RadioButton.ToolTip>
                    </RadioButton>
                    <RadioButton Grid.Column="0" Grid.Row="2" Content="S" Foreground="{TemplateBinding Foreground}"  Name="ButtomS">
                        <RadioButton.ToolTip>
                            <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                <TextBlock>Saturation.</TextBlock>
                            </ToolTip>
                        </RadioButton.ToolTip>
                    </RadioButton>
                    <RadioButton Grid.Column="0" Grid.Row="3" Content="V" Foreground="{TemplateBinding Foreground}"  Name="ButtomV">
                        <RadioButton.ToolTip>
                            <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                <TextBlock>Value/Brightness.</TextBlock>
                            </ToolTip>
                        </RadioButton.ToolTip>
                    </RadioButton>
                    <TextBox Grid.Column="1" Grid.Row="1" Margin="1,1,1,1" Name="Hval" Text="{Binding H, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Column="1" Grid.Row="2" Margin="1,1,1,1" Name="Sval" Text="{Binding S, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Column="1" Grid.Row="3" Margin="1,1,1,1" Name="Vval"  Text="{Binding V, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Grid.Column="2" Name="AlphaLabel" Grid.Row="0" VerticalAlignment="Bottom" Height="21" HorizontalAlignment="Center">
					  A:
					  <TextBlock.ToolTip>
					    <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
						  <TextBlock>Alpha.</TextBlock>
					    </ToolTip>
					  </TextBlock.ToolTip>
				    </TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center">
						R:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Red.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Center">
						G:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Green.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Center">
						B:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Blue.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                    <TextBox Grid.Column="3" Grid.Row="0" Name="AlphaVal"  Text="{Binding A, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom" Height="21" />
                    <TextBox Grid.Column="3" Grid.Row="1" Name="Rval" Text="{Binding R, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Grid.Column="3" Grid.Row="2" Name="Gval" Text="{Binding G, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Grid.Column="3" Grid.Row="3" Name="Bval" Text="{Binding B, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                    <Rectangle Grid.Column="0" Grid.Row="0"  Grid.ColumnSpan="2" Margin="0,0,0,3"  Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>

                </Grid>
                <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                    <Grid>
                        <Grid Name="GridGradient" Margin="0,2,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                <Canvas Height="25" x:Name="GradientBar" >
                                    <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                <GradientStop Color="#FF000000" Offset="0"/>
                                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Canvas>

                            </Grid>

                            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>
                                <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>
                                <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                    <Button.Content>
                                        <!--<ControlTemplate>-->
                                        <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                        <!--</ControlTemplate>-->
                                    </Button.Content>
                                </Button>

                            </StackPanel>
                            <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">

                                <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{StaticResource VS2010.Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" ClickMode="Press" Height="14" HorizontalAlignment="Stretch">

                                </ToggleButton>

                                <Popup Name="GradPopup" PopupAnimation="Slide" AllowsTransparency="True" MinWidth="249" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName= PopButton, Path=IsChecked}" >
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3.5*"/>
                                                    <ColumnDefinition Width="6.5*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="1" Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="75"/>
                                                        <ColumnDefinition Width="75"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                    <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                </Grid>


                                                <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></syncfusion:UpDown>
                                                </StackPanel>
                                                <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></syncfusion:UpDown>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="1" Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="75"/>
                                                        <ColumnDefinition Width="75"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                    <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                </Grid>

                                                <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></syncfusion:UpDown>
                                                </StackPanel>
                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></syncfusion:UpDown>
                                                </StackPanel>
                                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">

                                                    <syncfusion:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></syncfusion:UpDown>
                                                    <syncfusion:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></syncfusion:UpDown>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid >
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsAlphaVisible" Value="False">
                <Setter TargetName="AlphaLabel" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="AlphaVal" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
            <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
            </Trigger>
            <Trigger Property="BrushMode" Value="Solid">
                <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
            <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
            </Trigger>
            <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
            </Trigger>
            <Trigger Property="IsGradientPropertyEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                    <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="ColorEditBackgroundBrushKey" Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="ColorEditBorderBrushKey" Color="#FF858585"/>

    <LinearGradientBrush x:Key="BrushEditGradientRectFillKey" EndPoint="1,1" StartPoint="0,0">

        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform Y="0"/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FF000000" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <!--ColorEditStyle-->
    <Style x:Key="VS2010ColorEditStyle" TargetType="{x:Type local:ColorEdit}">
        <Setter Property="Background"  Value="{StaticResource VS2010.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource VS2010.BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="ClassicRGB"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Popup"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border MinWidth="250" Name="ColorEditBorder"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" >
                                <Grid Name="Grid" Margin="2,2,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="18"/>
                                        <ColumnDefinition Width="20*"/>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="76"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					R:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Red</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					G:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Green</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					B:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Blue</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Name="AlphaText" Grid.Row="3" Style="{StaticResource TextBlockStyle}" Visibility="Visible" HorizontalAlignment="Left">
					A:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Alpha</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="0"  Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundR}" Value="{Binding Path=R, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="1" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundG}" Value="{Binding Path=G, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="2" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundB}" Value="{Binding Path=B, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="3" Name="AlphaSlider"   Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundA}" Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBlock  Grid.Column="2" Grid.Row="0" Text="{local:ScRGBColorExtension R}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="{local:ScRGBColorExtension G}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="2" Text="{local:ScRGBColorExtension B}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="3" Name="AlphaValue" Visibility="Visible" Text="{local:ScRGBColorExtension A}" Margin="1,0,1,0"/>
                                    <Rectangle Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Fill="{StaticResource BrushForTransparency}"/>
                                    <Rectangle Name="ColorRect"  Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>
                                    <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,1,5,1">
                                        <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorWhite">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="Black" CornerRadius="3" Background="White"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorBlack">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border CornerRadius="3" Background="Black"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <!--Background="{Binding Path=Color, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrush}}"-->
                                        <!--Visibility="{Binding Path=IsMouseCaptured, ElementName=EyeDropBorder, Converter={shared:Converter shared:BooleanToVisibilityConverterEx}, ConverterParameter=inverse}"-->
                                        <local:BorderEyeDrop CornerRadius="3"
					                     BorderThickness="1" 
                               BorderBrush="Gray" 
                               Width="20" 
					                     Name="EyeDropBorder">
                                            <Image Width="15" Height="15" Name="PART_Image"
							     VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropGray.png"/>
                                        </local:BorderEyeDrop>

                                    </StackPanel>
                                    <TextBox Grid.Column="3" Name="PART_ColorStringEditor" Grid.Row="3" Height="17" Margin="5,0,5,0" TextBlock.FontSize="10" Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:ColorBar Grid.Row="4" Grid.ColumnSpan="3" x:Name="PickerColorBar" 
                       
                        Height="20" HorizontalAlignment="Stretch"/>

                                    <StackPanel Grid.Column="4" Grid.Row="4" HorizontalAlignment="Center" Name="EnableSwitch"  Height="20" Orientation="Horizontal">
                                        <Button Width="30" Margin="0,2,3,1" Name="Solid">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Width="30" Margin="0,2,2,1" Name="Gradient">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>
                                    <Border Grid.Row="5" Margin="-2,4,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" Grid.ColumnSpan="4" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>

                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                </StackPanel>

                                                <Grid Grid.Row="1" Visibility="Visible" Grid.ColumnSpan="2" Name="GridPopup">
                                                    <!--Background="{shared:SkinObject BrushBackground}"-->
                                                    <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">

                                                    </ToggleButton>
                                                    <Popup Name="GradPopup" PopupAnimation="Slide" MinWidth="249" AllowsTransparency="True" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName=PopButton, Path=IsChecked}" >

                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty" ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="EyeDropBorder" Property="IsMouseCaptured" Value="True">
                                    <Setter TargetName="EyeDropBorder" Property="Color" Value="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                    <Setter TargetName="PART_Image" Property="Source" Value="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropColor.png"/>
                                </Trigger>
                                <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaText" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaSlider" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PickerColorBar" Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"/>
                                    <Setter Property="Grid.ColumnSpan" TargetName="PickerColorBar" Value="4"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridBorder" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter Property="Margin" TargetName="Grid" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                                        <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.Aero.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="ClassicRGB"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Extended"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border MinWidth="250" Name="ColorEditBorder"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid Name="Grid" Margin="2,2,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="18"/>
                                        <ColumnDefinition Width="20*"/>
                                        <ColumnDefinition Width="24"/>

                                        <ColumnDefinition Width="76"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					R:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Red</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					G:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Green</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left">
					B:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Blue</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <TextBlock Grid.Column="0" Name="AlphaText" Grid.Row="3" Style="{StaticResource TextBlockStyle}" Visibility="Visible" HorizontalAlignment="Left">
					A:
					<TextBlock.ToolTip>
						<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
							<TextBlock>Alpha</TextBlock>
						</ToolTip>
					</TextBlock.ToolTip>
				</TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="0"  Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundR}" Value="{Binding Path=R, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="1" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundG}" Value="{Binding Path=G, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="2" Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundB}" Value="{Binding Path=B, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Slider Grid.Column="1" Grid.Row="3" Name="AlphaSlider"   Style="{StaticResource Slider_CustomStyle}" Background="{TemplateBinding BackgroundA}" Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBlock  Grid.Column="2" Grid.Row="0" Text="{local:ScRGBColorExtension R}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="{local:ScRGBColorExtension G}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="2" Text="{local:ScRGBColorExtension B}" Margin="1,0,1,0"/>
                                    <TextBlock Grid.Column="2" Grid.Row="3" Name="AlphaValue" Visibility="Visible" Text="{local:ScRGBColorExtension A}" Margin="1,0,1,0"/>
                                    <Rectangle Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Fill="{StaticResource BrushForTransparency}"/>
                                    <Rectangle Name="ColorRect"  Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Margin="5,4,5,1" Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>
                                    <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,1,5,1">
                                        <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorWhite">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="Black" CornerRadius="3" Background="White"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Width="20" Margin="0,0,2,0" Command="local:ColorEdit.M_changeColorBlack">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border CornerRadius="3" Background="Black"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <!--Background="{Binding Path=Color, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrush}}"-->
                                        <!--Visibility="{Binding Path=IsMouseCaptured, ElementName=EyeDropBorder, Converter={shared:Converter shared:BooleanToVisibilityConverterEx}, ConverterParameter=inverse}"-->
                                        <local:BorderEyeDrop CornerRadius="3"
					                     BorderThickness="1" 
                               BorderBrush="Gray" 
                               Width="20" 
					                     Name="EyeDropBorder">
                                            <Image Width="15" Height="15" Name="PART_Image"
							     VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropGray.png"/>
                                        </local:BorderEyeDrop>

                                    </StackPanel>
                                    <TextBox Grid.Column="3" Name="PART_ColorStringEditor" Grid.Row="3" Height="17" Margin="5,0,5,0" TextBlock.FontSize="10" Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:ColorBar Grid.Row="4" Grid.ColumnSpan="3" Name="PickerColorBar" 
                       
                        Height="20" HorizontalAlignment="Stretch"/>

                                    <StackPanel Grid.Column="4" Grid.Row="4" HorizontalAlignment="Center" Name="EnableSwitch"  Height="20" Orientation="Horizontal">
                                        <Button Width="30" Margin="0,2,3,1" Name="Solid">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Width="30" Margin="0,2,2,1" Name="Gradient">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>
                                    <Border Grid.Row="5" Margin="-2,4,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" Grid.ColumnSpan="4" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                </StackPanel>

                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">
                                                    <StackPanel>
                                                        <!--Background="{shared:SkinObject BrushBackground}"-->
                                                        <!--<ToggleButton Visibility="Visible" Name="ButtonExt" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">

                                                        </ToggleButton>-->
                                                        <Border Name="GradPopup" Background="{TemplateBinding Background}" MinWidth="249" Grid.Row="2" Visibility="Visible" Width="{TemplateBinding Width}" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>

                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx" ></shared:UpDown>
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="EyeDropBorder" Property="IsMouseCaptured" Value="True">
                                    <Setter TargetName="EyeDropBorder" Property="Color" Value="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                    <Setter TargetName="PART_Image" Property="Source" Value="pack://application:,,,/Syncfusion.Shared.WPF;component/Controls/ColorPicker/Images/EyeDropColor.png"/>
                                </Trigger>
                                <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaText" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaSlider" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PickerColorBar" Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"/>
                                    <Setter Property="Grid.ColumnSpan" TargetName="PickerColorBar" Value="4"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridBorder" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter Property="Margin" TargetName="Grid" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="LinearGrid"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="LinearGrid"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="RadialGrid"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.Aero.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="ClassicHSV"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Popup"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" 
            Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}">
                                    </Border>
                                    <Canvas Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" ClipToBounds="True">
                                        <Ellipse
            Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                        </Ellipse>
                                        <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
            HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                <Border.Background>
                                                    <SolidColorBrush>
                                                        <SolidColorBrush.Color>
                                                            <Color A="200"  R="255" G="255" B="255"/>
                                                        </SolidColorBrush.Color>
                                                    </SolidColorBrush>
                                                </Border.Background>
                                                <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                </TextBox>
                                            </Border>
                                        </Popup>
                                    </Canvas>
                                    <Slider Grid.Column="1"
                Grid.RowSpan="2"
                Margin="5,0,0,0"
                Orientation="Vertical"
                Grid.Row="0"
                Background="{local:HSVBackgroundBrush VerticalSlider}"
                Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource Slider_CustomStyleVertical}"
                Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="1" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor"                
                 Height="20" 
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">

                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="16"/>
                                            <ColumnDefinition Width="29"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="21"/>
                                            <RowDefinition Height="21"/>
                                            <RowDefinition Height="21"/>
                                            <!--<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>-->
                                        </Grid.RowDefinitions>
                                        <RadioButton Grid.Column="0" Grid.Row="1"  Foreground="{TemplateBinding Foreground}" Content="H" Name="ButtomH">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Hue.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="2" Content="S" Foreground="{TemplateBinding Foreground}"  Name="ButtomS">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Saturation.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="3" Content="V" Foreground="{TemplateBinding Foreground}"  Name="ButtomV">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Value/Brightness.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <TextBox Grid.Column="1" Grid.Row="1" Margin="1,1,1,1" Name="Hval" Text="{Binding H, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="1" Grid.Row="2" Margin="1,1,1,1" Name="Sval" Text="{Binding S, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="1" Grid.Row="3" Margin="1,1,1,1" Name="Vval"  Text="{Binding V, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Grid.Column="2" Name="AlphaLabel" Grid.Row="0" VerticalAlignment="Bottom" Height="21" HorizontalAlignment="Center">
					  A:
					  <TextBlock.ToolTip>
					    <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
						  <TextBlock>Alpha.</TextBlock>
					    </ToolTip>
					  </TextBlock.ToolTip>
				    </TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center">
						R:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Red.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Center">
						G:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Green.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Center">
						B:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Blue.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBox Grid.Column="3" Grid.Row="0" Name="AlphaVal"  Text="{Binding A, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom" Height="21" />
                                        <TextBox Grid.Column="3" Grid.Row="1" Name="Rval" Text="{Binding R, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Grid.Column="3" Grid.Row="2" Name="Gval" Text="{Binding G, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Grid.Column="3" Grid.Row="3" Name="Bval" Text="{Binding B, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <Rectangle Grid.Column="0" Grid.Row="0"  Grid.ColumnSpan="2" Margin="0,0,0,3"  Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">

                                                    <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{StaticResource VS2010.Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" ClickMode="Press" Height="14" HorizontalAlignment="Stretch">

                                                    </ToggleButton>

                                                    <Popup Name="GradPopup" PopupAnimation="Slide" AllowsTransparency="True" MinWidth="249" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName= PopButton, Path=IsChecked}" >
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">

                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaLabel" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaVal" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                                        <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.Aero.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="ClassicHSV"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Extended"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" 
            Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}">
                                    </Border>
                                    <Canvas Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" ClipToBounds="True">
                                        <Ellipse
            Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                        </Ellipse>
                                        <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
            HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                <Border.Background>
                                                    <SolidColorBrush>
                                                        <SolidColorBrush.Color>
                                                            <Color A="200"  R="255" G="255" B="255"/>
                                                        </SolidColorBrush.Color>
                                                    </SolidColorBrush>
                                                </Border.Background>
                                                <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                </TextBox>
                                            </Border>
                                        </Popup>
                                    </Canvas>
                                    <Slider Grid.Column="1" Grid.RowSpan="2" Margin="5,0,0,0" Orientation="Vertical" Grid.Row="0" Background="{local:HSVBackgroundBrush VerticalSlider}"
                                             Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource Slider_CustomStyleVertical}"
                                             Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="1" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor"                
                 Height="20" 
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">

                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="16"/>
                                            <ColumnDefinition Width="29"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="21"/>
                                            <RowDefinition Height="21"/>
                                            <RowDefinition Height="21"/>
                                            <!--<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>-->
                                        </Grid.RowDefinitions>
                                        <RadioButton Grid.Column="0" Grid.Row="1"  Foreground="{TemplateBinding Foreground}" Content="H" Name="ButtomH">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Hue.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="2" Content="S" Foreground="{TemplateBinding Foreground}"  Name="ButtomS">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Saturation.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="3" Content="V" Foreground="{TemplateBinding Foreground}"  Name="ButtomV">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Value/Brightness.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <TextBox Grid.Column="1" Grid.Row="1" Margin="1,1,1,1" Name="Hval"  Text="{Binding H, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="1" Grid.Row="2" Margin="1,1,1,1" Name="Sval" Text="{Binding S, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="1" Grid.Row="3" Margin="1,1,1,1" Name="Vval" Text="{Binding V, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Grid.Column="2" Name="AlphaLabel" Grid.Row="0" VerticalAlignment="Bottom" Height="21" HorizontalAlignment="Center">
					  A:
					  <TextBlock.ToolTip>
					    <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
						  <TextBlock>Alpha.</TextBlock>
					    </ToolTip>
					  </TextBlock.ToolTip>
				    </TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center">
						R:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Red.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Center">
						G:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Green.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Center">
						B:
						<TextBlock.ToolTip>
							<ToolTip Style="{StaticResource ToolTip_CustomStyle}">
								<TextBlock>Blue.</TextBlock>
							</ToolTip>
						</TextBlock.ToolTip>
					</TextBlock>
                                        <TextBox Grid.Column="3" Grid.Row="0" Name="AlphaVal"  Text="{Binding A, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom" Height="21" />
                                        <TextBox Grid.Column="3" Grid.Row="1" Name="Rval" Text="{Binding R, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Grid.Column="3" Grid.Row="2" Name="Gval"  Text="{Binding G, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBox Grid.Column="3" Grid.Row="3" Name="Bval" Text="{Binding B, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RangedFloatToString},UpdateSourceTrigger=PropertyChanged}" />
                                        <Rectangle Grid.Column="0" Grid.Row="0"  Grid.ColumnSpan="2" Margin="0,0,0,3"  Stroke ="Black" StrokeThickness ="1" Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}"/>

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0,7,0,2" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                    </Canvas>

                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Visibility="Visible" Grid.ColumnSpan="2" Name="GridPopup">
                                                    <StackPanel>
                                                        <!--<ToggleButton Name="ButtonExt" Visibility="Visible" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">

                                                        </ToggleButton>-->

                                                        <Border Name="GradPopup" Background="{TemplateBinding Background}" MinWidth="249" Grid.Row="2" Visibility="Visible" Width="{TemplateBinding Width}" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">

                                                            <!--<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">-->
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">

                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaLabel" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaVal" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="LinearGrid"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="LinearGrid"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="RadialGrid"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.Aero.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="HSV"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Popup"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" CornerRadius="8,8,8,8" Margin="5"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" Margin="4" Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0">
                                            <Border CornerRadius="4" BorderBrush="Black" >
                                            </Border>
                                            <Rectangle x:Name="SelectedColor" Margin="3"  Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Grid Grid.Row="0" Grid.Column="1">
                                            <Border CornerRadius="4" BorderBrush="Black">
                                            </Border>
                                            <Rectangle x:Name="CurrentColor" Margin="3" Fill="White" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}" CornerRadius="4">
                                        </Border>
                                        <Canvas Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ClipToBounds="True">
                                            <Ellipse Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                     Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                     Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                            </Ellipse>
                                            <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
                                                   HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                   VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                   IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                    <Border.Background>
                                                        <SolidColorBrush>
                                                            <SolidColorBrush.Color>
                                                                <Color A="200"  R="255" G="255" B="255"/>
                                                            </SolidColorBrush.Color>
                                                        </SolidColorBrush>
                                                    </Border.Background>
                                                    <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                                                             Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                    </TextBox>
                                                </Border>
                                            </Popup>
                                        </Canvas>
                                    </Grid>

                                    <Slider Grid.Column="1" Grid.RowSpan="3" Margin="5,0,0,0" Orientation="Vertical" Grid.Row="0" Background="{local:HSVBackgroundBrush VerticalSlider}"
                                            Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource Slider_CustomStyleVertical1}"
                                            Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="2" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor" Height="20" Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">
                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="45"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <RadioButton Grid.Column="0" Grid.Row="0"  Foreground="{TemplateBinding Foreground}" Content="H" Name="ButtomH">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Hue.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="1" Content="S" Foreground="{TemplateBinding Foreground}"  Name="ButtomS">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Saturation.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="2" Content="V" Foreground="{TemplateBinding Foreground}"  Name="ButtomV">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Value/Brightness.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <Slider Grid.Column="1" Grid.Row="0" x:Name="SliderH" Background="{TemplateBinding Background}" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=H, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Minimum="0" Maximum="360"/>
                                        <Slider Grid.Column="1" Grid.Row="1" x:Name="SliderS" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=S, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <Slider Grid.Column="1" Grid.Row="2" x:Name="SliderV" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=V, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <TextBox Grid.Column="2" Grid.Row="0" Margin="1,1,1,1" Name="Hval" Text="{Binding H, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Margin="1,1,1,1" Name="Sval" Text="{Binding S, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Margin="1,1,1,1" Name="Vval"  Text="{Binding V, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle HorizontalAlignment="Left" Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect" Fill="{StaticResource BrushEditGradientRectFillKey}" RadiusX="5" RadiusY="5">
                                                            <!--<Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>-->
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">

                                                    <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{StaticResource VS2010.Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" ClickMode="Press" Height="14" HorizontalAlignment="Stretch">

                                                    </ToggleButton>

                                                    <Popup Name="GradPopup" PopupAnimation="Slide" AllowsTransparency="True" MinWidth="249" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName= PopButton, Path=IsChecked}" >
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">

                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaLabel" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaVal" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>-->
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                                        <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--<Path Stroke="Black" Fill="Blue"  Data="M0,0L0,0L-6,0L-12,6L12,6L6,0L0,0"/>-->
                            <!--<Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>-->
                            <Grid Margin="0">
                                <Path x:Name="Poly" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Uniform" Height="7" Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" Margin="-1,0,-1,-7" VerticalAlignment="Bottom" 
                              Data="M419,269 L414,282 L424,282 z">
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.Aero.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>-->

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="HSV"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Extended"/>
                </MultiTrigger.Conditions>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" CornerRadius="8,8,8,8" Margin="5"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" Margin="4" Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0">
                                            <Border CornerRadius="4" BorderBrush="Black" >
                                            </Border>
                                            <Rectangle x:Name="SelectedColor" Margin="3"  Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Grid Grid.Row="0" Grid.Column="1">
                                            <Border CornerRadius="4" BorderBrush="Black">
                                            </Border>
                                            <Rectangle x:Name="CurrentColor" Margin="3" Fill="White" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}" CornerRadius="4">
                                        </Border>
                                        <Canvas Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ClipToBounds="True">
                                            <Ellipse Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                     Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                     Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                            </Ellipse>
                                            <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
                                                   HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                   VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
                                                   IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                    <Border.Background>
                                                        <SolidColorBrush>
                                                            <SolidColorBrush.Color>
                                                                <Color A="200"  R="255" G="255" B="255"/>
                                                            </SolidColorBrush.Color>
                                                        </SolidColorBrush>
                                                    </Border.Background>
                                                    <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                                                             Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                    </TextBox>
                                                </Border>
                                            </Popup>
                                        </Canvas>
                                    </Grid>

                                    <Slider Grid.Column="1" Grid.RowSpan="3" Margin="5,0,0,0" Orientation="Vertical" Grid.Row="0" Background="{local:HSVBackgroundBrush VerticalSlider}"
                                            Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource Slider_CustomStyleVertical1}"
                                            Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="2" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor" Height="20" Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">
                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="45"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <RadioButton Grid.Column="0" Grid.Row="0"  Foreground="{TemplateBinding Foreground}" Content="H" Name="ButtomH">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Hue.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="1" Content="S" Foreground="{TemplateBinding Foreground}"  Name="ButtomS">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Saturation.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <RadioButton Grid.Column="0" Grid.Row="2" Content="V" Foreground="{TemplateBinding Foreground}"  Name="ButtomV">
                                            <RadioButton.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Value/Brightness.</TextBlock>
                                                </ToolTip>
                                            </RadioButton.ToolTip>
                                        </RadioButton>
                                        <Slider Grid.Column="1" Grid.Row="0" x:Name="SliderH" Background="{TemplateBinding Background}" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=H, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Minimum="0" Maximum="360"/>
                                        <Slider Grid.Column="1" Grid.Row="1" x:Name="SliderS" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=S, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <Slider Grid.Column="1" Grid.Row="2" x:Name="SliderV" Style="{StaticResource Slider_CustomStyle1}" Value="{Binding Path=V, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <TextBox Grid.Column="2" Grid.Row="0" Margin="1,1,1,1" Name="Hval" Text="{Binding H, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Margin="1,1,1,1" Name="Sval" Text="{Binding S, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Margin="1,1,1,1" Name="Vval"  Text="{Binding V, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle HorizontalAlignment="Left" Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect" Fill="{StaticResource BrushEditGradientRectFillKey}" RadiusX="5" RadiusY="5">
                                                            <!--<Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>-->
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">
                                                    <StackPanel>
                                                        <!--Background="{shared:SkinObject BrushBackground}"-->
                                                        <!--<ToggleButton Visibility="Visible" Name="ButtonExt" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">

                                                        </ToggleButton>-->
                                                        <Border Name="GradPopup" Background="{TemplateBinding Background}" MinWidth="249" Grid.Row="2" Visibility="Visible" Width="{TemplateBinding Width}" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx" ></shared:UpDown>
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </StackPanel>
                                                    <!--</Popup>-->
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsAlphaVisible" Value="False">
                                        <Setter TargetName="AlphaLabel" Property="Visibility" Value="Collapsed"></Setter>
                                        <Setter TargetName="AlphaVal" Property="Visibility" Value="Collapsed"></Setter>
                                    </Trigger>-->
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="LinearGrid"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="LinearGrid"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="RadialGrid"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--<Path Stroke="Black" Fill="Blue"  Data="M0,0L0,0L-6,0L-12,6L12,6L6,0L0,0"/>-->
                            <!--<Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>-->
                            <Grid Margin="0">
                                <Path x:Name="Poly" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Uniform" Height="7" Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" Margin="-1,0,-1,-7" VerticalAlignment="Bottom" 
                              Data="M419,269 L414,282 L424,282 z">
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="RGB"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Popup"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" CornerRadius="8,8,8,8" Margin="5"
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" Margin="4"
            Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0">
                                            <Border CornerRadius="4" BorderBrush="Black" >
                                            </Border>
                                            <Rectangle x:Name="SelectedColor" Margin="3"  Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Grid Grid.Row="0" Grid.Column="1">
                                            <Border CornerRadius="4" BorderBrush="Black">
                                            </Border>
                                            <Rectangle x:Name="CurrentColor" Margin="3" Fill="White" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}" CornerRadius="4">
                                        </Border>
                                        <Canvas Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ClipToBounds="True">
                                            <Ellipse
            Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                            </Ellipse>
                                            <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
            HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                    <Border.Background>
                                                        <SolidColorBrush>
                                                            <SolidColorBrush.Color>
                                                                <Color A="200"  R="255" G="255" B="255"/>
                                                            </SolidColorBrush.Color>
                                                        </SolidColorBrush>
                                                    </Border.Background>
                                                    <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="Black" Background="Transparent"
                Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                    </TextBox>
                                                </Border>
                                            </Popup>
                                        </Canvas>
                                    </Grid>


                                    <Slider Grid.Column="1" Grid.RowSpan="3" Margin="5,0,0,0" Orientation="Vertical" Grid.Row="0"
                Background="{local:HSVBackgroundBrush VerticalSlider}"
                Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource Slider_CustomStyleVertical1}"
                Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="2" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor"                
                 Height="20" 
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">

                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="45"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <!--<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>-->
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0"  Foreground="{TemplateBinding Foreground}" Text="R" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Red.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="1" Text="G" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Green.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="B" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Blue.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Name="AlphaText" Grid.Column="0" Grid.Row="3" Text="A" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Alpha.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <Slider Grid.Column="1" Grid.Row="0"  Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundR}" Value="{Binding Path=R, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Slider Grid.Column="1" Grid.Row="1" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundG}" Value="{Binding Path=G, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Slider Grid.Column="1" Grid.Row="2" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundB}" Value="{Binding Path=B, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Slider Grid.Column="1" Name="AlphaSlider" Grid.Row="3" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundA}" Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <TextBox  Grid.Column="2" Grid.Row="0" Text="{local:ScRGBColorExtension R}" Margin="2" IsEnabled="False"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Text="{local:ScRGBColorExtension G}" Margin="2" IsEnabled="False"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Text="{local:ScRGBColorExtension B}" Margin="2" IsEnabled="False"/>
                                        <TextBox Grid.Column="2" Grid.Row="3" Name="AlphaValue" Visibility="Visible" Text="{local:ScRGBColorExtension A}" Margin="2" IsEnabled="False"/>
                                        <!--<TextBox Grid.Column="2" Grid.Row="0" Margin="1,1,1,1" Name="Rval" Text="{Binding R, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Margin="1,1,1,1" Name="Gval" Text="{Binding G, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Margin="1,1,1,1" Name="Sval"  Text="{Binding B, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="3" Margin="1,1,1,1" Name="Aval"  Text="{Binding A, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>-->

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle HorizontalAlignment="Left" Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect" Fill="{StaticResource BrushEditGradientRectFillKey}" RadiusX="5" RadiusY="5">
                                                            <!--<Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>-->
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">

                                                    <ToggleButton Name="PopButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{StaticResource VS2010.Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" ClickMode="Press" Height="14" HorizontalAlignment="Stretch">

                                                    </ToggleButton>

                                                    <Popup Name="GradPopup" PopupAnimation="Slide" AllowsTransparency="True" MinWidth="249" StaysOpen="True" Width="{TemplateBinding Width}"
					   IsOpen="{Binding ElementName= PopButton, Path=IsChecked}" >
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center"></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center"></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" ></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" ></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">

                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">

                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                 <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaText" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaSlider" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="IsOpen" Value="True" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGradientPropertyEnabled" Value="False"/>
                                        <Condition Property="IsOpenGradientPropertyEditor" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                    <Setter Property="IsOpen" Value="False" TargetName="GradPopup"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--<Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>-->
                            <Grid Margin="0">
                                <Path x:Name="Poly" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Uniform" Height="7" Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" Margin="-1,0,-1,-7" VerticalAlignment="Bottom" 
                              Data="M419,269 L414,282 L424,282 z">
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="VisualizationStyle" Value="RGB"/>
                    <Condition Property="GradientPropertyEditorMode" Value="Extended"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ColorEdit}">
                            <Border Background="{TemplateBinding Background}" Name="ColorEditBorder" CornerRadius="8,8,8,8" Margin="5"
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid ClipToBounds="True" Margin="4"
            Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="120"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Grid.Column="0">
                                            <Border CornerRadius="4" BorderBrush="Black" >
                                            </Border>
                                            <Rectangle x:Name="SelectedColor" Margin="3"  Fill="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrush}}" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Grid Grid.Row="0" Grid.Column="1">
                                            <Border CornerRadius="4" BorderBrush="Black">
                                            </Border>
                                            <Rectangle x:Name="CurrentColor" Margin="3" Fill="White" RadiusX="3" RadiusY="3"/>
                                        </Grid>
                                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Name="ColorPalitte" Background="{local:HSVBackgroundBrush Background}" CornerRadius="4">
                                        </Border>
                                        <Canvas Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ClipToBounds="True">
                                            <Ellipse
            Canvas.Left="{Binding Path=SelectorPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Canvas.Top="{Binding Path=SelectorPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            Stroke="{Binding InvertColor, Converter={StaticResource ColorToBrush}, RelativeSource={RelativeSource TemplatedParent}}" Width="10" Height="10">
                                            </Ellipse>
                                            <Popup Name="WordKnownColorsPopup" PlacementRectangle="0,0,0,0" AllowsTransparency="True"
            HorizontalOffset="{Binding Path=WordKnownColorsPositionX,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            VerticalOffset="{Binding Path=WordKnownColorsPositionY,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorEdit}}}"
            IsOpen="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Border CornerRadius="2" ClipToBounds="True" BorderThickness="1" BorderBrush="Black">
                                                    <Border.Background>
                                                        <SolidColorBrush>
                                                            <SolidColorBrush.Color>
                                                                <Color A="200"  R="255" G="255" B="255"/>
                                                            </SolidColorBrush.Color>
                                                        </SolidColorBrush>
                                                    </Border.Background>
                                                    <TextBox Name="WordKnownColorsTextBox" IsReadOnly="True" BorderBrush="Transparent" Foreground="White" Background="Transparent"
                Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}" BorderThickness="0" >
                                                    </TextBox>
                                                </Border>
                                            </Popup>
                                        </Canvas>
                                    </Grid>


                                    <Slider Grid.Column="1" Grid.RowSpan="3" Margin="5,0,0,0" Orientation="Vertical" Grid.Row="0"
                Background="{local:HSVBackgroundBrush VerticalSlider}"
                Maximum="{Binding Path=SliderMaxValueHSV, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource Slider_CustomStyleVertical1}"
                Value="{Binding Path=SliderValueHSV, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <StackPanel Grid.Column="2" Grid.Row="2" Margin="1,2,0,0" Orientation="Horizontal">
                                        <TextBox  Name="PART_ColorStringEditor"                
                 Height="20" 
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToString}, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </TextBox>
                                        <StackPanel  Name="EnableSwitch" Margin="5,0,0,2"  Height="20" Orientation="Horizontal">

                                            <Button Width="20" Margin="2,2,3,1" Name="Solid">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource SolidBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            <Button Width="20" Margin="0,2,2,1" Name="Gradient">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="#FF231F20" CornerRadius="3" Background="{StaticResource GradientBrushKey}"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                    <Grid Grid.Column="2" Grid.Row="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="29"/>
                                            <ColumnDefinition Width="44"/>
                                            <ColumnDefinition Width="45"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <!--<RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>-->
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0"  Foreground="{TemplateBinding Foreground}" Text="R" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Red.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="1" Text="G" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Green.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="B" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Blue.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <TextBlock Name="AlphaText" Grid.Column="0" Grid.Row="3" Text="A" Foreground="{TemplateBinding Foreground}" Margin="4">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTip_CustomStyle}">
                                                    <TextBlock>Alpha.</TextBlock>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                        <Slider Grid.Column="1" Grid.Row="0"  Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundR}" Value="{Binding Path=R, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Slider Grid.Column="1" Grid.Row="1" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundG}" Value="{Binding Path=G, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Slider Grid.Column="1" Grid.Row="2" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundB}" Value="{Binding Path=B, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Slider Grid.Column="1" Name="AlphaSlider" Grid.Row="3" Style="{StaticResource Slider_CustomStyle1}" Background="{TemplateBinding BackgroundA}" Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <TextBox  Grid.Column="2" Grid.Row="0" Text="{local:ScRGBColorExtension R}" Margin="2" IsEnabled="False" Foreground="Black"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Text="{local:ScRGBColorExtension G}" Margin="2" IsEnabled="False" Foreground="Black"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Text="{local:ScRGBColorExtension B}" Margin="2" IsEnabled="False" Foreground="Black"/>
                                        <TextBox Grid.Column="2" Grid.Row="3" Name="AlphaValue" Visibility="Visible" Text="{local:ScRGBColorExtension A}" Margin="2" IsEnabled="False" Foreground="Black"/>
                                        <!--<TextBox Grid.Column="2" Grid.Row="0" Margin="1,1,1,1" Name="Rval" Text="{Binding R, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="1" Margin="1,1,1,1" Name="Gval" Text="{Binding G, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="2" Margin="1,1,1,1" Name="Sval"  Text="{Binding B, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox Grid.Column="2" Grid.Row="3" Margin="1,1,1,1" Name="Aval"  Text="{Binding A, Converter={StaticResource FloatToString}, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}"/>-->

                                    </Grid>
                                    <Border Grid.Row="3" Grid.ColumnSpan="3" Margin="-2,0,-2,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Name="GridBorder"  Background="Transparent" >
                                        <Grid>
                                            <Grid Name="GridGradient" Margin="0,2,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" Margin="0" Grid.Row="0">
                                                    <Canvas Height="25" x:Name="GradientBar" >
                                                        <Rectangle HorizontalAlignment="Left" Width="150" Stroke="#FF231F20" StrokeThickness="0.5" Height="16" x:Name="GradRect" Fill="{StaticResource BrushEditGradientRectFillKey}" RadiusX="5" RadiusY="5">
                                                            <!--<Rectangle.Fill>
                                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FF000000" Offset="0"/>
                                                                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>-->
                                                        </Rectangle>
                                                    </Canvas>
                                                </Grid>

                                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                                                    <Button Width="25"  Height="20" Margin="2,2,3,1" VerticalAlignment="Center" Name="linear" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource LinearBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,3,1" Width="25"  VerticalAlignment="Center" Name="radial" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" BorderThickness="0.5" BorderBrush="#FF231F20" Background="{StaticResource RadialBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Height="20" Margin="0,2,5,1" Width="25"  VerticalAlignment="Center" Name="Reverse" >
                                                        <Button.Content>
                                                            <!--<ControlTemplate>-->
                                                            <Border Width="15" Height="12" Background="{StaticResource ReverseBrushKey}"/>
                                                            <!--</ControlTemplate>-->
                                                        </Button.Content>
                                                    </Button>

                                                </StackPanel>
                                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible" Name="GridPopup">
                                                    <StackPanel>
                                                        <!--Background="{shared:SkinObject BrushBackground}"-->
                                                        <ToggleButton Visibility="Visible" Name="ButtonExt" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0" Background="{TemplateBinding Background}" Template="{StaticResource TogglePopupButtonTemplate}" Margin="0,2,0,0" Height="14" HorizontalAlignment="Stretch">

                                                        </ToggleButton>
                                                        <Border Name="GradPopup" Background="{TemplateBinding Background}" MinWidth="249" Grid.Row="2" Visibility="Visible" Width="{TemplateBinding Width}" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                                            <!--<Popup MinWidth="250" Margin="2" Name="GradPopup" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="4">-->
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                </Grid.RowDefinitions>

                                                                <Grid Grid.Row="0" x:Name="LinearGrid" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" Foreground="Black"></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" Foreground="Black"></TextBlock>
                                                                    </Grid>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="startx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="starty"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                    <TextBlock Text="Start Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="1" Grid.Column="0" Foreground="Black"></TextBlock>
                                                                    <TextBlock Text="End Point" FontSize="10"  VerticalAlignment="Center" Margin="8,2,2,2" Grid.Row="2" Grid.Column="0" Foreground="Black"></TextBlock>


                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="endx" ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  Name="endy"></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                                <Grid Visibility="Collapsed" x:Name="RadialGrid" Grid.Row="1" >
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="3.5*"/>
                                                                        <ColumnDefinition Width="6.5*"/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="1" Grid.Row="0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="75"/>
                                                                            <ColumnDefinition Width="75"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        <TextBlock Text="X" FontSize="10" Margin="25,2,0,1" Grid.Column="0" HorizontalAlignment="Center" Foreground="Black"></TextBlock>
                                                                        <TextBlock Text="Y" FontSize="10" Margin="20,2,0,1" Grid.Column="1" HorizontalAlignment="Center" Foreground="Black"></TextBlock>
                                                                    </Grid>

                                                                    <TextBlock Text="Gradient Origin" FontSize="10"  VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="1" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Centre" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Row="2" Grid.Column="0"></TextBlock>
                                                                    <TextBlock Text="Radius" Grid.Row="3" FontSize="10" VerticalAlignment="Center"  Margin="8,2,2,2" Grid.Column="0"></TextBlock>

                                                                    <StackPanel Orientation="Horizontal" Margin="2"  Grid.Column="1" Grid.Row="1">
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="gradx" ></shared:UpDown>
                                                                        <shared:UpDown Visibility="Visible"  Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25" x:Name="grady"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="2">
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrex"></shared:UpDown>
                                                                        <shared:UpDown Width="75" Step="0.01" MinValue="-1" MaxValue="1" Height="25"  x:Name="centrey"></shared:UpDown>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="2" Grid.Column="1" Grid.Row="3">
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusx"  ></shared:UpDown>
                                                                        <shared:UpDown Width="75" Height="25" Step="0.01" MinValue="-1" MaxValue="1" Name="radiusy"  ></shared:UpDown>
                                                                    </StackPanel>
                                                                </Grid>
                                                            </Grid>
                                                        </Border>
                                                    </StackPanel>
                                                    <!--</Popup>-->
                                                </Grid>
                                            </Grid >
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                 <Trigger Property="IsAlphaVisible" Value="False">
                                    <Setter TargetName="AlphaText" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaSlider" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="AlphaValue" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                                <Trigger Property="EnableGradientToSolidSwitch" Value="false">
                                    <Setter TargetName="EnableSwitch" Property="Visibility" Value="Collapsed"></Setter>
                                    <Setter TargetName="PART_ColorStringEditor" Property="Width" Value="115"/>
                                </Trigger>
                                <Trigger Property="BrushMode" Value="Solid">
                                    <Setter TargetName="GridGradient" Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                               <Trigger Property="IsOpenGradientPropertyEditor" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="LinearGrid"/>
                                </Trigger>
                                <Trigger Property="IsOpenGradientPropertyEditor" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GradPopup"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="LinearGrid"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="RadialGrid"/>
                                </Trigger>
                                <Trigger Property="IsGradientPropertyEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="GridPopup"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <!--<Polygon x:Name="Poly" Fill="{StaticResource Aero.ColorEditContainerBrush}" Stroke="Gray" Points="0,-5 -5,0 -5,5 5,5 5,0"></Polygon>-->
                            <Grid Margin="0">
                                <Path x:Name="Poly" Fill="{StaticResource ColorEditThumb1FillBrushKey}" Stretch="Uniform" Height="7" Stroke="{StaticResource ColorEditThumb1BorderBrushKey}" Margin="-1,0,-1,-7" VerticalAlignment="Bottom" 
                              Data="M419,269 L414,282 L424,282 z">
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource ToggleButton.VS2010.BorderBrush.IsMouseOver}"></Setter>
                                </Trigger>

                                <Trigger Property="Canvas.ZIndex" Value="1">
                                    <Setter TargetName="Poly" Property="Fill" Value="{StaticResource Office2007Blue.SliderPolygonFillColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource VS2010ColorEditStyle}" TargetType="{x:Type local:ColorEdit}"/>

    <!--ColorPickerStyle-->
    <Style x:Key="VS2010ColorPickerStyle" TargetType="{x:Type local:ColorPicker}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource VS2010.BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource VS2010.ColorPickerBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                    <Border Name="mainBorder"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ToggleButton Grid.Column="2" 
                                  Command="local:ColorPicker.M_displayPopup" 
                                  Name="colorToggleButton" 
                                  Style="{StaticResource ToggleDropDownButtonStyle}"
                                  ClickMode="Press">
                                <StackPanel Orientation="Horizontal">
                                    <Border Name="selectedColorRect" HorizontalAlignment="Left"                
                                        Background="{TemplateBinding Color, Converter={StaticResource ColorToBrush}}"
                                        Width="20" Height="22" Margin="2"/>

                                    <TextBlock Foreground="{TemplateBinding Foreground}"               
                                        HorizontalAlignment="Left" VerticalAlignment="Center" Name="SelectedColorText"
                                        Text="{TemplateBinding Color, Converter={StaticResource ColorToWordKnownColors}}"/>
                                </StackPanel>
                            </ToggleButton>

                            <Popup Name="colorEditPopup" PopupAnimation="Slide" AllowsTransparency="True"  StaysOpen="False" MinWidth="250"
					               IsOpen="{Binding ElementName= colorToggleButton, Path=IsChecked}" >
                                <StackPanel Background="{Binding ElementName=ColorEdit, Path=Background}">
                                    <local:ColorEdit x:Name="ColorEdit" VisualizationStyle="{TemplateBinding VisualizationStyle}"/>
                                    <Border Name="systemColorsPanel" Visibility="Collapsed"
								        DataContext="{Binding Source={StaticResource ColorList}}">
                                        <ComboBox Name="systemColors" DockPanel.Dock="Left" Margin="4,2,4,4"
									        ItemsSource="{Binding}"
									        ItemTemplate = "{StaticResource ColorItemTemplate}"
									        IsSynchronizedWithCurrentItem="True" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" TargetName="mainBorder"   Value="{StaticResource VS2010.Background}"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Background"  TargetName="mainBorder"  Value="{StaticResource VS2010.Background}"/>
                        </Trigger>                     
                        <DataTrigger Binding="{Binding Path=IsColorPaletteVisible, RelativeSource={RelativeSource Self}}"
					Value="True">
                            <Setter TargetName="ColorEdit" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="systemColorsPanel" Property="BorderBrush" Value="{Binding ElementName=ColorEdit, Path=BorderBrush}" />
                            <Setter TargetName="systemColorsPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="systemColorsPanel" Property="BorderThickness" Value="1,0,1,1" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010ColorPickerStyle}" TargetType="{x:Type local:ColorPicker}"/>
</ResourceDictionary>