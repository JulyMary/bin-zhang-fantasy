<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Sync_Resources="clr-namespace:Syncfusion.Windows.Shared.Resources"
   xmlns:local="clr-namespace:Syncfusion.Windows.Shared">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/ChromelessWindow/Themes/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
	
	<Sync_Resources:ResourceWrapper x:Key="ResourceWrapperKey"/>
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <local:CornerRadiusConverter x:Key="CRConvert"/>
    
    <Style TargetType="{x:Type local:TitleBar}">
        <Setter Property="Focusable" Value="False"/>
    </Style>
    <Style TargetType="{x:Type local:TitleButton}">
        <Setter Property="Focusable" Value="False"/>
    </Style>
    <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
        <GradientStop Color="#FFFFFF" Offset="0.3"/>
        <GradientStop Color="#BBC5D7" Offset="0.75"/>
        <GradientStop Color="#6D83A9" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ResizeStyle" TargetType="{x:Type local:ResizeGripStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResizeGripStyle}">
                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                        <Path Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z" HorizontalAlignment="Right" VerticalAlignment="Bottom" >
                            <Path.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
     <DrawingImage x:Key="minimizewhite">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00454444" Geometry="F1 M 2,2L 18,2L 18,18L 2,18L 2,2 Z "/>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 15.526,10.0013C 15.526,10.688 15.046,11.2453 14.45,11.2453L 5.55133,11.2453C 4.95533,11.2453 4.474,10.688 4.474,10.0013C 4.474,9.31333 4.95533,8.75467 5.55133,8.75467L 14.45,8.75467C 15.046,8.75467 15.526,9.31333 15.526,10.0013 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="maximizewhite">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00454444" Geometry="F1 M 2,2L 18,2L 18,18L 2,18L 2,2 Z "/>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 14.016,12.6887C 14.016,13.4233 13.42,14.018 12.6867,14.018L 7.31333,14.018C 6.57867,14.018 5.984,13.4233 5.984,12.6887L 5.984,9.058C 5.984,8.32333 6.57867,7.72867 7.31333,7.72867L 12.6867,7.72867C 13.42,7.72867 14.016,8.32333 14.016,9.058M 13.3067,5.05667L 6.69333,5.05667C 5.78933,5.05667 5.05733,5.78867 5.05733,6.694L 5.05733,13.3087C 5.05733,14.2127 5.78933,14.9433 6.69333,14.9433L 13.3067,14.9433C 14.2107,14.9433 14.9427,14.2127 14.9427,13.3087L 14.9427,6.694C 14.9427,5.78867 14.2107,5.05667 13.3067,5.05667 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="restorewhite">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1 M 10.3333,10.0833L 26.3333,10.0833L 26.3333,26.0833L 10.3333,26.0833L 10.3333,10.0833 Z "/>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 23.7587,18.582C 23.7587,19.1127 23.3267,19.5447 22.7947,19.5447L 22.4387,19.5447L 22.4387,17.138C 22.4387,16.4833 21.9093,15.954 21.256,15.954L 14.8973,15.954L 14.8973,15.1753L 23.7587,15.1753M 21.7693,21.4753C 21.7693,22.01 21.3373,22.4393 20.8053,22.4393L 13.8693,22.4393C 13.3373,22.4393 12.9067,22.01 12.9067,21.4753L 12.9067,18.07L 21.7693,18.07M 23.2453,13.058L 15.4107,13.058C 14.7573,13.058 14.2267,13.5887 14.2267,14.2433L 14.2267,15.954L 13.42,15.954C 12.7667,15.954 12.236,16.4833 12.236,17.138L 12.236,21.926C 12.236,22.5807 12.7667,23.1087 13.42,23.1087L 21.256,23.1087C 21.9093,23.1087 22.4387,22.5807 22.4387,21.926L 22.4387,20.2127L 23.2453,20.2127C 23.8987,20.2127 24.4307,19.6847 24.4307,19.0313L 24.4307,14.2433C 24.4307,13.5887 23.8987,13.058 23.2453,13.058 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="closewhite">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#00454444" Geometry="F1 M 2,2L 18,2L 18,18L 2,18L 2,2 Z "/>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 11.716,9.99867L 14.432,7.71067C 14.844,7.36533 14.944,6.68667 14.6533,6.19333L 14.5667,6.04267C 14.28,5.55067 13.7133,5.43067 13.304,5.776L 10,8.556L 6.696,5.776C 6.288,5.43067 5.72267,5.55067 5.43467,6.04267L 5.34667,6.19333C 5.05733,6.68667 5.156,7.36533 5.568,7.71067L 8.28533,9.99867L 5.568,12.2893C 5.156,12.6347 5.05733,13.312 5.34667,13.804L 5.43467,13.9573C 5.72267,14.4507 6.288,14.5693 6.696,14.224L 10,11.4427L 13.304,14.224C 13.7133,14.5693 14.28,14.4507 14.5667,13.9573L 14.6533,13.804C 14.944,13.312 14.844,12.6347 14.432,12.2893L 11.716,9.99867 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    
    
    <ControlTemplate x:Key="SkinTemp" TargetType="{x:Type local:ChromelessWindow}">
        <AdornerDecorator>
            <Border Name="OuterBorder" Margin="{TemplateBinding Padding}" CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type local:ChromelessWindow}}, Path=CornerRadius}" Background="{StaticResource Blue.OuterBackground}" BorderThickness="{TemplateBinding ResizeBorderThickness}" BorderBrush="{TemplateBinding ResizeBorderBrush}">
                <Border Name="InnerBorder" CornerRadius="5" Background="{TemplateBinding Background}">
                    <Grid x:Name="RootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Name="ContentAreaBorder" Background="{TemplateBinding Background}" Grid.Row="1"  >
                            <Grid x:Name="ChildGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <local:ResizeGripStyle x:Name="PART_Resizegrip" Style="{TemplateBinding ResizeGripStyle}" HorizontalAlignment="right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" Cursor="SizeNWSE" Margin="0,0,3,3" />
                                <ContentPresenter Name="contentpresenter"  />
                                                     </Grid>
                        </Border>
                        <Border Name="TitleBarBorder"  CornerRadius="5,5,0,0"  Grid.Row="0"  >
                            <Grid VerticalAlignment="Top">
                                <local:TitleBar Template="{TemplateBinding TitleBarTemplate}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding TitleBarBackground}" Name="PART_TitleBar" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="PART_Icon" Source="{Binding RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type local:ChromelessWindow}}, Path=Icon}" VerticalAlignment="Center"  HorizontalAlignment="Left" Margin="4,4,2,4"  MaxWidth="16" MaxHeight="16" MinWidth="16" MinHeight="16" 
                                               Visibility="{Binding Path=ShowIcon, Converter={StaticResource BooleanToVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ContentControl Focusable="False" Foreground="{TemplateBinding Foreground}"  Content="{TemplateBinding Title}" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="TitlePresenter" Margin="5,5,5,5" />
                                    </StackPanel>
                                </local:TitleBar>

                                <StackPanel x:Name="MinMaxCloseStackPanel"  Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Center">
                                    <local:TitleButton Command="local:ChromelessWindow.ToggleMinimizedState" x:Name="MinimizeButton"  Template="{TemplateBinding MinimizeButtonTemplate}" ToolTip="{Binding Source={StaticResource ResourceWrapperKey}, Path=MinimizeTooltip}"/>
                                    <local:TitleButton Command="local:ChromelessWindow.ToggleMaximizedState" Visibility="Collapsed" Name="PART_MaximizeButton" Template="{TemplateBinding MaximizeButtonTemplate}"    ToolTip="{Binding Source={StaticResource ResourceWrapperKey}, Path=MaximizeTooltip}"/>
                                    <local:TitleButton Command="local:ChromelessWindow.ToggleMaximizedState" Visibility="Collapsed" Name="PART_RestoreButton" Template="{TemplateBinding RestoreButtonTemplate}"    ToolTip="{Binding Source={StaticResource ResourceWrapperKey}, Path=RestoreTooltip}"/>
                                    <local:TitleButton Command="local:ChromelessWindow.CloseWindow" x:Name="CloseButton" Template="{TemplateBinding CloseButtonTemplate}"   ToolTip="{Binding Source={StaticResource ResourceWrapperKey}, Path=CloseTooltip}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Border>
        </AdornerDecorator>
        <ControlTemplate.Triggers>
			<Trigger Property="ResizeMode" Value="NoResize">
				<Setter Property="Visibility" Value="Collapsed" TargetName="MinimizeButton"/>
				<Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaximizeButton"/>
				<Setter Property="Visibility" Value="Collapsed" TargetName="PART_RestoreButton"/>
                <Setter Property="ResizeBorderThickness" Value="1"/>
			</Trigger>			
			<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="PART_Resizegrip"/>

            </MultiTrigger>
            
            <MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="NoResize"/>
					<Condition Property="WindowState" Value="Maximized"/>
				</MultiTrigger.Conditions>
				<Setter Property="Visibility" Value="Collapsed" TargetName="MinimizeButton"/>
				<Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaximizeButton"/>
				<Setter Property="Visibility" Value="Collapsed" TargetName="PART_RestoreButton"/>
			</MultiTrigger>		
           
            <Trigger Property="local:SkinStorage.VisualStyle" Value="ShinyRed">
                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
            </Trigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>

   <ControlTemplate x:Key="Minimize.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
           <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource minimizewhite}"  Width="22" Height="15" Margin="0,5,0,0"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>
      
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>
	
	 <ControlTemplate x:Key="Restore.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource restorewhite}"  Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>           
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="Maximize.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource maximizewhite}" Width="16" Height="13"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>    

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Close.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource closewhite}" Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>       

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>           
        </ControlTemplate.Triggers>
    </ControlTemplate>

        <ControlTemplate x:Key="TitleBarTemplate.ShinyRed" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"  CornerRadius="5,5,0,0" Background="{StaticResource TitleBarBackgroundBrushKey.ShinyRed}" >
            <Border BorderBrush="{StaticResource TitleBarBorderBrushKey.ShinyRed}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>
	
	<Style x:Key="ShinyRedChromelessWindowStyle" TargetType="{x:Type local:ChromelessWindow}" >
        <!--<Setter Property="AllowsTransparency" Value="true" />-->
        <Setter Property="ResizeGripStyle" Value="{StaticResource ResizeStyle}"/>
        <Setter Property="WindowStyle" Value="None" />       
        <Setter Property="ResizeBorderThickness" Value="2" />       
        <Setter Property="SnapsToDevicePixels" Value="False"/>     
        <Setter Property="Icon" Value="..\Resources\app.png"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>

        <Setter Property="Foreground" Value="{StaticResource White}"/>
        <Setter Property="MinWidth" Value="300"/>
        <Setter Property="MinHeight" Value="120"/>
       
        
                <Setter Property="TitleBarBackground" Value="{StaticResource TitleBarBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ContentAreaBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="ResizeBorderBrush" Value="{StaticResource TitleBarBorderBrushKey.ShinyRed}"/>
                <Setter Property="MinimizeButtonTemplate" Value="{StaticResource Minimize.ShinyRed}"/>
                <Setter Property="MaximizeButtonTemplate" Value="{StaticResource Maximize.ShinyRed}"/>
                <Setter Property="RestoreButtonTemplate" Value="{StaticResource Restore.ShinyRed}"/>
                <Setter Property="CloseButtonTemplate" Value="{StaticResource Close.ShinyRed}"/>
                <Setter Property="TitleBarTemplate" Value="{StaticResource TitleBarTemplate.ShinyRed}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrushKey.ShinyRed}"/>
                <Setter Property="Template" Value="{StaticResource SkinTemp}"/>
            
    </Style>

	<Style BasedOn="{StaticResource ShinyRedChromelessWindowStyle}" TargetType="{x:Type local:ChromelessWindow}" />
	
</ResourceDictionary>