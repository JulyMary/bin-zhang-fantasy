<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"                     
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Blend -->

    <!-- Button -->
	 <SolidColorBrush x:Key="SliderTextBrushKey.Blue" Color="#FFC4C4C4"></SolidColorBrush>    
 <SolidColorBrush x:Key="ComboBoxItemBorderBrush.Blue" Color="Transparent"/>
    <SolidColorBrush x:Key="ButtonBackgroundBrush.Blend" Color="#FF595959"/>
    <SolidColorBrush x:Key="ButtonBorderBrush.Blend" Color="#FF333333"/>
    <SolidColorBrush x:Key="ForegroundBrush.Blend" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ButtonMouseOverBrush.Blend" Color="#FFAAAAAA" />
    <SolidColorBrush x:Key="ButtonPressedBrush.Blend" Color="#FF424242"/>
 <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="Black"/>

    <!--TextBox-->
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#FF595959"/>
    <SolidColorBrush x:Key="TextBoxForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TextBoxBackground" Color="#FF333333"/>
    <!-- ToggleButton -->

    <LinearGradientBrush x:Key="ToggleCheckedBrush.Blend"
		StartPoint="0,0"
		EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF515151"/>
            <GradientStop Offset="0.5" Color="#FF4B4B4B"/>
            <GradientStop Offset="0.5" Color="#FF424242"/>
            <GradientStop Offset="1" Color="#FF424242"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- CheckBox -->

    <SolidColorBrush x:Key="CheckFill.Blend" Color="#FFFDFDFD"/>
    <SolidColorBrush x:Key="CheckBoxBorderBrush.Blend" Color="#FF333333"/>
    <SolidColorBrush x:Key="CheckBoxBackground.Blend" Color="#FF666666"/>
    <SolidColorBrush x:Key="CheckBoxMouseOver.Blend" Color="#FFFAFAFA"/>

    <!-- ComboBox -->
    <SolidColorBrush x:Key="ComboToggleBrush.Blend" Color="#FF808080"/>
    <SolidColorBrush x:Key="ComboToggleMouseOver.Blend" Color="#FF707070"/>
    <SolidColorBrush x:Key="ComboTogglePressed.Blend" Color="#FF424242"/>
    <SolidColorBrush x:Key="ComboTextBoxBrush.Blend" Color="#FF333333"/>

    <!-- ComboItem -->

    <LinearGradientBrush x:Key="ComboItemMouseOver.Blend" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF000000" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="0.004"/>
        <GradientStop Color="#FFB9B9B9" Offset="0"/>
        <GradientStop Color="#FFBABABA" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ComboItemBackground.Blend" Color="#FF424242"/>
    <SolidColorBrush x:Key="TreeViewSelected.Blend" Color="#FFB1B1B1"/>

    <!-- ListBox -->

    <SolidColorBrush x:Key="ListBoxBorderBrush.Blend" Color="#FF555556"/>
    <SolidColorBrush x:Key="ListItemMouseOver.Blend" Color="#FF707070"/>

    <!-- Menu -->
    <SolidColorBrush x:Key="MenuBackground.Blend" Color="#FF3A3A3A"/>
    <SolidColorBrush x:Key="MenuItemPressedBrush.Blend" Color="#FFAAAAAA"/>
    <!--<SolidColorBrush x:Key="MenuItemMouseOver.Blend" Color="#FFAAAAAA"/>-->
    <SolidColorBrush x:Key="ToolTipBackground.Blend" Color="#FF666666"/>
    <SolidColorBrush x:Key="ExpanderBackground.Blend" Color="#FF595959"/>
    <SolidColorBrush x:Key="ExpanderHeader.Blend" Color="#FFCCCCCC"/>

    <LinearGradientBrush x:Key="GroupBoxBorderBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6C6C" />
            <GradientStop Offset="0.85" Color="#FF6B6C71" />
            <GradientStop Offset="1" Color="#FF686767" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="StatusBarSeparatorColor.Blend" MappingMode="Absolute" StartPoint="1,1" EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="LightGray"/>
            <GradientStop Offset="0.5" Color="Gray"/>
            <GradientStop Offset="1.000000" Color="#FFAAAAAA"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultThumbColor.Blend" MappingMode="Absolute" StartPoint="204.748047,-558.712891" EndPoint="204.748047,-553.257813">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFFFFFF" />
            <GradientStop Offset="1" Color="#FFC6C6C6" />
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.Transform>
            <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820" />
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarBorderBrush.Blend"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B2B2B2"
                          Offset="0"/>
            <GradientStop Color="#8C8C8C"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarTopHighlightBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF"
                          Offset="0.05"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.25"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlightBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlightBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#90FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeftBrush.Blend"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffectBrush.Blend"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRightBrush.Blend"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeftBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.3"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRightBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.7"/>
            <GradientStop Color="#FF000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFillBrush.Blend" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#FF000000"
                          Offset="0.4"/>
            <GradientStop Color="#FF000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ProgressBarForeground.Blend" Color="#FF000000"/>
    <SolidColorBrush x:Key="ProgressBarBackground.Blend" Color="Transparent"/>
    <SolidColorBrush x:Key="ProgressBar.Blend" Color="#FFD3D3D3"/>

    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Blend"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6D6D"/>
            <GradientStop Offset="0.5" Color="#FF636363"/>
            <GradientStop Offset="0.5" Color="#FF595959"/>
            <GradientStop Offset="1" Color="#FF595959"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Blend"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6D6D"/>
            <GradientStop Offset="0.5" Color="#FF636363"/>
            <GradientStop Offset="0.5" Color="#FF595959"/>
            <GradientStop Offset="1" Color="#FF595959"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Blend"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6D6D"/>
            <GradientStop Offset="0.5" Color="#FF636363"/>
            <GradientStop Offset="0.5" Color="#FF595959"/>
            <GradientStop Offset="1" Color="#FF595959"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Blend"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6D6D"/>
            <GradientStop Offset="0.5" Color="#FF636363"/>
            <GradientStop Offset="0.5" Color="#FF595959"/>
            <GradientStop Offset="1" Color="#FF595959"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderThumbMouseOver.Blend"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFC0C0C0"/>
            <GradientStop Offset="0.5" Color="#FFA5A5A5"/>
            <GradientStop Offset="0.5" Color="#FFAAAAAA"/>
            <GradientStop Offset="1" Color="#FFAAAAAA"/>
        </LinearGradientBrush.GradientStops>

    </LinearGradientBrush>

    <SolidColorBrush x:Key="SliderThumbSelected.Blend" Color="#FFE5E5E5"/>

    <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder.Blend"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HorizontalScrollBarBackground.Blend" Color="#FF4B4B4B"/>
    <SolidColorBrush x:Key="VerticalScrollBarBackground.Blend" Color="#FF4B4B4B"/>
    <SolidColorBrush x:Key="SliderBorder.Blend" Color="#FF464646"/>
    <SolidColorBrush x:Key="ToolTipBorderBrush.Blend" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="TabControlBackground.Blend" Color="#FF595959"/>
    <SolidColorBrush x:Key="TabControlBorderBrush.Blend" Color="#FFAAAAAA"/>
    <SolidColorBrush x:Key="TabItemBackground.Blend" Color="#FF424242"/>
    <SolidColorBrush x:Key="TabItemMouseOver.Blend" Color="#FF525252"/>
    <SolidColorBrush x:Key="TabHeaderPanelBackground.Blend" Color="#FF444444"/>
    <LinearGradientBrush x:Key="TabButton.SelectedBrush.Blend"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF6D6C6C" />
            <GradientStop Offset="0.85" Color="#FF6B6C71" />
            <GradientStop Offset="1" Color="#FF686767" />

        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.Transform>
            <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820" />
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToolBarBackground.Blend" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF000000" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="0.004"/>
        <GradientStop Color="#FFB9B9B9" Offset="0"/>
        <GradientStop Color="#FF666666" Offset="0.991"/>
        <GradientStop Color="#FF898989" Offset="1"/>
        <GradientStop Color="#FFA6A6A6" Offset="0"/>
        <GradientStop Color="#FF828282" Offset="1"/>
        <GradientStop Color="#FF737373" Offset="0.031"/>
        <GradientStop Color="#FF888888" Offset="1"/>
        <GradientStop Color="#FF888888" Offset="1"/>
        <GradientStop Color="#FF333333" Offset="0.701"/>
        <GradientStop Color="#FF333333" Offset="0.964"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TreeViewBorderBrush.Blend" Color="#FF595959"/>
    <SolidColorBrush x:Key="BlendCornerBackground" Color="#FF4B4B4B"/>

    <!-- Button -->

    <Style x:Key="BlendButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >

                    <Border Name="Chrome" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                                                          
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"                                                  
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource BlendButtonStyle}" TargetType="{x:Type Button}"/>
    <Style x:Key="BlendToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}" >

                    <Border Name="Chrome" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                                                          
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"                                                  
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource BlendToggleButtonStyle}" TargetType="{x:Type ToggleButton}"/>
    <!-- ToggleButton -->

    <!--<ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="BlendToggleButtonBaseTemplate">
        <Border Name="Chrome" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"  BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter Margin="{TemplateBinding Padding}"                                                 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Chrome" Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ToggleCheckedBrush.Blend}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonBorderBrush.Blend}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <!-- RepeatButton -->

    <!--<ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="BlendRepeatButtonBaseTemplate">
        <Border Name="Chrome"  Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter Margin="{TemplateBinding Padding}"                                                 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                <Setter Property="Foreground" Value="Black"/>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ToggleCheckedBrush.Blend}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Chrome" Property="Opacity" Value="0.5"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <!-- CheckBox -->

    <Style x:Key="CheckRadioFocusVisual.Blend">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlendCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" 
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <Path Visibility="Hidden" Margin="2" Fill="#FFFDFDFD" x:Name="path">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="2,4">
                                                    <LineSegment Point="3,6"/>
                                                    <LineSegment Point="5,-1"/>
                                                    <LineSegment Point="7,-1"/>
                                                    <LineSegment Point="4,8"/>
                                                    <LineSegment Point="2,8"/>
                                                    <LineSegment Point="0,5"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                    <Border Margin="3" Name="bd" Height="6" Width="5" Background="{StaticResource ComboToggleMouseOver.Blend}" Visibility="Collapsed">
                                    </Border>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual.Blend}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource CheckBoxMouseOver.Blend}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path"
                        Property="Visibility"
                        Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="bd" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="path" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource BlendCheckBoxStyle}" TargetType="{x:Type CheckBox}"/>

    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <TextBlock Text="{Binding Path=Name}"/>
    </DataTemplate>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox -->

    <Style x:Key="BlendComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlendComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ComboToggleBrush.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1" CornerRadius="3"  BorderThickness="{TemplateBinding BorderThickness}"
                                
                                        Background="{StaticResource ComboTextBoxBrush.Blend}"
                                        BorderBrush="{StaticResource ForegroundBrush.Blue}"                                       
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>

                            <Border CornerRadius="3" Name="Chrome"  Background="{StaticResource ComboToggleBrush.Blend}" BorderThickness="1"
                                        BorderBrush="{StaticResource ButtonBorderBrush.Blend}"  Grid.Column="1" Width="16">

                                <Path Name="Arrow" StrokeThickness="2"                                 
                                  Stroke="White"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="True"/>
                            </MultiTrigger.Conditions>


                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                        </MultiTrigger>


                        <Trigger Property="IsPressed" Value="true">

                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboTogglePressed.Blend}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxButtonStyleBlend"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ComboToggleBrush.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome" CornerRadius="4"
                                Grid.Column="1"
                                Width="16"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  Fill="White"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                        </MultiTrigger>


                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboTogglePressed.Blend}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    <Style x:Key="BlendComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="BorderBrush"
                        Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="Background"
                        Value="{StaticResource  ComboTextBoxBrush.Blend}"/>
        <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush.Blend}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Style="{StaticResource BlendComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <TextBox Visibility="Hidden" Style="{StaticResource BlendComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"  BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}" BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
									<!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>-->
                                    <ItemsPresenter  x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                            <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
		</Setter.Value>
		</Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="BorderBrush"
                        Value="{StaticResource ForegroundBrush.Blue}"/>
                <Setter Property="Background"
                       Value="{StaticResource  ComboTextBoxBrush.Blend}"/>
                <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush.Blend}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Style="{StaticResource BlendComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <TextBox Visibility="Hidden" Style="{StaticResource BlendComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"  BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}" BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/> 
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                            <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
		</Setter.Value>
		</Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource BlendComboBoxStyle}" TargetType="{x:Type ComboBox}"/>


    <Style x:Key="BlendComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="3,0,3,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ComboItemBackground.Blend}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxItemBorderBrush.Blue}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd" CornerRadius="4" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboItemMouseOver.Blend}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource BlendComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>


    <Style x:Key="BlendRadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
        <Setter Property="Background"
                Value="{StaticResource CheckBoxBackground.Blend}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBorderBrush.Blend}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Canvas Name="canvas" Width="13" Height="13">
                                <Ellipse x:Name="ellipse1" Width="13" Height="13" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}">
                                </Ellipse>

                                <Ellipse x:Name="ellipse" Canvas.Left="3" Canvas.Top="3" Width="7" Height="7">
                                </Ellipse>
                            </Canvas>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual.Blend}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger  Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="ellipse" Value="#FFFDFDFD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse1" Property="Stroke" Value="#FFFAFAFA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource BlendRadioButtonStyle}" TargetType="{x:Type RadioButton}"/>



    <!-- ListBox -->

        <Style x:Key="BlendListBoxStyle"
           TargetType="{x:Type ListBox}">
            <Setter Property="Background"
                Value="{StaticResource ComboTextBoxBrush.Blend}"/>
            <Setter Property="BorderBrush"
                Value="{StaticResource TreeViewBorderBrush.Blend}"/>
            <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
            <Setter Property="BorderThickness"
                Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
            <Setter Property="VerticalContentAlignment"
                Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                 Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource BlendListBoxStyle}" TargetType="{x:Type ListBox}"/>


        <!-- ListBoxItem -->
   

        <Style x:Key="BlendListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{StaticResource ComboItemBackground.Blend}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding"
                Value="2,0,0,0"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Bd" CornerRadius="2"  
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter  Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                 Value="true">
                                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>

                                <Setter Property="Foreground"
                                    Value="Black"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                           Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter  TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                                <Setter Property="Foreground"
                                    Value="Black"/>
                            </MultiTrigger>


                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Opacity"
                                    Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListItemMouseOver.Blend}"/>
                                <Setter Property="Foreground"
                                    Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource BlendListBoxItemStyle}" TargetType="{x:Type ListBoxItem}"/>



    <!-- Menu -->
            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
            <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
            <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

            <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <SolidColorBrush x:Key="MenuBorderBrush" Color="#FF595959"/>
    <SolidColorBrush x:Key="MenuItemBackground" Color="#FF3A3A3A"/>
    <ControlTemplate x:Key="SubmenuContentBlend"
                     TargetType="{x:Type ContentControl}">
                <Border Background="{StaticResource ComboTextBoxBrush.Blend}"
                BorderBrush="#FF595959"
                BorderThickness="1">
                    <Grid>
                        <ContentPresenter Margin="1,0"/>
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style x:Key="BlendMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
                <Setter Property="ClickMode"
                Value="Hover"/>
                <Setter Property="MinWidth"
                Value="0"/>
                <Setter Property="MinHeight"
                Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
                                <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
                                <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
                                <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
                                <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
                                <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                 Value="true">
                                    <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                    <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                    <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="BlendMenuScrollViewer"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
                <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
                <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="1"
                                Grid.Column="0">
                                    <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                                <RepeatButton
                                      Style="{StaticResource BlendMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}"/>
                                </RepeatButton>
                                <RepeatButton
                                      Style="{StaticResource BlendMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                                    <RepeatButton.Visibility>
                                        <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}"/>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Margin="2" Height="1" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="BlendMenuStyle" TargetType="{x:Type Menu}">

                <Setter Property="Background" Value="{StaticResource MenuBackground.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
                <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
                <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
                <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <ControlTemplate.Resources>
                                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
                                    <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                                    <Setter Property="Background" 
                        Value="#FF595959" />
                                    <Setter Property="Height" Value="1" />
                                    <Setter Property="Margin" Value="2" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Separator}">

                                                <Border Margin="2,0,0,0"  SnapsToDevicePixels="True"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </ControlTemplate.Resources>
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    
               <Style BasedOn="{StaticResource BlendMenuStyle}" TargetType="{x:Type Menu}"/>
    
    
  


    <Style x:Key="BlendMenuItemStyle"
           TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background"
                Value="{StaticResource MenuItemBackground}"/>
                <Setter Property="Foreground" Value="#FFDCDCDC"/>
        <Setter Property="Padding" Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                              

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="10"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        
                                        <ColumnDefinition Width="*"/>
                                    
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1" Grid.ColumnSpan="4"
                       />
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                    <Path Name="Glyph"
                          Width="9" Margin="3" Grid.Column="0"
                          Height="11"
                          Visibility="Collapsed"
                          Fill="{StaticResource ForegroundBrush.Blend}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>

                                    <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="2"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="Glyph"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="Black"/>

                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role"
                     Value="TopLevelHeader">
                        <Setter Property="Padding" Value="7,2,8,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Rectangle x:Name="OuterBorder"                              
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                      />
                                        <DockPanel>
                                            <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                            <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </DockPanel>
                                        <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                            <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource SubmenuContentBlend}"
                                    IsTabStop="false">
                                                    <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource BlendMenuScrollViewer}">
                                                        <ItemsPresenter Margin="0"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                    </ScrollViewer>
                                                </ContentControl>
                                            </theme:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                            <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon"
                     Value="{x:Null}">
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                     Value="true">
                                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                     Value="true">
                                            <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                            <Setter Property="Foreground" Value="Black"/>

                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                            <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                            <Setter Property="Foreground" Value="Black"/>

                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                     Value="false">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role"
                     Value="TopLevelItem">
                        <Setter Property="Padding" Value="7,2,8,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Rectangle x:Name="OuterBorder" 
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                      />

                                        <DockPanel>
                                            <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                            <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </DockPanel>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon"
                     Value="{x:Null}">
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                     Value="true">
                                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                     Value="true">
                                            <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                            <Setter Property="Foreground" Value="Black"/>

                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                            <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                            <Setter Property="Foreground" Value="Black"/>

                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                     Value="false">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>                        
                    </Trigger>
                    <Trigger Property="Role"
                     Value="SubmenuHeader">
                      <Setter Property="Padding" Value="8,3,8,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                    <Grid SnapsToDevicePixels="true">
                                       

                                       
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="10"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                              
                                                <ColumnDefinition Width="*"/>
                                             
                                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                <ColumnDefinition Width="17"/>
                                            </Grid.ColumnDefinitions>
                                    <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1" Grid.ColumnSpan="4" Margin="1,0"
                      />
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                            <Path Name="Glyph"
                          Width="9"
                          Height="11" Margin="3"
                          Visibility="Collapsed"
                          Fill="{StaticResource ForegroundBrush.Blend}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}" Grid.Column="0"/>

                                            <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                           
                                            <Path Grid.Column="3"
                      VerticalAlignment="Center"
                      Margin="4,0,6,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                       
                                        <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                            <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource SubmenuContentBlend}"
                                    IsTabStop="false">
                                                    <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource BlendMenuScrollViewer}">
                                                        <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                    </ScrollViewer>
                                                </ContentControl>
                                            </theme:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                            <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                        </Trigger>

                                        <Trigger Property="Icon"
                     Value="{x:Null}">
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                     Value="true">
                                            <Setter TargetName="Glyph"
                        Property="Visibility"
                        Value="Visible"/>
                                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                        </Trigger>

                                        <Trigger Property="IsHighlighted"
                     Value="true">
                                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                            <Setter Property="Foreground" Value="Black"/>

                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                     Value="false">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>                        
                    </Trigger>
                    <Trigger Property="Role"
                     Value="SubmenuItem">
                        <Setter Property="Padding"
                        Value="8,3,8,3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource BlendMenuItemStyle}" TargetType="{x:Type MenuItem}"/>

            <Style x:Key="BlendContextMenuStyle"
           TargetType="{x:Type ContextMenu}">                
                <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
                <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
                <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
                <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="MenuItem.Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="BorderThickness"
                Value="1"/>              
                <Setter Property="Padding"
                Value="2"/>
                <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
                <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent" 
                                                  SnapsToDevicePixels="true">
                                <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}">
                                    <Grid>

                                        <ScrollViewer Margin="1,0,1,0" CanContentScroll="true"                                             
                                              Style="{StaticResource BlendMenuScrollViewer}">
                                            <ItemsPresenter Margin="{TemplateBinding Control.Padding}"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
             </Style>
            <Style BasedOn="{StaticResource BlendContextMenuStyle}" TargetType="{x:Type ContextMenu}"/>









            <!-- ToolTip -->

            <Style x:Key="BlendToolTipStyle"
           TargetType="{x:Type ToolTip}">
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource ToolTipBackground.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
                <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
                <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
                <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
                <Setter Property="Padding"
                Value="5,1,5,4"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}">

                            <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource BlendToolTipStyle}" TargetType="{x:Type ToolTip}"/>
            

    <!-- TreeView -->

            <Style x:Key="BlendTreeViewStyle"
           TargetType="{x:Type TreeView}">
                <Setter Property="BorderBrush" Value="{StaticResource TreeViewBorderBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Padding"
                Value="1"/>                
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border Name="Bd"
                            CornerRadius="2" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                                <ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
                <Style BasedOn="{StaticResource BlendTreeViewStyle}" TargetType="{x:Type TreeView}"/>



            <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable"
                Value="False"/>
                <Setter Property="Width"
                Value="12"/>
                <Setter Property="Height"
                Value="12"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">

                            <Border Height="12" Width="12" CornerRadius="6"
                                        Background="{StaticResource TabControlBackground.Blend}"
                                        SnapsToDevicePixels="True"
                                         BorderBrush="Black"
                                          >
                                <Path Margin="1" 
                                       Width="5"
                                       Height="6" VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Data="M0,0L0,6 5,3.5 5,2.5z"       
                                       Fill="{StaticResource ComboToggleMouseOver.Blend}" Name="ExpandPath" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Path.Data" TargetName="ExpandPath" Value="M0,0L6,0 3.5,5 2.5,5z"/>
                                    <Setter Property="Width" TargetName="ExpandPath" Value="6"/>
                                    <Setter Property="Height" TargetName="ExpandPath" Value="5"/>
                                    <Setter Property="Margin" TargetName="ExpandPath" Value="0,1,0,0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding"
                Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel Name="Part_Select"  Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Column="0">

                                    <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                                    <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>

                                </StackPanel>
                                <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        />


                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="Part_Select">
                                    <Setter Property="Background" Value="{StaticResource ComboToggleMouseOver.Blend}" TargetName="Part_Select"/>
                                    <Setter Property="Foreground"
                                    Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsExpanded"
                                 Value="false">
                                    <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems"
                                 Value="false">
                                    <Setter TargetName="Expander"
                                   Property="Visibility"
                                    Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                                 Value="true">
                                    <Setter TargetName="Part_Select"
                                    Property="Background"
                                    Value="{StaticResource TreeViewSelected.Blend}"/>
                                    <Setter Property="Foreground"
                                    Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>


    <!-- TextBoxBase -->

            <Style x:Key="BlendTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource  TextBoxBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                <Setter Property="BorderThickness"
                Value="2"/>
                <Setter Property="Padding"
                Value="1"/>
                <Setter Property="AllowDrop"
                Value="true"/>
                <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}" >

                            <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"                                         
                                         Background="{TemplateBinding Background}"
                                         CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

    <Style BasedOn="{StaticResource BlendTextBoxStyle}" TargetType="{x:Type TextBox}"/>
   
            <!-- PasswordBox -->

            <Style x:Key="BlendPasswordBoxStyle"
           TargetType="{x:Type PasswordBox}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource  ComboTextBoxBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="FontFamily"
                Value="Times New Roman"/>
                <Setter Property="PasswordChar"
                Value="●"/>
                <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
                <Setter Property="Padding"
                Value="1"/>
                <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
                <Setter Property="AllowDrop"
                Value="true"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">

                            <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"                                         
                                         Background="{TemplateBinding Background}"
                                         CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource BlendPasswordBoxStyle}" TargetType="{x:Type PasswordBox}"/>

            <!-- Expander -->

            <Style x:Key="BlendExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{StaticResource ComboToggleMouseOver.Blend}"
                                  Fill="{StaticResource ComboToggleMouseOver.Blend}"
                                  StrokeThickness="2"
                                  SnapsToDevicePixels="false"
                                  Data="M 0 0 L 0 9 L 4.5 4.5"/>
                                    <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                 Value="true">
                                    <Setter Property="Data"
                                    Value="M0,0L3.5,4 7,0z"
                                    TargetName="arrow"/>
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource SliderThumbSelected.Blend}" />
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="true">

                                    <Setter Property="Stroke"
                                    Value="{StaticResource ExpanderHeader.Blend}"
                                    TargetName="arrow"/>
                                    <Setter Property="Fill" Value="{StaticResource ExpanderHeader.Blend}" TargetName="arrow"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlendExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>

                                        <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource ComboToggleMouseOver.Blend}"
                                      Fill="{StaticResource ComboToggleMouseOver.Blend}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 0 0 L 0 9 L 4.5 4.5"/>
                                    </Grid>
                                    <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                 Value="true">
                                    <Setter Property="Data"
                                    Value="M0,4 L7,4 3.5,0z"
                                    TargetName="arrow"/>
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource SliderThumbSelected.Blend}" />
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>

                                <Trigger Property="IsMouseOver"
                                 Value="true">

                                    <Setter Property="Stroke"
                                    Value="{StaticResource ExpanderHeader.Blend}"
                                    TargetName="arrow"/>
                                    <Setter Property="Fill" Value="{StaticResource ExpanderHeader.Blend}" TargetName="arrow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlendExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>

                                        <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource ComboToggleMouseOver.Blend}"
                                      Fill="{StaticResource ComboToggleMouseOver.Blend}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M0,0L3.5,4 7,0z"/>
                                    </Grid>
                                    <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                 Value="true">
                                    <Setter Property="Data"
                                    Value="M 7 1 L 3 5 L 7 9 z"
                                    TargetName="arrow"/>
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource SliderThumbSelected.Blend}" />
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="true">

                                    <Setter Property="Stroke"
                                    Value="{StaticResource ExpanderHeader.Blend}"
                                    TargetName="arrow"/>
                                    <Setter Property="Fill" Value="{StaticResource ExpanderHeader.Blend}" TargetName="arrow"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlendExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">


                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>

                                        <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource ComboToggleMouseOver.Blend}"
                                      Fill="{StaticResource ComboToggleMouseOver.Blend}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M0,0L3.5,4 7,0z"/>
                                    </Grid>
                                    <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                 Value="true">
                                    <Setter Property="Data"
                                    Value="M 3 1 L 7 5 L 3 9 z"
                                    TargetName="arrow"/>
                                    <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource SliderThumbSelected.Blend}" />
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="true">

                                    <Setter Property="Stroke"
                                    Value="{StaticResource ExpanderHeader.Blend}"
                                    TargetName="arrow"/>
                                    <Setter Property="Fill" Value="{StaticResource ExpanderHeader.Blend}" TargetName="arrow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendExpanderStyle"
           TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource TabControlBackground.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
                <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Margin="1"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Style="{StaticResource BlendExpanderDownHeaderStyle}"                                        
                                          IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                                 Value="true">
                                    <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                                 Value="Right">
                                    <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
                                    <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
                                    <Setter Property="Style"
                                    Value="{StaticResource BlendExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                                 Value="Up">
                                    <Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
                                    <Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
                                    <Setter Property="Style"
                                    Value="{StaticResource BlendExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                                 Value="Left">
                                    <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
                                    <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
                                    <Setter Property="Style"
                                    Value="{StaticResource BlendExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource BlendExpanderStyle}" TargetType="{x:Type Expander}"/>
           

           

            <!-- GroupBox -->
            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

            <Style x:Key="BlendGroupBoxStyle"
           TargetType="{x:Type GroupBox}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <Border Name="border" CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4" Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"/>
                                <Border x:Name="Header" 
                               Padding="3,1,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                                    <ContentPresenter ContentSource="Header"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ContentPresenter Grid.Row="2"
                                         Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border CornerRadius="4"
                               Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="White">
                                    <Border.OpacityMask>
                                        <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                            <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                            <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                            <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                        </MultiBinding>
                                    </Border.OpacityMask>

                                    <Border BorderThickness="{TemplateBinding BorderThickness}"  
                                    BorderBrush="Transparent" 
                                    CornerRadius="3">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                        BorderBrush="White"
                                        CornerRadius="2"/>
                                    </Border>
                                </Border>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendGroupBoxStyle}" TargetType="{x:Type GroupBox}"/>
    
            <Style x:Key="BlendGroupItemStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <StackPanel>
                                <ContentPresenter/>
                                <ItemsPresenter Margin="5,0,0,0"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendGroupItemStyle}" TargetType="{x:Type GroupItem}"/>

    <Style x:Key="BlendHyperlinkStyle"
           TargetType="{x:Type Hyperlink}">

                <Setter Property="Foreground"
                Value="Blue"/>
                <Setter Property="TextDecorations"
                Value="Underline"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                     Value="true">
                        <Setter Property="Foreground"
                        Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsEnabled"
                     Value="false">
                        <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
<Style BasedOn="{StaticResource BlendHyperlinkStyle}" TargetType="{x:Type Hyperlink}"/>

            <!-- StatusBar -->


            <Style x:Key="BlendStatusBarStyle"
           TargetType="{x:Type StatusBar}">
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
                <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
                <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
                <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type StatusBar}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource BlendStatusBarStyle}" TargetType="{x:Type StatusBar}"/>
    
    
            <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{StaticResource StatusBarSeparatorColor.Blend}"/>
                <Setter Property="MinWidth"
                Value="1"/>
                <Setter Property="MinHeight"
                Value="1"/>
                <Setter Property="Margin"
                Value="2"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendStatusBarItemStyle"
           TargetType="{x:Type StatusBarItem}">
                <Setter Property="Padding"
                Value="3"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type StatusBarItem}">

                            <Border Background="{TemplateBinding Background}" Name="bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Foreground"
                                    Value="#FF858585"/>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource BlendStatusBarItemStyle}" TargetType="{x:Type StatusBarItem}"/>


            <!-- ProgressBar -->

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFillBlend" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#00000000"
                          Offset="0"/>
                    <GradientStop Color="#FF000000"
                          Offset="0.4"/>
                    <GradientStop Color="#FF000000"
                          Offset="0.6"/>
                    <GradientStop Color="#00000000"
                          Offset="1"/>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="DefaultThumbColor1" MappingMode="Absolute" StartPoint="204.748047,-558.712891" EndPoint="204.748047,-553.257813">

                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0" Color="#FFFFFFFF" />
                    <GradientStop Offset="1" Color="#FFC6C6C6" />
                </LinearGradientBrush.GradientStops>
                <LinearGradientBrush.Transform>
                    <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820" />
                </LinearGradientBrush.Transform>
            </LinearGradientBrush>

            <Style x:Key="BlendProgressBarStyle"
           TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground"
                Value="{StaticResource ProgressBarForeground.Blend}"/>
                <Setter Property="Background"
                Value="{StaticResource ProgressBarBackground.Blend}"/>
                <Setter Property="BorderBrush"
                Value="{StaticResource  ProgressBarBorderBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid Name="Background"
                          SnapsToDevicePixels="true">
                                <Rectangle Fill="{TemplateBinding Background}"
                                   RadiusX="2"
                                   RadiusY="2"/>
                                <Border Background="{StaticResource  ProgressBarGlassyHighlightBrush.Blend}"
                                Margin="1"
                                CornerRadius="2"/>
                                <Border BorderBrush="#80FFFFFF"
                                Background="{StaticResource  ProgressBarTopHighlightBrush.Blend}"
                                BorderThickness="1,0,1,1"
                                Margin="1"/>
                                <Rectangle Name="PART_Track"
                                   Margin="1" Fill="{StaticResource DefaultThumbColor1}" Stroke="DarkGray" StrokeThickness="0.5"/>

                                <Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
                                    <Grid Name="Foreground">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="15"/>
                                            <ColumnDefinition Width="0.1*"/>
                                            <ColumnDefinition MaxWidth="15"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="Indicator"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}"/>
                                        <Rectangle x:Name="Animation"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}">
                                            <Rectangle.OpacityMask>
                                                <MultiBinding>
                                                    <MultiBinding.Converter>
                                                        <theme:ProgressBarHighlightConverter/>
                                                    </MultiBinding.Converter>
                                                    <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFillBlend}"/>
                                                    <Binding Path="ActualWidth"
                                                     ElementName="Background"/>
                                                    <Binding Path="ActualHeight"
                                                     ElementName="Background"/>
                                                </MultiBinding>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource  ProgressBarIndicatorDarkEdgeLeftBrush.Blend}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
                                        <Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource  ProgressBarIndicatorDarkEdgeRightBrush.Blend}"
                                           Margin="0,1,1,1"/>
                                        <Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource  ProgressBarIndicatorLightingEffectLeftBrush.Blend}"/>
                                        <Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource  ProgressBarIndicatorLightingEffectBrush.Blend}"/>
                                        <Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource  ProgressBarIndicatorLightingEffectRightBrush.Blend}"/>
                                        <Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource  ProgressBarIndicatorGlassyHighlightBrush.Blend}"/>
                                        <Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource  ProgressBarTopHighlightBrush.Blend}"/>

                                    </Grid>

                                </Decorator>


                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation"
                                 Value="Vertical">
                                    <Setter TargetName="Background"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Indicator"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Foreground"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsIndeterminate"
                                 Value="true">
                                    <Setter TargetName="LeftDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="RightDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="LeftLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="CenterLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="RightLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="Indicator"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsIndeterminate"
                                 Value="false">
                                    <Setter TargetName="Animation"
                                    Property="Fill"
                                    Value="{StaticResource ProgressBar.Blend}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
             <Style BasedOn="{StaticResource BlendProgressBarStyle}" TargetType="{x:Type ProgressBar}"/>


    <!-- Slider -->

            <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
            </Geometry>

            <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
            </Geometry>

            <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
            </Geometry>

            <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
            </Geometry>

            <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
            </Geometry>

            <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
            </Geometry>

            <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
            </Geometry>

            <Style x:Key="SliderRepeatButtonStyleBlend"
           TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="IsTabStop"
                Value="false"/>
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalSliderThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="22"/>
                <Setter Property="Width"
                Value="11"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="5.5"
                                                Y="11"/>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackground.Blend}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalSliderUpThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="18"/>
                <Setter Property="Width"
                Value="10"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform X="5"
                                                            Y="9"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted.Blend}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderBorder.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalSliderDownThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="18"/>
                <Setter Property="Width"
                Value="10"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>

                                    <TranslateTransform X="5"
                                                Y="9"/>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackground.Blend}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderBorder.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VerticalSliderThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="11"/>
                <Setter Property="Width"
                Value="22"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                                <TranslateTransform X="11"
                                                            Y="5.5"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackground.Blend}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalSliderLeftThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="10"/>
                <Setter Property="Width"
                Value="18"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                                <TranslateTransform X="9"
                                                            Y="5"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackground.Blend}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderBorder.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalSliderRightThumbStyleBlend"
           TargetType="{x:Type Thumb}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Height"
                Value="10"/>
                <Setter Property="Width"
                Value="18"/>
                <Setter Property="Foreground"
                Value="Gray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Canvas SnapsToDevicePixels="true">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform X="9"
                                                            Y="5"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted.Blend}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                                <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                                <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderBorder.Blend}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" 
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbMouseOver.Blend}"/>
                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource SliderBorder.Blend}"/>

                                </Trigger>

                                <Trigger Property="IsDragging"
                                 Value="true">
                                    <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blend}"/>
                                    <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SliderThumbSelected.Blend}"/>

                                    <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource SliderBorder.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendSliderStyle"
           TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
                <Setter Property="Background"                                
                Value="Transparent"/>
                <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="Foreground"
                Value="{StaticResource SliderTextBrushKey.Blue}"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Name="OuterBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="#FFC0C0C0"
                                     Height="4"/>
                                    <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="#FFC0C0C0"
                                     Height="4"/>
                                    <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="#FFC0C0C0"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="#FFC0C0C0"
                                    Height="4.0">
                                        <Canvas Margin="-6,-1">
                                            <Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                        </Canvas>
                                    </Border>
                                    <Track Grid.Row="1"
                                   Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton  Style="{StaticResource SliderRepeatButtonStyleBlend}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton  Style="{StaticResource SliderRepeatButtonStyleBlend}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                           Style="{StaticResource HorizontalSliderThumbStyleBlend}"/>
                                        </Track.Thumb>
                                    </Track>

                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="TopTick" Value="{StaticResource SliderBorder.Blend}"/>
                                    <Setter Property="Fill" TargetName="BottomTick" Value="{StaticResource SliderBorder.Blend}"/>
                                    <Setter Property="BorderBrush" TargetName="TrackBackground" Value="#FFC0C0C0"/>
                                    <Setter Property="Background" TargetName="TrackBackground" Value="#FFC0C0C0"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                 Value="TopLeft">
                                    <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderUpThumbStyleBlend}"/>
                                    <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,2,5,0"/>
                                </Trigger>

                                <Trigger Property="TickPlacement"
                                 Value="BottomRight">
                                    <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderDownThumbStyleBlend}"/>
                                    <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,0,5,2"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                 Value="Both">
                                    <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                                    <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                                    <Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Blue"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation"
                     Value="Vertical">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Slider}" >
                                    <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="#FFC0C0C0"
                                             Width="4"/>
                                            <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="#FFC0C0C0"
                                             Width="4"/>
                                            <Border Name="TrackBackground"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="#FFC0C0C0"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="#FFC0C0C0"
                                            Width="4.0">

                                                <Canvas Margin="-1,-6">
                                                    <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                                </Canvas>
                                            </Border>

                                            <Track Grid.Column="1"
                                           Name="PART_Track">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlend}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlend}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb"
                                                   Style="{StaticResource VerticalSliderThumbStyleBlend}"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Fill" TargetName="TopTick" Value="{StaticResource SliderBorder.Blend}"/>
                                            <Setter Property="Fill" TargetName="BottomTick" Value="{StaticResource SliderBorder.Blend}"/>
                                            <Setter Property="BorderBrush" TargetName="TrackBackground" Value="#FFC0C0C0"/>
                                            <Setter Property="Background" TargetName="TrackBackground" Value="#FFC0C0C0"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                            <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                            <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderLeftThumbStyleBlend}"/>
                                            <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="2,5,0,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                            <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                            <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderRightThumbStyleBlend}"/>
                                            <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="0,5,2,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement"
                                         Value="Both">
                                            <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                            <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                            <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused"
                                         Value="true">
                                            <Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Blue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
    <Style BasedOn="{StaticResource BlendSliderStyle}" TargetType="{x:Type Slider}"/>


    <!-- Separator -->
            <Style x:Key="BlendSeparatorStyle"
           TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Margin"
                Value="0,0.1,0,0.1"/>
                <Setter Property="Focusable"
                Value="false"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendSeparatorStyle}" TargetType="{x:Type Separator}"/>


            <!-- ScrollBar -->
            <Style x:Key="ScrollBarDownButtonBlend" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>

                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">
                                <Path Data="M0,0L4.5,5 8,0z" HorizontalAlignment="Center" Fill="{StaticResource ComboToggleBrush.Blend}" Name="Arrow" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ExpanderHeader.Blend}"/>
                                </Trigger>

                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FF808080"/>
                                </Trigger>
                                <Trigger Property="IsPressed"  Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFE5E5E5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarLeftButtonBlend" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>

                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">
                                <Path Data=" M 0 4.5 L 4.5 9 L 4.5 0 Z" HorizontalAlignment="Center" Fill="{StaticResource ComboToggleBrush.Blend}" Name="Arrow" VerticalAlignment="Center" >
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ExpanderHeader.Blend}"/>
                                </Trigger>

                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FF808080"/>
                                </Trigger>
                                <Trigger Property="IsPressed"  Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFE5E5E5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarRightButtonBlend" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>

                <Setter Property="Control.Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">

                            <Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">

                                <Path Data="M 0 0 L 0 9 L 4.5 4.5" HorizontalAlignment="Center" Fill="{StaticResource ComboToggleBrush.Blend}" Name="Arrow" VerticalAlignment="Center" >

                                </Path>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ExpanderHeader.Blend}"/>
                                </Trigger>

                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FF808080"/>
                                </Trigger>
                                <Trigger Property="IsPressed"  Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFE5E5E5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarUpButtonBlend" TargetType="RepeatButton">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>

                <Setter Property="Control.Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">

                            <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">

                                <Path Data="M0,5 L8,5 4.5,0z" HorizontalAlignment="Center" Fill="{StaticResource ComboToggleBrush.Blend}" Name="Arrow" VerticalAlignment="Center" >

                                </Path>

                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ExpanderHeader.Blend}"/>
                                </Trigger>


                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FF808080"/>
                                </Trigger>
                                <Trigger Property="IsPressed"  Value="True">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFE5E5E5" />
                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarVerticalThumbBlend" TargetType="{x:Type Thumb}">

                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">

                            <Rectangle
                          Name="PART_RepeatThumb"
                          RadiusX="3"
                          RadiusY="3" Fill="{StaticResource ComboToggleBrush.Blend}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">

                                    <Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource ExpanderHeader.Blend}" />
                                </Trigger>
                                <Trigger Property="IsDragging"  Value="True">

                                    <Setter Property="Fill" TargetName="PART_RepeatThumb" Value="#FFE5E5E5" />

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarHorizontalThumbBlend" TargetType="{x:Type Thumb}">

                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>


                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle
                               Name="PART_RepeatThumb"
                               RadiusX="3"
                               RadiusY="3" Fill="{StaticResource ComboToggleBrush.Blend}"/>


                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">

                                    <Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource ExpanderHeader.Blend}" />
                                </Trigger>
                                <Trigger Property="IsDragging"  Value="True">

                                    <Setter Property="Fill" TargetName="PART_RepeatThumb" Value="#FFE5E5E5" />

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HorizontalScrollBarPageButtonBlend"
          TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="IsTabStop"
                Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VerticalScrollBarPageButtonBlend"
          TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="IsTabStop"
                Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
                <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                </Grid.RowDefinitions>
                                <RepeatButton Name="UpButton" Style="{StaticResource ScrollBarUpButtonBlend}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      />

                                <Track Grid.Row="1"
                             Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlend}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlend}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Margin="6,0,5,0" Name="tmb" Style="{StaticResource ScrollBarVerticalThumbBlend}"
                                       />
                                    </Track.Thumb>

                                </Track>

                                <RepeatButton Name="DownButton" Style="{StaticResource ScrollBarDownButtonBlend}"
                                    Grid.Row="3"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                     />
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation"
                     Value="Horizontal">
                        <Setter Property="Width"
                        Value="Auto"/>
                        <Setter Property="MinWidth"
                        Value="0"/>
                        <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground.Blend}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Name="LeftButton" Style="{StaticResource ScrollBarLeftButtonBlend}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              />
                                        <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlend}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlend}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Margin="0,5,0,5" Style="{StaticResource ScrollBarHorizontalThumbBlend}"
                                               />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton Name="RightButton" Style="{StaticResource ScrollBarRightButtonBlend}"
                                              Grid.Column="3"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              />
                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
                <Style BasedOn="{StaticResource BlendScrollBarStyle}" TargetType="{x:Type ScrollBar}"/>


            <Style x:Key="BlendScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Corner" Fill="{StaticResource BlendCornerBackground}" Grid.Column="1" Grid.Row="1"/>
                                <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                                <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                                <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                            </Grid>                          
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>

            <!-- TabControl -->

            <Style x:Key="BlendTabControlStyle"
           TargetType="{x:Type TabControl}">
                <Setter Property="Padding"
                Value="4,4,4,4"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource TabControlBackground.Blend}"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                                    <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="2,2,2,0"
                                  IsItemsHost="true" Background="{StaticResource TabHeaderPanelBackground.Blend}"/>
                                <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1"
                                CornerRadius="5">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                                    <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                                    <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                                    <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                                    <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                                    <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                 Value="Left">
                                    <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                                    <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                                    <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                                    <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                                    <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                                    <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                                    <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                                    <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                                    <Setter Property="Margin"
                                    Value="2,2,0,2"
                                    TargetName="HeaderPanel"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                 Value="Right">
                                    <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                                    <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                                    <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                                    <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                                    <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                                    <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                                    <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                                    <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                                    <Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" 
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendTabControlStyle}" TargetType="{x:Type TabControl}"/>

    <Style x:Key="TabItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="3,3,3,1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendTabItemStyle"
           TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                Value="{StaticResource TabItemFocusVisual}"/>               
                <Setter Property="Padding"
                Value="6,1,6,1"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource TabItemBackground.Blend}" />
                <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
                <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid Margin="2,2,2,0" SnapsToDevicePixels="true">
                                <Border Name="Bd" Height="23" >
                                    <Border Name="MainButton"
                             Margin="-1,0,-1,0"
                             Grid.Column="1"
                             BorderThickness="3,1,3,1"
                             BorderBrush="Transparent"
                             CornerRadius="4"
                             Background="{TemplateBinding Background}"
                             >

                                        <ContentPresenter Name="Content"
                                              ContentSource="Header"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>

                                    </Border>
                                </Border>
                            </Grid>


                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource TabItemMouseOver.Blend}" TargetName="MainButton"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex"
                                    Value="1"/>
                                    <Setter Property="Background" Value="{StaticResource TabControlBackground.Blend}" TargetName="MainButton"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                                    <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                 Value="Left">
                                    <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                 Value="Right">
                                    <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="TabStripPlacement"
                                           Value="Top"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
                                    <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
                                    <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="TabStripPlacement"
                                           Value="Left"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
                                    <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="TabStripPlacement"
                                           Value="Right"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
                                    <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
                                </MultiTrigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
<Style BasedOn="{StaticResource BlendTabItemStyle}" TargetType="{x:Type TabItem}"/>


            <!-- GridView -->

            <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GridSplitterPreviewStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Fill="#80000000"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type GridSplitter}"
           TargetType="{x:Type GridSplitter}">
                <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="{x:Type ScrollViewer}">
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                        <GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                    <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                                <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                                <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="false">
                                    <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                    <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                </DockPanel>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="BlendGridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
                <Setter Property="Canvas.Right"
                Value="-9"/>
                <Setter Property="Width"
                Value="18"/>
                <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Padding"
                Value="0"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                                <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendGridViewColumnHeaderStyle"
           TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="0"/>
                <Setter Property="Padding"
                Value="2,0,2,0"/>                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid SnapsToDevicePixels="true">
                                <Border Name="HeaderBorder" 
                               BorderThickness="0,0,1,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                                </Border>
                                <Canvas>
                                    <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource BlendGridViewColumnHeaderGripper}"/>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource ToggleCheckedBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                 Value="true">
                                    <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                    <Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="Height"
                                 Value="Auto">
                                    <Setter Property="MinHeight"
                                    Value="20"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>                   
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.4082"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697"
                                           Fill="#FF000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
            </Style>
    <Style BasedOn="{StaticResource BlendGridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}"/>


            <Style x:Key="ListViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle StrokeThickness="1"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static GridView.GridViewStyleKey}"
           TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>               
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"                                         
                                         SnapsToDevicePixels="true">
                                <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping"
                                 Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
           TargetType="{x:Type ListViewItem}">
                <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ComboItemBackground.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Margin"
                Value="0,0,0,1"/>
                <Setter Property="Padding"
                Value="5,2,5,2"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}" >
                            <Border Height="20" Name="Bd" BorderThickness="0,1,0,0" CornerRadius="2" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">


                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                                 Value="true">
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>

                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="IsMouseOver"
                                           Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>

                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="BlendListViewStyle"
           TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"                                         
                                         SnapsToDevicePixels="true">
                                <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping"
                                 Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendListViewStyle}" TargetType="{x:Type ListView}"/>

            <Style x:Key="BlendListViewItemStyle"
           TargetType="{x:Type ListViewItem}">
                <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ComboItemBackground.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Margin"
                Value="0,0,0,1"/>
                <Setter Property="Padding"
                Value="5,2,5,2"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}" >
                            <Border Height="Auto" Name="Bd" BorderThickness="0,1,0,0" CornerRadius="2" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">


                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                                 Value="true">
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>

                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="true"/>
                                        <Condition Property="IsMouseOver"
                                           Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>

                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

<Style BasedOn="{StaticResource BlendListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>


            <!-- Thumb -->

            <!--<ControlTemplate TargetType="{x:Type Thumb}" x:Key="BlendThumbTemplate">
                <Border CornerRadius="6"  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									BorderBrush="Transparent" BorderThickness="5" Name="PART_RepeatThumb" Background="#FF808080">

                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">

                        <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource ExpanderHeader.Blend}" />
                    </Trigger>
                    <Trigger Property="IsDragging"  Value="True">

                        <Setter Property="Background" TargetName="PART_RepeatThumb" Value="#FF1A1A1A" />

                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>-->

            <!-- ResizeGrip -->
            <LinearGradientBrush x:Key="ResizeGripperForegroundBlend"
                          StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#D5E3F1"/>
                <GradientStop Offset="0.06" Color="#C8DBEE"/>
                <GradientStop Offset="0.39" Color="#C9DDF6"/>
                <GradientStop Offset="0.45" Color="#C0D4ED"/>
                <GradientStop Offset="0.50" Color="#BCD0E9"/>
                <GradientStop Offset="0.56" Color="#C1D3EC"/>
                <GradientStop Offset="0.66" Color="#C2D5ED"/>
                <GradientStop Offset="0.71" Color="#C6D9F1"/>
                <GradientStop Offset="0.77" Color="#C8DBF3"/>
                <GradientStop Offset="0.94" Color="#D0E1F7"/>
                <GradientStop Offset="1.00" Color="#E3EDFB"/>
            </LinearGradientBrush>
            <Style x:Key="BlendResizeGripStyle"
           TargetType="{x:Type ResizeGrip}">
                <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ResizeGrip}">
                            <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Margin="0,0,2,2"
                              Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z">

                                    <Path.Fill>
                                        <DrawingBrush Viewbox="0,0,3,3"
                                              Viewport="0,0,3,3"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Brush="#FFAAAAAA"
                                                                 Geometry="M 0,0 L 3,0 L 3,3 L 0,3 z "/>
                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendResizeGripStyle}" TargetType="{x:Type ResizeGrip}"/>

    <!-- ToolBar -->

            <Style x:Key="BlendToolBarTrayStyle" TargetType="{x:Type ToolBarTray}" >
               <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
            </Style>

    <Style BasedOn="{StaticResource BlendToolBarTrayStyle}" TargetType="{x:Type ToolBarTray}"/>

            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{StaticResource StatusBarSeparatorColor.Blend}"/>
                <Setter Property="MinWidth"
                Value="1"/>
                <Setter Property="MinHeight"
                Value="1"/>
                <Setter Property="Margin"
                Value="2,2,2,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush.Blend}"/>
                <Setter Property="Padding"
                Value="2"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="BorderBrush"
                Value="Transparent"/>
                <Setter Property="HorizontalAlignment"
                Value="Center"/>
                <Setter Property="VerticalAlignment"
                Value="Center"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">

                            <Border
          x:Name="Border"          
          BorderThickness="1"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Name="content"  Margin="{TemplateBinding Padding}"                                                  
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                    <Setter Property="TextBlock.Foreground" TargetName="content" Value="#FF000000"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="Button.IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush.Blend}"/>
                <Setter Property="Padding"
                Value="2"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="BorderBrush"
                Value="Transparent"/>
                <Setter Property="HorizontalAlignment"
                Value="Center"/>
                <Setter Property="VerticalAlignment"
                Value="Center"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Name="Chrome" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Margin="{TemplateBinding Padding}"                                                 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Chrome" Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="true">
                                    <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ToggleCheckedBrush.Blend}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True"/>
                                        <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}"/>
            <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}"/>

            <Style x:Key="BlendToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
                <Setter Property="MinWidth"
                Value="0"/>
                <Setter Property="MinHeight"
                Value="0"/>
                <Setter Property="Width"
                Value="Auto"/>
                <Setter Property="Background"
                Value="{StaticResource ComboToggleBrush.Blend}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Focusable"
                Value="false"/>
                <Setter Property="ClickMode"
                Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Chrome"
                                Grid.Column="1"
                                Width="13"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                    <Path x:Name="ArrowDownPath"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  Stroke="{StaticResource ForegroundBrush.Blend}"
                                  StrokeThickness="2"
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                           Value="true"/>
                                        <Condition Property="IsChecked"
                                           Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>
                                </MultiTrigger>
                                <Trigger Property="IsChecked"
                                 Value="true">
                                    <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="White"/>
                                </Trigger>

                                <Trigger Property="IsPressed"
                                 Value="true">

                                    <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboTogglePressed.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush.Blend}"/>
                <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Margin"
                Value="1,0"/>
                <Setter Property="Padding"
                Value="0"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
                <Setter Property="HorizontalAlignment"
                Value="Center"/>
                <Setter Property="VerticalAlignment"
                Value="Center"/>
                <Setter Property="MinHeight"
                Value="18"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid Grid.IsSharedSizeScope="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Name="Background" 
                                    Background="{StaticResource ComboTextBoxBrush.Blend}"/>
                                    <Border Name="SelectedContentBorder"
                                    Margin="2,2,1,2">
                                        <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <Border Name="Border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                   BorderBrush="{StaticResource ButtonBorderBrush.Blend}"
                                    />
                                    <ToggleButton 
                                          BorderThickness="1"
                                          x:Name="DropDownButton"
                                          Grid.ColumnSpan="2"
                                          Style="{StaticResource BlendToolBarComboBoxTransparentButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBox Padding="{TemplateBinding Padding}"
                                     Margin="1,1,0,1"
                                     MinHeight="18"
                                     x:Name="PART_EditableTextBox"
                                     Style="{StaticResource BlendComboBoxEditableTextBox}"
                                     Visibility="Collapsed"
                                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"/>
                                </Grid>
                                <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                        Background="{StaticResource ComboTextBoxBrush.Blend}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ButtonBorderBrush.Blend}">
                                            <ScrollViewer>
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>

                                <Trigger Property="IsEditable"
                                 Value="true">
                                    <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{x:Null}"/>
                                    <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                    <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>

                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="Border"
                                 Value="true">
                                    <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">

                                    <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="White"/>
                                    <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ComboToggleMouseOver.Blend}"/>

                                </Trigger>

                                <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                                    <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                                    <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems"
                                 Value="false">
                                    <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
                                </Trigger>
                                <Trigger Property="IsGrouping"
                                 Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                                </Trigger>
                                <Trigger Property="IsEditable"
                                 Value="true">
                                    <Setter Property="Padding"
                                    Value="2"/>
                                    <Setter Property="IsTabStop"
                                    Value="false"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Margin"
                Value="1,0"/>
                <Setter Property="Padding"
                Value="2"/>
                <Setter Property="HorizontalAlignment"
                Value="Center"/>
                <Setter Property="VerticalAlignment"
                Value="Center"/>
                <Setter Property="MinHeight"
                Value="18"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border Name="Border" 
                            Background="{StaticResource ComboTextBoxBrush.Blend}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      MinHeight="18"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                                    <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="{x:Type Menu}">
                <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
                <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
                <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
                <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <ControlTemplate.Resources>
                                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">

                                    <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                                    <Setter Property="Background" 
                        Value="White" />
                                    <Setter Property="Height" Value="1" />
                                    <Setter Property="Margin" Value="0,1,0,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Separator}">

                                                <Border Margin="2,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                                    <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    <Setter Property="Background"
                Value="Transparent"/>
                                    <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blend}"/>
                                    <Setter Property="Padding"
                        Value="2,3,2,3"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Grid SnapsToDevicePixels="true">
                                                    <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       />

                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                            <ColumnDefinition Width="4"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="37"/>
                                                            <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                            <ColumnDefinition Width="17"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource ForegroundBrush.Blend}"
                                          Visibility="Collapsed"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>

                                                        <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon"
                     Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                     Value="true">
                                                        <Setter TargetName="Glyph"
                        Property="Visibility"
                        Value="Visible"/>
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                     Value="true">
                                                        <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                        <Setter Property="Foreground" Value="Black"/>

                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                     Value="false">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <Trigger Property="Role"
                             Value="TopLevelHeader">
                                            <Setter Property="Padding"
                        Value="7,2,8,3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                        <Grid SnapsToDevicePixels="true">
                                                            <Rectangle x:Name="OuterBorder"                              
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                      />
                                                            <DockPanel>
                                                                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                                                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </DockPanel>
                                                            <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                                <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                                    <ContentControl Name="SubMenuBorder"
                                    Template="{DynamicResource SubmenuContentBlend}"
                                    IsTabStop="false">
                                                                        <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource BlendMenuScrollViewer}">
                                                                            <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                                        </ScrollViewer>
                                                                    </ContentControl>
                                                                </theme:SystemDropShadowChrome>
                                                            </Popup>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                                                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                                            </Trigger>
                                                            <Trigger Property="Icon"
                     Value="{x:Null}">
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                     Value="true">
                                                                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsHighlighted"
                     Value="true">
                                                                <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                                <Setter Property="Foreground" Value="Black"/>

                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                                                <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                                <Setter Property="Foreground" Value="Black"/>

                                                            </Trigger>
                                                            <Trigger Property="IsEnabled"
                     Value="false">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="Role"
                             Value="TopLevelItem">
                                            <Setter Property="Padding"
                        Value="7,2,8,3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                        <Grid SnapsToDevicePixels="true">
                                                            <Rectangle x:Name="OuterBorder" 
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                      />

                                                            <DockPanel>
                                                                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                                                <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </DockPanel>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="Icon"
                     Value="{x:Null}">
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                     Value="true">
                                                                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsHighlighted"
                     Value="true">
                                                                <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                                <Setter Property="Foreground" Value="Black"/>

                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                                                <Setter TargetName="OuterBorder"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                                <Setter Property="Foreground" Value="Black"/>

                                                            </Trigger>
                                                            <Trigger Property="IsEnabled"
                     Value="false">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="Role"
                             Value="SubmenuHeader">
                                            <Setter Property="Padding"
                        Value="2,3,2,3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                        <Grid SnapsToDevicePixels="true">
                                                            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                      />

                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                    <ColumnDefinition Width="4"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="37"/>
                                                                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                                    <ColumnDefinition Width="17"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                                                  Visibility="Collapsed"
                          Fill="{StaticResource ForegroundBrush.Blend}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>

                                                                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                                                <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                                            </Grid>
                                                            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                                <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                                    <ContentControl Name="SubMenuBorder"
                                    Template="{DynamicResource SubmenuContentBlend}"
                                    IsTabStop="false">
                                                                        <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource BlendMenuScrollViewer}">
                                                                            <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                                        </ScrollViewer>
                                                                    </ContentControl>
                                                                </theme:SystemDropShadowChrome>
                                                            </Popup>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                                                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                                            </Trigger>

                                                            <Trigger Property="Icon"
                     Value="{x:Null}">
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                     Value="true">
                                                                <Setter TargetName="Glyph"
                        Property="Visibility"
                        Value="Visible"/>
                                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                            </Trigger>

                                                            <Trigger Property="IsHighlighted"
                     Value="true">
                                                                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedBrush.Blend}"/>
                                                                <Setter Property="Foreground" Value="Black"/>

                                                            </Trigger>
                                                            <Trigger Property="IsEnabled"
                     Value="false">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>

                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ControlTemplate.Resources>
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="BlendToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
                <Setter Property="Background"
                Value="{StaticResource ComboToggleBrush.Blend}"/>
                <Setter Property="MinHeight"
                Value="0"/>
                <Setter Property="MinWidth"
                Value="0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Name="Bd"
                            CornerRadius="0,3,3,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                                <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                                    <Path Stroke="White"
                                  Data="M 1 1.5 L 6 1.5"/>
                                    <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0 0.5 L 5 0.5"/>
                                    <Path Fill="White"
                                  Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
                                    <Path Fill="{TemplateBinding Foreground}"
                                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                    <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                                    <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlendToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
                <Setter Property="Background"
                Value="{StaticResource ComboToggleBrush.Blend}"/>
                <Setter Property="MinHeight"
                Value="0"/>
                <Setter Property="MinWidth"
                Value="0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Name="Bd"
                            CornerRadius="0,0,3,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                                <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                                    <Path Stroke="White"
                                  Data="M 1.5 1 L 1.5 6"/>
                                    <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0.5 0 L 0.5 5"/>
                                    <Path Fill="White"
                                  Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
                                    <Path Fill="{TemplateBinding Foreground}"
                                  Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">

                                    <Setter TargetName="Bd" 
                                    Property="Background"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                 Value="true">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                    <Setter TargetName="Bd" 
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                                    <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonMouseOverBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ToolBarGripper"
                     Color="#C6C3C6"/>

            <Style x:Key="BlendToolBarThumbStyle"
           TargetType="{x:Type Thumb}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush Viewbox="0,0,4,4"
                                              Viewport="0,0,4,4"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Brush="White"
                                                                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                        <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                 Value="true">
                                    <Setter Property="Cursor"
                                    Value="SizeAll"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendToolBarStyle"
           TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="{StaticResource ToolBarBackground.Blend}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                                <Grid HorizontalAlignment="Right"
                              x:Name="OverflowGrid">
                                    <ToggleButton x:Name="OverflowButton"
                                          FocusVisualStyle="{x:Null}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource BlendToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                    <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                        <theme:SystemDropShadowChrome Name="Shdw"
                                                              Color="Transparent">
                                            <Border Background="{StaticResource ComboTextBoxBrush.Blend}"
                                            BorderBrush="{StaticResource ForegroundBrush.Blend}"
                                            BorderThickness="1">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                        </theme:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,3,3"
                                Padding="{TemplateBinding Padding}">
                                    <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                        <Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource BlendToolBarThumbStyle}"
                                       Margin="-3,-1,0,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
                                        <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,2,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen"
                                 Value="true">
                                    <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>
                                </Trigger>
                                <Trigger Property="Header"
                                 Value="{x:Null}">
                                    <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                                    <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                                </Trigger>

                                <Trigger Property="Orientation"
                                 Value="Vertical">
                                    <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
                                    <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource BlendToolBarVerticalOverflowButtonStyle}"/>
                                    <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
                                    <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
                                    <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
                                    <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
                                    <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
                                    <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
                                    <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                    <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                    <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
                                    <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
                                    <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
                                    <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
                                    <Setter Property="Background"
                                    Value="{StaticResource ComboTextBoxBrush.Blend}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsPressed"
                                 Value="true">

                                    <Setter TargetName="OverflowButton"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Blend}"/>
                                    <Setter TargetName="OverflowButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderBrush.Blend}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendToolBarStyle}" TargetType="{x:Type ToolBar}"/>



    <Style x:Key="{x:Type ContentControl}"
           TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlendFlowDocumentStyle"
           TargetType="{x:Type FlowDocument}">
                <Setter Property="TextAlignment"
                Value="Justify"/>
                <Setter Property="FontFamily"
                Value="Georgia"/>
                <Setter Property="FontSize"
                Value="16.0"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Background" Value="{StaticResource ComboTextBoxBrush.Blend}"/>
            </Style>
    <Style BasedOn="{StaticResource BlendFlowDocumentStyle}" TargetType="{x:Type FlowDocument}"/>
    

            <Style x:Key="BlendTextBlockStyle"
           TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping"
                Value="NoWrap"/>
                <Setter Property="TextTrimming"
                Value="None"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
            </Style>
    <Style BasedOn="{StaticResource BlendTextBlockStyle}" TargetType="{x:Type TextBlock}"/>

    <Style x:Key="{x:Type Bold}"
           TargetType="{x:Type Bold}">
                <Setter Property="FontWeight"
                Value="Bold"/>
            </Style>

            <Style x:Key="BlendFlowDocumentPageViewerStyle" TargetType="{x:Type FlowDocumentPageViewer}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
            </Style>
    <Style BasedOn="{StaticResource BlendFlowDocumentPageViewerStyle}" TargetType="{x:Type FlowDocumentPageViewer}"/>

            <Style x:Key="BlendFlowDocumentReaderStyle" TargetType="{x:Type FlowDocumentReader}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
            </Style>
    <Style BasedOn="{StaticResource BlendFlowDocumentReaderStyle}" TargetType="{x:Type FlowDocumentReader}"/>

            <Style x:Key="{x:Type Italic}"
           TargetType="{x:Type Italic}">
                <Setter Property="FontStyle"
                Value="Italic"/>
            </Style>
            <Style x:Key="{x:Type Underline}"
           TargetType="{x:Type Underline}">
                <Setter Property="TextDecorations"
                Value="Underline"/>
            </Style>
            <Style x:Key="{x:Type Paragraph}"
           TargetType="{x:Type Paragraph}">
                <Setter Property="Margin"
                Value="Auto"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
            </Style>

            <Style x:Key="{x:Type List}"
           TargetType="{x:Type List}">
                <Setter Property="Margin"
                Value="Auto"/>
                <Setter Property="Padding"
                Value="Auto"/>
            </Style>
            <Style x:Key="{x:Type Floater}"
           TargetType="{x:Type Floater}">
                <Setter Property="HorizontalAlignment"
                Value="Right"/>
            </Style>

            <DataTemplate DataType="{x:Type FlowDocument}">
                <FlowDocumentReader Document="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type FixedDocument}">
                <DocumentViewer Document="{Binding}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type FixedDocumentSequence}">
                <DocumentViewer Document="{Binding}"/>
            </DataTemplate>

            <Style x:Key="{x:Type HeaderedContentControl}"
           TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <StackPanel>
                                <ContentPresenter ContentSource="Header"/>
                                <ContentPresenter/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

          <!--  <Style x:Key="{x:Type ItemsControl}"
           TargetType="{x:Type ItemsControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style x:Key="BlendLabelStyle"
           TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blend}"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="Padding"
                Value="5"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
                <Setter Property="VerticalContentAlignment"
                Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    <Style BasedOn="{StaticResource BlendLabelStyle}" TargetType="{x:Type Label}"/>



    <!-- Page -->
        <Style x:Key="BlendPageStyle"
           TargetType="{x:Type Page}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Border Background="{StaticResource ComboTextBoxBrush.Blend}">
                            <ContentPresenter Content="{TemplateBinding Page.Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    </Style>
    <Style BasedOn="{StaticResource BlendPageStyle}"
           TargetType="{x:Type Page}"/>


        <Style x:Key="BlendRichTextBoxStyle"
           
           TargetType="{x:Type RichTextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                    <Setter Property="OverridesDefaultStyle"
                        Value="true"/>            
                </Style>
            </Style.Resources>
        <Setter Property="Background"                                
                Value="{StaticResource ComboTextBoxBrush.Blend}"/>
        <Setter Property="MinWidth"
                Value="10"/>
        </Style>
    <Style BasedOn="{StaticResource BlendRichTextBoxStyle}" TargetType="{x:Type RichTextBox}"/>

        <Style x:Key="{x:Type UserControl}"
           TargetType="{x:Type UserControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UserControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


</ResourceDictionary>