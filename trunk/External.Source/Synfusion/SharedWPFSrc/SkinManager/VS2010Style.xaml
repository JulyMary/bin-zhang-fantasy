<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"  xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Default -->

    <Thickness x:Key="BorderThickness.Default">1,1,1,1</Thickness>   
    <SolidColorBrush x:Key="ForegroundBrush.Default" Color="Black"/>

    <!--Button-->
    <SolidColorBrush x:Key="ButtonBackground" Color="#FFBCC7D8"/>
    <SolidColorBrush x:Key="ButtonBorder" Color="#FF9CAAC1"/>
    <LinearGradientBrush x:Key="ButtonHoverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF2" Offset="0.036"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.494"/>
        <GradientStop Color="#FFFFECB5" Offset="0.499"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="#FFFFE8A6"/>
    <SolidColorBrush x:Key="ButtonPressedBorder" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ButtonForeground" Color="Black"/>

    <!--Text Box-->
    <SolidColorBrush x:Key="TextBoxBackground" Color="White"/>
    <SolidColorBrush x:Key="TextBoxBorder" Color="#FF8591A2"/>
    <SolidColorBrush x:Key="TextBoxMouseOverBorder" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ButtonBorderBrush.Blue" Color="#FF6593CF"/>


    <!-- ListBox-->

    <LinearGradientBrush x:Key="ListBoxBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE7EAED" Offset="0.05"/>
        <GradientStop Color="#FFD4DAE4" Offset="0.95"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListBoxBorderBrushKey" Color="#FF9BA7B7"/>

    <SolidColorBrush x:Key="ListBoxForegroundBrush" Color="Black"/>
    <LinearGradientBrush x:Key="ListBoxItemMouseOverBrushKey" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEC" Offset="0.067"/>
        <GradientStop Color="#FFFFF4D3" Offset="0.454"/>
        <GradientStop Color="#FFFFECB5" Offset="0.546"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListBoxItemMouseOverBorderBrushKey" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ListBoxItemSelectedBrushKey" Color="#FFFFE8A6"/>

    <!-- Button -->

    <LinearGradientBrush x:Key="ButtonBackgroundBrush.Default" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF2F2F2" Offset="0"/>
        <GradientStop Color="LightGray" Offset="1"/>
        <GradientStop Color="#FFEEEEEE" Offset="0.5"/>
        <GradientStop Color="#FFDBDBDB" Offset="0.5"/>
    </LinearGradientBrush>



    <SolidColorBrush x:Key="ButtonBorderBrush.Default"
                     Color="#FF707070"/>
    <!--<SolidColorBrush x:Key="ForegroundBrush.Default" Color="Black"/>-->

    <Thickness x:Key="ComboBoxItemBorderThickness.Blue">1</Thickness>
    <Thickness x:Key="ProgressBarBorderThickness.Blue">1</Thickness>
    <SolidColorBrush x:Key="SliderTextBrushKey.Blue" Color="#FFC4C4C4"></SolidColorBrush>
    <SolidColorBrush x:Key="ComboBoxBackground.Blue" Color="#FFF1F3F8"/>
    <SolidColorBrush x:Key="ComboBoxBorderBrush.Blue" Color="#FF8591A2"/>
    <!--<SolidColorBrush x:Key="ComboBoxHoverBackground.Blue" Color="#FFFFFFFF"/>-->
    <SolidColorBrush x:Key="ComboBoxItemBackground" Color="Transparent"/>
    <SolidColorBrush x:Key="PathFill" Color="#FF1B293E"/>
    <LinearGradientBrush x:Key="ToggleCheckedBrush.Blue" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FED5A8" Offset="1"/>
        <GradientStop Color="#FCBC7A" Offset="0.65"/>
        <GradientStop Color="#F99630" Offset="0.6"/>
        <GradientStop Color="#FCC869" Offset="0.25"/>
        <GradientStop Color="#FDECA2" Offset="0.05"/>
        <GradientStop Color="#FDF1B0" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TogglePressedBrush.Blue" EndPoint="0,1" StartPoint="0,0" >
        <GradientStop Offset="0" Color="#FFFFB672" />
        <GradientStop Offset="0.65" Color="#FFF69442" />
        <GradientStop Offset="0.5" Color="#FFF68322" />
        <GradientStop Offset="1" Color="#FFFEA250" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleMouseOverBrush.Blue" EndPoint="0,1" StartPoint="0,0" >
        <GradientStop Color="#E3A96B" Offset="1"/>
        <GradientStop Color="#F6A963" Offset="0.65"/>
        <GradientStop Color="#E68736" Offset="0.6"/>
        <GradientStop Color="#F8C35C" Offset="0.25"/>
        <GradientStop Color="#FDD065" Offset="0.05"/>
        <GradientStop Color="#FDD165" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBrush.Blue" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3B277" Offset="0"/>
        <GradientStop Color="#FFF4B378" Offset="0.4"/>
        <GradientStop Color="#FFF4A770" Offset="0.4"/>
        <GradientStop Color="#FFF37E24" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonMouseOverBrush.Blue" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFE69E" Offset="1"/>
            <GradientStop Color="#FFFFE8A7" Offset="0.4"/>
            <GradientStop Color="#FFFFD767" Offset="0.4"/>
            <GradientStop Color="#FFFFFCDE"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonMouseOverBorderBrush.Blue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDBCE99" Offset="0"/>
        <GradientStop Color="#FFCEC0A4" Offset="0.996"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBorderBrush.Blue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA78E66" Offset="0"/>
        <GradientStop Color="#FFB9AE93" Offset="1"/>
    </LinearGradientBrush>
    <!-- CheckBox -->
    <SolidColorBrush x:Key="CheckBoxFillNormal.Default"
                     Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke"
                     Color="#8E8F8F"/>

    <SolidColorBrush x:Key="ComboBoxItemBackground.Default" Color="Transparent"/>


    <!-- RadioButton -->

    <SolidColorBrush x:Key="ComboBoxItemBorderBrush" Color="Transparent"/>

    <SolidColorBrush x:Key="RadioButtonBackground.Default" Color="#F4F4F4"/>

    <!-- ListBox -->
    <SolidColorBrush x:Key="ListBorder.Default"
                     Color="#828790"/>
    <SolidColorBrush x:Key="ListBoxBackground.Default" Color="White"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="Black"/>
    <!-- Menu -->
    <LinearGradientBrush x:Key="MenuBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F6F6F6"
                          Offset="0.25"/>
            <GradientStop Color="#EAE8E8"
                          Offset="0.25"/>
            <GradientStop Color="#DCD9D9"
                          Offset="0.8"/>
            <GradientStop Color="White"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemSelectionFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#34C5EBFF"
                          Offset="0"/>
            <GradientStop Color="#3481D8FF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemPressedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#28717070"
                          Offset="0"/>
            <GradientStop Color="#50717070"
                          Offset="0.75"/>
            <GradientStop Color="#90717070"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ContextMenuBackground.Default" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="ContextMenuBorderBrush.Default" Color="#FF959595"/>

    <!--ToolTip-->
    <SolidColorBrush x:Key="ToolTipForegroundBrush" Color="#FF575757"/>
    <SolidColorBrush x:Key="ToolTipBorderBrush" Color="#FF767676"/>
    <LinearGradientBrush x:Key="ToolTipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFAFAFC" Offset="0.149"/>
        <GradientStop Color="#FFE4E5F0" Offset="0.983"/>
        <GradientStop Color="#FF767676" Offset="0.992"/>
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="TextBoxBorder.Default"
                         StartPoint="0,0"
                         EndPoint="0,20"
                         MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ABADB3"
                          Offset="0.05"/>
            <GradientStop Color="#E2E3EA"
                          Offset="0.07"/>
            <GradientStop Color="#E3E9EF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderArrowFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#FFBFBFBF"
                          Offset="0.5"/>
            <GradientStop Color="#FF878787"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF0F8FE"
                          Offset="0"/>
            <GradientStop Color="#FFE0F3FE"
                          Offset="0.3"/>
            <GradientStop Color="#FF6FA7C5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFDCF0FA"
                          Offset="0"/>
            <GradientStop Color="#FFC5E6F7"
                          Offset="0.2"/>
            <GradientStop Color="#FF5690D0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="StatusBarBackground.Default" Color="#FFF1EDED"/>

    <LinearGradientBrush x:Key="ProgressBarBorderBrush.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B2B2B2"
                          Offset="0"/>
            <GradientStop Color="#8C8C8C"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#BABABA"
                          Offset="0"/>
            <GradientStop Color="#C7C7C7"
                          Offset="0.5"/>
            <GradientStop Color="#BABABA"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF"
                          Offset="0.05"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.25"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#90FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect.Default"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0C000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.3"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.7"/>
            <GradientStop Color="#0C000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill.Default" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#FF000000"
                          Offset="0.4"/>
            <GradientStop Color="#FF000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ProgressBarForeground.Default" Color="#01D328"/>

    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBackground.Default" Color="#FFE0DFE3"/>


    <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder.Default" Color="#3C7FB1"/>

    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder.Default" Color="#2C628B"/>


    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground.Default"
                     Color="#FFE7EAEA"/>
    <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SliderBackground.Blue" Color="Transparent"/>
    <SolidColorBrush x:Key="SliderForeground.Blue" Color="#FFC4C4C4"/>
    <LinearGradientBrush x:Key="SliderRectangleBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC7D1E0" Offset="0.009"/>
        <GradientStop Color="#FFAEB9CD" Offset="0.27"/>
        <GradientStop Color="#FF9CAAC1" Offset="0.289"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SliderRectangleBorderBrush" Color="#FFA5B2C9"/>
    <LinearGradientBrush x:Key="RectangleBackgroundBrush"  EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF8893A5" Offset="0"/>
        <GradientStop Color="#FFCED4DD" Offset="0.13"/>
        <GradientStop Color="#FFC9CFD9" Offset="0.87"/>
        <GradientStop Color="#FFA3ACBA" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RectangleBorderBrush" Color="#FF2C3E5B"/>
    <LinearGradientBrush x:Key="HorizontalSliderBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF4" Offset="0"/>
        <GradientStop Color="#FFFFFCF4" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderBorderBrush" Color="#FFEDD490"/>

    <LinearGradientBrush x:Key="HorizontalSliderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCE4A0" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.021"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderPressedBorderBrush" Color="#FFD2B564"/>

    <LinearGradientBrush x:Key="VerticalSliderBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF4" Offset="0"/>
        <GradientStop Color="#FFFFFCF4" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderBorderBrush" Color="#FFEDD490"/>

    <LinearGradientBrush x:Key="VerticalSliderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCE4A0" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.021"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderPressedBorderBrush" Color="#FFD2B564"/>

    <SolidColorBrush x:Key="ScrollBarDisabledBackground.Default"
                     Color="#F4F4F4"/>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E1E1E1"
                          Offset="0"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.20"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.80"/>
            <GradientStop Color="#E3E3E3"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E1E1E1"
                          Offset="0"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.20"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.80"/>
            <GradientStop Color="#E3E3E3"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <!--<LinearGradientBrush x:Key="TabItemHotBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EAF6FD"
                          Offset="0.15"/>
            <GradientStop Color="#D9F0FC"
                          Offset=".5"/>
            <GradientStop Color="#BEE6FD"
                          Offset=".5"/>
            <GradientStop Color="#A7D9F5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>-->
    <SolidColorBrush x:Key="TabItemSelectedBackground.Default"
                     Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground.Default"
                     Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush.Default"
                     Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush.Default"
                     Color="#FFC9C7BA"/>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#CCD4E9" Offset="0.1"/>
                <GradientStop Color="#4881D2" Offset="0.47"/>
                <GradientStop Color="#001A5A" Offset="0.47"/>
                <GradientStop Color="#007BD6" Offset="0.70"/>
                <GradientStop Color="#54DAFF" Offset="0.85"/>
                <GradientStop Color="#86FFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#DFEDF9" Offset="0.1"/>
                <GradientStop Color="#3086E1" Offset="0.47"/>
                <GradientStop Color="#003B91" Offset="0.47"/>
                <GradientStop Color="#1793EF" Offset="0.70"/>
                <GradientStop Color="#5AD4FF" Offset="0.85"/>
                <GradientStop Color="#BDFFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#C0D2F5" Offset="0.0"/>
                <GradientStop Color="#5E7A9C" Offset="0.47"/>
                <GradientStop Color="#00062D" Offset="0.47"/>
                <GradientStop Color="#005F9F" Offset="0.70"/>
                <GradientStop Color="#1FA4E2" Offset="0.85"/>
                <GradientStop Color="#61DAFF" Offset="0.95"/>
                <GradientStop Color="#48CFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#EBEEF5" Offset="0.5"/>
                <GradientStop Color="#D8DDEB" Offset="0.5"/>
                <GradientStop Color="#DFE2F0" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#6C90C4" Offset="0"/>
                <GradientStop Color="#315BB4" Offset="0.5"/>
                <GradientStop Color="#002091" Offset="0.5"/>
                <GradientStop Color="#08377C" Offset="1"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#8AB1FB" Offset="0"/>
            <GradientStop Color="#002874" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.5"/>
                <GradientStop Color="#EEEEEE" Offset="0.5"/>
                <GradientStop Color="#B0B0B0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#33B5DA" Offset="0"/>
                <GradientStop Color="#335799" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF" Offset="0"/>
            <GradientStop Color="#E3E8F4" Offset="0.5"/>
            <GradientStop Color="#CFD7EB" Offset="0.5"/>
            <GradientStop Color="#E9ECFA" Offset="1.0"/>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CurrentEntryBackground.Default" 
                     Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}"
                     Opacity="0.25"/>
					 
					 
    <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">      
            <GradientStop Color="#FF2D3E5C" Offset="0.973"/>
            <GradientStop Color="#FFFFE8A6" Offset="1"/>       
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GridViewColumnHeaderBorder" Color="#FFBCC7D8"/>
   
    <LinearGradientBrush   x:Key="GridViewHeaderMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEF" Offset="0"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.474"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.526"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GridViewHeaderPressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFE8A6" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GridViewColumnHeaderBrush.Blue" MappingMode="Absolute" StartPoint="269.650391,238.907227" EndPoint="269.650391,259.117676">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.000000" Color="#ffbcd5f5"/>
            <GradientStop Offset="0.043956" Color="#ffcce1f5"/>
            <GradientStop Offset="0.686813" Color="#ffb3d1f5"/>
            <GradientStop Offset="0.703297" Color="#ffc4ddff"/>
            <GradientStop Offset="1.000000" Color="#ffd4e5ff"/>
            <GradientStop Offset="-583163032721691960000000000.000000" Color="#ffd4e5ff"/>
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.Transform>
            <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-203.527344,259.118164" />
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewItemBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF0F0F0" Offset="0.949"/>
        <GradientStop Color="#FFCFD5E0" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GridViewItemBorderBrush" Color="#FFCED4DF"/>
    <SolidColorBrush x:Key="GridViewItemMouseOverBorderBrush" Color="#FFE8C86F"/>
    <SolidColorBrush x:Key="GridViewItemPressedBorderBrush" Color="#FFE8C86F"/>
    
    <LinearGradientBrush x:Key="GridViewItemMouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFF9E5" Offset="0.278"/>
        <GradientStop Color="#FFFCEDC1" Offset="0.98"/>
        <GradientStop Color="#FFF2DA98" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewItemPressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBF1" Offset="0.022"/>
        <GradientStop Color="#FFFFF5D4" Offset="0.409"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.548"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.978"/>
        <GradientStop Color="#FF1A1A1A" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListViewSelectedBrush.Blue" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#9BF1AB3D" Offset="0"/>
        <GradientStop Color="#FFF1AB3D" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListViewBorderBrush.Blue" Color="#FF77BCED"/>
    <SolidColorBrush x:Key="ListViewBackground.Blue" Color="#809FB8FC"/>

    <SolidColorBrush x:Key="ListViewItemBorderBrush.Blue" Color="#FF77BCED"/>
    <SolidColorBrush x:Key="ListViewItemBackground.Blue" Color="#6BBCD5F9"/>
					 
					 

    <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF2F2F2"
                          Offset="0"/>
            <GradientStop Color="#FFD5D5D5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0.4091"/>
            <GradientStop Color="#FFF7F8F9"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBDEDFF"
                          Offset="0"/>
            <GradientStop Color="#FFB7E7FB"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF8DD6F7"
                          Offset="0"/>
            <GradientStop Color="#FF8AD1F5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--<LinearGradientBrush x:Key="ListItemHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF1FBFF"
                          Offset="0"/>
            <GradientStop Color="#FFD5F1FE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>-->
    <LinearGradientBrush x:Key="ListItemSelectedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD9F4FF"
                          Offset="0"/>
            <GradientStop Color="#FF9BDDFB"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFEAF9FF"
                          Offset="0"/>
            <GradientStop Color="#FFC9EDFD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedInactiveFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFEEEDED"
                          Offset="0"/>
            <GradientStop Color="#FFDDDDDD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListViewItemBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ListViewItemBackground" Color="Transparent"/>


    <SolidColorBrush x:Key="ToolBarTrayBackground" Color="#FF9CAAC1"/>

    <SolidColorBrush x:Key="ToolBarLightFill.Default"
                     Color="#F7F7FF"/>
    <SolidColorBrush x:Key="ToolBarMediumFill.Default"
                     Color="#D6DBE7"/>
    <SolidColorBrush x:Key="ToolBarDarkFill.Default"
                     Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarDisabledFill.Default"
                     Color="#F7F7F7"/>
    <SolidColorBrush x:Key="ToolBarDisabledBorder.Default"
                     Color="#B5B2B5"/>
    <SolidColorBrush x:Key="ToolBarSeparatorFill"
                     Color="#FF8591A2"/>
    <SolidColorBrush x:Key="ToolBarButtonHover.Default"
                     Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder.Default"
                     Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarButtonChecked.Default"
                     Color="#E6F0FA"/>
    <SolidColorBrush x:Key="ToolBarButtonPressed.Default"
                     Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder.Default"
                     Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder.Default"
                     Color="#808080"/>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground.Default"
                     Color="#FDFDFD"/>
    <SolidColorBrush x:Key="ToolBarMenuCheckFill.Default"
                     Color="#E6F0FA"/>
    <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="0.5"/>
            <GradientStop Color="#F7F7F7"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="0.5"/>
            <GradientStop Color="#F7F7F7"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ECECEC"
                          Offset="0"/>
            <GradientStop Color="#DDDDDD"
                          Offset="0.5"/>
            <GradientStop Color="#A0A0A0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ECECEC"
                          Offset="0"/>
            <GradientStop Color="#DDDDDD"
                          Offset="0.5"/>
            <GradientStop Color="#A0A0A0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SeparatorBackground.Default" Color="LightGray"/>
    <SolidColorBrush x:Key="DefaultCornerBackground" Color="#EDEDED"/>



    <!-- Button -->

    <!--<Style x:Key="VS2010BaseButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ButtonForeground}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"                              
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"
                                    />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"
                                    />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"
                                    />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"
                                    />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonHoverBackground}"
                                    />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"
                                    />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style  TargetType="Button" x:Key="VS2010ButtonStyle">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                    <GradientStop Color="#FFEBEBEB" Offset="0.444"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.452"/>
                    <GradientStop Color="#FFD2D2D2" Offset="0.862"/>
                </LinearGradientBrush>
            </Setter.Value>
            </Setter>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070">

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="2" SnapsToDevicePixels="True" >
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCFCFC" Offset="0"/>
                                    <GradientStop Color="#FFF6F6F6" Offset="0.441"/>
                                    <GradientStop Color="#FFF3F3F3" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Grid Background="Transparent" Margin="1" SnapsToDevicePixels="True" >

                                <Border x:Name="BackgroundGradient" CornerRadius="1" SnapsToDevicePixels="True"  Background="{TemplateBinding Background}">
                                    
                                </Border>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="BackgroundGradient" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEAF6FD" Offset="0.034"/>
                                        <GradientStop Color="#FFD9F0FC" Offset="0.445"/>
                                        <GradientStop Color="#FFBEE6FD" Offset="0.454"/>
                                        <GradientStop Color="#FFA7D9F5" Offset="0.966"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF9FDFE" Offset="0"/>
                                        <GradientStop Color="#FFEFF9FE" Offset="0.445"/>
                                        <GradientStop Color="#FFE9F6FD" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FF3C7FB1">

                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="BackgroundGradient" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE5F4FC" Offset="0.084"/>
                                        <GradientStop Color="#FFC4E5F6" Offset="0.527"/>
                                        <GradientStop Color="#FF98D1EF" Offset="0.539"/>
                                        <GradientStop Color="#FF6DB6DD" Offset="0.964"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF869DAB" Offset="0.045"/>
                                        <GradientStop Color="#FFAABCC7" Offset="0.05"/>
                                        <GradientStop Color="#FF9ABACB" Offset="0.551"/>
                                        <GradientStop Color="#FF78AAC5" Offset="0.556"/>
                                        <GradientStop Color="#FF5E99BB" Offset="0.859"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FF2C628B">

                            </Setter>
                            <Setter Property="Margin" Value="0,0,0,-1" TargetName="BackgroundGradient"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="BackgroundGradient" Value="#FFF4F4F4"/>
                            <Setter Property="Background" TargetName="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFEFEFE" Offset="0"/>
                                        <GradientStop Color="#FFFBFBFB" Offset="0.718"/>
                                        <GradientStop Color="#FFFAFAFA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FFADB2B5"></Setter>
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  BasedOn="{StaticResource VS2010ButtonStyle}" TargetType="{x:Type Button}"/>

    <Style  TargetType="ToggleButton"   x:Key="VS2010ToggleButtonStyle">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                    <GradientStop Color="#FFEBEBEB" Offset="0.444"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.452"/>
                    <GradientStop Color="#FFD2D2D2" Offset="0.862"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070">

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton" >
                    <Grid>

                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="2" SnapsToDevicePixels="True" >
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCFCFC" Offset="0"/>
                                    <GradientStop Color="#FFF6F6F6" Offset="0.441"/>
                                    <GradientStop Color="#FFF3F3F3" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Grid Background="Transparent" Margin="1" SnapsToDevicePixels="True" >

                                <Border x:Name="BackgroundGradient" CornerRadius="1" SnapsToDevicePixels="True"  Background="{TemplateBinding Background}">

                                </Border>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="BackgroundGradient" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEAF6FD" Offset="0.034"/>
                                        <GradientStop Color="#FFD9F0FC" Offset="0.445"/>
                                        <GradientStop Color="#FFBEE6FD" Offset="0.454"/>
                                        <GradientStop Color="#FFA7D9F5" Offset="0.966"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF9FDFE" Offset="0"/>
                                        <GradientStop Color="#FFEFF9FE" Offset="0.445"/>
                                        <GradientStop Color="#FFE9F6FD" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FF3C7FB1">

                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="BackgroundGradient" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE5F4FC" Offset="0.084"/>
                                        <GradientStop Color="#FFC4E5F6" Offset="0.527"/>
                                        <GradientStop Color="#FF98D1EF" Offset="0.539"/>
                                        <GradientStop Color="#FF6DB6DD" Offset="0.964"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF869DAB" Offset="0.045"/>
                                        <GradientStop Color="#FFAABCC7" Offset="0.05"/>
                                        <GradientStop Color="#FF9ABACB" Offset="0.551"/>
                                        <GradientStop Color="#FF78AAC5" Offset="0.556"/>
                                        <GradientStop Color="#FF5E99BB" Offset="0.859"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FF2C628B">

                            </Setter>
                            <Setter Property="Margin" Value="0,0,0,-1" TargetName="BackgroundGradient"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="BackgroundGradient" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE5F4FC" Offset="0.084"/>
                                        <GradientStop Color="#FFC4E5F6" Offset="0.527"/>
                                        <GradientStop Color="#FF98D1EF" Offset="0.539"/>
                                        <GradientStop Color="#FF6DB6DD" Offset="0.964"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF869DAB" Offset="0.045"/>
                                        <GradientStop Color="#FFAABCC7" Offset="0.05"/>
                                        <GradientStop Color="#FF9ABACB" Offset="0.551"/>
                                        <GradientStop Color="#FF78AAC5" Offset="0.556"/>
                                        <GradientStop Color="#FF5E99BB" Offset="0.859"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FF2C628B">

                            </Setter>
                            <Setter Property="Margin" Value="0,0,0,-1" TargetName="BackgroundGradient"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="BackgroundGradient" Value="#FFF4F4F4"/>
                            <Setter Property="Background" TargetName="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFEFEFE" Offset="0"/>
                                        <GradientStop Color="#FFFBFBFB" Offset="0.718"/>
                                        <GradientStop Color="#FFFAFAFA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Background" Value="#FFADB2B5"></Setter>
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="ToggleButton"   BasedOn ="{StaticResource VS2010ToggleButtonStyle}"/>
        <!--<SolidColorBrush x:Key="CheckBoxBackgroundBrushKey" Color="#FFD5DCE8"/>
    <SolidColorBrush x:Key="CheckBoxBorderBrushKey" Color="#FF9CAAC1"/>
    <SolidColorBrush x:Key="CheckBoxForegroundBrushKey" Color="#FF000000"/>
    <SolidColorBrush x:Key="CheckBoxDisabledBackgroundBrushKey" Color="#FFC8CBD0"/>
    <SolidColorBrush x:Key="CheckBoxDisabledBorderBrushKey" Color="#FFACB1B7"/>
    <SolidColorBrush x:Key="CheckBoxMouseOverBackgroundBrushKey" Color="#FFFFFCF4"/>
    <SolidColorBrush x:Key="CheckBoxMouseOverBorderBrushKey" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="CheckBoxPressedBackgroundBrushKey" Color="#FFFFEFBB"/>
    <SolidColorBrush x:Key="CheckBoxPressedBorderBrushKey" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="CheckBoxCheckedBackgroundBrushKey" Color="#FFFFEFBB"/>
    <SolidColorBrush x:Key="CheckBoxCheckedBorderBrushKey" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="CheckBoxCheckIconBrushKey" Color="Black"/>
    <SolidColorBrush x:Key="CheckBoxCheckIconMouseOverBrushKey" Color="Black"/>-->

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <Style x:Key="VS2010CheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" 
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"
                                                IsChecked="{TemplateBinding IsChecked}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010CheckBoxStyle}" TargetType="{x:Type CheckBox}"/>


    <!--<Style TargetType="{x:Type CheckBox}" x:Key="VS2010CheckBoxStyle">
        <Setter Property="Background"                                
                Value="{StaticResource CheckBoxBackgroundBrushKey}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBorderBrushKey}"/>
        <Setter Property="Foreground"
               Value="{StaticResource CheckBoxForegroundBrushKey}"/>
        <Setter Property="BorderThickness"
                Value="1.5"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator SnapsToDevicePixels="true" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="border1" Width="13" Height="13" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Border x:Name="border2" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                                    <Border x:Name="border3" BorderThickness="1" Background="Transparent" BorderBrush="Transparent">
                                        <Canvas SnapsToDevicePixels="True">
                                            <Path x:Name="path" Stretch="Fill" Stroke="{StaticResource CheckBoxCheckIconBrushKey}" Margin="-2,-2,0,1" Width="11" Height="11" Data="M51.190112,162.48614 L66.433305,151.56681 101.03976,189.03214 180.6989,103.09952 198.03176,117.76642 112.96598,211.50091 89.499554,211.50091 z" Fill="Black" Opacity="0"/>
                                        </Canvas>
                                    </Border>
                                </Border>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource CheckBoxCheckIconBrushKey}"/>
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource CheckBoxCheckedBackgroundBrushKey}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource CheckBoxCheckedBorderBrushKey}" />
                        </Trigger>
                        <Trigger  Property="IsEnabled" Value="false">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource CheckBoxDisabledBackgroundBrushKey}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource CheckBoxDisabledBorderBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource CheckBoxMouseOverBackgroundBrushKey}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource CheckBoxMouseOverBorderBrushKey}" />
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource CheckBoxCheckIconMouseOverBrushKey}"/>
                            <Setter Property="Stroke" TargetName="path" Value="{StaticResource CheckBoxCheckIconMouseOverBrushKey}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource CheckBoxPressedBackgroundBrushKey}" />
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource CheckBoxPressedBorderBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010CheckBoxStyle}" TargetType="{x:Type CheckBox}"/>-->

    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <TextBlock Text="{Binding Path=Name}"/>
    </DataTemplate>


    <!-- ComboBox -->

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <SolidColorBrush x:Key="ComboBoxHoverBorderBrush" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ComboboxToggleCheckedBrush" Color="#FFFFE8A6"/>
    <LinearGradientBrush x:Key="ComboboxToggleHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFF9E9" Offset="0.102"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.484"/>
        <GradientStop Color="#FFFFECB5" Offset="0.493"/>
        <GradientStop Color="#FFFFECB5" Offset="0.991"/>
        <GradientStop Color="#FFE5C365" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ComboboxItemHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFAEC" Offset="0.086"/>
        <GradientStop Color="#FFFFF4D2" Offset="0.431"/>
        <GradientStop Color="#FFFFECB5" Offset="0.517"/>
        <GradientStop Color="#FFFFECB5" Offset="0.983"/>
        <GradientStop Color="#FFE5C365" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboboxItemHoverBorder" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ComboboxItemSelectedBrush" Color="#FFFFE8A6"/>

    <Style x:Key="BlueComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ComboBoxBackground.Blue}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1"  BorderThickness="{TemplateBinding BorderThickness}"                               
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                       
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Chrome"  Background="{TemplateBinding Background}" BorderThickness="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"  Grid.Column="1" Width="16">
                                <Path Name="Arrow"                                  
                                  Fill="{StaticResource PathFill}"
                                  Data="{StaticResource DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" SourceName="Chrome"/>
                                <Condition Property="IsChecked"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush.Blue}"/>
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1,0,0,0"/>

                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="Red"/>
                        </MultiTrigger>

                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1,0,0,0"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ComboboxToggleCheckedBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="Chrome1" Value="True">
                            <Setter TargetName="Chrome1" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1,0,0,0"/>

                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ComboboxToggleHoverBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <!--<Setter TargetName="Chrome1" Property="Background" Value="White"/>-->



                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" SourceName="Chrome1" Value="True">
                            <Setter TargetName="Chrome1" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1,0,0,0"/>

                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ComboboxToggleCheckedBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <!--<Setter TargetName="Chrome1" Property="Background" Value="White"/>-->



                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Chrome1" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1,0,0,0"/>

                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ComboboxToggleCheckedBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>

                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxButtonStyleBlue"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ComboBoxBackground.Blue}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome" 
                                Grid.Column="1"
                                Width="16"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="{StaticResource DownArrowGeometry}"
                                  Fill="{StaticResource PathFill}"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboboxToggleHoverBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboboxToggleCheckedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ComboboxToggleCheckedBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010ComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="BorderBrush"
                        Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
        <Setter Property="Background"
                        Value="{StaticResource ComboBoxBackground.Blue}"/>
        <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <TextBox Visibility="Hidden" Style="{StaticResource BlueComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"  BorderBrush="{StaticResource ListBoxBorderBrushKey}"
                                        Background="{StaticResource ListBoxBackgroundBrushKey}" BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                            <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="BorderBrush"
                        Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
                <Setter Property="Background"
                        Value="{StaticResource ComboBoxBackground.Blue}"/>
                <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush}"/>
                <Setter Property="IsTabStop"
                        Value="false"/>
                <Setter Property="Padding"
                        Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Grid.Column="2" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                                <TextBox Visibility="Hidden" Style="{StaticResource BlueComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder"  BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}" BorderThickness="1"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                                    <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                                    <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                                    <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VS2010ComboBoxStyle}" TargetType="{x:Type ComboBox}"/>
    <Style x:Key="VS2010ComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="3,0,3,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxItemBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxItemBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd" CornerRadius="2" Margin="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Red"/>
                            <Setter Property="Background" TargetName="Bd" Value="Blue"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboboxItemHoverBorder}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboboxItemHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboboxItemHoverBorder}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboboxItemSelectedBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboboxItemHoverBorder}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboboxItemSelectedBrush}"/>
                        </MultiTrigger>
                        <!--<Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Yellow"/>
                            <Setter Property="Background" TargetName="Bd" Value="Red"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>

    <!-- RadioButton -->

    <SolidColorBrush x:Key="OuterEllipseFill" Color="#FFECEFF6"/>
    <SolidColorBrush x:Key="OuterEllipseStroke" Color="#FF8591A2"/>
    <LinearGradientBrush x:Key="InnerEllipseStroke" EndPoint="0.778,0.915" StartPoint="0.222,0.085">
        <GradientStop Color="DarkGray" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="InnerEllipseFill" EndPoint="0.546,0.603" StartPoint="0.249,0.098">
        <GradientStop Color="White" Offset="1"/>
        <GradientStop Color="#FFBCC0C7" Offset="0.167"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="OuterEllipseHoverFill" Color="#FFD5DCE8"/>
    <SolidColorBrush x:Key="OuterEllipseHoverStroke" Color="#FF8591A2"/>
    <SolidColorBrush x:Key="InnerEllipseHoverStroke" Color="#FF8591A2"/>
    <RadialGradientBrush x:Key="InnerEllipseHoverFill" Center="0.249,0.255" GradientOrigin="0.249,0.255" RadiusY="1.25" RadiusX="1.168">
        <GradientStop Color="#FF4A5D80" Offset="0.462"/>
        <GradientStop Color="#FF405579" Offset="0.99"/>
        <GradientStop Color="White"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="OuterEllipseCheckedFill" Color="#FFD5DCE8"/>
    <SolidColorBrush x:Key="OuterEllipseCheckedStroke" Color="#FF8591A2"/>
    <SolidColorBrush x:Key="InnerEllipseCheckedStroke" Color="#FF8591A2"/>
    <LinearGradientBrush x:Key="InnerEllipseCheckedFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEE" Offset="0.05"/>
        <GradientStop Color="#FFFFF3CE" Offset="0.577"/>
        <GradientStop Color="#FFFFECB5" Offset="0.582"/>
    </LinearGradientBrush>

    <Style x:Key="VS2010RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource OuterEllipseFill}"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource OuterEllipseStroke}"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                  
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse x:Name="Background" Fill="{StaticResource OuterEllipseFill}" Height="14" Margin="1" Stroke="{StaticResource OuterEllipseStroke}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
                            <Ellipse x:Name="MouseOverBackground" Fill="{StaticResource OuterEllipseHoverFill}" Height="14" Margin="1" Stroke="{StaticResource OuterEllipseHoverStroke}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14" Opacity="0"/>
                            <Ellipse x:Name="PressedBackground" Fill="{StaticResource OuterEllipseCheckedFill}" Height="14" Margin="1" Stroke="{StaticResource OuterEllipseCheckedStroke}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14" Opacity="0"/>
                            <Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Height="14" Margin="1" Opacity="0" Stroke="#00000000" StrokeThickness="1" Width="14"/>
                            <Ellipse x:Name="BoxMiddleBackground" Fill="{StaticResource InnerEllipseFill}" Height="10" Stroke="{StaticResource InnerEllipseStroke}" StrokeThickness="1" Width="10"/>
                            <Ellipse x:Name="BoxMiddleHoverBackground" Fill="{StaticResource InnerEllipseHoverFill}" Height="10" Stroke="{StaticResource InnerEllipseHoverStroke}" StrokeThickness="1" Width="10" Opacity="0"/>
                            <Ellipse x:Name="BoxMiddlePressedBackground" Fill="{StaticResource InnerEllipseCheckedFill}" Height="10" Stroke="{StaticResource InnerEllipseCheckedStroke}" StrokeThickness="1" Width="10" Opacity="0"/>
                            <Ellipse x:Name="BoxMiddleLine" Height="10" Opacity=".2" Stroke="#FF333333" StrokeThickness="1" Width="10"/>
                            <Ellipse x:Name="CheckIcon" Fill="{StaticResource InnerEllipseHoverFill}" Height="10" Opacity="0" Width="10"/>
                            <Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" Width="14"/>
                            <Ellipse x:Name="ContentFocusVisualElement" Height="16" IsHitTestVisible="false" Opacity="0" Stroke="Transparent" StrokeThickness="1" Width="16"/>

                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="PressedBackground" Value="1"/>
                            <Setter Property="Opacity" TargetName="BoxMiddlePressedBackground" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="MouseOverBackground" Value="1"/>
                            <Setter Property="Opacity" TargetName="BoxMiddleHoverBackground" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="MouseOverBackground" Value="1"/>
                            <Setter Property="Opacity" TargetName="CheckIcon" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource VS2010RadioButtonStyle}" TargetType="{x:Type RadioButton}"/>

    <Style x:Key="VS2010ListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackgroundBrushKey}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBoxBorderBrushKey}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ListBoxForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010ListBoxStyle}"
           TargetType="{x:Type ListBox}"/>

    <!-- ListBoxItem -->
    <Style x:Key="VS2010ListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                 Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="2,0,0,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ListBoxItemSelectedBrushKey}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ListBoxItemSelectedBrushKey}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ListBoxItemStyle}"
           TargetType="{x:Type ListBoxItem}"/>

        <!-- Menu -->


    <LinearGradientBrush x:Key="MenuBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC7D0DF" Offset="0.114"/>
        <GradientStop Color="#FFAEB9CD" Offset="0.987"/>
        <GradientStop Color="#FF9CAAC1" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuBorderBrush" Color="#FF9CAAC1"/>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <LinearGradientBrush x:Key="ContextMenuBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE9ECEE" Offset="0.007"/>
        <GradientStop Color="#FFD1D8E3" Offset="0.969"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ContextMenuForeground" Color="Black"/>
    <SolidColorBrush x:Key="ContextMenuBorder" Color="#FF9BA7B7"/>
    <SolidColorBrush x:Key="SideMenuBackground" Color="#FFE9ECEE"/>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource ContextMenuBackground}"
                BorderBrush="{StaticResource ContextMenuBorder}"
                BorderThickness="1,1,1,1">
            <Grid>
                <Rectangle Fill="{StaticResource SideMenuBackground}"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="2"
                           RadiusX="2"
                           RadiusY="2"/>
                <!--<Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Fill="Transparent"/>
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="31,2,0,2"
                           Fill="Transparent"/>-->

                <ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="DefaultMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode"
                Value="Hover"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultMenuScrollViewer"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">

                    <Border Height="1"
                                   Margin="30,1,2,0"
                                  Background="#FFBEC3CB" SnapsToDevicePixels="True "/>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ButtonBackgroundBrush.Office2003"
		StartPoint="0,0"
		EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFCBE1FC"/>
            <GradientStop Offset="1" Color="#FF7DA5E0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <SolidColorBrush x:Key="BorderBrush.Office2003" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="Black"/>
    <SolidColorBrush x:Key="ButtonBorderBrush.Office2003" Color="#FF9BA7B7"/>
    <SolidColorBrush x:Key="MenuItemLeftBarBackground.Blue" Color="#FFE9EEEE"/>
    <SolidColorBrush x:Key="MenuItemBorderBrush.Blue" Color="#FFE9ECEE"/>
    <!--<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>-->
    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>
    <!--<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>-->
	 <LinearGradientBrush x:Key="ButtonMouseOverBrush.Office2003"
		StartPoint="0,0"
		EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFFFFDC"/>
            <GradientStop Offset="1" Color="#FFF7C05B"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHover.Blue"  Color="#FFE9ECEE"/>
	 <!--<SolidColorBrush x:Key="MouseOverBrushIn.Office2003" Color="#FDE6BC"/>-->
    <LinearGradientBrush x:Key="MouseOverBrushIn.Office2003" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBF0" Offset="0.025"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.485"/>
        <GradientStop Color="#FFFFECB5" Offset="0.497"/>
    </LinearGradientBrush>
	 <SolidColorBrush x:Key="MenuKeyBoardFill.Blue" Color="#FFE0EEFF"/>

    <LinearGradientBrush x:Key="MenuItemMouseOverBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBF0" Offset="0.038"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.494"/>
        <GradientStop Color="#FFFFECB5" Offset="0.506"/>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="PopUpMenuBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE9ECEE" Offset="0.009"/>
        <GradientStop Color="#FFD0D7E2" Offset="0.991"/>
    </LinearGradientBrush>

    <Style x:Key="VS2010MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                            <Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="FrameworkElement.MinHeight" Value="2"/>
                            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Height" Value="1" />
                            <Setter Property="Margin" Value="28,1,2,-1"/>
                            <Setter Property="Background" Value="#FFBEC3CB"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Separator">
                                        <Border Margin="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background"
                        Value="Transparent"/>
                            <Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrush.Blue}"/>
                            <Setter Property="BorderThickness"
                        Value="1"/>
                            <Setter Property="Margin"
                        Value="0,1,0,0"/>
                            <Setter Property="Padding"
                        Value="8,3,8,3"/>
                            <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0" CornerRadius="2" />
                                            <ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource BorderBrush.Office2003}"
                                        Background="#FFFFEFBB"
                                        BorderThickness="1">
                                                <Path VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1.2"
                                          Data="{StaticResource ToolBarCheckmark}"/>
                                            </Border>

                                            <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header" Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3" 
                                           HorizontalAlignment="Right"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Icon"
                                         Value="{x:Null}">
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked"
                                         Value="true">
                                                <Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted"
                                         Value="true">
                                                <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource BorderBrush.Office2003}"/>
                                                <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemMouseOverBrushKey}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="{StaticResource BorderBrush.Office2003}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="#FFFFFCF4"/>
                                                <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                         Value="false">
                                                <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Role"
                             Value="TopLevelHeader">
                                    <Setter Property="Padding"
                                Value="6,2,7,2"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true" CornerRadius="2">
                                                    <DockPanel Name="Header">
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header" Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
                                                            <theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
                                                                <Border Background="{StaticResource PopUpMenuBackground}"   BorderBrush="{StaticResource ButtonBorderBrush.Office2003}"
                                                            BorderThickness="1">
                                                                    <Grid Grid.IsSharedSizeScope="true">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}"
                                                                       Margin="0,1"/>
                                                                        <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                                        <ScrollViewer CanContentScroll="true"
                                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}"
                                                                          Grid.ColumnSpan="2">
                                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </ScrollViewer>
                                                                    </Grid>
                                                                </Border>
                                                            </theme:SystemDropShadowChrome>
                                                        </Popup>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource BorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource MenuItemMouseOverBrushKey}"/>
                                                        <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsSubmenuOpen"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Blue}"/>
                                                        <Setter Property="CornerRadius" Value="2,2,0,0" TargetName="Border"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                                    </Trigger>
                                                    <!--<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Blue}"/>
                                                    </Trigger>-->
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="TopLevelItem">
                                    <Setter Property="Margin"
                                Value="0,1,0,1"/>
                                    <Setter Property="Padding"
                                Value="7,1,8,2"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true" CornerRadius="2">
                                                    <DockPanel>
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header" Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource BorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource MenuItemMouseOverBrushKey}"/>
                                                        <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Blue}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock"
                                Value="Top"/>
                                    <Setter Property="Padding"
                                Value="8,3,8,3"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                        <ColumnDefinition Width="14"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="1"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0" CornerRadius="2"/>
                                                    <ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource BorderBrush.Office2003}"
                                                Background="#FFFFA600"
                                                BorderThickness="1">
                                                        <Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                    </Border>
                                                    <ContentPresenter Grid.Column="1"
                                                          ContentSource="Header" Name="content"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Path Grid.Column="3"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
                                                    <Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
                                                        <theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
                                                            <Border Background="{StaticResource PopUpMenuBackground}" BorderBrush="{StaticResource ButtonBorderBrush.Office2003}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}"
                                                                       Margin="0,1"/>
                                                                    <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                                    <ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
                                                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </ScrollViewer>
                                                                </Grid>
                                                            </Border>
                                                        </theme:SystemDropShadowChrome>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource BorderBrush.Office2003}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource MenuItemMouseOverBrushKey}"/>
                                                        <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource BorderBrush.Office2003}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Background"
                                                    Value="#FFFFFCF4"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010MenuStyle}" TargetType="{x:Type Menu}"/>

    <Style x:Key="VS2010MenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">


                    <Grid SnapsToDevicePixels="true"   >
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"  />
                        <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2" />
                        <Grid Margin="-1,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="2,1,4,1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        BorderBrush="#F29536"
                        Background="#FFE395"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">

                                <Path Stroke="Black" StrokeThickness="1.4">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                            <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>

                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MouseOverBrushIn.Office2003}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource BorderBrush.Office2003}"/>
                            <!--<Setter TargetName="Bg"
                        Property="Margin"
                        Value="0"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                    <Border x:Name="GlyphPanel" Grid.Column="0" Visibility="Collapsed"
                Width="21" Height="21" BorderThickness="1" BorderBrush="#F29536"
                Background="#FFE395" CornerRadius="2">
                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Border>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{DynamicResource BlueSubmenuContent}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource BorderBrush.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MouseOverBrushIn.Office2003}"/>


                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuKeyBoardFill.Blue}"/>
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuKeyBoardFill.Blue}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem" >
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">

                            <Grid SnapsToDevicePixels="true"  >
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                      
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel" Grid.Column="0" Visibility="Collapsed"
                Width="21" Height="21" BorderThickness="1" BorderBrush="#F29536"
                Background="#FFE395" CornerRadius="2">
                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Border>

                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource BorderBrush.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MouseOverBrushIn.Office2003}"/>


                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ButtonBorderBrush.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuKeyBoardFill.Blue}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="2,3,2,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">

                            <Grid SnapsToDevicePixels="true"   >
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        BorderBrush="#F29536"
                        Background="#FFE395"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">

                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>

                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
                                        <Border Background="{StaticResource PopUpMenuBackground}" BorderBrush="{StaticResource ButtonBorderBrush.Office2003}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                            <Grid Margin="0,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}"
                                                                       Margin="1,0,-3,0"/>
                                                <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                <ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="2"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </Border>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>

                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MouseOverBrushIn.Office2003}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource BorderBrush.Office2003}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Padding"
                        Value="2,3,2,3"/>
               <!-- <Setter Property="Margin" Value="2,1,2,0"/>-->
                

            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource VS2010MenuItemStyle}" TargetType="{x:Type MenuItem}"/>


    <!--<Style x:Key="VS2010MenuStyle" TargetType="{x:Type Menu}">

        <Setter Property="Background"
                Value="{StaticResource MenuBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
        <LinearGradientBrush  x:Key="TopLevelMenuitemMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBED" Offset="0.074"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.519"/>
        <GradientStop Color="#FFFFECB5" Offset="0.537"/>
    </LinearGradientBrush>
    <Style BasedOn="{StaticResource VS2010MenuStyle}" TargetType="{x:Type Menu}"/>
    <Style x:Key="VS2010MenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>                          
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                            <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                            <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                            <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Border Name="Bg"
                       Margin="1,1,1,-3"
                       Background="{TemplateBinding MenuItem.Background}"
                       BorderBrush="{TemplateBinding MenuItem.BorderBrush}"
                       BorderThickness="1,1,1,0"
                       CornerRadius="1"
                       />
                                <Border x:Name="InnerBorder" Margin="2,2,2,0" CornerRadius="2" BorderThickness="1"
                       />
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                        <ContentControl Name="SubMenuBorder" Margin="0,-5,0,0"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>

                                </Trigger>

                                <Trigger Property="IsHighlighted"
                     Value="true">

                                    <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">

                                    <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="#FFE9ECEE"/>
                                    <Setter TargetName="InnerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0"/>
                                    <Setter TargetName="InnerBorder"
                        Property="CornerRadius"
                        Value="2,2,0,0"/>
                                    <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="#FF9BA7B7"/>

                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">

                                    <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="#FFE9ECEE"/>
                                    <Setter TargetName="InnerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0"/>
                                    <Setter TargetName="InnerBorder"
                        Property="CornerRadius"
                        Value="2,2,0,0"/>
                                    <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="#FF9BA7B7"/>

                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"  RadiusX="2"
                       RadiusY="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                   
                                    <Setter TargetName="InnerBorder"
                        Property="Fill"
                        Value="{StaticResource TopLevelMenuitemMouseOver}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#FFE5C365"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#FFE5C365"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Fill"
                        Value="{StaticResource TopLevelMenuitemMouseOver}"/>
                                  
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="2,3,2,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="0"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>

                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemSelectedBrushKey}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Padding"
                        Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VS2010MenuItemStyle}" TargetType="{x:Type MenuItem}"/>-->
    <Style x:Key="VS2010ContextMenuStyle"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{StaticResource ContextMenuBackground}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="MenuItem.Foreground"
                Value="{StaticResource ContextMenuForeground}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContextMenuBorder}"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Rectangle Fill="{StaticResource SideMenuBackground}"
                                           HorizontalAlignment="Left"
                                           Width="28"
                                           Margin="1"
                                           RadiusX="2"
                                           RadiusY="2"/>

                                <!--<Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="Transparent"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="31,2,0,2"
                                           Fill="Transparent"/>-->

                                <ScrollViewer CanContentScroll="true"
                                              Grid.ColumnSpan="2" Margin="1,0" Style="{StaticResource DefaultMenuScrollViewer}"
                                              >
                                    <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ContextMenuStyle}"
           TargetType="{x:Type ContextMenu}"/>
        <!-- ToolTip -->

    <Style x:Key="VS2010ToolTipStyle"
           TargetType="{x:Type ToolTip}">
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
               Value="{StaticResource ToolTipBorderBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ToolTipBackground}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ToolTipForegroundBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Padding"
                Value="5,1,5,4"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true"
                                                  CornerRadius="2">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010ToolTipStyle}"
           TargetType="{x:Type ToolTip}"/>
        <!-- TreeView -->

    <SolidColorBrush x:Key="TreeviewBackground" Color="White"/>
    <SolidColorBrush x:Key="TreeviewBorder" Color="#FF2B3C59"/>
    <LinearGradientBrush x:Key="TreeviewItemSelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBF4FF" Offset="0.168"/>
        <GradientStop Color="#FFD0E5FF" Offset="0.927"/>
        <GradientStop Color="#FFDFEEFF" Offset="0.937"/>
        <GradientStop Color="#FFDFEEFF" Offset="0.99"/>
        <GradientStop Color="#FF84ACDD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TreeviewItemSelectedBorderBrush" Color="#FF84ACDD"/>
    <LinearGradientBrush x:Key="TreeviewItemUnfocusedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDADADA" Offset="0.008"/>
        <GradientStop Color="#FFFBFBFC" Offset="0.015"/>
        <GradientStop Color="#FFE6E6E6" Offset="0.924"/>
        <GradientStop Color="#FFF1F1F1" Offset="0.932"/>
        <GradientStop Color="#FFF1F1F1" Offset="0.985"/>
        <GradientStop Color="#FFDADADA" Offset="0.992"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TreeviewItemUnfocusedBorderBrush" Color="#FFDADADA"/>

    <Style x:Key="VS2010TreeViewStyle"
           TargetType="{x:Type TreeView}">
        <Setter Property="Background"
                Value="{StaticResource TreeviewBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TreeviewBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010TreeViewStyle}"
           TargetType="{x:Type TreeView}"/>
        <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True"
                            StartPoint="0 0"
                            IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6"/>
                            <LineSegment Point="6 0"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False"/>
        <Setter Property="Width"
                Value="16"/>
        <Setter Property="Height"
                Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16"
                            Height="16"
                            Background="Transparent"
                            Padding="5,5,5,5">
                        <Path x:Name="ExpandPath"
                              Fill="Transparent"
                              Stroke="#FF989898"
                              Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterX="3"
                                                 CenterY="3"/>
                            </Path.RenderTransform>
                            <!--<Setter TargetName="ExpandPath" Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Direction="351" ShadowDepth="0" Color="#FF77DCFA"/>
                                </Setter.Value>
                            </Setter>-->
                            <!--<Path.Effect>
                                <DropShadowEffect BlurRadius="10" Direction="90" ShadowDepth="0" Color="#FF77DCFA"/>
                            </Path.Effect>-->
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="#FF1BBBFA"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="Transparent"/>
                            <Setter TargetName="ExpandPath" Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Direction="351" ShadowDepth="0" Color="#FF77DCFA"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterX="3"
                                                     CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="#FF595959"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="#FF262626"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="#FF1BBBFA"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="Transparent"/>
                            <Setter TargetName="ExpandPath" Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Direction="351" ShadowDepth="0" Color="#FF77DCFA"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010TreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}" Margin="2,1,2,1"
                                BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}"                              
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header" Margin="2,1,2,1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TreeviewItemSelectedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource TreeviewItemSelectedBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True"/>
                                <Condition Property="IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TreeviewItemUnfocusedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource TreeviewItemUnfocusedBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010TreeViewItemStyle}"
           TargetType="{x:Type TreeViewItem}"/>


        <!-- TextBox Base-->
    <Style x:Key="VS2010TextBoxBaseStyle"
           TargetType="{x:Type TextBoxBase}"
           BasedOn="{x:Null}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource  TextBoxBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <!--<Setter Property="SelectionBrush" Value="#FFADD6FF"/>-->
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <theme:ListBoxChrome x:Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"                                        
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
           BasedOn="{StaticResource VS2010TextBoxBaseStyle}"
           TargetType="{x:Type TextBox}">
    </Style>


    <!-- PasswordBox -->
    <Style x:Key="VS2010PasswordBoxStyle"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background"
                Value="{StaticResource  TextBoxBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="FontFamily"
                Value="Times New Roman"/>
        <Setter Property="PasswordChar"
                Value="●"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <theme:ListBoxChrome x:Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"                                        
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010PasswordBoxStyle}"
           TargetType="{x:Type PasswordBox}"/>
        <!-- Expander -->

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   StrokeThickness="1"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<LinearGradientBrush x:Key="ExpanderArrowFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="White"
 		Offset="0"/>
        <GradientStop Color="#FFBFBFBF"
 		Offset="0.5"/>
        <GradientStop Color="#FF878787"
 		Offset="1"/>
    </LinearGradientBrush>-->
    <!--<LinearGradientBrush x:Key="ExpanderArrowHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFF0F8FE"
    		Offset="0"/>
        <GradientStop Color="#FFE0F3FE"
    		Offset="0.3"/>
        <GradientStop Color="#FF6FA7C5"
    		Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFDCF0FA"
    		Offset="0"/>
        <GradientStop Color="#FFC5E6F7"
    		Offset="0.2"/>
        <GradientStop Color="#FF5690D0"
    		Offset="1"/>
    </LinearGradientBrush>-->
    <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD5D5D5" Offset="0"/>
        <GradientStop Color="#FFE5E5E5" Offset="0.03"/>
        <GradientStop Color="#FFF0F0F0" Offset="0.455"/>
        <GradientStop Color="#FFE8E8E8" Offset="0.879"/>
    </LinearGradientBrush>
    <Style x:Key="ExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{StaticResource HeaderBackground}">
                        <Grid Background="Transparent"
                    		SnapsToDevicePixels="False" Margin="8,0,-8,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--<Border x:Name="OuterBorder" Background="yellow" BorderBrush="red"  BorderThickness="2" Margin="540,1,1,5" Width="20" Grid.Column="1" />-->
                            <Rectangle  x:Name="circle"
                    			Width="13"
                    			Stroke="Black"
                    			HorizontalAlignment="Right"
                    			VerticalAlignment="Stretch"
                    			Fill="Transparent"  Margin="0,3,15,6" Grid.Column="1"  Height="13"/>
                            <!--<Path x:Name="arrow"
                    			HorizontalAlignment="Right"
                    			VerticalAlignment="Stretch"
                    			Stroke="#666"
                    			StrokeThickness="2"
                    			SnapsToDevicePixels="false"
                    			Data="M 1,1.5 L 4.5,5 L 8,1.5" Grid.Column="1" Margin="0,8,44.292,7.585" UseLayoutRounding="False" RenderTransformOrigin="9.039,0.5" d:LayoutOverrides="Height"/>-->
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Right" SnapsToDevicePixels="false" Stroke="Black" StrokeThickness="1" VerticalAlignment="Top" Grid.Column="1" Margin="2,4,17.5,0" >
                               
                            </Path>
                            <Path x:Name="arrow1" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Right" SnapsToDevicePixels="false" Stroke="Black" StrokeThickness="1" VerticalAlignment="Stretch" Grid.Column="1" Margin="2,7.5,17.5,8.5" RenderTransformOrigin="-0.111,0.417" >
                               
                            </Path>
                            <ContentPresenter Grid.Column="1"
                    			Margin="-12,0,0,0"
                    			HorizontalAlignment="Left"
                    			VerticalAlignment="Center"
                    			SnapsToDevicePixels="True"
                    			RecognizesAccessKey="True" Width="202"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">

                            <Setter Property="LayoutTransform" TargetName="arrow">
                                <Setter.Value>
                                    <RotateTransform  Angle="180"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="arrow1">
                                <Setter.Value>
                                    <RotateTransform  Angle="180"></RotateTransform>
                                </Setter.Value>
                                  
                               
                            </Setter>                        </Trigger>
                        <Trigger Property="IsMouseOver"
                    		Value="true">
                            <Setter Property="Stroke"
                    			Value="#FF3C7FB1"
                    			TargetName="circle"/>
                            <!--<Setter Property="BorderBrush"
                    			Value="#FF3399FF"
                    			TargetName="OuterBorder"/>
                            <Setter Property="Background"
                    			Value="#FFC4E1FF"
                    			TargetName="OuterBorder"/>-->
                            <Setter Property="Fill"
                    			Value="#FFC4E1FF"
                    			TargetName="circle"/>
                            <Setter Property="Stroke"
                    			Value="#222"
                    			TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="Green" BorderBrush="Yellow" BorderThickness="3">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <!--<SolidColorBrush x:Key="ComboBoxItemBackground.Default" Color="Transparent"/>-->
    <Style x:Key="VS2010ExpanderStyle"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="#FFA0A0A0"
                		BorderThickness="1"
                		Background="White"
                		CornerRadius="3"
                		SnapsToDevicePixels="true" Margin="0,-4,0,0">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                				DockPanel.Dock="Top"
                				Margin="1"
                				MinWidth="0"
                				MinHeight="0"
                				Style="{StaticResource ExpanderDownHeaderStyle}"
                				FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                				IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                				Content="{TemplateBinding Header}"
                				ContentTemplate="{TemplateBinding HeaderTemplate}"
                				ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                				Foreground="{TemplateBinding Foreground}"
                				Padding="{TemplateBinding Padding}"
                				FontFamily="{TemplateBinding FontFamily}"
                				FontSize="{TemplateBinding FontSize}"
                				FontStyle="{TemplateBinding FontStyle}"
                				FontStretch="{TemplateBinding FontStretch}"
                				FontWeight="{TemplateBinding FontWeight}"
                				HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                				VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="22"/>
                            <ContentPresenter x:Name="ExpandSite"
                				DockPanel.Dock="Bottom"
                				Visibility="Collapsed"
                				Focusable="false"
                				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                				Margin="{TemplateBinding Padding}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Up">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ExpanderStyle}" TargetType="Expander"/>
    <!-- GroupBox -->

    <SolidColorBrush x:Key="GroupBoxBackground" Color="Transparent"/>
    <!--<SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#FF475B7E"/>-->
    <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#FFD5DFE5"/>
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

    <Style x:Key="VS2010GroupBoxStyle"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Background"
                Value="{StaticResource GroupBoxBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource GroupBoxBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Padding="3,1,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                            <ContentPresenter ContentSource="Header" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>

                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                   CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="White"
                                        CornerRadius="2"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010GroupBoxStyle}"
           TargetType="{x:Type GroupBox}"/>
        <Style x:Key="VS2010GroupItemStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter/>
                        <ItemsPresenter Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010GroupItemStyle}"
           TargetType="{x:Type GroupItem}"/>
    <!-- Hyperlink -->
    <Style x:Key="VS2010HyperlinkStyle"
           TargetType="{x:Type Hyperlink}">

        <Setter Property="Foreground"
                Value="Blue"/>
        <Setter Property="TextDecorations"
                Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Red"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VS2010HyperlinkStyle}"
           TargetType="{x:Type Hyperlink}"/>
        <!-- StatusBar -->
    <SolidColorBrush x:Key="StatusBarBackground" Color="#FF293955"/>
    <SolidColorBrush x:Key="StatusBarForeground" Color="White"/>
    <Style x:Key="VS2010StatusBarStyle"
           TargetType="{x:Type StatusBar}">
        <Setter Property="Background"
                Value="{StaticResource StatusBarBackground}"/>
        <Setter Property="Foreground"
                Value="{StaticResource StatusBarForeground}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010StatusBarStyle}"
           TargetType="{x:Type StatusBar}"/>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VS2010StatusBarItemStyle"
           TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding"
                Value="3"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource StatusBarForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010StatusBarItemStyle}"
           TargetType="{x:Type StatusBarItem}"/>

        <!-- ProgressBar -->

    <SolidColorBrush x:Key="ProgressBarBackground" Color="#FFD5DCE8"/>

    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="#FF35496A"/>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#00FFFFFF" Offset="0"/>
        <GradientStop Color="#60FFFFFF" Offset="0.4"/>
        <GradientStop Color="#60FFFFFF" Offset="0.6"/>
        <GradientStop Color="#00FFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF2" Offset="0.046"/>
        <GradientStop Color="#FFFFF4D1" Offset="0.464"/>
        <GradientStop Color="#FFFFEEBA" Offset="0.471"/>
        <GradientStop Color="#FFFFEEBA" Offset="0.516"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.523"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.987"/>
        <GradientStop Color="#FFBCC7D8" Offset="0.993"/>
    </LinearGradientBrush>

    <Style x:Key="VS2010ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2"/>
                        <Border Background="Transparent" CornerRadius="2" Margin="1"/>
                        <Border BorderBrush="#80FFFFFF" BorderThickness="1,0,1,1" Background="Transparent" Margin="1"/>
                        <Rectangle x:Name="PART_Track" Margin="1"/>
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Grid x:Name="Animation" ClipToBounds="true">
                                    <Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100"/>
                                </Grid>
                                <Grid x:Name="Overlay">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="15"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition MaxWidth="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="LeftDark" Fill="{StaticResource ProgressBarIndicatorGlassyHighlight}" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="RightDark" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorGlassyHighlight}" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="LeftLight" Grid.Column="0" Fill="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.Row="2"/>
                                    <Rectangle x:Name="CenterLight" Grid.Column="1" Fill="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.Row="2"/>
                                    <Rectangle x:Name="RightLight" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.Row="2"/>
                                    <Border x:Name="Highlight1" Background="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                    <Border x:Name="Highlight2" Background="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                </Grid>
                            </Grid>
                        </Decorator>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010ProgressBarStyle}" TargetType="{x:Type ProgressBar}"/>
    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
    </Geometry>

    <Style x:Key="SliderRepeatButtonStyleBlue"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5.5"
                                                Y="11"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderRectangleBackgroundBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderRectangleBorderBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource HorizontalSliderBorderBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource HorizontalSliderBorderBrush}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ButtonPressedBrush.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource HorizontalSliderPressedBackgroundBrush}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	 <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Blue"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
	   <LinearGradientBrush x:Key="SliderThumbMouseOver.Blue"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <GradientStop Color="#FFF9D1" Offset="1"/>
        <GradientStop Color="#FFEAA3" Offset="0.65"/>
        <GradientStop Color="#FFD75C" Offset="0.6"/>
        <GradientStop Color="#FFD456" Offset="0.25"/>
        <GradientStop Color="#FFE395" Offset="0.05"/>
        <GradientStop Color="#FFEAAD" Offset="0"/>
    </LinearGradientBrush>
	 <LinearGradientBrush x:Key="SliderThumbSelected.Blue"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <GradientStop Color="#F6B96B" Offset="1"/>
        <GradientStop Color="#FDAA63" Offset="0.65"/>
        <GradientStop Color="#FC8F3C" Offset="0.6"/>
        <GradientStop Color="#FFBC61" Offset="0.25"/>
        <GradientStop Color="#FFCB7F" Offset="0.05"/>
        <GradientStop Color="#FFD086" Offset="0"/>
    </LinearGradientBrush>
	 <LinearGradientBrush x:Key="SelectedBrush.Blue" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FED5A8" Offset="1"/>
        <GradientStop Color="#FCBC7A" Offset="0.65"/>
        <GradientStop Color="#F99630" Offset="0.6"/>
        <GradientStop Color="#FCC869" Offset="0.25"/>
        <GradientStop Color="#FDECA2" Offset="0.05"/>
        <GradientStop Color="#FDF1B0" Offset="0"/>
    </LinearGradientBrush>
		 <SolidColorBrush x:Key="BorderBrush.Blue" Color="Orange"/>
    <Style x:Key="HorizontalSliderUpThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="5"
                                                            Y="9"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted.Blue}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource BorderBrush.Blue}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource BorderBrush.Blue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	 <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Blue"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="HorizontalSliderDownThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>

                            <TranslateTransform X="5"
                                                Y="9"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackground.Blue}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource BorderBrush.Blue}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource BorderBrush.Blue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource SliderRectangleBackgroundBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource SliderRectangleBorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource VerticalSliderBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource VerticalSliderBackgroundBrush}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderPressedBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource VerticalSliderPressedBorderBrush}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource VerticalSliderPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	   <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Blue"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="VerticalSliderLeftThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackground.Blue}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource BorderBrush.Blue}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource BorderBrush.Blue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	   <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Blue"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="VerticalSliderRightThumbStyleBlue"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted.Blue}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="Transparent"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbMouseOver.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke" Value="{StaticResource BorderBrush.Blue}"/>

                        </Trigger>

                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource SliderThumbSelected.Blue}"/>
                            <Setter TargetName="InnerBorder" Property="Fill" Value="{StaticResource SelectedBrush.Blue}"/>

                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource BorderBrush.Blue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010SliderStyle"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Background"                                
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Blue}"/>
        <Setter Property="Foreground"
                Value="{StaticResource SliderTextBrushKey.Blue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Name="OuterBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="{StaticResource RectangleBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="{StaticResource RectangleBackgroundBrush}"
                                    Height="4.0">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                </Canvas>
                            </Border>
                            <Track Grid.Row="1"
                                   Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton  Style="{StaticResource SliderRepeatButtonStyleBlue}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton  Style="{StaticResource SliderRepeatButtonStyleBlue}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Style="{StaticResource HorizontalSliderThumbStyleBlue}"/>
                                </Track.Thumb>
                            </Track>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="TickPlacement"
                                 Value="TopLeft">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderUpThumbStyleBlue}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,2,5,0"/>
                        </Trigger>

                        <Trigger Property="TickPlacement"
                                 Value="BottomRight">
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderDownThumbStyleBlue}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="Both">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
                            <Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Blue"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}" >
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <Border Name="TrackBackground"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="{StaticResource RectangleBorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="{StaticResource RectangleBackgroundBrush}"
                                            Width="4.0">

                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                        </Canvas>
                                    </Border>

                                    <Track Grid.Column="1"
                                           Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                                   Style="{StaticResource VerticalSliderThumbStyleBlue}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderLeftThumbStyleBlue}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderRightThumbStyleBlue}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="Both">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true">
                                    <Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VS2010SliderStyle}" TargetType="{x:Type Slider}"/>


    <!-- Separator -->
    <SolidColorBrush x:Key="SeparatorBackground" Color="#FFBEC3CB"/>
    <Style x:Key="VS2010SeparatorStyle"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource SeparatorBackground}"/>
        <Setter Property="Margin"
                Value="0,2,0,2"/>
        <Setter Property="Focusable"
                Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010SeparatorStyle}"
           TargetType="{x:Type Separator}"/>

    <!-- ScrollBar -->
    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <theme:ScrollChrome Name="Chrome"
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <theme:ScrollChrome x:Name="Chrome"
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsDragging}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Background"
                Value="{StaticResource VerticalScrollBarBackground.Default}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}" >
                    <Grid Name="Bg"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      theme:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       theme:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      theme:ScrollChrome.ScrollGlyph="DownArrow"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{StaticResource ScrollBarDisabledBackground.Default}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto"/>
                <Setter Property="MinWidth"
                        Value="0"/>
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background"
                        Value="{StaticResource HorizontalScrollBarBackground.Default}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              theme:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               theme:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              theme:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Bg"
                                            Property="Background"
                                            Value="{StaticResource ScrollBarDisabledBackground.Default}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultScrollBarStyle}" TargetType="{x:Type ScrollBar}"/>


    <Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Fill="{StaticResource DefaultCornerBackground}" Grid.Column="1" Grid.Row="1"/>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>
    <!--<LinearGradientBrush x:Key="TriangleInner" MappingMode="Absolute" StartPoint="241.030762,459.043945" EndPoint="241.030762,464.498047">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.000000" Color="#ff404761"/>
            <GradientStop Offset="1.000000" Color="#ff617093"/>
            <GradientStop Offset="0.539326" Color="#ff617093"/>
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.Transform>
            <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820" />
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CornerBackground" Color="White"/>

    <LinearGradientBrush x:Key="ScrollbarNormalBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE8EBED" Offset="0.051"/>
        <GradientStop Color="#FFD2D9E3" Offset="0.932"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollbarNormalBorder" Color="#FF9BA7B7"/>
    <LinearGradientBrush x:Key="ScrollbarHoverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE5C365" Offset="0.007"/>
        <GradientStop Color="#FFFFFBF1" Offset="0.013"/>
        <GradientStop Color="#FFFFF4D2" Offset="0.47"/>
        <GradientStop Color="#FFFFECB5" Offset="0.543"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollbarHoverBorder" Color="#FFE5C365"/>
    <SolidColorBrush x:Key="ScrollbarPressedBackground" Color="#FFFFE8A6"/>
    <SolidColorBrush x:Key="ScrollFill" Color="#FF000000"/>
    <LinearGradientBrush x:Key="VerticalScrollbarHoverBackground" EndPoint="1.224,0.497" StartPoint="0.099,0.498">
        <GradientStop Color="#FFFFFBF1" Offset="0.034"/>
        <GradientStop Color="#FFFFF4D2" Offset="0.438"/>
        <GradientStop Color="#FFFFECB5" Offset="0.529"/>
        <GradientStop Color="#FFFFECB5" Offset="0.983"/>
        <GradientStop Color="#FFE5C365" Offset="1"/>
    </LinearGradientBrush>-->

    <!--<Style x:Key="ScrollBarDownButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{StaticResource ScrollbarNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollbarNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">

                            <Path Data="M0,0L3.5,4 7,0z" HorizontalAlignment="Center" Height="5" Width="8" Stretch="Fill" Fill="{StaticResource ScrollFill}" Name="Arrow" VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarPressedBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                            
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarHoverBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                            
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource TriangleInner}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollBarLeftButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Background" Value="{StaticResource ScrollbarNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollbarNormalBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border  Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">

                            <Path Data=" M 7 1 L 3 5 L 7 9 z" Stretch="Fill" Height="8" Width="5" HorizontalAlignment="Center" Fill="{StaticResource ScrollFill}" Name="Arrow" VerticalAlignment="Center" >
                            </Path>
                        </Border>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarPressedBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                           
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarHoverBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                        
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource TriangleInner}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollBarRightButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{StaticResource ScrollbarNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollbarNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">

                    <Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">

                            <Path Data="M 3 1 L 7 5 L 3 9 z" Height="8" Width="5" Stretch="Fill" HorizontalAlignment="Center" Fill="{StaticResource ScrollFill}" Name="Arrow" VerticalAlignment="Center" >

                            </Path>
                        </Border>

                    </Border>
                    <ControlTemplate.Triggers>


                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarPressedBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                           
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarHoverBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                           
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource TriangleInner}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollBarUpButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ScrollbarNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollbarNormalBorder}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">

                    <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">

                            <Path Data="M0,4 L7,4 3.5,0z" HorizontalAlignment="Center" Height="4" Width="8" Stretch="Fill" Fill="{StaticResource ScrollFill}" Name="Arrow" VerticalAlignment="Center" >

                            </Path>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarPressedBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                            
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ScrollbarHoverBackground}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ScrollbarHoverBorder}"/>
                            
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource TriangleInner}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollBarVerticalThumbBlue" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Control.Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border BorderBrush="{StaticResource ScrollbarNormalBorder}" CornerRadius="1" BorderThickness="1" Name="PART_RepeatThumb" Background="{StaticResource ScrollbarNormalBackground}">
                           
                        </Border>

                        <Path Margin="0,-6,0,0" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,-2,0,0"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,0,-2"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,0,-6"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>

                    </Grid>



                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource VerticalScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarHoverBorder}" />

                        </Trigger>
                        <Trigger Property="IsDragging"  Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarPressedBackground}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarHoverBorder}" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollBarHorizontalThumbBlue" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>




        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid >
                        <Border BorderBrush="{StaticResource ScrollbarNormalBorder}" CornerRadius="1" BorderThickness="1" Name="PART_RepeatThumb" Background="{StaticResource ScrollbarNormalBackground}">
                           
                        </Border>
                        <Path Margin="-6,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="-2,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,-2,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,-6,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarHoverBorder}" />

                        </Trigger>
                        <Trigger Property="IsDragging"  Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarPressedBackground}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource ScrollbarHoverBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HorizontalScrollBarPageButtonBlue"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButtonBlue"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="HorizontalScrollbarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE3E3E3" Offset="0.045"/>
        <GradientStop Color="#FFEDEDED" Offset="0.185"/>
    </LinearGradientBrush>

    <Style x:Key="VS2010ScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource HorizontalScrollbarBackground}"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Name="Bg"
                          Background="{TemplateBinding Background}"                          
                          SnapsToDevicePixels="true">

                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>

                        <RepeatButton Name="UpButton" Style="{StaticResource ScrollBarUpButtonBlue}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}" 
                                      />
                        <Track Grid.Row="1" Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarVerticalThumbBlue}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>

                        </Track>

                        <RepeatButton Name="DownButton" Style="{StaticResource ScrollBarDownButtonBlue}"
                                    Grid.Row="2" 
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                     />

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bg"
                                            Property="Opacity"
                                            Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarHoverBorder}" />
                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarHoverBorder}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                <Condition SourceName="UpButton" Property="IsMouseOver"
                                           Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarHoverBorder}" />

                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBorder}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                <Condition SourceName="UpButton" Property="IsPressed"
                                           Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarPressedBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarHoverBorder}" />

                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBorder}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                <Condition SourceName="DownButton" Property="IsMouseOver"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarHoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarHoverBorder}" />

                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBorder}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                <Condition SourceName="DownButton" Property="IsPressed"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarPressedBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarHoverBorder}" />

                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBorder}" />

                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_Track" Value="True">
                            <Setter Property="Background" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="UpButton" Value="{StaticResource ScrollbarNormalBorder}" />

                            <Setter Property="Background" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBackground}" />
                            <Setter Property="BorderBrush" TargetName="DownButton" Value="{StaticResource ScrollbarNormalBorder}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto"/>
                <Setter Property="MinWidth"
                        Value="0"/>
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="{StaticResource HorizontalScrollbarBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg" Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Name="LeftButton" Style="{StaticResource ScrollBarLeftButtonBlue}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}" 
                                              />
                                <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarHorizontalThumbBlue}" 
                                               />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Name="RightButton" Style="{StaticResource ScrollBarRightButtonBlue}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}" 
                                              />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Bg"
                                            Property="Opacity"
                                            Value="0.7"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">

                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarHoverBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarHoverBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                        <Condition SourceName="LeftButton" Property="IsMouseOver"
                                           Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarHoverBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBorder}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                        <Condition SourceName="RightButton" Property="IsMouseOver"
                                           Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarHoverBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBorder}" />

                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                        <Condition SourceName="LeftButton" Property="IsPressed"
                                           Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarPressedBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBorder}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_Track"
                                           Value="False"/>
                                        <Condition SourceName="RightButton" Property="IsPressed"
                                           Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarPressedBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarHoverBorder}" />

                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBorder}" />

                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" SourceName="PART_Track" Value="True">
                                    <Setter Property="Background" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="RightButton" Value="{StaticResource ScrollbarNormalBorder}" />
                                    <Setter Property="Background" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBackground}" />
                                    <Setter Property="BorderBrush" TargetName="LeftButton" Value="{StaticResource ScrollbarNormalBorder}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VS2010ScrollBarStyle}"
           TargetType="{x:Type ScrollBar}"/>
        <Style x:Key="VS2010ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Fill="{StaticResource CornerBackground}" Grid.Column="1" Grid.Row="1"/>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>-->
        <!-- TabControl -->

    <SolidColorBrush x:Key="TabControlNormalBorderBrush"
                     Color="#FF9BA7B7"/>
    <SolidColorBrush x:Key="TabControlBackground" Color="White"/>
    <SolidColorBrush x:Key="TabPanelBackground" Color="#FF2B3C59"/>
    <SolidColorBrush x:Key="TabForeground" Color="Red"/>
    <LinearGradientBrush x:Key="TabItemHoverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF6F7776" Offset="0.045"/>
        <GradientStop Color="#FF4F5F74" Offset="0.964"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemHoverBorder" Color="#FF9BA7B7"/>
    <LinearGradientBrush x:Key="TabItemSelectedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF2" Offset="0.028"/>
        <GradientStop Color="#FFFFF3CF" Offset="0.446"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.453"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.993"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="VS2010TabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Foreground"
                Value="{StaticResource TabForeground}"/>
        <Setter Property="Padding"
                Value="4,4,4,4"/>
        <Setter Property="BorderThickness"
                Value="1,0,1,1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource TabControlBackground}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                        </Grid.RowDefinitions>
                        <!--<Border BorderBrush="#FFFFE8A6" BorderThickness="0,0,0,3">-->
                        <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="2,2,2,0"
                                  IsItemsHost="true" Background="{StaticResource TabPanelBackground}"/>
                        <!--</Border>-->
                        <!--<Border BorderBrush="Red" BorderThickness="0,2,0,0" Background="Red">-->
                        <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1,0,1,1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                            <Grid>
                                <Border BorderBrush="#FFFFE8A6" BorderThickness="0,4,0,0"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                        <!--</Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,2,0,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010TabControlStyle}"
           TargetType="{x:Type TabControl}"/>
        <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010TabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="Padding"
                Value="6,1,6,1"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd" CornerRadius="2,2,0,0" Margin="0,2,0,0"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1,1,1,0">
                            <ContentPresenter Name="Content"
                                              ContentSource="Header"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemHoverBackground}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemHoverBorder}"/>
                            <!--<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,1,0"/>-->
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Panel.ZIndex"
                                    Value="1"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemSelectedBackground}"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <!--<Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemSelectedBorder}"/>-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="false"/>
                                <Condition Property="IsMouseOver"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemHoverBackground}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemHoverBorder}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True"/>
                                <Condition Property="IsMouseOver"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemSelectedBackground}"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="Transparent"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Top"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>-->
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemDisabledBackground.Default}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemDisabledBorderBrush.Default}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010TabItemStyle}"
           TargetType="{x:Type TabItem}"/>
        <!-- GridView -->

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010GridSplitterStyle"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010GridSplitterStyle}" TargetType="{x:Type GridSplitter}"/>


    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="false">
                            <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BlueGridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right"
                Value="-9"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010GridViewColumnHeaderStyle"
           TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeaderBorder}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="HeaderBorder" 
                               BorderThickness="0,0,1,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter Name="HeaderContent"
                                                      Margin="0"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource BlueGridViewColumnHeaderGripper}"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewHeaderMouseOver}"/>
                            <Setter Property="Foreground" Value="#FF31302F"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewHeaderPressed}"/>
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Height"
                                 Value="Auto">
                            <Setter Property="MinHeight"
                                    Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.4082"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697"
                                           Fill="#FF000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource VS2010GridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}"/>
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static GridView.GridViewStyleKey}"
           TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeaderBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                        
                                         SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource GridViewItemBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridViewItemBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}" >
                    <Border Name="Bd" BorderThickness="1" Height="22" CornerRadius="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemMouseOverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource GridViewItemMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView-->
    <Style x:Key="VS2010ListViewStyle"
           TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridViewItemBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                        
                                         SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ListViewStyle}" TargetType="{x:Type ListView}"/>

    <Style x:Key="VS2010ListViewItemStyle"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource GridViewItemBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridViewItemBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0,0,0,0"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd" BorderThickness="1" Margin="0,-4,0,4" Height="Auto" CornerRadius="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">


                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemMouseOverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource GridViewItemMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBorderBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewItemPressedBrush}"/>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>

    <!-- Thumb -->
    <!--<ControlTemplate TargetType="{x:Type Thumb}" x:Key="DefaultThumbTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Border BorderThickness="0,0,1,1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <Border BorderThickness="0,0,1,1"
                                    Margin="1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                <Border Margin="2"
                                    Background="{TemplateBinding Background}"/>
            </Grid>
        </Border>
    </ControlTemplate>-->

    <!-- ResizeGrip -->

    <SolidColorBrush x:Key="ResizeGripperForeground" Color="#FF2B3C59"/>

    <Style x:Key="VS2010ResizeGripStyle"
           TargetType="{x:Type ResizeGrip}">
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Margin="0,0,2,2"
                              Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z">

                            <Path.Fill>
                                <DrawingBrush Viewbox="0,0,3,3"
                                              Viewport="0,0,3,3"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}"
                                                                 Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010ResizeGripStyle}"
           TargetType="{x:Type ResizeGrip}"/>
        <!-- ToolBar -->
    <!--<Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>-->
    <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFBCC7D8"/>
    <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFD5DCE8"/>
    <SolidColorBrush x:Key="ToolBarToggleForeground" Color="#FF1B293E"/>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHoverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFCF3" Offset="0.036"/>
        <GradientStop Color="#FFFFF3CE" Offset="0.494"/>
        <GradientStop Color="#FFFFECB5" Offset="0.501"/>
        <GradientStop Color="#FFFFECB5" Offset="0.995"/>
        <GradientStop Color="#FF9CAAC1" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarGripper" Color="#FF60728C"/>
    <SolidColorBrush x:Key="ToolBarToggleButtonSelectedBackground" Color="#FFFFE8A6"/>

    <Style x:Key="VS2010ToolBarTrayStyle" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" 
                Value="{StaticResource ToolBarTrayBackground}"/>
    </Style>
    <Style BasedOn="{StaticResource VS2010ToolBarTrayStyle}" TargetType="{x:Type ToolBarTray}"/>
        <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarSeparatorFill}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ButtonPressedBorder}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Opacity" Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}"/>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}"/>

    <Style x:Key="ToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome"
                                Grid.Column="1"
                                Width="13"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="M 2.5 0 L 8.5 0 L 5.5 3 Z"
                                  Fill="black"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="Red"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="Pink"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="Blue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource ToolBarDisabledBorder.Default}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="BorderBrush"
                        Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
        <Setter Property="Background"
                        Value="White"/>
        <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <TextBox Visibility="Hidden" Style="{StaticResource BlueComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"  BorderBrush="{StaticResource ListBoxBorderBrushKey}"
                                        Background="{StaticResource ListBoxBackgroundBrushKey}" BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                            <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="BorderBrush"
                        Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
                <Setter Property="Background"
                        Value="{StaticResource ComboBoxBackground.Blue}"/>
                <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush}"/>
                <Setter Property="IsTabStop"
                        Value="false"/>
                <Setter Property="Padding"
                        Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Grid.Column="2" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                                <TextBox Visibility="Hidden" Style="{StaticResource BlueComboBoxEditableTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder"  BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}" BorderThickness="1"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                                    <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder"/>
                                    <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3,3,3,3"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                                    <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      MinHeight="18"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value=".5"/>
                            <!--<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource ToolBarDisabledFill.Default}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarDisabledBorder.Default}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource TextBoxMouseOverBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Static ToolBar.MenuStyleKey}" BasedOn="{StaticResource {x:Type Menu}}" TargetType="{x:Type Menu}"-->

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="{x:Type Menu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="Background" 
                        Value="Transparent"/>
                            <Setter Property="Height" Value="1" />
                            <Setter Property="Margin" Value="0,1,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
                            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background"
                Value="Transparent"/>
                            <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                            <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="37"/>
                                                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                    <ColumnDefinition Width="17"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                                </Border>
                                                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Icon"
                     Value="{x:Null}">
                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked"
                     Value="true">
                                                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted"
                     Value="true">
                                                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                                                <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                                <!--<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#40FFFFFF"/>-->
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                     Value="false">
                                                <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                                <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                                                <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                                                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Role"
                     Value="TopLevelHeader">
                                    <Setter Property="Padding"
                        Value="7,2,8,3"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                                <Grid SnapsToDevicePixels="true">
                                                    <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                                    <Border Name="Bg"
                       Margin="1,1,1,-3"
                       Background="{TemplateBinding MenuItem.Background}"
                       BorderBrush="{TemplateBinding MenuItem.BorderBrush}"
                       BorderThickness="1,1,1,0"
                       CornerRadius="1"
                       />
                                                    <Border x:Name="InnerBorder" Margin="2,2,2,0" CornerRadius="2" BorderThickness="1"
                       />
                                                    <DockPanel>
                                                        <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </DockPanel>
                                                    <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                        <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                            <ContentControl Name="SubMenuBorder" Margin="0,-5,0,0"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                                                <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                                    <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                                </ScrollViewer>
                                                            </ContentControl>
                                                        </theme:SystemDropShadowChrome>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                                        <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                     Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                     Value="true">
                                                        <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                                        <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>

                                                    </Trigger>

                                                    <Trigger Property="IsHighlighted"
                     Value="true">

                                                        <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused"
                     Value="true">

                                                        <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="#FFE9ECEE"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="CornerRadius"
                        Value="2,2,0,0"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="#FF9BA7B7"/>

                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                     Value="true">

                                                        <Setter TargetName="InnerBorder"
                        Property="Background"
                        Value="#FFE9ECEE"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="CornerRadius"
                        Value="2,2,0,0"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="BorderBrush"
                        Value="#FF9BA7B7"/>

                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                     Value="false">
                                                        <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                                        <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                     Value="TopLevelItem">
                                    <Setter Property="Padding"
                        Value="7,2,8,3"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                                <Grid SnapsToDevicePixels="true">
                                                    <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                                    <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                                    <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                                    <DockPanel>
                                                        <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </DockPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon"
                     Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                     Value="true">
                                                        <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                     Value="true">
                                                        <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#90717070"/>
                                                        <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="Red"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>

                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                                        <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
                                                        <Setter TargetName="Bg"
                        Property="Fill"
                        Value="White"/>
                                                        <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                     Value="false">
                                                        <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                                        <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                     Value="SubmenuHeader">
                                    <Setter Property="Padding"
                        Value="2,3,2,3"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                                                <Grid SnapsToDevicePixels="true">
                                                    <Rectangle Name="Bg"
                       Fill="red"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2" />
                                                    <Rectangle x:Name="InnerBorder"
                       Margin="0"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                            <ColumnDefinition Width="4"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="37"/>
                                                            <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                            <ColumnDefinition Width="17"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                                            <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                                        </Border>
                                                        <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                                        <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                                    </Grid>
                                                    <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                        <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                                            <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                                                <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                                    <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                                                </ScrollViewer>
                                                            </ContentControl>
                                                        </theme:SystemDropShadowChrome>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                                        <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                                    </Trigger>

                                                    <Trigger Property="Icon"
                     Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                     Value="true">
                                                        <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                                        <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                                        <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemSelectedBrushKey}"/>
                                                        <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                                        <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                     Value="true">
                                                        <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ListBoxItemMouseOverBrushKey}"/>
                                                        <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ListBoxItemMouseOverBorderBrushKey}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                     Value="false">
                                                        <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                                        <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                                                        <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                                                        <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                     Value="SubmenuItem">
                                    <Setter Property="Padding"
                        Value="2,3,2,3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush Viewbox="0,0,4,4"
                                              Viewport="0,0,4,4"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <!--<GeometryDrawing Brush="White"
                                                                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>-->
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
                        <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">

                            <Path Data="M 0 0.5 L 5 0.5" Stroke="{StaticResource ToolBarToggleForeground}"/>

                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{StaticResource ToolBarToggleForeground}"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarToggleButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarToggleButtonSelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5"/>
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,0,3,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">

                            <Path Stroke="{StaticResource ToolBarToggleForeground}"
                                  Data="M 0.5 0 L 0.5 5"/>

                            <Path Fill="{StaticResource ToolBarToggleForeground}"
                                  Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarToggleButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarToggleButtonSelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2010ToolBarStyle"
           TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Right"
                              x:Name="OverflowGrid">
                            <ToggleButton x:Name="OverflowButton"
                                          FocusVisualStyle="{x:Null}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <theme:SystemDropShadowChrome Name="Shdw"
                                                              Color="Transparent">
                                    <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                            BorderBrush="{StaticResource ToolBarMenuBorder.Default}"
                                            BorderThickness="1">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </theme:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,3,3"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource ToolBarThumbStyle}"
                                       Margin="-3,-1,0,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
                                <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,2,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen"
                                 Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="Header"
                                 Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger SourceName="OverflowPopup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
                            <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
                            <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
                            <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
                            <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                            <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                            <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
                            <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
                            <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
                            <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarHorizontalBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ToolBarStyle}"
           TargetType="{x:Type ToolBar}"/>
        <Style x:Key="VS2010ContentControlStyle"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010ContentControlStyle}"
           TargetType="{x:Type ContentControl}"/>
        <Style x:Key="VS2010FlowDocumentStyle"
           TargetType="{x:Type FlowDocument}">
        <Setter Property="TextAlignment"
                Value="Justify"/>
        <Setter Property="FontFamily"
                Value="Georgia"/>
        <Setter Property="FontSize"
                Value="16.0"/>
        <Setter Property="Background" Value="{StaticResource  ListBoxBackground.Default}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    </Style>
    <Style BasedOn="{StaticResource VS2010FlowDocumentStyle}"
           TargetType="{x:Type FlowDocument}"/>
        <Style x:Key="VS2010TextBlockStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping"
                Value="NoWrap"/>
        <Setter Property="TextTrimming"
                Value="None"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    </Style>
    <Style BasedOn="{StaticResource VS2010TextBlockStyle}"
           TargetType="{x:Type TextBlock}"/>
        <Style x:Key="{x:Type Bold}"
           TargetType="{x:Type Bold}">
        <Setter Property="FontWeight"
                Value="Bold"/>
    </Style>

    <Style x:Key="{x:Type FlowDocumentPageViewer}" TargetType="{x:Type FlowDocumentPageViewer}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    </Style>

    <Style x:Key="VS2010FlowDocumentReaderStyle" TargetType="{x:Type FlowDocumentReader}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    </Style>
    <Style BasedOn="{StaticResource VS2010FlowDocumentReaderStyle}" TargetType="{x:Type FlowDocumentReader}"/>
        <Style x:Key="{x:Type Italic}"
           TargetType="{x:Type Italic}">
        <Setter Property="FontStyle"
                Value="Italic"/>
    </Style>
    <Style x:Key="{x:Type Underline}"
           TargetType="{x:Type Underline}">
        <Setter Property="TextDecorations"
                Value="Underline"/>
    </Style>
    <Style x:Key="{x:Type Paragraph}"
           TargetType="{x:Type Paragraph}">
        <Setter Property="Margin"
                Value="Auto"/>       
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush.Default}"/>
    </Style>

    <Style x:Key="{x:Type List}"
           TargetType="{x:Type List}">
        <Setter Property="Margin"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="Auto"/>
    </Style>
    <Style x:Key="{x:Type Floater}"
           TargetType="{x:Type Floater}">
        <Setter Property="HorizontalAlignment"
                Value="Right"/>
    </Style>

    <DataTemplate DataType="{x:Type FlowDocument}">
        <FlowDocumentReader Document="{Binding}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocument}">
        <DocumentViewer Document="{Binding}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocumentSequence}">
        <DocumentViewer Document="{Binding}"/>
    </DataTemplate>

    <Style x:Key="VS2010HeaderedContentControlStyle"
           TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <StackPanel>
                        <ContentPresenter ContentSource="Header"/>
                        <ContentPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010HeaderedContentControlStyle}"
           TargetType="{x:Type HeaderedContentControl}"/>
        <!--<Style x:Key="{x:Type ItemsControl}"
           TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    <Style x:Key="VS2010LabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Padding"
                Value="5"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource VS2010LabelStyle}"
           TargetType="{x:Type Label}"/>


        <!-- Page -->

    <Style x:Key="VS2010PageStyle"
           TargetType="{x:Type Page}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Page.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource VS2010PageStyle}"
           TargetType="{x:Type Page}"/>
    <Style x:Key="{x:Type RichTextBox}"
           BasedOn="{StaticResource {x:Type TextBoxBase}}"
           TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true"/>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth"
                Value="10"/>
    </Style>

    <Style x:Key="VS2010UserControlStyle"
           TargetType="{x:Type UserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource VS2010UserControlStyle}"
           TargetType="{x:Type UserControl}"/>
        <!-- Window -->
    <!--<ControlTemplate TargetType="{x:Type Window}" x:Key="DefaultWindowTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter/>
            </AdornerDecorator>
        </Border>
    </ControlTemplate>-->








</ResourceDictionary>
