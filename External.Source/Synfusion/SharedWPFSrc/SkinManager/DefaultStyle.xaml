<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Default -->

    <Thickness x:Key="BorderThickness.Default">1,1,1,1</Thickness>

    <!-- Button -->

    <LinearGradientBrush x:Key="ButtonBackgroundBrush.Default" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF2F2F2" Offset="0"/>
        <GradientStop Color="LightGray" Offset="1"/>
        <GradientStop Color="#FFEEEEEE" Offset="0.5"/>
        <GradientStop Color="#FFDBDBDB" Offset="0.5"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBorderBrush.Default"
                     Color="#FF707070"/>
    <SolidColorBrush x:Key="ForegroundBrush.Default" Color="Black"/>

    <Thickness x:Key="ComboBoxItemBorderThickness.Blue">1</Thickness>
    <Thickness x:Key="ProgressBarBorderThickness.Blue">1</Thickness>
    <SolidColorBrush x:Key="SliderTextBrushKey.Blue" Color="#FFC4C4C4"></SolidColorBrush>

    <!-- CheckBox -->
    <SolidColorBrush x:Key="CheckBoxFillNormal.Default"
                     Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke.Default"
                     Color="#8E8F8F"/>

    <SolidColorBrush x:Key="ComboBoxItemBackground.Default" Color="Transparent"/>


    <!-- RadioButton -->

    <SolidColorBrush x:Key="ComboBoxItemBorderBrush.Blue" Color="Transparent"/>

    <SolidColorBrush x:Key="RadioButtonBackground.Default" Color="#F4F4F4"/>

    <!-- ListBox -->
    <SolidColorBrush x:Key="ListBorder.Default"
                     Color="#828790"/>
    <SolidColorBrush x:Key="ListBoxBackground.Default" Color="White"/>
  <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="Black"/>
    <!-- Menu -->
    <LinearGradientBrush x:Key="MenuBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F6F6F6"
                          Offset="0.25"/>
            <GradientStop Color="#EAE8E8"
                          Offset="0.25"/>
            <GradientStop Color="#DCD9D9"
                          Offset="0.8"/>
            <GradientStop Color="White"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemSelectionFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#34C5EBFF"
                          Offset="0"/>
            <GradientStop Color="#3481D8FF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemPressedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#28717070"
                          Offset="0"/>
            <GradientStop Color="#50717070"
                          Offset="0.75"/>
            <GradientStop Color="#90717070"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ContextMenuBackground.Default" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="ContextMenuBorderBrush.Default" Color="#FF959595"/>

    <SolidColorBrush x:Key="ToolTipBorderBrush.Default" Color="#767676"/>
    <LinearGradientBrush x:Key="ToolTipBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#E4E5F0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxBorder.Default"
                         StartPoint="0,0"
                         EndPoint="0,20"
                         MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ABADB3"
                          Offset="0.05"/>
            <GradientStop Color="#E2E3EA"
                          Offset="0.07"/>
            <GradientStop Color="#E3E9EF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderArrowFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#FFBFBFBF"
                          Offset="0.5"/>
            <GradientStop Color="#FF878787"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF0F8FE"
                          Offset="0"/>
            <GradientStop Color="#FFE0F3FE"
                          Offset="0.3"/>
            <GradientStop Color="#FF6FA7C5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFDCF0FA"
                          Offset="0"/>
            <GradientStop Color="#FFC5E6F7"
                          Offset="0.2"/>
            <GradientStop Color="#FF5690D0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GroupBoxBorderBrush.Default" Color="#D5DFE5"/>
    <SolidColorBrush x:Key="StatusBarBackground.Default" Color="#FFF1EDED"/>

    <LinearGradientBrush x:Key="ProgressBarBorderBrush.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B2B2B2"
                          Offset="0"/>
            <GradientStop Color="#8C8C8C"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#BABABA"
                          Offset="0"/>
            <GradientStop Color="#C7C7C7"
                          Offset="0.5"/>
            <GradientStop Color="#BABABA"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF"
                          Offset="0.05"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.25"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#90FFFFFF"
                          Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                          Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect.Default"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0C000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.3"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.7"/>
            <GradientStop Color="#0C000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill.Default" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#FF000000"
                          Offset="0.4"/>
            <GradientStop Color="#FF000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ProgressBarForeground.Default" Color="#01D328"/>

    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="White"
                          Offset="0"/>
            <GradientStop Color="#F0EFEF"
                          Offset="0.4"/>
            <GradientStop Color="#D6D5D5"
                          Offset=".8"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="white"
                          Offset="0"/>
            <GradientStop Color="#B8E2F9"
                          Offset="0.5"/>
            <GradientStop Color="#B0DFF8"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBackground.Default" Color="#FFE0DFE3"/>


    <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder.Default" Color="#3C7FB1"/>

    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted.Default"
                         EndPoint="0,0"
                         StartPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B8E4FA"
                          Offset="0.25"/>
            <GradientStop Color="#5EB4E3"
                          Offset="0.5"/>
            <GradientStop Color="#4C8BB4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder.Default" Color="#2C628B"/>


    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground.Default"
                     Color="#FFE7EAEA"/>
    <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder.Default"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder.Default"
                         EndPoint="1,0"
                         StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFAEB1AF"
                          Offset="0.1"/>
            <GradientStop Color="White"
                          Offset=".9"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SliderBackground.Default" Color="Transparent"/>
    <SolidColorBrush x:Key="SliderForeground.Default" Color="#FFC4C4C4"/>

    <SolidColorBrush x:Key="ScrollBarDisabledBackground.Default"
                     Color="#F4F4F4"/>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E1E1E1"
                          Offset="0"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.20"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.80"/>
            <GradientStop Color="#E3E3E3"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalScrollBarBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E1E1E1"
                          Offset="0"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.20"/>
            <GradientStop Color="#EDEDED"
                          Offset="0.80"/>
            <GradientStop Color="#E3E3E3"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabControlNormalBorderBrush.Default"
                     Color="#8C8E94"/>
    <SolidColorBrush x:Key="TabControlBackground.Default" Color="#F9F9F9"/>

    <LinearGradientBrush x:Key="TabItemHotBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EAF6FD"
                          Offset="0.15"/>
            <GradientStop Color="#D9F0FC"
                          Offset=".5"/>
            <GradientStop Color="#BEE6FD"
                          Offset=".5"/>
            <GradientStop Color="#A7D9F5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground.Default"
                     Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground.Default"
                     Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush.Default"
                     Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush.Default"
                     Color="#FFC9C7BA"/>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#CCD4E9" Offset="0.1"/>
                <GradientStop Color="#4881D2" Offset="0.47"/>
                <GradientStop Color="#001A5A" Offset="0.47"/>
                <GradientStop Color="#007BD6" Offset="0.70"/>
                <GradientStop Color="#54DAFF" Offset="0.85"/>
                <GradientStop Color="#86FFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.0"/>
                <GradientStop Color="#DFEDF9" Offset="0.1"/>
                <GradientStop Color="#3086E1" Offset="0.47"/>
                <GradientStop Color="#003B91" Offset="0.47"/>
                <GradientStop Color="#1793EF" Offset="0.70"/>
                <GradientStop Color="#5AD4FF" Offset="0.85"/>
                <GradientStop Color="#BDFFFF" Offset="0.95"/>
                <GradientStop Color="#FFFFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#C0D2F5" Offset="0.0"/>
                <GradientStop Color="#5E7A9C" Offset="0.47"/>
                <GradientStop Color="#00062D" Offset="0.47"/>
                <GradientStop Color="#005F9F" Offset="0.70"/>
                <GradientStop Color="#1FA4E2" Offset="0.85"/>
                <GradientStop Color="#61DAFF" Offset="0.95"/>
                <GradientStop Color="#48CFFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Default"
                         StartPoint="0.5,0.0"
                         EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#EBEEF5" Offset="0.5"/>
                <GradientStop Color="#D8DDEB" Offset="0.5"/>
                <GradientStop Color="#DFE2F0" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#6C90C4" Offset="0"/>
                <GradientStop Color="#315BB4" Offset="0.5"/>
                <GradientStop Color="#002091" Offset="0.5"/>
                <GradientStop Color="#08377C" Offset="1"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#8AB1FB" Offset="0"/>
            <GradientStop Color="#002874" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFF" Offset="0.5"/>
                <GradientStop Color="#EEEEEE" Offset="0.5"/>
                <GradientStop Color="#B0B0B0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill.Default"
                         StartPoint="0,0" 
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#33B5DA" Offset="0"/>
                <GradientStop Color="#335799" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF" Offset="0"/>
            <GradientStop Color="#E3E8F4" Offset="0.5"/>
            <GradientStop Color="#CFD7EB" Offset="0.5"/>
            <GradientStop Color="#E9ECFA" Offset="1.0"/>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CurrentEntryBackground.Default" 
                     Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}"
                     Opacity="0.25"/>

    <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF2F2F2"
                          Offset="0"/>
            <GradientStop Color="#FFD5D5D5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFFFFFF"
                          Offset="0.4091"/>
            <GradientStop Color="#FFF7F8F9"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFBDEDFF"
                          Offset="0"/>
            <GradientStop Color="#FFB7E7FB"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF8DD6F7"
                          Offset="0"/>
            <GradientStop Color="#FF8AD1F5"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListItemHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF1FBFF"
                          Offset="0"/>
            <GradientStop Color="#FFD5F1FE"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD9F4FF"
                          Offset="0"/>
            <GradientStop Color="#FF9BDDFB"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedHoverFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFEAF9FF"
                          Offset="0"/>
            <GradientStop Color="#FFC9EDFD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedInactiveFill.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFEEEDED"
                          Offset="0"/>
            <GradientStop Color="#FFDDDDDD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListViewItemBorderBrush.Default" Color="Transparent"/>
    <SolidColorBrush x:Key="ListViewItemBackground.Default" Color="Transparent"/>


    <LinearGradientBrush x:Key="ToolBarTrayBackground.Default"
                         StartPoint="0,0"
                         EndPoint="688,0"
                         MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F4F4F4"
                          Offset="0"/>
            <GradientStop Color="#FDFDFD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarLightFill.Default"
                     Color="#F7F7FF"/>
    <SolidColorBrush x:Key="ToolBarMediumFill.Default"
                     Color="#D6DBE7"/>
    <SolidColorBrush x:Key="ToolBarDarkFill.Default"
                     Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarDisabledFill.Default"
                     Color="#F7F7F7"/>
    <SolidColorBrush x:Key="ToolBarDisabledBorder.Default"
                     Color="#B5B2B5"/>
    <SolidColorBrush x:Key="ToolBarSeparatorFill.Default"
                     Color="#C6C7C6"/>
    <SolidColorBrush x:Key="ToolBarButtonHover.Default"
                     Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder.Default"
                     Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarButtonChecked.Default"
                     Color="#E6F0FA"/>
    <SolidColorBrush x:Key="ToolBarButtonPressed.Default"
                     Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder.Default"
                     Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder.Default"
                     Color="#808080"/>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground.Default"
                     Color="#FDFDFD"/>
    <SolidColorBrush x:Key="ToolBarMenuCheckFill.Default"
                     Color="#E6F0FA"/>
    <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="0.5"/>
            <GradientStop Color="#F7F7F7"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0"/>
            <GradientStop Color="#FFFBFF"
                          Offset="0.5"/>
            <GradientStop Color="#F7F7F7"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ECECEC"
                          Offset="0"/>
            <GradientStop Color="#DDDDDD"
                          Offset="0.5"/>
            <GradientStop Color="#A0A0A0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ECECEC"
                          Offset="0"/>
            <GradientStop Color="#DDDDDD"
                          Offset="0.5"/>
            <GradientStop Color="#A0A0A0"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SeparatorBackground.Default" Color="LightGray"/>
    <SolidColorBrush x:Key="DefaultCornerBackground" Color="#EDEDED"/>



    <!-- Button -->

    <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <theme:ButtonChrome Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderDefaulted"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="{x:Type Button}"/>
    
    <!-- CheckBox -->

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrush.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" 
                                     SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"
                                                IsChecked="{TemplateBinding IsChecked}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}"/>

    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <TextBlock Text="{Binding Path=Name}"/>
    </DataTemplate>


    <!-- ComboBox -->


    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <theme:ButtonChrome Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true">
                        <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                              HorizontalAlignment="Right">
                            <Path Name="Arrow"
                                  Margin="3,1,0,0"
                                  Fill="Black"
                                  Data="{StaticResource DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Grid>
                    </theme:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <theme:ButtonChrome Name="Chrome"
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        RoundCorners="false"
                                        SnapsToDevicePixels="true">
                        <Path Name="Arrow"
                                  Margin="0,1,0,0"
                                  Fill="Black"
                                  Data="{StaticResource DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                    </theme:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="DefaultComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ButtonBackgroundBrush.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Name="MainGrid"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" 
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer CanContentScroll="true">
                                       <!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>-->
                                        <ItemsPresenter  x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="Height"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background"
                                    Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="BorderBrush"
                        Value="{StaticResource TextBoxBorder.Default}"/>
                <Setter Property="Background"
                        Value="{StaticResource ButtonBackgroundBrush.Default}"/>
                <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
                <Setter Property="IsTabStop"
                        Value="false"/>
                <Setter Property="Padding"
                        Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type ComboBox}">
                            <Grid Name="Placement"
              SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Popup Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent" 
                                              MinWidth="{Binding ElementName=Placement,Path=ActualWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer>
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </theme:SystemDropShadowChrome>
                                </Popup>

                                <theme:ListBoxChrome x:Name="Border"
                                 Grid.ColumnSpan="2"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Background="{TemplateBinding Background}"
                                 RenderMouseOver="{TemplateBinding IsMouseOver}"
                                 RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
                                <TextBox Name="PART_EditableTextBox"
                     Margin="{TemplateBinding Padding}"
                     Style="{StaticResource ComboBoxEditableTextBox}"
                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ToggleButton Grid.Column="1"
                          Style="{StaticResource ComboBoxToggleButton}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin"
                     Value="true">
                                    <Setter Property="Foreground"
                        Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen"
                     Value="true">
                                    <Setter TargetName="Border"
                        Property="RenderFocused"
                        Value="true"/>
                                </Trigger>
                                <Trigger Property="HasItems"
                     Value="false">
                                    <Setter TargetName="DropDownBorder"
                        Property="Height"
                        Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background"
                        Value="#FFF4F4F4"/>
                                </Trigger>
                                <Trigger Property="IsGrouping"
                     Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}"/>


    <Style x:Key="DefaultComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="3,0,3,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>

    <!-- RadioButton -->

    <Style x:Key="DefaultRadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource RadioButtonBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxStroke.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <theme:BulletChrome Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                IsRound="true"
                                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                RenderPressed="{TemplateBinding IsPressed}"
                                                IsChecked="{TemplateBinding IsChecked}"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding"
                                    Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}"/>


    <!-- ListBox -->	

    <Style x:Key="DefualtListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefualtListBoxStyle}" TargetType="{x:Type ListBox}"/>



    <!-- ListBoxItem -->
    <Style x:Key="DefaultListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                 Value="{StaticResource ListBoxBackground.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="2,0,0,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultListBoxItemStyle}" TargetType="{x:Type ListBoxItem}"/>


    <!-- Menu -->


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>




    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
        <Border Background="#F5F5F5"
                BorderBrush="#FF959595"
                BorderThickness="1">
            <Grid>
                <Rectangle Fill="#F1F1F1"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="2"
                           RadiusX="2"
                           RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Fill="#E2E3E3"/>
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="31,2,0,2"
                           Fill="White"/>

                <ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="DefaultMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode"
                Value="Hover"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultMenuScrollViewer"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true" Margin="0,6,0,4">
                        <Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="#E0E0E0"/>
                        <Rectangle Height="1"
                                   Margin="30,1,1,0"
                                   Fill="White"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="DefaultMenuStyle" TargetType="{x:Type Menu}">

        <Setter Property="Background"
                Value="{StaticResource MenuBackground.Default}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultMenuStyle}" TargetType="{x:Type Menu}"/>

    <Style x:Key="DefaultMenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemSelectionFill.Default}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#8071CBF1"/>
                            <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#40FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                            <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                            <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                            <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#90717070"/>
                                    <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill.Default}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill.Default}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#90717070"/>
                                    <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill.Default}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#D1DBF4FF"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemSelectionFill.Default}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#8571CBF1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}"/>

    <Style x:Key="DefaultContextMenuStyle"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{StaticResource ContextMenuBackground.Default}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="MenuItem.Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContextMenuBorderBrush.Default}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Rectangle Fill="#F1F1F1"
                                           HorizontalAlignment="Left"
                                           Width="28"
                                           Margin="2"
                                           RadiusX="2"
                                           RadiusY="2"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="#E2E3E3"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="31,2,0,2"
                                           Fill="White"/>


                                <ScrollViewer CanContentScroll="true"
                                              Grid.ColumnSpan="2" Margin="1,0"
                                              Style="{StaticResource DefaultMenuScrollViewer}">
                                    <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultContextMenuStyle}" TargetType="{x:Type ContextMenu}"/>



    <!-- ToolTip -->

    <Style x:Key="DefaultToolTipStyle"
           TargetType="{x:Type ToolTip}">
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
               Value="{StaticResource ToolTipBorderBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ToolTipBackground.Default}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Padding"
                Value="5,1,5,4"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true"
                                                  CornerRadius="2">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource DefaultToolTipStyle}" TargetType="{x:Type ToolTip}"/>

    <!-- TreeView -->

    <Style x:Key="DefaultTreeViewStyle"
           TargetType="{x:Type TreeView}">
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource DefaultTreeViewStyle}" TargetType="{x:Type TreeView}"/>


    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True"
                            StartPoint="0 0"
                            IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6"/>
                            <LineSegment Point="6 0"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>
    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False"/>
        <Setter Property="Width"
                Value="16"/>
        <Setter Property="Height"
                Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16"
                            Height="16"
                            Background="Transparent"
                            Padding="5,5,5,5">
                        <Path x:Name="ExpandPath"
                              Fill="Transparent"
                              Stroke="#FF989898"
                              Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterX="3"
                                                 CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="#FF1BBBFA"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterX="3"
                                                     CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="#FF595959"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>




    <!-- TextBox Base-->
    <Style x:Key="DefaultTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{x:Null}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource  ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorder.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <theme:ListBoxChrome x:Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}"/>



    <!-- PasswordBox -->
    <Style x:Key="DefualtPasswordBoxStyle"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background"
                Value="{StaticResource  ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorder.Default}"/>
        <Setter Property="FontFamily"
                Value="Times New Roman"/>
        <Setter Property="PasswordChar"
                Value="●"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <theme:ListBoxChrome x:Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefualtPasswordBoxStyle}" TargetType="{x:Type PasswordBox}"/>





    <!-- Expander -->

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   StrokeThickness="1"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     Stroke="DarkGray"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderArrowFill.Default}"/>
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="#666"
                                  StrokeThickness="2"
                                  SnapsToDevicePixels="false"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="DarkGray"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderArrowFill.Default}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="#666"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowHoverFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ExpanderArrowPressedFill.Default}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultExpanderStyle"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Margin="1"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Up">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}"/>




    <!-- GroupBox -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="DefaultGroupBoxStyle"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Background"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource GroupBoxBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Padding="3,1,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                            <ContentPresenter ContentSource="Header" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="White">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>

                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="White"
                                        CornerRadius="2"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource DefaultGroupBoxStyle}" TargetType="{x:Type GroupBox}"/>

    <Style x:Key="GroupItem"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter/>
                        <ItemsPresenter Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Hyperlink -->
    <Style x:Key="DefaultHyperlinkStyle"
           TargetType="{x:Type Hyperlink}">

        <Setter Property="Foreground"
                Value="Blue"/>
        <Setter Property="TextDecorations"
                Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Red"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
<Style BasedOn="{StaticResource DefaultHyperlinkStyle}" TargetType="{x:Type Hyperlink}"/>
    
    <!-- StatusBar -->
    <Style x:Key="DefaultStatusBarStyle"
           TargetType="{x:Type StatusBar}">
        <Setter Property="Background"
                Value="{StaticResource StatusBarBackground.Default}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultStatusBarStyle}" TargetType="{x:Type StatusBar}"/>

    <!-- StatusBar Separator -->

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ComboBoxItemBackground.Default}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultStatusBarItemStyle"
           TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding"
                Value="3"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultStatusBarItemStyle}" TargetType="{x:Type StatusBarItem}"/>

    <!-- ProgressBar -->
    

    <LinearGradientBrush x:Key="DefaultProgressBarIndicatorAnimatedFill" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#FF000000"
                          Offset="0.4"/>
            <GradientStop Color="#FF000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DefaultProgressBarStyle"
           TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="{StaticResource ProgressBarForeground.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ProgressBarBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ProgressBarBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Name="Background"
                          SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   RadiusX="2"
                                   RadiusY="2"/>
                        <Border Background="{StaticResource ProgressBarGlassyHighlight.Default}"
                                Margin="1"
                                CornerRadius="2"/>
                        <Border BorderBrush="#80FFFFFF"
                                Background="{StaticResource ProgressBarTopHighlight.Default}"
                                BorderThickness="1,0,1,1"
                                Margin="1"/>
                        <Rectangle Name="PART_Track"
                                   Margin="1"/>

                        <Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
                            <Grid Name="Foreground">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15"/>
                                    <ColumnDefinition Width="0.1*"/>
                                    <ColumnDefinition MaxWidth="15"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Indicator"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}">
                                    <Rectangle.OpacityMask>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <theme:ProgressBarHighlightConverter/>
                                            </MultiBinding.Converter>
                                            <Binding Source="{StaticResource DefaultProgressBarIndicatorAnimatedFill}"/>
                                            <Binding Path="ActualWidth"
                                                     ElementName="Background"/>
                                            <Binding Path="ActualHeight"
                                                     ElementName="Background"/>
                                        </MultiBinding>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft.Default}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
                                <Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight.Default}"
                                           Margin="0,1,1,1"/>
                                <Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft.Default}"/>
                                <Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffect.Default}"/>
                                <Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight.Default}"/>
                                <Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarIndicatorGlassyHighlight.Default}"/>
                                <Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarTopHighlight.Default}"/>
                            </Grid>
                        </Decorator>

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter TargetName="Background"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Indicator"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Foreground"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsIndeterminate"
                                 Value="true">
                            <Setter TargetName="LeftDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="RightDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="LeftLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="CenterLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="RightLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="Indicator"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                                 Value="false">
                            <Setter TargetName="Animation"
                                    Property="Fill"
                                    Value="#80B5FFA9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultProgressBarStyle}" TargetType="{x:Type ProgressBar}"/>



    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
    </Geometry>

    <Style x:Key="SliderRepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="Gray"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5.5"
                                                Y="11"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackground.Default}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbPressedBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderUpThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="Gray"/>      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="5"
                                                            Y="9"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted.Default}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderDownThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="Gray"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5"
                                                Y="9"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource HorizontalSliderThumbNormalBackground.Default}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalSliderThumbPressedBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="VerticalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Foreground"
                Value="Gray"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackground.Default}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbPressedBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderLeftThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="Gray"/>     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackground.Default}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbPressedBackground.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderRightThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="Gray"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted.Default}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="InnerBorder"
                              Stroke="White"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="#FF929292"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="Foreground"
                                 Value="Blue">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted.Default}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="#FFF4F4F4"/>
                            <Setter TargetName="InnerBorder"
                                    Property="Stroke"
                                    Value="{x:Null}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Data"
                                    Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="#FFAEB1AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSliderStyle"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Background"                                
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrush.Default}"/>
        <Setter Property="Foreground"
                Value="{StaticResource SliderTextBrushKey.Blue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"/>
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder.Default}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="{StaticResource HorizontalSliderTrackNormalBackground.Default}"
                                    Height="4.0">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                </Canvas>
                            </Border>
                            <Track Grid.Row="1"
                                   Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
                                 Value="TopLeft">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="BottomRight">
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="Both">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
                            <Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="{TemplateBinding Foreground}"
                                             Width="4"/>
                                    <Border Name="TrackBackground"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="{StaticResource VerticalSliderTrackNormalBorder.Default}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="{StaticResource HorizontalSliderTrackNormalBackground.Default}"
                                            Width="4.0">

                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                        </Canvas>
                                    </Border>

                                    <Track Grid.Column="1"
                                           Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                                   Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="Both">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true">
                                    <Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource DefaultSliderStyle}" TargetType="{x:Type Slider}"/>


    <!-- Separator -->
    <Style x:Key="DefaultSeparatorStyle"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource SeparatorBackground.Default}"/>
        <Setter Property="Margin"
                Value="0,2,0,2"/>
        <Setter Property="Focusable"
                Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultSeparatorStyle}" TargetType="{x:Type Separator}"/>


    <!-- ScrollBar --> 

    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>         
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <theme:ScrollChrome Name="Chrome"
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <theme:ScrollChrome x:Name="Chrome"
                                        ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsDragging}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Background"
                Value="{StaticResource VerticalScrollBarBackground.Default}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}" >
                    <Grid Name="Bg"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      theme:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       theme:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      theme:ScrollChrome.ScrollGlyph="DownArrow"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{StaticResource ScrollBarDisabledBackground.Default}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto"/>
                <Setter Property="MinWidth"
                        Value="0"/>
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background"
                        Value="{StaticResource HorizontalScrollBarBackground.Default}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              theme:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               theme:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              theme:ScrollChrome.ScrollGlyph="RightArrow"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Bg"
                                            Property="Background"
                                            Value="{StaticResource ScrollBarDisabledBackground.Default}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultScrollBarStyle}" TargetType="{x:Type ScrollBar}"/>


    <Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Fill="{StaticResource DefaultCornerBackground}" Grid.Column="1" Grid.Row="1"/>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                    </Grid>                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>

    <!-- TabControl -->

    <Style x:Key="DefaultTabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="Padding"
                Value="4,4,4,4"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TabControlNormalBorderBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource TabControlBackground.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="2,2,2,0"
                                  IsItemsHost="true"/>
                        <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,2,0,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultTabControlStyle}" TargetType="{x:Type TabControl}"/>


    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="Padding"
                Value="6,1,6,1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource TabControlNormalBorderBrush.Default}"/>
        <Setter Property="Background"
                Value="{StaticResource ButtonBackgroundBrush.Default}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1,1,1,0">
                            <ContentPresenter Name="Content"
                                              ContentSource="Header"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemHotBackground.Default}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Panel.ZIndex"
                                    Value="1"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemSelectedBackground.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="false"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemHotBorderBrush.Default}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource TabItemDisabledBackground.Default}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource TabItemDisabledBorderBrush.Default}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTabItemStyle}" TargetType="{x:Type TabItem}"/>




    <!-- GridView -->

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridSplitter}"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="false">
                            <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right"
                Value="-9"/>
        <Setter Property="Width"
                Value="18"/>        
        <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="Background"
                Value="{StaticResource GridViewColumnHeaderBorderBackground.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultGridViewColumnHeaderStyle"
           TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
               Value="{StaticResource GridViewColumnHeaderBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource GridViewColumnHeaderBorderBackground.Default}"/>
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="Padding"
                Value="2,0,2,0"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="HeaderBorder"
                                BorderThickness="0,1,0,1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Rectangle Name="UpperHighlight"
                                           Visibility="Collapsed"
                                           Fill="#FFE3F7FF"/>
                                <Border Grid.RowSpan="2"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border Name="HeaderHoverBorder"
                                BorderThickness="1,0,1,1"
                                Margin="1,1,0,0"/>
                        <Border Name="HeaderPressBorder"
                                BorderThickness="1,1,1,0"
                                Margin="1,0,0,1"/>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource GridViewColumnHeaderGripper}"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewColumnHeaderHoverBackground.Default}"/>
                            <Setter TargetName="HeaderHoverBorder"
                                    Property="BorderBrush"
                                    Value="#FF88CBEB"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Background"
                                    Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewColumnHeaderPressBackground.Default}"/>
                            <Setter TargetName="HeaderHoverBorder"
                                    Property="BorderBrush"
                                    Value="#FF95DAF9"/>
                            <Setter TargetName="HeaderPressBorder"
                                    Property="BorderBrush"
                                    Value="#FF7A9EB1"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Fill"
                                    Value="#FFBCE4F9"/>
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            <Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="1,1,0,0"/>
                        </Trigger>
                        <Trigger Property="Height"
                                 Value="Auto">
                            <Setter Property="MinHeight"
                                    Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.4082"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697"
                                           Fill="#FF000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
<Style BasedOn="{StaticResource DefaultGridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}"/>


    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewStyleKey}"
           TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <theme:ListBoxChrome Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background"
                Value="{StaticResource ListViewItemBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListViewItemBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0,0,0,1"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <Border Name="InnerBorder"
                                CornerRadius="1"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Rectangle Name="UpperHighlight"
                                           Visibility="Collapsed"
                                           Fill="#75FFFFFF"/>
                                <GridViewRowPresenter Grid.RowSpan="2"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemHoverFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FFCCF0FF"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB"/>
                            <Setter TargetName="InnerBorder"
                                    Property="BorderBrush"
                                    Value="#80FFFFFF"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Fill"
                                    Value="#40FFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedInactiveFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FFCFCFCF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultListViewStyle"
           TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <theme:ListBoxChrome Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultListViewStyle}" TargetType="{x:Type ListView}"/>



    <Style x:Key="DefaultListViewItemStyle"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background"
                Value="{StaticResource ListViewItemBackground.Default}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ListViewItemBorderBrush.Default}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0,0,0,1"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <Border Name="InnerBorder"
                                CornerRadius="1"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Rectangle Name="UpperHighlight"
                                           Visibility="Collapsed"
                                           Fill="#75FFFFFF"/>
                                <GridViewRowPresenter Grid.RowSpan="2"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemHoverFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FFCCF0FF"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB"/>
                            <Setter TargetName="InnerBorder"
                                    Property="BorderBrush"
                                    Value="#80FFFFFF"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Fill"
                                    Value="#40FFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedInactiveFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FFCFCFCF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ListItemSelectedFill.Default}"/>
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>


    <!-- Thumb -->
    <!--<ControlTemplate TargetType="{x:Type Thumb}" x:Key="DefaultThumbTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Border BorderThickness="0,0,1,1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <Border BorderThickness="0,0,1,1"
                                    Margin="1"
                                    Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                <Border Margin="2"
                                    Background="{TemplateBinding Background}"/>
            </Grid>
        </Border>
    </ControlTemplate>-->
    
    <!-- ResizeGrip -->
    <LinearGradientBrush x:Key="ResizeGripperForeground"
                          StartPoint="0,0.25"
                          EndPoint="1,0.75">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFF"
                          Offset="0.3"/>
            <GradientStop Color="#BBC5D7"
                          Offset="0.75"/>
            <GradientStop Color="#6D83A9"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DefaultResizeGripStyle"
           TargetType="{x:Type ResizeGrip}">
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Margin="0,0,2,2"
                              Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z">

                            <Path.Fill>
                                <DrawingBrush Viewbox="0,0,3,3"
                                              Viewport="0,0,3,3"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}"
                                                                 Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultResizeGripStyle}" TargetType="{x:Type ResizeGrip}"/>


    <!-- ToolBar -->
    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>

    <Style x:Key="DefaultToolBarTrayStyle" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" 
                Value="{StaticResource ToolBarTrayBackground.Default}"/>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}" BasedOn="{StaticResource DefaultToolBarTrayStyle}"/>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarSeparatorFill.Default}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonChecked.Default}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed.Default}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed.Default}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}"/>

    <Style x:Key="ToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome"
                                Grid.Column="1"
                                Width="13"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="M 2.5 0 L 8.5 0 L 5.5 3 Z"
                                  Fill="black"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonPressed.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource ToolBarDisabledBorder.Default}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid Grid.IsSharedSizeScope="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Background"
                                    Background="{TemplateBinding Background}"/>
                            <Border Name="SelectedContentBorder"
                                    Margin="2,2,1,2">
                                <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Border Name="Border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                            <ToggleButton BorderBrush="white"
                                          BorderThickness="1"
                                          x:Name="DropDownButton"
                                          Grid.ColumnSpan="2"
                                          Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBox Padding="{TemplateBinding Padding}"
                                     Margin="1,1,0,1"
                                     MinHeight="18"
                                     x:Name="PART_EditableTextBox"
                                     Style="{StaticResource ComboBoxEditableTextBox}"
                                     Visibility="Collapsed"
                                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"/>
                        </Grid>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ToolBarMenuBorder.Default}">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{StaticResource ToolBarDisabledFill.Default}"/>
                            <Setter TargetName="Background"
                                    Property="Grid.ColumnSpan"
                                    Value="2"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarDisabledBorder.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                                <Condition Property="IsEditable"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SelectedContentBorder"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{x:Null}"/>
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                                <Condition Property="IsEditable"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="2"/>
                            <Setter Property="IsTabStop"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      MinHeight="18"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource ToolBarDisabledFill.Default}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarDisabledBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="{x:Type Menu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="Background" 
                        Value="{StaticResource ToolBarSeparatorFill.Default}"/>
                            <Setter Property="Height" Value="1" />
                            <Setter Property="Margin" Value="0,1,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background"
                        Value="Transparent"/>
                            <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                            <Setter Property="BorderThickness"
                        Value="1"/>
                            <Setter Property="Margin"
                        Value="0,1,0,0"/>
                            <Setter Property="Padding"
                        Value="8,3,8,3"/>
                            <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
                                            <ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource ToolBarButtonHoverBorder.Default}"
                                        Background="{StaticResource ToolBarMenuCheckFill.Default}"
                                        BorderThickness="1">
                                                <Path VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1.2"
                                          Data="{StaticResource ToolBarCheckmark}"/>
                                            </Border>

                                            <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Icon"
                                         Value="{x:Null}">
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked"
                                         Value="true">
                                                <Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted"
                                         Value="true">
                                                <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                                                <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ToolBarButtonHover.Default}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource ToolBarDarkFill.Default}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                         Value="false">
                                                <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Role"
                             Value="TopLevelHeader">
                                    <Setter Property="Padding"
                                Value="6,2,7,2"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                                    <DockPanel Name="Header">
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
                                                            <theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
                                                                <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                                            BorderBrush="{StaticResource ToolBarMenuBorder.Default}"
                                                            BorderThickness="1">
                                                                    <Grid Grid.IsSharedSizeScope="true">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Rectangle Fill="{StaticResource ToolBarVerticalBackground.Default}"
                                                                       Margin="0,1"/>
                                                                        <Rectangle Fill="{StaticResource ToolBarSubMenuBackground.Default}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                                        <ScrollViewer CanContentScroll="true"
                                                                          Style="{StaticResource DefaultMenuScrollViewer}"
                                                                          Grid.ColumnSpan="2">
                                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </ScrollViewer>
                                                                    </Grid>
                                                                </Border>
                                                            </theme:SystemDropShadowChrome>
                                                        </Popup>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsSubmenuOpen"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarMenuBorder.Default}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarOpenHeaderBackground.Default}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="TopLevelItem">
                                    <Setter Property="Margin"
                                Value="0,1,0,1"/>
                                    <Setter Property="Padding"
                                Value="7,1,8,2"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                                    <DockPanel>
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock"
                                Value="Top"/>
                                    <Setter Property="Padding"
                                Value="8,3,8,3"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                        <ColumnDefinition Width="14"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
                                                    <ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource ToolBarButtonHoverBorder.Default}"
                                                Background="{StaticResource ToolBarMenuCheckFill.Default}"
                                                BorderThickness="1">
                                                        <Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                    </Border>
                                                    <ContentPresenter Grid.Column="1"
                                                          ContentSource="Header"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Path Grid.Column="3"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
                                                    <Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
                                                        <theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
                                                            <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                                        BorderBrush="{StaticResource ToolBarMenuBorder.Default}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Fill="{StaticResource ToolBarVerticalBackground.Default}"
                                                                   Margin="0,1"/>
                                                                    <ScrollViewer CanContentScroll="true"
                                                                      Style="{StaticResource DefaultMenuScrollViewer}"
                                                                      Grid.ColumnSpan="2">
                                                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </ScrollViewer>
                                                                </Grid>
                                                            </Border>
                                                        </theme:SystemDropShadowChrome>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonHoverBorder.Default}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ToolBarButtonPressedBorder.Default}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Background"
                                                    Value="{StaticResource ToolBarDarkFill.Default}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ToolBarGripper"
                     Color="#C6C3C6"/>

    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush Viewbox="0,0,4,4"
                                              Viewport="0,0,4,4"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White"
                                                                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarToggleButtonHorizontalBackground.Default}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>
      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,3,3,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1 1.5 L 6 1.5"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0 0.5 L 5 0.5"/>
                            <Path Fill="White"
                                  Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ToolBarToggleButtonVerticalBackground.Default}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,0,3,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1.5 1 L 1.5 6"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0.5 0 L 0.5 5"/>
                            <Path Fill="White"
                                  Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ToolBarButtonHover.Default}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style x:Key="DefaultToolBarStyle"
           TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground.Default}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right"
                              x:Name="OverflowGrid">
                                <ToggleButton x:Name="OverflowButton"
                                          FocusVisualStyle="{x:Null}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <theme:SystemDropShadowChrome Name="Shdw"
                                                              Color="Transparent">
                                        <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                            BorderBrush="{StaticResource ToolBarMenuBorder.Default}"
                                            BorderThickness="1">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </theme:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,3,3"
                                Padding="{TemplateBinding Padding}">
                                <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource ToolBarThumbStyle}"
                                       Margin="-3,-1,0,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
                                    <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,2,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen"
                                 Value="true">
                                <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>
                            </Trigger>
                            <Trigger Property="Header"
                                 Value="{x:Null}">
                                <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                                <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger SourceName="OverflowPopup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                                <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                                <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                                <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="Orientation"
                                 Value="Vertical">
                                <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
                                <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
                                <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
                                <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
                                <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
                                <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
                                <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
                                <Setter Property="Background"
                                    Value="{StaticResource ToolBarVerticalBackground.Default}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <Style BasedOn="{StaticResource DefaultToolBarStyle}" TargetType="{x:Type ToolBar}"/>


    <Style x:Key="ContentControl"
           TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultFlowDocumentStyle"
           TargetType="{x:Type FlowDocument}">
            <Setter Property="TextAlignment"
                Value="Justify"/>
            <Setter Property="FontFamily"
                Value="Georgia"/>
            <Setter Property="FontSize"
                Value="16.0"/>
            <Setter Property="Background" Value="{StaticResource  ListBoxBackground.Default}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentStyle}" TargetType="{x:Type FlowDocument}"/>

        <Style x:Key="DefaultTextBlockStyle"
           TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping"
                Value="NoWrap"/>
            <Setter Property="TextTrimming"
                Value="None"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        </Style>
    
       <Style BasedOn="{StaticResource DefaultTextBlockStyle}" TargetType="{x:Type TextBlock}"/>

        <Style x:Key="{x:Type Bold}"
           TargetType="{x:Type Bold}">
            <Setter Property="FontWeight"
                Value="Bold"/>
        </Style>
    

        <Style x:Key="DefaultFlowDocumentPageViewerStyle" TargetType="{x:Type FlowDocumentPageViewer}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentPageViewerStyle}" TargetType="{x:Type FlowDocumentPageViewer}"/>


    <Style x:Key="DefaultFlowDocumentReaderStyle" TargetType="{x:Type FlowDocumentReader}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentReaderStyle}" TargetType="{x:Type FlowDocumentReader}"/>

        <Style x:Key="{x:Type Italic}"
           TargetType="{x:Type Italic}">
            <Setter Property="FontStyle"
                Value="Italic"/>
        </Style>
        <Style x:Key="{x:Type Underline}"
           TargetType="{x:Type Underline}">
            <Setter Property="TextDecorations"
                Value="Underline"/>
        </Style>
        <Style x:Key="{x:Type Paragraph}"
           TargetType="{x:Type Paragraph}">
            <Setter Property="Margin"
                Value="Auto"/>
            <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush.Default}"/>
        </Style>

        <Style x:Key="{x:Type List}"
           TargetType="{x:Type List}">
            <Setter Property="Margin"
                Value="Auto"/>
            <Setter Property="Padding"
                Value="Auto"/>
        </Style>
        <Style x:Key="{x:Type Floater}"
           TargetType="{x:Type Floater}">
            <Setter Property="HorizontalAlignment"
                Value="Right"/>
        </Style>

        <DataTemplate DataType="{x:Type FlowDocument}">
            <FlowDocumentReader Document="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type FixedDocument}">
            <DocumentViewer Document="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type FixedDocumentSequence}">
            <DocumentViewer Document="{Binding}"/>
        </DataTemplate>

        <Style x:Key="{x:Type HeaderedContentControl}"
           TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <StackPanel>
                            <ContentPresenter ContentSource="Header"/>
                            <ContentPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="{x:Type ItemsControl}"
           TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="DefaultLabelStyle"
           TargetType="{x:Type Label}">
            <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush.Default}"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Padding"
                Value="5"/>
            <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
            <Setter Property="VerticalContentAlignment"
                Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
<Style BasedOn="{StaticResource DefaultLabelStyle}" TargetType="{x:Type Label}"/>


        <!-- Page -->

        <Style x:Key="{x:Type Page}"
           TargetType="{x:Type Page}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Page.Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultRichTextBoxStyle"
          
           TargetType="{x:Type RichTextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                    <Setter Property="OverridesDefaultStyle"
                        Value="true"/>
                </Style>
            </Style.Resources>
            <Setter Property="MinWidth"
                Value="10"/>
        </Style>
    
    <Style BasedOn="{StaticResource DefaultRichTextBoxStyle}" TargetType="{x:Type RichTextBox}"/>

        <Style x:Key="{x:Type UserControl}"
           TargetType="{x:Type UserControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UserControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Window -->
    <!--<ControlTemplate TargetType="{x:Type Window}" x:Key="DefaultWindowTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter/>
            </AdornerDecorator>
        </Border>
    </ControlTemplate>-->








</ResourceDictionary>