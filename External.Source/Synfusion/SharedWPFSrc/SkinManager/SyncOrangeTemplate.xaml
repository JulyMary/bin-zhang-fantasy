<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"                     
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    
    <ResourceDictionary.MergedDictionaries>       
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/SkinManager/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Button -->
  
	<ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="OrangeButtonBaseTemplate">
        <theme:ButtonChrome Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}"                                        
                                        SnapsToDevicePixels="true">
           	<ContentPresenter Name="content" Margin="{TemplateBinding Padding}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"                                                 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</theme:ButtonChrome> 
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">				
				<Setter TargetName="Chrome" Property="Background" Value="{StaticResource  ButtonHoverBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">				
				<Setter TargetName="Chrome" Property="Background" Value="{StaticResource ButtonPressedBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Chrome" Property="Opacity" Value="0.5"/>
			</Trigger>
            <!--<Trigger Property="IsKeyboardFocused"
                                 Value="true">
                <Setter TargetName="Chrome" Property="RenderDefaulted"
                                    Value="True"/>
            </Trigger>-->

        </ControlTemplate.Triggers>
	</ControlTemplate>
   
  
	<!-- CheckBox -->

	<Style x:Key="CheckRadioFocusVisualOrange">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<ControlTemplate TargetType="{x:Type CheckBox}" x:Key="OrangeCheckBoxTemplate">
		<BulletDecorator SnapsToDevicePixels="true" Background="Transparent">
			<BulletDecorator.Bullet>
				<Border x:Name="border1" CornerRadius="3" Width="16" Height="16" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
					<Border CornerRadius="3" Margin="1" x:Name="border2" BorderBrush="{StaticResource CheckBoxBorderBrush.Orange}" Background="{StaticResource CheckBoxInnerBackground.Orange}">
						<Canvas Margin="2" SnapsToDevicePixels="True">
							<Path x:Name="path" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Path.Data>
									<PathGeometry>
										<PathFigure StartPoint="2,4">
											<LineSegment Point="3,6"/>
											<LineSegment Point="5,-1"/>
											<LineSegment Point="7,-1"/> 
											<LineSegment Point="4,8"/>
											<LineSegment Point="2,8"/>
											<LineSegment Point="0,5"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Canvas>
					</Border>
				</Border>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="4,2,2,2" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="HasContent" Value="true">
				<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisualOrange}"/>
				<Setter Property="Padding" Value="4,0,0,0"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Fill" TargetName="path" Value="White"/>
				<Setter Property="Background" TargetName="border1" Value="{StaticResource CheckBoxHoverBrush.Orange}"/>
			</Trigger>
			<Trigger  Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="border1" Property="Background" Value="{StaticResource  CheckedBackground.Orange}" />				
			</MultiTrigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="border1"  Property="Background" Value="{StaticResource  CheckedBackground.Orange}"/>				
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter TargetName="border1"  Property="Background" Value="{StaticResource CheckBoxHoverBrush.Orange}"/>				
			</Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="border1" Property="Background" Value="{StaticResource CheckBoxHoverBrush.Orange}" />
            </Trigger>
        </ControlTemplate.Triggers>
	</ControlTemplate>
    
  
	
	<!-- RadioButton -->

	<ControlTemplate TargetType="{x:Type RadioButton}" x:Key="OrangeRadioButtonTemplate">
		<BulletDecorator Background="Transparent">
			<BulletDecorator.Bullet>
				<Canvas Name="canvas" Width="16" Height="16">
					<Ellipse x:Name="ellipse1" Width="16" Height="16" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}">
					</Ellipse>					
					<Ellipse x:Name="ellipse3" StrokeThickness="2" Stroke="{StaticResource CheckBoxBorderBrush.Orange}" Canvas.Left="3" Canvas.Top="3" Width="10" Height="10">
					</Ellipse>
					<Ellipse x:Name="ellipse" Margin="1" Fill="{StaticResource CheckedInnerBorderBrush.Orange}" Canvas.Left="4" Canvas.Top="4" Width="6" Height="6">
					</Ellipse>
				</Canvas>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="4,2,2,2" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="HasContent"
                                 Value="true">
				<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisualOrange}"/>
				<Setter Property="Padding" Value="4,0,0,0"/>
			</Trigger>
			<Trigger  Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Stroke" TargetName="ellipse3" Value="White"/>
				<Setter Property="Fill" TargetName="ellipse" Value="{StaticResource RadioButtonInnerBackground.Orange}"/>
				<Setter Property="StrokeThickness" TargetName="ellipse3" Value="2"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">				
				<Setter Property="Fill" TargetName="ellipse" Value="{StaticResource RadioButtonInnerBackground.Orange}"/>
				<Setter TargetName="ellipse1" Property="Fill" Value="{StaticResource RadioButtonOuterBackground.Orange}" />
			</Trigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsPressed" Value="False"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="ellipse1" Property="Fill" Value="{StaticResource RadioButtonHoverBrush.Orange}" />
			</MultiTrigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>				
				<Setter TargetName="ellipse1" Property="Fill" Value="{StaticResource CheckedRadioButtonHoverBrush.Orange}" />				
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- ListBox -->

	<ControlTemplate TargetType="{x:Type ListBox}" x:Key="OrangeListBoxTemplate">
		<Border Name="Bd" Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          SnapsToDevicePixels="true"
                          Padding="1">
			<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
				<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</ScrollViewer>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ListBoxItem -->
	<ControlTemplate TargetType="{x:Type ListBoxItem}" x:Key="OrangeListBoxItemTemplate">
		<Border Name="Bd" Background="{TemplateBinding Background}"                                                     
                          BorderThickness="1"
                          Padding="{TemplateBinding Padding}"
                          SnapsToDevicePixels="true">
			<ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextBlock.FontFamily="Arial" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelected"
                                 Value="true">
				<Setter TargetName="Bd"
                        Property="Background"
                        Value="{StaticResource ListBoxHoverBackground.Orange}"/>
				<Setter TargetName="Bd"
						Property="BorderBrush" 
						Value="{StaticResource ListBoxHoverBorder.Orange}"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ListBoxHoverBackground.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBoxHoverBorder.Orange}"/>

			</MultiTrigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxHoverBackground.Orange}"/>
				<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBoxHoverBorder.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ComboBox -->
	<Style x:Key="OrangeComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="AllowDrop"
                Value="true"/>
		<Setter Property="MinWidth"
                Value="0"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent" 
                                 />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	
	<Style x:Key="OrangeComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="IsTabStop"
                Value="false"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="ClickMode"
                Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="Chrome" 
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*" SharedSizeGroup="ComboBoxButton"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Border Name="Chrome1" Background="{StaticResource ComboBoxTextBoxBackground.Orange}" 
                                       Grid.Column="0">
							</Border>
							<Border Name="Chrome2" Background="{StaticResource ComboBoxToggleButtonBackground.Orange}" 
                                    Grid.ColumnSpan="2"   Grid.Row="1">
							</Border>
							
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
                                           Value="true" SourceName="Chrome"/>
								<Condition Property="IsChecked"
                                           Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Chrome1"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxTextBoxHoverBrush.Orange}"/>
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource  ComboBoxToggleButtonHoverBrush.Orange}"/>

						</MultiTrigger>

						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="Chrome1"
                                    Property="Background"
                                    Value="{StaticResource  ComboBoxTextBoxPressedBrush.Orange}"/>
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxToggleButtonPressedBrush.Orange}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" SourceName="Chrome" Value="True">
							<Setter TargetName="Chrome1"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxTextBoxHoverBrush.Orange}"/>
							<Setter TargetName="Chrome2"
									Property="Background"
									Value="{StaticResource  ComboBoxToggleButtonHoverBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" SourceName="Chrome" Value="True">
							<Setter TargetName="Chrome1"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxTextBoxHoverBrush.Orange}"/>
							<Setter TargetName="Chrome2"
									Property="Background" 
									Value="{StaticResource  ComboBoxToggleButtonHoverBrush.Orange}"/>

						</Trigger>


						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Chrome1"
                                    Property="Background"
                                    Value="{StaticResource  ComboBoxTextBoxPressedBrush.Orange}"/>
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxToggleButtonPressedBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

   
	<Style x:Key="OrangeComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="IsTabStop"
                Value="false"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="ClickMode"
                Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="Chrome" 
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Border Name="Chrome2"  Background="{StaticResource ToolBarToogle.Orange}"  
                                       Grid.Column="1" Width="30">
							</Border>
							
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
                                           Value="true" SourceName="Chrome"/>
								<Condition Property="IsChecked"
                                           Value="True"/>
							</MultiTrigger.Conditions>

							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource  ToolBarToogleHover.Orange}"/>

						</MultiTrigger>

						<Trigger Property="IsChecked"
                                 Value="true">

							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ToolBarTooglePressed.Orange}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" SourceName="Chrome" Value="True">

							<Setter TargetName="Chrome2"
									Property="Background"
									Value="{StaticResource  ToolBarToogleHover.Orange}"/>

						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" SourceName="Chrome" Value="True">

							<Setter TargetName="Chrome2"
									Property="Background" 
									Value="{StaticResource  ToolBarToogleHover.Orange}"/>

						</Trigger>


						<Trigger Property="IsPressed" Value="true">

							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ToolBarTooglePressed.Orange}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

   

	<ControlTemplate x:Key="OrangeComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
		<Grid Name="Placement"
              SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Popup Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<theme:SystemDropShadowChrome Name="Shdw"
                                              Color="Transparent" 
                                              MinWidth="{Binding ElementName=Placement,Path=ActualWidth}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="DropDownBorder" BorderThickness="1" Background="{StaticResource ListBoxBackground.Orange}"
					 BorderBrush="{StaticResource ListBoxBorderBrush.Orange}">
						<ScrollViewer>
							<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>

			<Border x:Name="Border" 
                                 Grid.ColumnSpan="2"
                                />
			<Border Name="Bd" Grid.Column="0" Background="{StaticResource ComboBoxTextBoxBackground.Orange}">
				<TextBox Name="PART_EditableTextBox" Background="{StaticResource ComboBoxTextBoxBackground.Orange}"
                     Margin="{TemplateBinding Padding}"  Foreground="{TemplateBinding Foreground}" FontFamily="Arial"  
                     Style="{StaticResource OrangeComboBoxEditableTextBox}"
                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>

			<ToggleButton Grid.Column="1"
                          Style="{StaticResource OrangeComboBoxToggleButton}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
		</Grid>
		<ControlTemplate.Triggers>


			<Trigger Property="HasItems"
                     Value="false">
				<Setter TargetName="DropDownBorder"
                        Property="Height"
                        Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                     Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsGrouping"
                     Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
                        Value="false"/>
			</Trigger>
			<Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
				<Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

   

    <ControlTemplate TargetType="{x:Type ComboBox}" x:Key="OrangeComboBoxTemplate">
        
        <Grid Name="MainGrid"
                          SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" 
                                              Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ListBoxBorderBrush.Orange}"
                                        Background="{StaticResource ListBoxBackground.Orange}">
                        <ScrollViewer CanContentScroll="true">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
		                    
			<ToggleButton Grid.ColumnSpan="2"  Background="{TemplateBinding ComboBox.Background}"                                     
                                      Style="{StaticResource OrangeComboBoxReadonlyToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
            
            <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                                 Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>

            <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
            </Trigger>

            <Trigger Property="HasItems"
                                 Value="false">
                <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
            </Trigger>
            <Trigger Property="IsGrouping"
                                 Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
            </Trigger>
            <Trigger Property="IsEditable"
                                 Value="true">
                <Setter Property="Padding"
                                    Value="2"/>
                <Setter Property="IsTabStop"
                                    Value="false"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

	<!-- ComboBoxItem -->
	<ControlTemplate TargetType="{x:Type ComboBoxItem}" x:Key="OrangeComboBoxItemTemplate">
		<Border Name="Bd" Margin="2" 
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"                          
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ContentPresenter Margin="2" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted"
                                 Value="true">
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ListBoxHoverBackground.Orange}"/>			
				<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBoxHoverBorder.Orange}"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    
    
	
	<!-- Menu -->

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>
	<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

    
    
	<ControlTemplate x:Key="OrangeSubmenuContent"
                     TargetType="{x:Type ContentControl}">
		<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" 
                BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                BorderThickness="1">
			<Grid>
				<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="2"
                           RadiusX="2"
                           RadiusY="2"/>
				<!--<Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="{StaticResource MenuItemBorderBrush.Orange}"/>-->
				<Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="32,2,0,2"
                           Fill="{StaticResource MenuItemRightBarBrush.Orange}"/>

				<ContentPresenter Grid.ColumnSpan="2" Margin="3"/>
			</Grid>
		</Border>
	</ControlTemplate>

	<Style x:Key="OrangeMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
		<Setter Property="ClickMode"
                Value="Hover"/>
		<Setter Property="MinWidth"
                Value="0"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
						<Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
						<ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
                                Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton
                                      Style="{StaticResource OrangeMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{StaticResource ForegroundBrushes.Orange}"
                                  Data="{StaticResource UpArrow}"/>
						</RepeatButton>
						<RepeatButton
                                      Style="{StaticResource OrangeMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{StaticResource ForegroundBrushes.Orange}"
                                  Data="{StaticResource DownArrow}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate  x:Key="OrangeMenuTemplate" TargetType="{x:Type Menu}">
		<ControlTemplate.Resources>
			<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">

				<Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
				<Setter Property="FrameworkElement.MinHeight" Value="2"/>
				<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
				<Setter Property="Height" Value="1" />
				<Setter Property="Margin" Value="26,2,2,2"/>
				<Setter Property="Background" Value="{StaticResource MenuSeparatorBrush.Orange}"/>

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Separator">
							<Border Margin="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Style>
			<Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
				<Setter Property="OverridesDefaultStyle" 
                        Value="true" />
				<Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Background"
                        Value="Transparent"/>
				<Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrushes.Orange}"/>
				<Setter Property="BorderThickness"
                        Value="1"/>
				<Setter Property="Margin"
                        Value="0,1,0,0"/>
				<Setter Property="Padding"
                        Value="8,3,8,3"/>
				<Setter Property="DockPanel.Dock"
                        Value="Top"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
									<ColumnDefinition Width="14"/>
								</Grid.ColumnDefinitions>
								<Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
								<ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                        BorderThickness="1">
									<Path VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{StaticResource MenuItemCheckedForeground.Orange}"
                                          StrokeThickness="1.5"
                                          Data="{StaticResource ToolBarCheckmark}"/>
								</Border>

								<ContentPresenter Grid.Column="1" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial" 
                                                  ContentSource="Header" Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                   VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<TextBlock Grid.Column="2" 
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
							</Grid>
                            
                          
							<ControlTemplate.Triggers>
								<Trigger Property="Icon"
                                         Value="{x:Null}">
									<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsChecked"
                                         Value="true">
									<Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
									<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsHighlighted"
                                         Value="true">
									<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
									<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
									<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
									<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
									<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
								</Trigger>
								<Trigger Property="IsEnabled"
                                         Value="false">
									<Setter Property="Opacity" Value="0.5"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
              
				<Style.Triggers>
					<Trigger Property="Role"
                             Value="TopLevelHeader">
						<Setter Property="Padding"
                                Value="6,2,7,2"/>
						<Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                <Setter Property="Margin"
                                Value="1"/>
						<Setter Property="Foreground" Value="{StaticResource SelectedForeground.Orange}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
										<DockPanel Name="Header">
											<ContentPresenter x:Name="Icon" 
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
											<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="White" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                               VerticalAlignment="Center"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
												<theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
													<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                            BorderThickness="1">
														<Grid Grid.IsSharedSizeScope="true">
															<Grid.ColumnDefinitions>
																<ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
															<ScrollViewer CanContentScroll="true"
                                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                          Grid.ColumnSpan="2">
																<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1" Name="item" 
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
															</ScrollViewer>
														</Grid>
													</Border>
												</theme:SystemDropShadowChrome>
											</Popup>
										</DockPanel>
									</Border>
                                  
									<ControlTemplate.Triggers>
										<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
											<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
										</Trigger>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

										</Trigger>
										<Trigger Property="IsSubmenuOpen"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

										</Trigger>
										
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsSubmenuOpen" Value="true"/>
												<Condition Property="IsKeyboardFocused" Value="true"/>
											</MultiTrigger.Conditions>
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>
										</MultiTrigger> 
										
										<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
											<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
											<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
											<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="Role"
                             Value="TopLevelItem">
						<Setter Property="Margin"
                                Value="1"/>
						<Setter Property="Padding"
                                Value="7,1,8,2"/>
						<Setter Property="Foreground" Value="{StaticResource SelectedForeground.Orange}"/>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
										<DockPanel>
											<ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
											<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="White" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                               VerticalAlignment="Center"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</DockPanel>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="Role"
                             Value="SubmenuHeader">
						<Setter Property="DockPanel.Dock"
                                Value="Top"/>
						<Setter Property="Padding"
                                Value="8,3,8,3"/>
						<Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
						<Setter Property="Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
										<Grid.ColumnDefinitions>
											<ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
											<ColumnDefinition Width="14"/>
										</Grid.ColumnDefinitions>
										<Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
										<ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										<Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                                BorderThickness="1">
											<Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
										</Border>
										<ContentPresenter Grid.Column="1" Name="content"
                                                          ContentSource="Header" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                          Margin="{TemplateBinding Padding}"
                                                           VerticalAlignment="Center"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

										<Path Grid.Column="3" Name="path"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
										<Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
											<theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
												<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
															<ColumnDefinition Width="*"/>
														</Grid.ColumnDefinitions>
														<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
																	<ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
															<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"  
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
														</ScrollViewer>
													</Grid>
												</Border>
											</theme:SystemDropShadowChrome>
										</Popup>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
											<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
										</Trigger>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
											<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
											<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
											<Setter Property="Fill" TargetName="path" Value="{StaticResource SelectedForeground.Orange}"/>

										</Trigger>
										<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
											<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
											<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
											<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
		</ControlTemplate.Resources>
		<Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                           
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
	</ControlTemplate>


	<ControlTemplate TargetType="Separator" x:Key="OrangeMenuSeparatorTemplate">
		<Border Margin="28,2,2,2" Height="1" Background="{StaticResource MenuSeparatorBrush.Orange}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
	</ControlTemplate>


	<ControlTemplate x:Key="OrangeTopLevelItemTemplate"
                     TargetType="{x:Type MenuItem}">
		<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
			<DockPanel>
				<ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
				<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="White" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                               VerticalAlignment="Center"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
                                                 Value="{x:Null}">
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                                                 Value="true">
				<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<ControlTemplate x:Key="OrangeTopLevelHeaderTemplate"
                     TargetType="{x:Type MenuItem}">


		<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
			<DockPanel Name="Header">
				<ContentPresenter x:Name="Icon" 
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
				<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="White" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                               VerticalAlignment="Center"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
					<theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
						<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                            BorderThickness="1">
							<Grid Grid.IsSharedSizeScope="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
								<ScrollViewer CanContentScroll="true"
                                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                          Grid.ColumnSpan="2">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1" Name="item" 
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Grid>
						</Border>
					</theme:SystemDropShadowChrome>
				</Popup>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
				<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
			</Trigger>
			<Trigger Property="Icon"
                                                 Value="{x:Null}">
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                                                 Value="true">
				<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemBackground.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</Trigger>
			<Trigger Property="IsSubmenuOpen"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
				<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

			</Trigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSubmenuOpen" Value="true"/>
					<Condition Property="IsKeyboardFocused" Value="true"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
				<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>
			</MultiTrigger>

			<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
				<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
				<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuItemBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
				<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

			</Trigger>
			<Trigger Property="IsEnabled"
                                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="OrangeSubmenuItemTemplate"
                     TargetType="{x:Type MenuItem}">

		<Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
				<ColumnDefinition Width="14"/>
			</Grid.ColumnDefinitions>
			<Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
			<ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			<Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                        BorderThickness="1">
				<Path VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{StaticResource MenuItemCheckedForeground.Orange}"
                                          StrokeThickness="1.5"
                                          Data="{StaticResource ToolBarCheckmark}"/>
			</Border>

			<ContentPresenter Grid.Column="1" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
										 		VerticalAlignment="Center" 
												
                                                  ContentSource="Header" Name="content"
                                                  Margin="7,2,2,2"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			<TextBlock Grid.Column="2" 
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
                                         Value="{x:Null}">
				<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                                         Value="true">
				<Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
				<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                                         Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
				<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
				<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                         Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="OrangeSubmenuHeaderTemplate"
                     TargetType="{x:Type MenuItem}">

		<Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
				<ColumnDefinition Width="14"/>
			</Grid.ColumnDefinitions>
			<Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
			<ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			<Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                                BorderThickness="1">
				<Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
			</Border>
			<ContentPresenter Grid.Column="1" Name="content"
                                                          ContentSource="Header" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                          Margin="7,2,2,2" VerticalAlignment="Center"														
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

			<Path Grid.Column="3" Name="path"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
			<Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
				<theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
					<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
							<ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
								<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="1"  
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Grid>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
				<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
			</Trigger>
			<Trigger Property="Icon"
                                                 Value="{x:Null}">
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                                                 Value="true">
				<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
				<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                                                 Value="true">
				<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
				<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
				<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
				<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
				<Setter Property="Fill" TargetName="path" Value="{StaticResource SelectedForeground.Orange}"/>

			</Trigger>
			<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
				<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
				<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type ContextMenu}" x:Key="OrangeContextMenuTemplate">
		<theme:SystemDropShadowChrome Name="Shdw" Color="#00FFFFFF"
                                  SnapsToDevicePixels="true">

			<Border Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
				<Grid>
					<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                           HorizontalAlignment="Left"
                           Width="28"                           
                           RadiusX="2"
                           RadiusY="2"/>
					<!--<Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="{StaticResource MenuItemBorderBrush.Orange}"/>-->
					<Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="32,2,0,2"
                           Fill="{StaticResource MenuItemRightBarBrush.Orange}"/>
					<ScrollViewer Margin="1,0,1,0" CanContentScroll="true"
                                              Grid.ColumnSpan="2" 
                                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}">
						<ItemsPresenter Margin="1,1,1,1" 
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
					</ScrollViewer>
				</Grid>
			</Border>
			
		</theme:SystemDropShadowChrome>
		<ControlTemplate.Triggers>
			<Trigger Property="ContextMenuService.HasDropShadow"
                                 Value="true">
				<Setter TargetName="Shdw"
                                    Property="FrameworkElement.Margin"
                                    Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                                    Property="theme:SystemDropShadowChrome.Color"
                                    Value="#71000000"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- ToolBar -->

	<ControlTemplate TargetType="{x:Type Button}" x:Key="OrangeToolBarButtonTemplate">
		<Border Name="Bd"     Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"                      
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ContentPresenter Name="content" Margin="3,1,3,1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			
			<Trigger Property="IsMouseOver"
                                 Value="true">				
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>
				<!--<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>-->

			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                 Value="true">				
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>


			</Trigger>
			<Trigger Property="IsPressed"
                                 Value="true">				
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>

			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="OrangeToolBarToggleButtonTemplate">
		<Border Name="Bd" Background="{TemplateBinding Background}" CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ContentPresenter Name="content" Margin="3,1,3,1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			 TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsPressed" Value="True"/>
					<Condition Property="ToggleButton.IsChecked" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>


			</MultiTrigger>
			<Trigger Property="IsChecked"
                                 Value="true">				
				<Setter Property="Background" TargetName="Bd"
                                   Value="{StaticResource  ButtonHoverBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>


			</Trigger>

			<Trigger Property="IsMouseOver"
                                 Value="true">
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>


			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                 Value="true">
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>
				<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>


			</Trigger>
			<Trigger Property="IsPressed"
                                 Value="true">
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
                <Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource  ButtonBorderBrush.Orange}"/>

			</Trigger>
			
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style x:Key="OrangeToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth"
                Value="0"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="Width"
                Value="Auto"/>
		<Setter Property="BorderBrush"
                Value="White"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="ClickMode"
                Value="Press"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<Border Margin="-1,0,0,0" Name="Chrome2" Background="{StaticResource ToolBarToogle.Orange}" 
                                    Grid.Column="1" Grid.Row="0" Width="25" >
						</Border>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
                                           Value="true"/>
								<Condition Property="IsChecked"
                                           Value="false"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource  ToolBarToogleHover.Orange}"/>
						</MultiTrigger>
						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ToolBarTooglePressed.Orange}"/>
						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter TargetName="Chrome2"
                                    Property="Background"
                                    Value="{StaticResource ToolBarTooglePressed.Orange}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type ComboBox}" x:Key="OrangeToolBarComboBoxTemplate">
		<Grid SnapsToDevicePixels="true">
			<Grid Grid.IsSharedSizeScope="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton"/>
				</Grid.ColumnDefinitions>
				<Border Name="Background" 
                                    Background="{StaticResource ComboBoxTextBoxBackground.Orange}"/>
				<Border Name="SelectedContentBorder"
                                    Margin="2,2,0,2">
					<ContentPresenter x:Name="ContentSite"  TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</Border>
				<Border Name="Border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    />
				<ToggleButton 
                                          x:Name="DropDownButton"
                                          Grid.ColumnSpan="2" 
                                          Style="{StaticResource OrangeToolBarComboBoxTransparentButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
				<TextBox Padding="{TemplateBinding Padding}"
                                     Margin="1,1,0,1" 
                                     MinHeight="18"  TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                     x:Name="PART_EditableTextBox"
                                     Style="{StaticResource OrangeComboBoxEditableTextBox}"
                                     Visibility="Collapsed"
                                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"/>
			</Grid>
			<Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<theme:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="DropDownBorder"
                                        Background="{StaticResource ListBoxBackground.Orange}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ListBoxBorderBrush.Orange}">
						<ScrollViewer>
							<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
						</ScrollViewer>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
					<Condition Property="IsDropDownOpen"
                                           Value="false"/>
					<Condition Property="IsEditable"
                                           Value="false"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="SelectedContentBorder"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
			</MultiTrigger>
			<Trigger Property="IsEditable"
                                 Value="true">
				<Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{x:Null}"/>
				<Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"/>
			</Trigger>
			<Trigger SourceName="Background" Property="IsMouseOver"
                                 Value="true">

				<Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource  ComboBoxToggleButtonHoverBrush.Orange}"/>
				<Setter TargetName="Background"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxTextBoxHoverBrush.Orange}"/>

			</Trigger>


			<Trigger SourceName="Background" Property="IsKeyboardFocusWithin"
                                 Value="true">

				<Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource  ComboBoxToggleButtonHoverBrush.Orange}"/>
				<Setter TargetName="Background"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxTextBoxHoverBrush.Orange}"/>
			</Trigger>



			<Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
				<Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
				<Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
			</Trigger>
			<Trigger Property="HasItems"
                                 Value="false">
				<Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
			</Trigger>
			<Trigger Property="IsGrouping"
                                 Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
			</Trigger>

			<Trigger Property="IsEditable"
                                 Value="true">
				<Setter Property="Padding"
                                    Value="2"/>
				<Setter Property="IsTabStop"
                                    Value="false"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate  x:Key="OrangeToolBarMenuTemplate" TargetType="{x:Type Menu}">
		<ControlTemplate.Resources>
			<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">

				<Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
				<Setter Property="FrameworkElement.MinHeight" Value="2"/>
				<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
				<Setter Property="Height" Value="1" />
				<Setter Property="Margin" Value="26,2,2,2"/>
				<Setter Property="Background" Value="{StaticResource MenuSeparatorBrush.Orange}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Separator">
							<Border Margin="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Style>
			<Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
				<Setter Property="OverridesDefaultStyle" 
                        Value="true" />
				<Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Background"
                        Value="Transparent"/>
				<Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrushes.Orange}"/>
				<Setter Property="BorderThickness"
                        Value="1"/>
				<Setter Property="Margin"
                        Value="0,1,0,0"/>
				<Setter Property="Padding"
                        Value="8,3,8,3"/>
				<Setter Property="DockPanel.Dock"
                        Value="Top"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
									<ColumnDefinition Width="14"/>
								</Grid.ColumnDefinitions>
								<Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
								<ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                        BorderThickness="1">
									<Path VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{StaticResource MenuItemCheckedForeground.Orange}"
                                          StrokeThickness="1.5"
                                          Data="{StaticResource ToolBarCheckmark}"/>
								</Border>

								<ContentPresenter Grid.Column="1" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                  ContentSource="Header" Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                   VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<TextBlock Grid.Column="2" 
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="Icon"
                                         Value="{x:Null}">
									<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsChecked"
                                         Value="true">
									<Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
									<Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
								</Trigger>
								<Trigger Property="IsHighlighted"
                                         Value="true">
									<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
									<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
									<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
									<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
									<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
								</Trigger>
								<Trigger Property="IsEnabled"
                                         Value="false">
									<Setter Property="Opacity" Value="0.5"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="Role"
                             Value="TopLevelHeader">
						<Setter Property="Padding"
                                Value="6,2,7,2"/>
						<Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
						<Setter Property="Margin"
                                Value="1"/>
						<Setter Property="Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
										<DockPanel Name="Header">
											<ContentPresenter x:Name="Icon" 
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
											<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                               VerticalAlignment="Center"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
												<theme:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
													<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                            BorderThickness="1">
														<Grid Grid.IsSharedSizeScope="true">
															<Grid.ColumnDefinitions>
																<ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
															<ScrollViewer CanContentScroll="true"
                                                                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                          Grid.ColumnSpan="2">
																<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1" Name="item" 
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
															</ScrollViewer>
														</Grid>
													</Border>
												</theme:SystemDropShadowChrome>
											</Popup>
										</DockPanel>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
											<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
										</Trigger>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>

										</Trigger>
										<Trigger Property="IsSubmenuOpen"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

										</Trigger>

										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsSubmenuOpen" Value="true"/>
												<Condition Property="IsKeyboardFocused" Value="true"/>
											</MultiTrigger.Conditions>
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>
										</MultiTrigger>

										<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
											<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
											<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
											<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent"/>
											<Setter TargetName="content" Property="TextBlock.Foreground"  Value="White"/>

										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="Role"
                             Value="TopLevelItem">
						<Setter Property="Margin"
                                Value="1"/>
						<Setter Property="Padding"
                                Value="7,2,8,2"/>
						<Setter Property="Foreground" Value="{StaticResource SelectedForeground.Orange}"/>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
										<DockPanel>
											<ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											<Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
											<ContentPresenter ContentSource="Header" Name="content" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</DockPanel>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource  ButtonBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ButtonBackgroundBrush.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="Role"
                             Value="SubmenuHeader">
						<Setter Property="DockPanel.Dock"
                                Value="Top"/>
						<Setter Property="Padding"
                                Value="8,3,8,3"/>
						<Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
						<Setter Property="Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type MenuItem}">
									<Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
										<Grid.ColumnDefinitions>
											<ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
											<ColumnDefinition Width="14"/>
										</Grid.ColumnDefinitions>
										<Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
										<ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										<Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                        Background="{StaticResource MenuItemCheckedBrush.Orange}"
                                                BorderThickness="1">
											<Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
										</Border>
										<ContentPresenter Grid.Column="1" Name="content"
                                                          ContentSource="Header" TextBlock.Foreground="{StaticResource ForegroundBrushes.Orange}" TextBlock.FontFamily="Arial" 
                                                          Margin="{TemplateBinding Padding}"
                                                           VerticalAlignment="Center"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

										<Path Grid.Column="3" Name="path"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="{StaticResource RightArrow}"/>
										<Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
											<theme:SystemDropShadowChrome Name="Shdw"
                                                                          Color="Transparent">
												<Border Background="{StaticResource MenuItemRightBarBrush.Orange}" BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
															<ColumnDefinition Width="*"/>
														</Grid.ColumnDefinitions>
														<Rectangle Fill="{StaticResource MenuItemLeftBarBrush.Orange}"
                                                                       Margin="0,1"/>
														<ScrollViewer CanContentScroll="true"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=OrangeMenuScrollViewer}}"
                                                                      Grid.ColumnSpan="2">
															<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"  
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
														</ScrollViewer>
													</Grid>
												</Border>
											</theme:SystemDropShadowChrome>
										</Popup>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
											<Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
										</Trigger>
										<Trigger Property="Icon"
                                                 Value="{x:Null}">
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsChecked"
                                                 Value="true">
											<Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
											<Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
										</Trigger>
										<Trigger Property="IsHighlighted"
                                                 Value="true">
											<Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource MenuBorderBrush.Orange}"/>
											<Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MenuItemHoverBrush.Orange}"/>
											<Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="Transparent"/>
											<Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource MenuItemCheckedBrush.Orange}"/>
											<Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
											<Setter Property="Fill" TargetName="path" Value="{StaticResource SelectedForeground.Orange}"/>

										</Trigger>
										<Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
											<Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
											<Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
											<Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
										</Trigger>
										<Trigger Property="IsEnabled"
                                                 Value="false">
											<Setter Property="Opacity" Value="0.5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
		</ControlTemplate.Resources>
		<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ItemsPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
	</ControlTemplate>



	<ControlTemplate TargetType="{x:Type TextBox}" x:Key="OrangeToolBarTextBoxTemplate">
		<Border Name="Border" CornerRadius="3"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1.5"
                            BorderBrush="{StaticResource ToolBarTrayBackground.Orange}"
                            SnapsToDevicePixels="true">
			<ScrollViewer x:Name="PART_ContentHost"  TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                      VerticalAlignment="Center"
                                      MinHeight="18" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsMouseOver"
                                 Value="true">
				<Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource  ButtonBorderBrush.Orange}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
				<Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource  ButtonBorderBrush.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>




	<Style x:Key="OrangeToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Background"
                Value="{StaticResource MenuItemRightBarBrush.Orange}"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="MinWidth"
                Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="border" Width="12" BorderThickness="1" VerticalAlignment="Bottom" Margin="0,0,0,2" Height="12">
						<Border VerticalAlignment="Bottom" Margin="0,1,0,1" Name="Bd" Width="8" Height="8"                             
                            Background="{StaticResource ToolbarHorizontalOverflow.Orange}"
                            SnapsToDevicePixels="true">						
					</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
                                 Value="true">							
							<Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource  ButtonHoverBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>
						</Trigger>

						<Trigger Property="IsKeyboardFocused"
                                 Value="true">
							<Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ToolBarOverflowHoverBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">							
							<Setter TargetName="border" 
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="IsPressed" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="border" 
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</MultiTrigger> 
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Background"
                Value="{StaticResource MenuItemRightBarBrush.Orange}"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="MinWidth"
                Value="0"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="border" Width="17">
						<Border Name="Bd" Width="17" Height="14"                             
                            Background="{StaticResource ToolbarHorizontalOverflow.Orange}"
                            SnapsToDevicePixels="true">
							<Border.RenderTransform>
								<RotateTransform Angle="270"/>
							</Border.RenderTransform>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
                                 Value="true">
							<Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource  ButtonHoverBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>
						</Trigger>

						<Trigger Property="IsKeyboardFocused"
                                 Value="true">
							<Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ToolBarOverflowHoverBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter TargetName="border" 
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="IsPressed" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="border" 
                                    Property="Background"
                                    Value="{StaticResource ButtonPressedBrush.Orange}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Orange}"/>

						</MultiTrigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeToolBarThumbStyle"
           TargetType="{x:Type Thumb}">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Height="29"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
						<Rectangle Fill="{StaticResource OrangeToolBarThumbBrush.Orange}">
							
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
                                 Value="true">
							<Setter Property="Cursor"
                                    Value="SizeAll"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type ToolBar}" x:Key="OrangeToolBarTemplate">
		<Border CornerRadius="7,7,7,7" Name="gr" BorderThickness="1" BorderBrush="#FF6E2611" Background="{TemplateBinding Background}" >
            <!--<Border.Background>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <DrawingGroup.Children>                                
                                <DrawingGroup ClipGeometry="F1 M 0,-456L 816,-456L 816,600L 0,600L 0,-456 Z ">
                                    <DrawingGroup.Children>
                                        <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBar}},Path=Background}" Geometry="F1 M 697.978,60.8372L 118.663,60.8372C 115.503,60.8372 112.943,63.5292 112.943,66.8492L 112.943,80.3772C 112.943,83.6985 115.506,86.3892 118.665,86.3892L 697.977,86.3892C 701.135,86.3892 703.698,83.6985 703.698,80.3772L 703.698,66.8492C 703.698,63.5292 701.138,60.8372 697.978,60.8372 Z ">
                                            <GeometryDrawing.Pen>
                                                <Pen Thickness="1.33333" LineJoin="Round" Brush="#FF6E2611"/>
                                            </GeometryDrawing.Pen>
                                        </GeometryDrawing>
                                    </DrawingGroup.Children>
                                </DrawingGroup>                                
                            </DrawingGroup.Children>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Border.Background>-->
			
				<Grid Name="Grid"
                          Margin="0"
                          SnapsToDevicePixels="true">
			<Grid HorizontalAlignment="Right" Margin="0,0,3,1"
                              x:Name="OverflowGrid">
				<ToggleButton x:Name="OverflowButton" 
                                          FocusVisualStyle="{x:Null}" 
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource OrangeToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
				<Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
					<theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
						<Border Background="{StaticResource MenuItemRightBarBrush.Orange}"
                                            BorderBrush="{StaticResource MenuBorderBrush.Orange}"
                                            BorderThickness="1">
							<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</theme:SystemDropShadowChrome>
				</Popup>
			</Grid>
			<Border x:Name="MainPanelBorder" 
                                Margin="0,0,10,0"                                
                                BorderBrush="#FF5E1D0E"
                                BorderThickness="1"
                                CornerRadius="3,3,30,3"
                                Padding="{TemplateBinding Padding}">
                    <!--<Border.Background>
                        <DrawingBrush>
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <DrawingGroup.Children>                                        
                                        <DrawingGroup ClipGeometry="F1 M 0,-56L 816,-56L 816,1000L 0,1000L 0,-56 Z ">
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBar}},Path=Background}" Geometry="F1 M 747.997,458.423L 70.4973,458.423C 66.8333,458.423 63.864,461.544 63.864,465.394L 63.864,481.077C 63.864,484.926 66.8333,488.047 70.4973,488.047L 740.001,488.047L 754.629,470.394L 754.629,465.394C 754.629,461.544 751.66,458.423 747.997,458.423 Z ">
                                                    <GeometryDrawing.Pen>
                                                        <Pen Thickness="1.33333" LineJoin="Round" Brush="#FF5E1D0E"/>
                                                    </GeometryDrawing.Pen>
                                                </GeometryDrawing>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>                                        
                                    </DrawingGroup.Children>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Border.Background>-->
                        <DockPanel KeyboardNavigation.TabIndex="1" Margin="0,0,8,0"
                                       KeyboardNavigation.TabNavigation="Local">
					<Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource OrangeToolBarThumbStyle}"
                                       Margin="3,-1,4,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
					<ContentPresenter x:Name="ToolBarHeader" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,10,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</DockPanel>
			</Border>
		</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsOverflowOpen"
                                 Value="true">
				<Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>                                   
			</Trigger>
			<Trigger Property="Header"
                                 Value="{x:Null}">
				<Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
			</Trigger>

			
			<Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
				<Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
			</Trigger>
			<Trigger SourceName="OverflowPopup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
				<Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
				<Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
				<Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
			</Trigger>
			<Trigger Property="Orientation"
                                 Value="Vertical">
				<Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
				<Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource OrangeToolBarVerticalOverflowButtonStyle}"/>
				<Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
				<Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
				<Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
				<Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
				<Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
				<Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
				<Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
				<Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
				<Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
				<Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
				<Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
				<Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
				<!--<Setter Property="Background"
                                    Value="{StaticResource MenuItemLeftBarBrush.Orange}"/>-->
			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsPressed"
                                 Value="true">

				<Setter TargetName="OverflowButton" 
                                    Property="Background"
                                    Value="{StaticResource ToolBarOverflowPressedBrush.Orange}"/>
			</Trigger>		

		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- Expander -->
  
	<Style x:Key="OrangeExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="bd" CornerRadius="4,4,0,0" Background="{StaticResource ExpanderHeaderBottom.Orange}" Padding="{TemplateBinding Padding}">
						<Grid Name="grid" Background="Transparent"
                              SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="23"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Ellipse x:Name="ellipse" Width="21" StrokeThickness="2"
                                     Height="21"                                  
                                     Stroke="{StaticResource ExpanderBorderBrush.Orange}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
							<Ellipse x:Name="circle"
                                     Width="19" 
                                     Height="19" 
                                     StrokeEndLineCap="Round"                                
                                    
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderBackgroundBrush.Orange}"/>

							<Ellipse x:Name="arrow" Width="11" Height="11" HorizontalAlignment="Center"
                                     VerticalAlignment="Center" Fill="{StaticResource ExpanderArrow.Orange}">								
							</Ellipse>
							
							<ContentPresenter Grid.Column="1" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="arrow" Property="Ellipse.LayoutTransform">
								<Setter.Value>
								<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Setter.Value>
							</Setter>
								<Setter TargetName="arrow" Property="Fill" Value="{StaticResource CheckedExpanderArrow.Orange}"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderPressedBrush.Orange}"/>
						</Trigger> 
						<Trigger Property="IsMouseOver"
                                 Value="true">
						
							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderHoverBrush.Orange}"
                                    TargetName="circle"/>
							<Setter TargetName="bd" Property="Background" Value="{StaticResource MouseOverBotton.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">	
							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderPressedBrush.Orange}"
                                    TargetName="circle"/>						
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="bd" CornerRadius="0,0,4,4" Background="{StaticResource ExpanderHeaderTop.Orange}" Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent"
                              SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="23"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="ellipse" Width="21" StrokeThickness="2"
                                     Height="21"                                  
                                     Stroke="{StaticResource ExpanderBorderBrush.Orange}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
								<Ellipse x:Name="circle"
                                     Width="19" 
                                     Height="19"                                  
                                    
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderBackgroundBrush.Orange}"/>

								<Ellipse x:Name="arrow" Width="11" Height="11" HorizontalAlignment="Center"
                                     VerticalAlignment="Center" Fill="{StaticResource ExpanderArrow.Orange}"/>
							</Grid>
							<ContentPresenter Grid.Column="1" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="arrow" Property="Ellipse.LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource CheckedExpanderArrow.Orange}"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderPressedBrush.Orange}"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
                                 Value="true">

							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderHoverBrush.Orange}"
                                    TargetName="circle"/>
							<Setter TargetName="bd" Property="Background" Value="{StaticResource MouseOverTop.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderPressedBrush.Orange}"
                                    TargetName="circle"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="bd" CornerRadius="0,4,4,0" Background="{StaticResource ExpanderHeaderLeft.Orange}" Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent"
                              SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="23"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="ellipse" Width="21" StrokeThickness="2"
                                     Height="21"                                  
                                     Stroke="{StaticResource ExpanderBorderBrush.Orange}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
								<Ellipse x:Name="circle"
                                     Width="19"  
                                     Height="19"                                  
                                    
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderBackgroundBrush.Orange}"/>

								<Ellipse x:Name="arrow" Width="11" Height="11" HorizontalAlignment="Center"
                                     VerticalAlignment="Center" Fill="{StaticResource ExpanderArrow.Orange}"/>
							</Grid>
							<ContentPresenter Grid.Row="1" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="arrow" Property="Ellipse.LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource CheckedExpanderArrow.Orange}"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderPressedBrush.Orange}"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
                                 Value="true">

							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderHoverBrush.Orange}"
                                    TargetName="circle"/>
							<Setter TargetName="bd" Property="Background" Value="{StaticResource MouseOverLeft.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderPressedBrush.Orange}"
                                    TargetName="circle"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="bd" CornerRadius="4,0,0,4" Background="{StaticResource ExpanderHeaderRight.Orange}" Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent"
                              SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="23"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="ellipse" Width="21" StrokeThickness="2"
                                     Height="21"                                  
                                     Stroke="{StaticResource ExpanderBorderBrush.Orange}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
								<Ellipse x:Name="circle" 
                                     Width="19"
                                     Height="19"  
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderBackgroundBrush.Orange}"/>

								<Ellipse x:Name="arrow" Width="11" Height="11" HorizontalAlignment="Center"
                                     VerticalAlignment="Center" Fill="{StaticResource ExpanderArrow.Orange}"/>
							</Grid>
							<ContentPresenter Grid.Row="1" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						
						<Trigger Property="IsChecked"
                                 Value="true">
							<Setter TargetName="arrow" Property="Ellipse.LayoutTransform">
								<Setter.Value>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter TargetName="arrow" Property="Fill" Value="{StaticResource CheckedExpanderArrow.Orange}"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderPressedBrush.Orange}"/>
						</Trigger>
						<Trigger Property="IsMouseOver"
                                 Value="true">

							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderHoverBrush.Orange}"
                                    TargetName="circle"/>
							<Setter TargetName="bd" Property="Background" Value="{StaticResource MouseOverRight.Orange}"/>

						</Trigger>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter Property="Fill"
                                    Value="{StaticResource ExpanderPressedBrush.Orange}"
                                    TargetName="circle"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type Expander}" x:Key="OrangeExpanderTemplate">
		<Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            
                            SnapsToDevicePixels="true">
			<DockPanel>				
					<ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Margin="0"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Style="{StaticResource OrangeExpanderDownHeaderStyle}"                                        
                                          IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>				

				<ContentPresenter x:Name="ExpandSite"  TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded"
                                 Value="true">
				<Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
			</Trigger>
			<Trigger Property="ExpandDirection"
                                 Value="Right">
				<Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
				<Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
				<Setter Property="Style"
                                    Value="{StaticResource OrangeExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
			</Trigger>
			<Trigger Property="ExpandDirection"
                                 Value="Up">
				<Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
				<Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
				<Setter Property="Style"
                                    Value="{StaticResource OrangeExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
			</Trigger>
			<Trigger Property="ExpandDirection"
                                 Value="Left">
				<Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
				<Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
				<Setter Property="Style"
                                    Value="{StaticResource OrangeExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- ScrollBar -->
    
    
	<Style x:Key="OrangeScrollBarDownButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>

		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">
						<Path Data="M0,0L4.5,5 8,0z" HorizontalAlignment="Center" Fill="{StaticResource ToggleButtonLeftBrush.Orange}" Name="Arrow" VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonHoverBrush.Orange}"/>
						</Trigger>

						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsPressed"  Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonPressedBrush.Orange}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeScrollBarLeftButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>

		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">
						<Path Data=" M 0 4.5 L 4.5 9 L 4.5 0 Z" HorizontalAlignment="Center" Fill="{StaticResource ToggleButtonLeftBrush.Orange}" Name="Arrow" VerticalAlignment="Center" >
						</Path>
					</Border>
					<ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonHoverBrush.Orange}"/>
					</Trigger>

					<Trigger Property="UIElement.IsEnabled" Value="False">
						<Setter Property="Opacity" Value="0.5"/>
					</Trigger>
					<Trigger Property="IsPressed"  Value="True">
						<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonPressedBrush.Orange}" />
					</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeScrollBarRightButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>

		<Setter Property="Control.Template" >
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">

					<Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">

						<Path Data="M 0 0 L 0 9 L 4.5 4.5" HorizontalAlignment="Center" Fill="{StaticResource ToggleButtonLeftBrush.Orange}" Name="Arrow" VerticalAlignment="Center" >

						</Path>

					</Border>
				<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonHoverBrush.Orange}"/>
						</Trigger>

						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsPressed"  Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonPressedBrush.Orange}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeScrollBarUpButton" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>

		<Setter Property="Control.Template" >
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">

					<Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="Transparent">

						<Path Data="M0,5 L8,5 4.5,0z" HorizontalAlignment="Center" Fill="{StaticResource ToggleButtonLeftBrush.Orange}" Name="Arrow" VerticalAlignment="Center" >

						</Path>

					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonHoverBrush.Orange}"/>
						</Trigger>

						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsPressed"  Value="True">
							<Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollToggleButtonPressedBrush.Orange}" />
						</Trigger>

					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeScrollBarVerticalThumb" TargetType="{x:Type Thumb}">

		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>

		<Setter Property="Template" >
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">

					<Rectangle
                          Name="PART_RepeatThumb"
                          RadiusX="3"
                          RadiusY="3" Fill="{StaticResource VerticalScrollBarThumbBrush.Orange}"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">

							<Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource VerticalScrollBarHoverBrush.Orange}" />
						</Trigger>
						<Trigger Property="IsDragging"  Value="True">

							<Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource VerticalScrollBarPressedBrush.Orange}" />

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeScrollBarHorizontalThumb" TargetType="{x:Type Thumb}">

		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template" >
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle
                               Name="PART_RepeatThumb"
                               RadiusX="3"
                               RadiusY="3" Fill="{StaticResource ScrollBarThumbBrush.Orange}"/>


					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">

							<Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource HorizontalScrollBarHoverBrush.Orange}" />
						</Trigger>
						<Trigger Property="IsDragging"  Value="True">

							<Setter Property="Fill" TargetName="PART_RepeatThumb" Value="{StaticResource HorizontalScrollBarPressedBrush.Orange}" />

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeHorizontalScrollBarPageButton"
          TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Background"
                Value="Transparent"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="IsTabStop"
                Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeVerticalScrollBarPageButton"
          TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Background"
                Value="Transparent"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="IsTabStop"
                Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type ScrollBar}" x:Key="OrangeVerticalScrollBarTemplate">
		<Grid Name="Bg"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
			</Grid.RowDefinitions>
			<RepeatButton Name="UpButton" Style="{StaticResource OrangeScrollBarUpButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      />

			<Track Grid.Row="1"
                             Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource OrangeVerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}"/>
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource OrangeVerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}"/>
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb Margin="5,0,5,0" Name="tmb" Style="{StaticResource OrangeScrollBarVerticalThumb}"
                                       />
				</Track.Thumb>

			</Track>

			<RepeatButton Name="DownButton" Style="{StaticResource OrangeScrollBarDownButton}"
                                    Grid.Row="3"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                     />
		</Grid>

	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type ScrollBar}" x:Key="OrangeHorizontalScrollBarTemplate">
		<Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
				<ColumnDefinition Width="0.00001*"/>
				<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
			</Grid.ColumnDefinitions>
			<RepeatButton Name="LeftButton" Style="{StaticResource OrangeScrollBarLeftButton}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              />
			<Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource OrangeHorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource OrangeHorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb Margin="0,5,0,5" Style="{StaticResource OrangeScrollBarHorizontalThumb}"
                                               />
				</Track.Thumb>
			</Track>
			<RepeatButton Name="RightButton" Style="{StaticResource OrangeScrollBarRightButton}"
                                              Grid.Column="3"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              />
		</Grid>

	</ControlTemplate>


  

    <!-- TextBoxBase -->

    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="OrangeTextBoxBaseTemplate">
        <Border x:Name="Bd" Background="{TemplateBinding Background}"  
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"                                     
                            SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                                 Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
			<Trigger Property="IsMouseOver" Value="True">				
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxHoverBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxBackground.Orange}"/>

			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">				
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxHoverBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxBackground.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>


	<ControlTemplate TargetType="{x:Type RichTextBox}" x:Key="OrangeRichTextBoxBaseTemplate">
		<Border x:Name="Bd" Background="{TemplateBinding Background}"  
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1"                                   
                            SnapsToDevicePixels="true">
			<ScrollViewer x:Name="PART_ContentHost"  
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">				
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ExpanderBackground.Orange}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">				
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ExpanderBackground.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<!-- PasswordBox -->
    <ControlTemplate TargetType="{x:Type PasswordBox}" x:Key="OrangePasswordBoxTemplate">
        <Border x:Name="Bd" Background="{TemplateBinding Background}"  
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4"                                      
                            SnapsToDevicePixels="true">			
				<ScrollViewer x:Name="PART_ContentHost"  
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                                 Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxHoverBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxBackground.Orange}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxHoverBrush.Orange}"/>
				<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxBackground.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>
    
    
    <!-- GroupBox -->

	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

	<ControlTemplate TargetType="{x:Type GroupBox}" x:Key="OrangeGroupBoxTemplate">
		<Grid SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="6"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="6"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="6"/>
			</Grid.RowDefinitions>
			<Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
			<Border x:Name="Header"
                                Padding="4,1,3,0"
                                Grid.Row="0" 
                                Grid.RowSpan="2"
                                Grid.Column="1">
				<ContentPresenter ContentSource="Header"  TextBlock.FontFamily="Arial" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</Border>
			<ContentPresenter Grid.Row="2"  TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			<Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="1"
                                BorderBrush="{StaticResource ExpanderBorderBrush.Orange}">
				<Border.OpacityMask>
					<MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
						<Binding ElementName="Header"
                                             Path="ActualWidth"/>
						<Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
						<Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
					</MultiBinding>
				</Border.OpacityMask>
				<Border BorderThickness="1"
                                    BorderBrush="Transparent"
                                    CornerRadius="3">
					<Border BorderThickness="1"
                                        BorderBrush="{StaticResource ExpanderBorderBrush.Orange}"
                                        CornerRadius="2"/>
				</Border>
			</Border>
		</Grid>
	</ControlTemplate>
	
	
	<!-- ProgressBar -->

	<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill1.Orange" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#00000000"
                          Offset="0"/>
			<GradientStop Color="#FF000000"
                          Offset="0.4"/>
			<GradientStop Color="#FF000000"
                          Offset="0.6"/>
			<GradientStop Color="#00000000"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
    
   
	<ControlTemplate TargetType="{x:Type ProgressBar}" x:Key="OrangeProgressBarTemplate">
		<Grid Name="Background"
                          SnapsToDevicePixels="true">
			<Rectangle Fill="{TemplateBinding Background}"
                                   RadiusX="2"
                                   RadiusY="2"/>
			<Border Background="{StaticResource ProgressBarGlassyHighlightBrush.Orange}"
                                Margin="1"
                                CornerRadius="2"/>
			<Border BorderBrush="#80FFFFFF"
                                Background="{StaticResource ProgressBarTopHighlightBrush.Orange}"
                                BorderThickness="1,0,1,1"
                                Margin="1"/>
			<Rectangle Name="PART_Track"
                                   Margin="1" Fill="{StaticResource DefaultThumbBrush.Orange}" Stroke="DarkGray" StrokeThickness="0.5"/>

			<Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
				<Grid Name="Foreground">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MaxWidth="15"/>
						<ColumnDefinition Width="0.1*"/>
						<ColumnDefinition MaxWidth="15"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<Rectangle x:Name="Indicator"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}"/>
					<Rectangle x:Name="Animation"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}">
						<Rectangle.OpacityMask>
							<MultiBinding>
								<MultiBinding.Converter>
									<theme:ProgressBarHighlightConverter/>
								</MultiBinding.Converter>
								<Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill1.Orange}"/>
								<Binding Path="ActualWidth"
                                                     ElementName="Background"/>
								<Binding Path="ActualHeight"
                                                     ElementName="Background"/>
							</MultiBinding>
						</Rectangle.OpacityMask>
					</Rectangle>
					<Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeftBrush.Orange}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
					<Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRightBrush.Orange}"
                                           Margin="0,1,1,1"/>
					<Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeftBrush.Orange}"/>
					<Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectBrush.Orange}"/>
					<Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRightBrush.Orange}"/>
					<Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarIndicatorGlassyHighlightBrush.Orange}"/>
					<Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarTopHighlightBrush.Orange}"/>

				</Grid>

			</Decorator>


			<Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Orientation"
                                 Value="Vertical">
				<Setter TargetName="Background"
                                    Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="-90"/>
					</Setter.Value>
				</Setter>
				<Setter TargetName="PART_Track"
                                    Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="90"/>
					</Setter.Value>
				</Setter>
				<Setter TargetName="PART_Indicator"
                                    Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="90"/>
					</Setter.Value>
				</Setter>
				<Setter TargetName="Foreground"
                                    Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="-90"/>
					</Setter.Value>
				</Setter>
			</Trigger>

			<Trigger Property="IsIndeterminate"
                                 Value="true">
				<Setter TargetName="LeftDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="RightDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="LeftLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="CenterLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="RightLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
				<Setter TargetName="Indicator"
                                    Property="Visibility"
                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsIndeterminate"
                                 Value="false">
				<Setter TargetName="Animation"
                                    Property="Fill"
                                    Value="{StaticResource ProgressBarFill.Orange}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- StatucBar -->

	<ControlTemplate TargetType="{x:Type Separator}" x:Key="OrangeStatusBarSeparatorTemplate">
		<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type StatusBarItem}" x:Key="OrangeStatusBarItemTemplate">

		<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	
	<!-- ToolTip -->
	
   
	 
    <ControlTemplate TargetType="{x:Type ToolTip}" x:Key="OrangeToolTipTemplate">
        <theme:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true"
                                                  CornerRadius="3">
            <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="3">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                 TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </theme:SystemDropShadowChrome>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow"
                                 Value="true">
                <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


	<!-- GridView -->
	<ControlTemplate TargetType="{x:Type ScrollViewer}" x:Key="OrangeGridViewScrollViewerTemplate">
		<Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>			
			<DockPanel Margin="{TemplateBinding Padding}">
				<ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
					<GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</ScrollViewer>
				<ScrollContentPresenter Name="PART_ScrollContentPresenter"   
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</DockPanel>
			<ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
			<ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
			<DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{StaticResource ScrollBackground.Orange}"
                                   LastChildFill="false">
				<Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="{StaticResource ScrollBackground.Orange}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
				<Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="{StaticResource ScrollBackground.Orange}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
			</DockPanel>
		</Grid>
	</ControlTemplate>
	
       
	<Style x:Key="OrangeGridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
		<Setter Property="Canvas.Right"
                Value="-9"/>
		<Setter Property="Width"
                Value="18"/>
		<Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
		<Setter Property="Padding"
                Value="0"/>
		<Setter Property="Background"
                Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
						<Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type GridViewColumnHeader}" x:Key="OrangeGridViewTemplate">
		<Border Name="HeaderBorder"
                                    BorderThickness="0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
		<ControlTemplate.Triggers>
			<Trigger Property="Height"
                                         Value="Auto">
				<Setter Property="MinHeight"
                                            Value="20"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type GridViewColumnHeader}" x:Key="OrangeGridViewColumnHeaderTemplate">
		<Grid SnapsToDevicePixels="true">
			<Border Name="HeaderBorder" 
                               BorderThickness="0,0,1,1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
				<ContentPresenter Name="HeaderContent"
                                                      Margin="0" TextBlock.Foreground="White" TextBlock.FontFamily="Arial" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


			</Border>
			<Canvas>
				<Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource OrangeGridViewColumnHeaderGripper}"/>
			</Canvas>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
                                 Value="true">
				<Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewHoverBrush.Orange}"/>
				<Setter TargetName="HeaderContent" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</Trigger>
			<Trigger Property="IsPressed"
                                 Value="true">
				<Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource GridViewPressedBrush.Orange}"/>
				<Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
				<Setter TargetName="HeaderContent" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>


			</Trigger>
			<Trigger Property="Height"
                                 Value="Auto">
				<Setter Property="MinHeight"
                                    Value="20"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type ListView}" x:Key="OrangeGridListViewTemplate">
		<Border Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                        
                                         SnapsToDevicePixels="true">
			<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
				<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="Black" TextBlock.FontFamily="Arial"/>
			</ScrollViewer>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsGrouping"
                                 Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>

			

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type ListViewItem}" x:Key="OrangeGridListViewItemTemplate">
		<Border Name="Bd" BorderThickness="0,0,0,0" Height="22" CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">


			<GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
                                 Value="true">
				<Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ListViewItemHoverBrush.Orange}"/>
				<Setter Property="Control.Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsSelected"
                                 Value="true">
				<Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ListViewItemSelectedBrush.Orange}"/>
				<Setter Property="Control.Foreground" Value="White"/>

			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
                    
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource ListViewItemSelectedBrush.Orange}"/>
				<Setter Property="Foreground" Value="White"/>

			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="IsMouseOver"
                                           Value="true"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource GridViewPressedBrush.Orange}"/>	
                <Setter Property="Foreground" Value="White"/>			
			</MultiTrigger>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	
	<!-- ResizeGrip -->

	<!--<LinearGradientBrush x:Key="ResizeGripperForeground.Orange"
                          StartPoint="0,0" EndPoint="0,1">
		<GradientStop Offset="0" Color="#FFFFFF"/>
		<GradientStop Offset="0.06" Color="#F9AE41"/>
		<GradientStop Offset="0.39" Color="#F9AE41"/>
		<GradientStop Offset="0.45" Color="#F9AE41"/>
		<GradientStop Offset="0.50" Color="#F9AE41"/>
		<GradientStop Offset="0.56" Color="#F9AE41"/>
		<GradientStop Offset="0.66" Color="#F9AE41"/>
		<GradientStop Offset="0.71" Color="#F9AE41"/>
		<GradientStop Offset="0.77" Color="#FFFFFF"/>
		<GradientStop Offset="0.94" Color="#FFFFFF"/>
		<GradientStop Offset="1.00" Color="#FFFFFF"/>
	</LinearGradientBrush>-->

	<ControlTemplate TargetType="{x:Type ResizeGrip}" x:Key="OrangeResizeGripTemplate">
		<Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
			<Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Margin="0,0,2,2"
                              Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z"
                              Fill="{StaticResource ResizeGripPathFill.Orange}">

				<!--<Path.Fill>
					<DrawingBrush Viewbox="0,0,3,3"
                                              Viewport="0,0,3,3"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
						<DrawingBrush.Drawing>
							<DrawingGroup>
								<DrawingGroup.Children>
									<GeometryDrawing Brush="{StaticResource ResizeGripperForeground.Orange}"
                                                                 Geometry="M 0,0 L 3,0 L 3,3 L 0,3 z "/>
								</DrawingGroup.Children>
							</DrawingGroup>
						</DrawingBrush.Drawing>
					</DrawingBrush>
				</Path.Fill>-->
			</Path>
		</Grid>
	</ControlTemplate>
	
	<!-- Page Template -->

	<ControlTemplate TargetType="{x:Type Page}" x:Key="OrangePageTemplate">
		<Border Background="{TemplateBinding Background}">
			<ContentPresenter TextBlock.Foreground="White" TextBlock.FontFamily="Arial" Content="{TemplateBinding Page.Content}"/>
		</Border>
	</ControlTemplate>
	
	<!-- Label Template -->

	<ControlTemplate TargetType="{x:Type Label}" x:Key="OrangeLabelTemplate">
		<Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- TreeView -->
	<ControlTemplate TargetType="{x:Type TreeView}" x:Key="OrangeTreeViewTemplate">
		<Border Name="Bd"   BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{StaticResource GroupBoxBackground.Orange}"
                            SnapsToDevicePixels="true">
			<ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
				<ItemsPresenter/>
			</ScrollViewer>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	

	<Style x:Key="OrangeExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable"
                Value="False"/>
		<Setter Property="Width"
                Value="15"/>
		<Setter Property="Height"
                Value="15"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Height="13" 
                                            BorderBrush="{StaticResource TreeViewExpandBorderBrush.Orange}"
                                            CornerRadius="1" 
                                            Width="13" 
                                            BorderThickness="1" 
                                            SnapsToDevicePixels="True"
                                            Background="{StaticResource TreeViewExpandBackground.Orange}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" 
                                              Fill="White" Name="ExpandPath" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ToggleButton.IsChecked" Value="True">
							<Setter Property="Path.Data" TargetName="ExpandPath" Value="M0,2L0,3 5,3 5,2z"/>							
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate TargetType="{x:Type TreeViewItem}" x:Key="OrangeTreeViewItemTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Border Name="Part_Select" BorderThickness="1"  Grid.ColumnSpan="3" Grid.Column="0">
				<StackPanel Orientation="Horizontal">

					<ToggleButton x:Name="Expander" Margin="1"
                                      Style="{StaticResource OrangeExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
					<Border Name="Bd" 
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
						<ContentPresenter x:Name="PART_Header" Margin="2,1,1,1"
                                              ContentSource="Header" TextBlock.Foreground="White" TextBlock.FontFamily="Arial"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</StackPanel>
			</Border>


			<ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
				
			

		</Grid>
       

		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded"
                                 Value="false">
				<Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasItems"
                                 Value="false">
				<Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsSelected"
                                 Value="true">
				<Setter TargetName="Part_Select"
                                    Property="Background"
                                    Value="{StaticResource TreeViewItemSelectedBrush.Orange}"/>
				<Setter TargetName="Part_Select" Property="BorderBrush" Value="{StaticResource TreeViewExpandBorderBrush.Orange}"/>
				<Setter TargetName="Part_Select" Property="BorderThickness" Value="1"/>	
				<Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>			
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="IsSelectionActive"
                                           Value="false"/>
				</MultiTrigger.Conditions>
				
				<Setter TargetName="Part_Select"
                                    Property="Background"
                                    Value="{StaticResource TreeViewItemSelectedBrush.Orange}"/>				
				<Setter TargetName="Part_Select" Property="BorderBrush" Value="{StaticResource TreeViewExpandBorderBrush.Orange}"/>
				<Setter TargetName="Part_Select" Property="BorderThickness" Value="1"/>
				<Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</MultiTrigger>
			<!--<Trigger Property="TreeViewItem.IsMouseOver" Value="True">
				<Setter TargetName="Part_Select" Property="Background" Value="{StaticResource TreeViewItemHoverBrush.Orange}"/>
				<Setter TargetName="Part_Select" Property="BorderBrush" Value="{StaticResource TreeViewExpandBorderBrush.Orange}"/>
				<Setter TargetName="Part_Select" Property="BorderThickness" Value="1"/>
			</Trigger>-->
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity"
                                    Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- TabControl -->
    
    
  
	<ControlTemplate TargetType="{x:Type TabControl}" x:Key="OrangeTabControlTemplate">
		<Grid KeyboardNavigation.TabNavigation="Local" 
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="ColumnDefinition0"/>
				<ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
				<RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
			</Grid.RowDefinitions>
			
				<TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0" 
                                  Grid.Row="0"
                                  Margin="0,0,0,-1"                                    
                                  IsItemsHost="true"/>
			
			<Border x:Name="ContentPanel" CornerRadius="5"
                                Background="{TemplateBinding Background}"                                
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding BorderBrush}"
                                Grid.Column="0"
                                Grid.Row="1">
				<ContentPresenter x:Name="PART_SelectedContentHost" Margin="2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              
                                              ContentSource="SelectedContent"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>

			<Trigger Property="TabStripPlacement"
                                 Value="Bottom">
				<Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>				
				<Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
				<Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>				
				<!--<Setter Property="BorderThickness" Value="1,1,1,0" TargetName="ContentPanel"/>-->
				<Setter Property="Background" TargetName="ContentPanel" Value="{StaticResource TabBackgroundBottom.Orange}"/>
			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Left">
				<Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
				<Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
				<Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
				<Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
				<Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
				<Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>				
				<Setter Property="Margin" Value="1,0,0,0" TargetName="ContentPanel"/>
				<!--<Setter Property="BorderThickness" Value="0,1,1,1" TargetName="ContentPanel"/>-->
				<Setter Property="Background" TargetName="ContentPanel" Value="{StaticResource TabBackgroundLeft.Orange}"/>
			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Right">
				<Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
				<Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
				<Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
				<Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
				<Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
				<Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
				<Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
				<Setter Property="Background" TargetName="ContentPanel" Value="{StaticResource TabBackgroundRight.Orange}"/>
				<!--<Setter Property="BorderThickness" Value="1,1,0,1" TargetName="ContentPanel"/>-->
			</Trigger>
			<Trigger Property="IsEnabled" 
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate TargetType="{x:Type TabItem}" x:Key="OrangeRightTabItemTemplate">


		<Grid Margin="1,0,0,0" SnapsToDevicePixels="true">
            <Border Height="23" Name="Bd" Margin="-1,0,0,0" BorderThickness="0,1,1,1"
                    Background="{StaticResource RightTabItemBackground.Orange}">
                <!--<Border.Background>
                    <DrawingBrush 
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}},Path=Background}" Geometry="F1 M 330.791,52.436C 329.869,52.436 328.981,52.5733 328.137,52.8107L 328.137,95.2667L 489.669,95.2667L 478.837,62.2253C 476.391,56.1066 474.456,52.436 469.048,52.436L 330.791,52.436 Z ">
                                        
                                    </GeometryDrawing>
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Border.Background>-->

                <Grid Margin="2,2,2,0" ClipToBounds="True">


								<Border  Name="MainButton"                     
                      Margin="3">

									<ContentPresenter Name="Content" Margin="2,0,2,0"
                                              ContentSource="Header" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>
								</Border>
							</Grid>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="false"/>
								<Condition Property="IsMouseOver"
                                           Value="true"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemRightHoverBrush.Orange}"/>
							<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="True"/>
								<Condition Property="IsMouseOver" 
                                          Value="false"/>

							</MultiTrigger.Conditions>
							<Setter Property="Panel.ZIndex"
                                    Value="1"/>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemRightSelectedBrush.Orange}"/>
							<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>

							<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemSelectedHoverBrush.Orange}"/>
							<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

						</MultiTrigger>

						<Trigger Property="TabStripPlacement"
                                 Value="Bottom">
							<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
							<Setter TargetName="Bd" Property="Margin" Value="0,-1,0,0"/>

						</Trigger>
						<Trigger Property="TabStripPlacement"
                                 Value="Left">
							<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
							<Setter TargetName="Bd" Property="Margin" Value="0,0,-1,0"/>


						</Trigger>
						<Trigger Property="TabStripPlacement"
                                 Value="Right">
							<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
							<Setter TargetName="Bd" Property="Margin" Value="-1,0,0,0"/>

						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="true"/>
								<Condition Property="TabStripPlacement"
                                           Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
							<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="true"/>
								<Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
							<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="true"/>
								<Condition Property="TabStripPlacement"
                                           Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
							<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
                                           Value="true"/>
								<Condition Property="TabStripPlacement"
                                           Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin"
                                    Value="-1,0,0,0"/>
							<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
						</MultiTrigger>


					</ControlTemplate.Triggers>
				</ControlTemplate>
			

	<ControlTemplate TargetType="{x:Type TabItem}" x:Key="OrangeTabItemTemplate">		
			<Grid Name="grid" Margin="1,3,0,0" SnapsToDevicePixels="true">			
            <Border Height="23" Name="Bd" Margin="0,2,0,0"
                    Background="{StaticResource MainTabItemBackground.Orange}">
                <!--<Border.Background>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}},Path=Background}" Geometry="F1 M 349.121,51.1027C 343.715,51.1027 341.779,54.7747 339.332,60.892L 328.499,93.9333L 490.031,93.9333L 490.031,51.4774C 489.185,51.24 488.297,51.1027 487.379,51.1027L 349.121,51.1027 Z ">                                        
                                    </GeometryDrawing>
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Border.Background>--> 
                <Grid Margin="1,2,2,0"  ClipToBounds="True">
					

					<Border  Name="MainButton"                     
                      Margin="3">

						<ContentPresenter Name="Content" Margin="2,0,2,0"
                                              ContentSource="Header" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>



					</Border>

					
				</Grid>
			</Border>
		</Grid>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="false"/>
					<Condition Property="IsMouseOver"
                                           Value="true"/>
				</MultiTrigger.Conditions>
                
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemHoverBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="True"/>
					<Condition Property="IsMouseOver" 
                                          Value="false"/>

				</MultiTrigger.Conditions>
				<Setter Property="Panel.ZIndex"
                                    Value="1"/>
                
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemSelectedBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</MultiTrigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>
               
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemSelectedHoverBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</MultiTrigger>

			<Trigger Property="TabStripPlacement"
                                 Value="Bottom">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="0,-1,0,0"/>
				
			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Left">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="0,0,-1,0"/>
				<Setter TargetName="grid" Property="Margin" Value="1,0,0,0"/>


			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Right">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="-1,0,0,0"/>	

			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Top"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="2,0,0,-4"/>

			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Left"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Right"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
			</MultiTrigger>


		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type TabItem}" x:Key="OrangeBottomTabItemTemplate">
		<Grid Name="grid" Margin="0,0,0,0" SnapsToDevicePixels="true">
            <Border Height="23" Name="Bd" Margin="0,-1,0,0" BorderThickness="1,0,1,1"
                    Background="{StaticResource BottomTabItemBackground.Orange}">
                <!--<Border.Background>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}},Path=Background}" Geometry="F1 M 327.167,79.7707L 338,112.812C 340.445,118.931 342.381,122.601 347.788,122.601L 486.045,122.601C 486.965,122.601 487.853,122.465 488.697,122.225L 488.697,79.7707L 327.167,79.7707 Z ">
                                       
                                    </GeometryDrawing>
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Border.Background>-->

                <Grid Margin="0,2,0,0"  ClipToBounds="True">


					<Border  Name="MainButton"                     
                      Margin="3">

						<ContentPresenter Name="Content" Margin="2,0,2,0"
                                              ContentSource="Header" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="Arial"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              RecognizesAccessKey="True"/>



					</Border>


				</Grid>
			</Border>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
                                 Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="false"/>
					<Condition Property="IsMouseOver"
                                           Value="true"/>
				</MultiTrigger.Conditions>
				
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemBottomHoverBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>


			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="True"/>
					<Condition Property="IsMouseOver" 
                                          Value="false"/>

				</MultiTrigger.Conditions>
				<Setter Property="Panel.ZIndex"
                                    Value="1"/>
				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemBottomSelectedBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>
				

			</MultiTrigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True"/>
					<Condition Property="IsMouseOver" Value="True"/>
				</MultiTrigger.Conditions>

				<Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemBottomSelectedHoverBrush.Orange}"/>
				<Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrushes.Orange}"/>

			</MultiTrigger>

			<Trigger Property="TabStripPlacement"
                                 Value="Bottom">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="0,-1,0,0"/>

			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Left">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="0,0,-1,0"/>


			</Trigger>
			<Trigger Property="TabStripPlacement"
                                 Value="Right">
				<Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
				<Setter TargetName="Bd" Property="Margin" Value="-1,0,0,0"/>

			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Top"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
				<Setter TargetName="grid" Property="Margin" Value="1,-2,0,0"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Left"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
			</MultiTrigger>
			
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
                                           Value="true"/>
					<Condition Property="TabStripPlacement"
                                           Value="Right"/>
				</MultiTrigger.Conditions>
				<Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
				<Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
			</MultiTrigger>


		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- Slider -->

	
	

	<Style x:Key="OrangeSliderRepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="IsTabStop"
                Value="false"/>
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
   
	
	<Style x:Key="OrangeHorizontalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="22"/>
		<Setter Property="Width"
                Value="13"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">

						<Ellipse Name="Background" StrokeEndLineCap="Round" Height="22" Width="13" Fill="{StaticResource HorizontalSliderThumbBrush.Orange}"/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalHoverSliderThumbBrush.Orange}"/>					

						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalPressedSliderThumbBrush.Orange}"/>							
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeHorizontalSliderUpThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="18"/>
		<Setter Property="Width"
                Value="13"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						
						<Ellipse Name="Background"  Height="18" Width="13" Fill="{StaticResource HorizontalSliderThumbBrush.Orange}"/>

					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
                                 <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalHoverSliderThumbBrush.Orange}"/>
							
						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
                                 
                                 <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalPressedSliderThumbBrush.Orange}"/>
							
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeHorizontalSliderDownThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="18"/>
		<Setter Property="Width"
                Value="13"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">						

						<Ellipse Name="Background" Height="18" Width="13" Fill="{StaticResource HorizontalSliderThumbBrush.Orange}"/>

						
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalHoverSliderThumbBrush.Orange}"/>
							
						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
                                 
                                 <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HorizontalPressedSliderThumbBrush.Orange}"/>
							
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OrangeVerticalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="13"/>
		<Setter Property="Width"
                Value="22"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">						

						<Ellipse Name="Background" Height="13" Width="22" Fill="{StaticResource VerticalSliderThumbBrush.Orange}"/>

						
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalHoverSliderThumbBrush.Orange}"/>


						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalPressedSliderThumbBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeVerticalSliderLeftThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="13"/>
		<Setter Property="Width"
                Value="18"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						
						<Ellipse Name="Background" Height="13" Width="18" Fill="{StaticResource VerticalSliderThumbBrush.Orange}"/>

						
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalHoverSliderThumbBrush.Orange}"/>


						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalPressedSliderThumbBrush.Orange}"/>

						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OrangeVerticalSliderRightThumbStyle"
           TargetType="{x:Type Thumb}">
		<Setter Property="Focusable"
                Value="false"/>
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Height"
                Value="13"/>
		<Setter Property="Width"
                Value="18"/>
		<Setter Property="Foreground"
                Value="Gray"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						

						<Ellipse Name="Background" Height="13" Width="18" Fill="{StaticResource VerticalSliderThumbBrush.Orange}"/>

						
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" 
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalHoverSliderThumbBrush.Orange}"/>
							

						</Trigger>

						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource VerticalPressedSliderThumbBrush.Orange}"/>
							
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type Slider}" x:Key="OrangeHorizontalSliderTemplate">
		<Border Name="OuterBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="{StaticResource HorizontalSliderTrackBrush.Orange}"
                                     Height="4"/>
				<TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="{StaticResource HorizontalSliderTrackBrush.Orange}"
                                     Height="4"/>
				<Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="{StaticResource HorizontalSliderTrackBorderBrush.Orange}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="{StaticResource HorizontalSliderTrackBrush.Orange}"
                                    Height="4.0">
					<Canvas Margin="-6,-1">
						<Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
					</Canvas>
				</Border>
				<Track Grid.Row="1"
                                   Name="PART_Track">
					<Track.DecreaseRepeatButton>
						<RepeatButton  Style="{StaticResource OrangeSliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton  Style="{StaticResource OrangeSliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
                                           Style="{StaticResource OrangeHorizontalSliderThumbStyle}"/>
					</Track.Thumb>
				</Track>

			</Grid>
		</Border>

		<ControlTemplate.Triggers>

			<Trigger Property="TickPlacement"
                                 Value="TopLeft">
				<Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
				<Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource OrangeHorizontalSliderUpThumbStyle}"/>
				<Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,2,5,0"/>
			</Trigger>

			<Trigger Property="TickPlacement"
                                 Value="BottomRight">
				<Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
				<Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource OrangeHorizontalSliderDownThumbStyle}"/>
				<Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,0,5,2"/>
			</Trigger>
			<Trigger Property="TickPlacement"
                                 Value="Both">
				<Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
				<Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
				<Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                 Value="true">
				<Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Blue"/>
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate TargetType="{x:Type Slider}" x:Key="OrangeVerticalSliderTemplate">
		<Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="{StaticResource VerticalSliderTrackBrush.Orange}"
                                             Width="4"/>
				<TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="{StaticResource VerticalSliderTrackBrush.Orange}"
                                             Width="4"/>
				<Border Name="TrackBackground"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="{StaticResource HorizontalSliderTrackBorderBrush.Orange}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="{StaticResource VerticalSliderTrackBrush.Orange}"
                                            Width="4.0">

					<Canvas Margin="-1,-6">
						<Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
					</Canvas>
				</Border>

				<Track Grid.Column="1"
                                           Name="PART_Track">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource OrangeSliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource OrangeSliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
                                                   Style="{StaticResource OrangeVerticalSliderThumbStyle}"/>
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement"
                                         Value="TopLeft">
				<Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
				<Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource OrangeVerticalSliderLeftThumbStyle}"/>
				<Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="2,5,0,5"/>
			</Trigger>
			<Trigger Property="TickPlacement"
                                         Value="BottomRight">
				<Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
				<Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource OrangeVerticalSliderRightThumbStyle}"/>
				<Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="0,5,2,5"/>
			</Trigger>
			<Trigger Property="TickPlacement"
                                         Value="Both">
				<Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
				<Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
				<Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                                         Value="true">
				<Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Blue"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>





















</ResourceDictionary>