<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">

    <!-- Resource Dictionary -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>   

    <!-- Style for UpReapeatButton -->
    <Style x:Key="Office2007BlueScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="TopButton" Command="local:UpDown.m_upValue"/>
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow"
						Fill="{StaticResource Office2007Blue.ArrowFill}"
						Data="{StaticResource UpArrowGeometry}"
					  Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2007SilverScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="TopButton" Command="local:UpDown.m_upValue"/>
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow"
						Fill="{StaticResource Office2007Silver.ArrowFill}"
						Data="{StaticResource UpArrowGeometry}"
					  Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2007BlackScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="TopButton" Command="local:UpDown.m_upValue"/>
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow"
						Fill="{StaticResource Office2007Black.ArrowFill}"
						Data="{StaticResource UpArrowGeometry}"
					  Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlendScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="TopButton" Command="local:UpDown.m_upValue"/>
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow"
						Fill="{StaticResource Blend.ArrowFill}"
						Data="{StaticResource UpArrowGeometry}"
					  Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for DownRepeatButton -->
    <Style x:Key="Office2007BlueScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="DownButton" Command="local:UpDown.m_downValue" />
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
						Fill="{StaticResource Office2007Blue.ArrowFill}"
						Data="{StaticResource DownArrowGeometry}"
						Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2007SilverScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="DownButton" Command="local:UpDown.m_downValue" />
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
						Fill="{StaticResource Office2007Silver.ArrowFill}"
						Data="{StaticResource DownArrowGeometry}"
						Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2007BlackScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="DownButton" Command="local:UpDown.m_downValue" />
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
						Fill="{StaticResource Office2007Black.ArrowFill}"
						Data="{StaticResource DownArrowGeometry}"
						Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlendScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid FocusManager.IsFocusScope="True">
                        <Button Name="DownButton" Command="local:UpDown.m_downValue" />
                        <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                            <ContentPresenter.Content>
                                <Path Name="Arrow" 
						Fill="{StaticResource Blend.ArrowFill}"
						Data="{StaticResource DownArrowGeometry}"
						Style="{StaticResource PathStyle}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<LinearGradientBrush x:Key="Office2007.Blue.MouseOverBorderBrush" StartPoint="0,0" EndPoint="0,20" MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFE69E" Offset="0.05"/>
            <GradientStop Color="#FFFFE69E" Offset="0.07"/>
            <GradientStop Color="#FFFFE69E" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TextboxMouseOverBorderBrush" Color="#FF707070"/>
    <SolidColorBrush x:Key="TextboxMouseOverBorderBrush1" Color="#FF99C1E2"/>
    <!-- Template of UpDown control for Office2007Blue, Office2007Black, Office2007Silver, Offfice2003, Blend -->
    <ControlTemplate x:Key="Office2007BlueUpDownTemplate" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"  Style="{StaticResource Office2007BlueScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1"  Style="{StaticResource Office2007BlueScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>


                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource Office2007.Blue.MouseOverBorderBrush}"/>
            </Trigger>


        </ControlTemplate.Triggers>

    </ControlTemplate>
    <ControlTemplate x:Key="Office2003UpDownTemplate" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"  Style="{StaticResource Office2007BlueScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1"  Style="{StaticResource Office2007BlueScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>


                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource TextboxMouseOverBorderBrush1 }"/>
            </Trigger>


        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="Office2007BlackUpDownTemplate" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"  Style="{StaticResource Office2007BlackScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1"  Style="{StaticResource Office2007BlackScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>


                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource Office2007.Blue.MouseOverBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="Office2007SilverUpDownTemplate" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"  Style="{StaticResource Office2007SilverScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1"  Style="{StaticResource Office2007SilverScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>


                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource Office2007.Blue.MouseOverBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="BlendUpDownTemplate" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"  Style="{StaticResource BlendScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1"  Style="{StaticResource BlendScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>


                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>

            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource TextboxMouseOverBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

</ResourceDictionary>