<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">
    
    <!-- Resource Dictionary -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Template for RepeatButton -->
    <ControlTemplate x:Key="ScrollBarButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
			ThemeColor="Normalcolor"
			RenderMouseOver="{TemplateBinding IsMouseOver}"
			RenderPressed="{TemplateBinding IsPressed}" HasOuterBorder="False"
			Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
			SnapsToDevicePixels="True"/>
    </ControlTemplate>

    <!-- Style for UpReapeatButton -->
    <Style x:Key="ScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template" Value="{StaticResource ScrollBarButtonTemplate}" />
	</Style>
    
    <!-- Style for DownRepeatButton -->
	<Style x:Key="ScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template" Value="{StaticResource ScrollBarButtonTemplate}" />
	</Style>

    <!-- Template of UpDown control for Office2007Blue, Office2007Black, Office2007Silver, Offfice2003, Blend and Default theme -->
	<ControlTemplate x:Key="UpDownTemplate" TargetType="{x:Type local:UpDown}">
		<Border Name="UpDownBorder" FocusVisualStyle="{x:Null}"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
			<Grid ClipToBounds="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid Name="Grid1" Grid.Column="1"  Margin="{StaticResource MarginValue}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="17"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<RepeatButton Grid.Row="0"  Style="{StaticResource ScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
					<RepeatButton Grid.Row="1"  Style="{StaticResource ScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
				</Grid>
				<Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
						<StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
							<TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
						    <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
					    </StackPanel>
					</Canvas>
          <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">
                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
						</local:DigitalTextBox>
                      

                    </Grid>
				</Grid>
			</Grid>
		</Border>

		<ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">
              
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>					
					<Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
					<Condition Property="IsFocused" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>					
					<Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
					<Condition Property="IsFocused" Value="True" />
				</MultiTrigger.Conditions>
				<Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>					
					<Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
					<Condition Property="IsFocused" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>					
					<Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
					<Condition Property="IsFocused" Value="True" />
				</MultiTrigger.Conditions>
				<Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
				<Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
			</MultiTrigger>
			<Trigger Property="IsValueNegative" Value="True">
				<Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
			</Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="CursorVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
            </MultiTrigger>
           
            <Trigger Property="CursorVisible" Value="False" >
                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
		
	</ControlTemplate>    

    <!-- Style for DomainUpDown -->
	<Style TargetType="{x:Type local:DomainUpDown}">
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="30"/>
		<Setter Property="BorderBrush" Value="#7F9DB9"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:DomainUpDown}">
					<Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<Grid ClipToBounds="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="17"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<RepeatButton Grid.Column="1"  Grid.Row="0" Style="{StaticResource ScrollBarButtonUp}"
															Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
															Command="local:DomainUpDown.m_upValue"/>
								<RepeatButton Grid.Column="1" Grid.Row="1" Style="{StaticResource ScrollBarButtonDown}"
															Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
															Command="local:DomainUpDown.m_downValue"/>
							</Grid>
							<Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
								<StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
									<TextBox Name="FirstBlock" HorizontalAlignment="Right" BorderThickness="0" Cursor="None" IsReadOnly="True">

									</TextBox>
									<TextBox Name="SecondBlock" HorizontalAlignment="Right" BorderThickness="0" Cursor="None" IsReadOnly="True">

									</TextBox>
								</StackPanel>
							</Canvas>
							<Border Grid.Column="0" Grid.Row="1" ClipToBounds="True">
								<TextBox Name="TextBox" Cursor="IBeam" HorizontalAlignment="Right" BorderThickness="0"
											Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}">
								</TextBox>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
