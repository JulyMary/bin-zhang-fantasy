<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">

    <!-- Resource Dictionary -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>    

    <!-- Style for UpReapeatButton -->
    <Style x:Key="ShinyRedScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Border" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" CornerRadius="2,2,2,2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" BorderThickness="2"/>
                        <Rectangle x:Name="BackgroundAnimation"
                             Opacity="0"
                             Fill="{StaticResource HighlightBrushKey.ShinyRed}"
                             Stroke="{x:Null}"
                             StrokeThickness="0"
                             RadiusX="1"
                             RadiusY="1"
                             Margin="2,2,2,2" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" >
                            <ContentPresenter.Content>
                                <Grid>
                                    <Path x:Name="DecreaseArrow" Margin="2" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" Fill="#FFFFFFFF"/>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#777" TargetName="Border"/>
                        </Trigger>                       
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShinyBlueScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Border" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" CornerRadius="2,2,2,2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" BorderThickness="2"/>
                        <Rectangle x:Name="BackgroundAnimation"
                             Opacity="0"
                             Fill="{StaticResource HighlightBrushKey.ShinyBlue}"
                             Stroke="{x:Null}"
                             StrokeThickness="0"
                             RadiusX="1"
                             RadiusY="1"
                             Margin="2,2,2,2" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" >
                            <ContentPresenter.Content>
                                <Grid>
                                    <Path x:Name="DecreaseArrow" Margin="2" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" Fill="#FFFFFFFF"/>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#777" TargetName="Border"/>
                        </Trigger>                       
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for DownRepeatButton -->
    <Style x:Key="ShinyRedScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Border" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" CornerRadius="2,2,2,2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" BorderThickness="2"/>
                        <Rectangle x:Name="BackgroundAnimation"
                             Opacity="0"
                             Fill="{StaticResource HighlightBrushKey.ShinyRed}"
                             Stroke="{x:Null}"
                             StrokeThickness="0"
                             RadiusX="1"
                             RadiusY="1"
                             Margin="2,2,2,2" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" >
                            <ContentPresenter.Content>
                                <Grid>
                                    <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FFFFFFFF"/>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#777" TargetName="Border"/>
                        </Trigger>                       
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShinyBlueScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Border" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" CornerRadius="2,2,2,2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" BorderThickness="2"/>
                        <Rectangle x:Name="BackgroundAnimation"
                             Opacity="0"
                             Fill="{StaticResource HighlightBrushKey.ShinyBlue}"
                             Stroke="{x:Null}"
                             StrokeThickness="0"
                             RadiusX="1"
                             RadiusY="1"
                             Margin="2,2,2,2" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" >
                            <ContentPresenter.Content>
                                <Grid>
                                    <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FFFFFFFF"/>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#777" TargetName="Border"/>
                        </Trigger>                       
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template of UpDown control for ShinyRed theme -->
    <ControlTemplate x:Key="UpDownTemplate.ShinyRed" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" CornerRadius="2"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0" Style="{StaticResource ShinyRedScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1" Style="{StaticResource ShinyRedScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">

                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger SourceName="UpDownBorder" Property="IsMouseOver" Value="True">
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="UpDownBorder" Property="IsMouseOver" Value="True"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>                    
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="UpDownTemplate.ShinyBlue" TargetType="{x:Type local:UpDown}">
        <Border Name="UpDownBorder" CornerRadius="2"
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
				TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
	            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Name="Grid1" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0" Style="{StaticResource ShinyBlueScrollBarButtonUp}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
											Command="local:UpDown.m_upValue"/>
                    <RepeatButton Grid.Row="1" Style="{StaticResource ShinyBlueScrollBarButtonDown}"
											Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
											Command="local:UpDown.m_downValue"/>
                </Grid>
                <Grid Name="Grid2" Margin="0,0,-1,0" VerticalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Column="0" Grid.Row="1" ClipToBounds="True">
                        <StackPanel Canvas.Top="{TemplateBinding AnimationShift}" Canvas.Right="0">
                            <TextBlock Name="FirstBlock" HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <TextBlock Name="SecondBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                        </StackPanel>
                    </Canvas>
                    <Grid Margin="1" Grid.Column="0" Grid.Row="1" ClipToBounds="True" VerticalAlignment="Center">

                        <Border Name="PART_Selection" Opacity="0.5"
                                Background="{Binding Path=SelectionBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" Visibility="Collapsed" HorizontalAlignment="Right"/>
                        <Border x:Name="PART_Cursor" HorizontalAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Opacity="0"   Focusable="False" Margin="{Binding Path=CursorPosition, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Width="{Binding Path=CursorWidth, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderBrush="{Binding Path=CursorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}" 
                                BorderThickness="{Binding Path=CursorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"
                                Background="{Binding Path=CursorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}},Mode=TwoWay}"/>
                        <local:DigitalTextBox Margin="0,0,1,0" FocusVisualStyle="{x:Null}"  
						    Name="DigitalBox"                            
						    Cursor="IBeam"  
						    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
						    CursorTemplate="{Binding CursorTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </local:DigitalTextBox>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=PART_Cursor,Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" To="1" Duration="0:0:.5" BeginTime="0:0:0" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <DoubleAnimation Storyboard.TargetName="PART_Cursor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="IsFocused" SourceName="DigitalBox" Value="True">

                <Setter TargetName="PART_Cursor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger SourceName="UpDownBorder" Property="IsMouseOver" Value="True">
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="UpDownBorder" Property="IsMouseOver" Value="True"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" SourceName="DigitalBox" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=FocusedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=FocusedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </MultiTrigger>
            <Trigger Property="IsValueNegative" Value="True">
                <Setter TargetName="UpDownBorder" Property="TextBlock.Foreground" Value="{Binding Path=NegativeForeground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="Background" Value="{Binding Path=NegativeBackground, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
                <Setter TargetName="UpDownBorder" Property="BorderBrush" Value="{Binding Path=NegativeBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

</ResourceDictionary>