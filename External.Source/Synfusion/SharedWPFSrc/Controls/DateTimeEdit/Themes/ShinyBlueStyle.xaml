<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"                    
                    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls"
                    xmlns:vsm="clr-namespace:Syncfusion.Windows"
					xmlns:Sync_Resources="clr-namespace:Syncfusion.Windows.Shared.Resources"
                    xmlns:Syncfusion_Windows_Controls="clr-namespace:Syncfusion.Windows.Controls"
                    xmlns:Syncfusion_Windows_Controls_Primitives="clr-namespace:Syncfusion.Windows.Controls.Primitives">
	<Sync_Resources:ResourceWrapper x:Key="ResourceWrapperKey"/>
	
    <LinearGradientBrush x:Key="TextBoxBackgroundBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <!--<GradientStop Color="#FFD1D4D6" Offset="0" />-->
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFFFFFFF" Offset="0.1" />
        <GradientStop Color="#FFFFFFFF" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TextBoxForegroundBrushKey.ShinyBlue" Color="#FFFFFFFF"/>
    <!--<LinearGradientBrush x:Key="TextBoxBorderBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FF000000" Offset="1" />
    </LinearGradientBrush>-->

    <LinearGradientBrush x:Key="TextBoxBorderBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FFBBBBBB" Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="TextBoxMouseOverBorderBrush.ShinyBlue" Color="#FFDCDCDC"/>
    <SolidColorBrush x:Key="TextBoxFocusedBorderBrush.ShinyBlue" Color="#FFEBE8E8"/>
    
    <SolidColorBrush x:Key="TextBoxFocusedBackground.ShinyBlue" Color="White"/>
    
    <LinearGradientBrush x:Key="ButtonBackgroundBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF398FDF" Offset="0" />
        <!--<GradientStop Color="#FFBAE4FF" Offset="0" />-->
        <GradientStop Color="#FF398FDF" Offset="0.41800001263618469" />
        <GradientStop Color="#FF006DD4" Offset="0.418" />
        <GradientStop Color="#FF0A3E69" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBorderBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
       
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="HighlightBrushKey.ShinyBlue">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.804" ScaleY="0.743" />
                <SkewTransform CenterX="0.5" CenterY="0.5" />
                <RotateTransform CenterX="0.5" CenterY="0.5" />
                <TranslateTransform Y="0.47999998927116394" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FF98DAFF" Offset="0.209" />
        <GradientStop Color="#0098DAFF" Offset="1" />
        <GradientStop Color="#FFFFFFFF" Offset="0" />
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="DisabledBackgroundBrushKey.ShinyBlue"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" />
        <GradientStop Color="#FF62676A"
                  Offset="1" />
        <GradientStop Color="#FFD1D4D6"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFA9AFB5"
                  Offset="0.425" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledTextBrushKey.ShinyBlue" Color="#FF636363"/>

    <SolidColorBrush x:Key="DisabledBorderBrushKey.ShinyBlue" Color="#AAA"/>

    <LinearGradientBrush x:Key="DefaultedBorderBrushKey.ShinyBlue" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0"/>
        <GradientStop Color="#000" Offset="1.0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DefaultTextBrushKey.ShinyRed" Color="#FF000000"/>

    <SolidColorBrush x:Key="ButtonForegroundBrushKey.ShinyRed" Color="#FFFFFFFF"/>

	 <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">

                    <!--<ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>-->

                    <Grid x:Name="Grid">
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                            <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="0" Opacity="0"/>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Name="content"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        <!--<Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0" Opacity="0"/>-->
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Background" Value="{StaticResource DefaultedBorderBrushKey.ShinyRed}"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrushKey.ShinyBlue}" TargetName="Background"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrushKey.ShinyBlue}" TargetName="Background"/>
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource DisabledTextBrushKey.ShinyBlue}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>

    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">

        <!--<ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>-->

        <Grid x:Name="Grid">
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="0" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Name="content"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
            <!--<Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0" Opacity="0"/>-->
        </Grid>

        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Background" Value="{StaticResource DefaultedBorderBrushKey.ShinyRed}"/>
                        </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrushKey.ShinyBlue}" TargetName="Background"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrushKey.ShinyBlue}" TargetName="Background"/>
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource DisabledTextBrushKey.ShinyBlue}"/>
                        </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ButtonForegroundBrushKey.ShinyRed}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}"/>
    </Style>
    
    <Style x:Key="RepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ButtonForegroundBrushKey.ShinyRed}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}"/>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <SolidColorBrush x:Key="GlyphBrushKey" Color="#FFFFFFFF"/>



    <Style x:Key="CalendarItemStyle1" TargetType="{x:Type Syncfusion_Windows_Controls_Primitives:CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Syncfusion_Windows_Controls_Primitives:CalendarItem}">
                    <ControlTemplate.Resources>
                        <!-- Start: Data template for header button -->
                        <DataTemplate x:Key="DayTitleTemplate">
                            <TextBlock
    							FontWeight="Bold" 
    							FontFamily="Verdana" 
    							FontSize="9.5" 
    							Foreground="#FF333333" 
    							HorizontalAlignment="Center"
    							Text="{Binding}"
    							Margin="0,6,0,6"
    							VerticalAlignment="Center"/>
                        </DataTemplate>
                        <!-- End: Data template for header button -->
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root" >
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>

                        <Border 
    						BorderBrush="{TemplateBinding BorderBrush}" 
    						BorderThickness="{TemplateBinding BorderThickness}" 
    						CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC0C1C1" Offset="0"/>
                                    <GradientStop Color="#FFD3D5D7" Offset="0.018"/>
                                    <GradientStop Color="White" Offset="0.2"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Border CornerRadius="1" BorderBrush="#FFFFFFFF" BorderThickness="2">

                                <Grid>

                                    <Grid.Resources>
                                        <!-- Start: Previous button template -->
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <Rectangle Stretch="Fill" Opacity="1" StrokeThickness="2" RadiusX="4" RadiusY="4">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFA5CAE6" Offset="0"/>
                                                            <GradientStop Color="#FF9ED1F8" Offset="0.029"/>
                                                            <GradientStop Color="#FF4B99E3" Offset="0.353"/>
                                                            <GradientStop Color="#FF0168C7" Offset="0.5"/>
                                                            <GradientStop Color="#FF094579" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFC2C3C4" Offset="0"/>
                                                            <GradientStop Color="#FFADADAD" Offset="0.556"/>
                                                            <GradientStop Color="#FFC3ABAC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Grid>
                                                    <Path Margin="0,0,0,0" Height="10" Width="6" VerticalAlignment="Center" HorizontalAlignment="Center" 
													Stretch="Fill" Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
                                                        <Path.Fill>
                                                            <SolidColorBrush x:Name="TextColor" Color="#FFFFFFFF" />
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>

                                        <!-- End: Previous button template -->

                                        <!-- Start: Next button template -->
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <Rectangle Stretch="Fill" Opacity="1" StrokeThickness="2" RadiusX="4" RadiusY="4">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFA5CAE6" Offset="0"/>
                                                            <GradientStop Color="#FF9ED1F8" Offset="0.029"/>
                                                            <GradientStop Color="#FF4B99E3" Offset="0.353"/>
                                                            <GradientStop Color="#FF0168C7" Offset="0.5"/>
                                                            <GradientStop Color="#FF094579" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFC2C3C4" Offset="0"/>
                                                            <GradientStop Color="#FFADADAD" Offset="0.556"/>
                                                            <GradientStop Color="#FFC3ABAC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>

                                                <Grid>
                                                    <Path Margin="0,0,0,0" Height="10" Width="6" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill" Data="M282.875,231.875 L282.875,240.375 L288.625,236 z">
                                                        <Path.Fill>
                                                            <SolidColorBrush x:Name="TextColor" Color="#FFFFFFFF" />
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>

                                        <!-- End: Next button template -->

                                        <!-- Start: Header button template -->
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualState x:Name="Normal" />
                                                        <vsm:VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color" To="#FF73A9D8" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                        <vsm:VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="buttonContent" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                                            </Storyboard>
                                                        </vsm:VisualState>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <ContentPresenter 
    												x:Name="buttonContent"
    												ContentTemplate="{TemplateBinding ContentTemplate}"
    												
    												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    												VerticalAlignment="Top">
                                                    <ContentPresenter.Content>
                                                        <Border BorderThickness="2" CornerRadius="4">
                                                            <Border.BorderBrush>
                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                    <GradientStop Color="#FFC2C3C4" Offset="0"/>
                                                                    <GradientStop Color="#FFADADAD" Offset="0.556"/>
                                                                    <GradientStop Color="#FFC3ABAC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.BorderBrush>
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                    <GradientStop Color="#FFA5CAE6" Offset="0"/>
                                                                    <GradientStop Color="#FF9ED1F8" Offset="0.029"/>
                                                                    <GradientStop Color="#FF4B99E3" Offset="0.353"/>
                                                                    <GradientStop Color="#FF0168C7" Offset="0.5"/>
                                                                    <GradientStop Color="#FF094579" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Label Content="{TemplateBinding Content}" Foreground="White" VerticalAlignment="Top" Margin="0">

                                                            </Label>
                                                        </Border>
                                                    </ContentPresenter.Content>

                                                    <TextElement.Foreground>
                                                        <SolidColorBrush x:Name="TextColor" Color="#FF333333"/>
                                                    </TextElement.Foreground>
                                                </ContentPresenter>
                                            </Grid>
                                        </ControlTemplate>

                                        <!-- End: Header button template -->
                                    </Grid.Resources>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Start: Previous button content -->
                                    <Button x:Name="PART_PreviousButton" 
    									Grid.Row="0" Grid.Column="0"
    									Template="{StaticResource PreviousButtonTemplate}" 
    									Height="25" Width="28" 
    									HorizontalAlignment="Left" 
    									Focusable="False"
                                            />
                                    <!-- End: Previous button content -->

                                    <!-- Start: Header button content -->
                                    <Button x:Name="PART_HeaderButton"                                           
    									Grid.Row="0" Grid.Column="1"  Height="25"
    									Template="{StaticResource HeaderButtonTemplate}" 
    									HorizontalAlignment="Center" VerticalAlignment="Center" 
    									FontWeight="Bold" FontSize="10.5" 
    									Focusable="False"/>
                                    <!-- End: Header button content -->

                                    <!-- Start: Next button content -->
                                    <Button x:Name="PART_NextButton" 
    									Grid.Row="0" Grid.Column="2" 
    									Height="25" Width="28" 
    									HorizontalAlignment="Right" 
    									Template="{StaticResource NextButtonTemplate}" 
    									Focusable="False"
                                            />
                                    <!-- End: Next button content -->

                                    <!-- Start: Month Content Grid -->
                                    <Grid x:Name="PART_MonthView" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Visible" Margin="6,-1,6,6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                    <!-- End: Month Content Grid -->

                                    <!-- End: Year Content Grid -->
                                    <Grid x:Name="PART_YearView" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Hidden" Margin="6,-3,7,6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                    <!-- End: Year Content Grid -->
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" Stretch="Fill" StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource DisabledColor}" Fill="{StaticResource DisabledColor}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Value="Year">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Syncfusion_Windows_Controls:Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Decade">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Syncfusion_Windows_Controls:Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--CalendarDayButton-->
    <Style x:Key="CalendarDayButtonStyle" TargetType="Syncfusion_Windows_Controls_Primitives:CalendarDayButton">
        <Setter Property="Background" Value="#FFBADDE9"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Syncfusion_Windows_Controls_Primitives:CalendarDayButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unselected" />
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ActiveStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Active" />
                                <vsm:VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FF777777"></ColorAnimation>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="DayStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="RegularDay" />
                                <vsm:VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FFFFFFFF"></ColorAnimation>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="BlackoutDayStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="NormalDay" />
                                <vsm:VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="TodayBackground" RadiusX="2" RadiusY="2" Opacity="0" Stroke="#FF8C8C8C" StrokeThickness="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFEEEFF0" Offset="0"/>
                                    <GradientStop Color="#FFD7DADB" Offset="0.48"/>
                                    <GradientStop Color="#FF6F7477" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>


                        <Rectangle x:Name="SelectedBackground" RadiusX="2" RadiusY="2" Opacity="0" Stroke="#FF8C8C8C" StrokeThickness="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFA5CAE6" Offset="0"/>
                                    <GradientStop Color="#FF9ED1F8" Offset="0.029"/>
                                    <GradientStop Color="#FF4B99E3" Offset="0.353"/>
                                    <GradientStop Color="#FF0168C7" Offset="0.5"/>
                                    <GradientStop Color="#FF094579" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Opacity="0" Stroke="#FF8C8C8C" StrokeThickness="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFB7DCF9" Offset="0"/>
                                    <GradientStop Color="#FF76B2E9" Offset="0.351"/>
                                    <GradientStop Color="#FF4592D9" Offset="0.463"/>
                                    <GradientStop Color="#FF45749C" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                                x:Name="NormalText"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="5,1,5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FF333333"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Fill="#FF000000" Stretch="Fill" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"/>
                        <Rectangle x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" RadiusX="2" 
						RadiusY="2" Stroke="#FF8C8C8C" StrokeThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Calendar Button-->
    <Style x:Key="CalendarButtonStyle" TargetType="Syncfusion_Windows_Controls_Primitives:CalendarButton">
        <Setter Property="Background" Value="#FFBADDE9"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="42"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Syncfusion_Windows_Controls_Primitives:CalendarButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unselected" />
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ActiveStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Active" />
                                <vsm:VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FF777777"></ColorAnimation>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="SelectedBackground" RadiusX="2" RadiusY="2" Opacity="0" Stroke="#FF8C8C8C" StrokeThickness="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFA5CAE6" Offset="0"/>
                                    <GradientStop Color="#FF9ED1F8" Offset="0.029"/>
                                    <GradientStop Color="#FF4B99E3" Offset="0.353"/>
                                    <GradientStop Color="#FF0168C7" Offset="0.5"/>
                                    <GradientStop Color="#FF094579" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Opacity="0" Stroke="#FF8C8C8C" StrokeThickness="2">
                            <Rectangle.Fill>

                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFB7DCF9" Offset="0"/>
                                    <GradientStop Color="#FF76B2E9" Offset="0.351"/>
                                    <GradientStop Color="#FF4592D9" Offset="0.463"/>
                                    <GradientStop Color="#FF45749C" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ContentPresenter
                                x:Name="NormalText"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="1,0,1,1">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FF333333"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle x:Name="CalendarButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" RadiusX="2" RadiusY="2" StrokeThickness="2" Stroke="#FF8C8C8C"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Calendar-->
    <Style x:Key="ShinyBlueCalendarStyle" TargetType="Syncfusion_Windows_Controls:Calendar">
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}"/>
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle1}"/>
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FFE4EAF0" Offset="0"/>
                    <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                    <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Syncfusion_Windows_Controls:Calendar">
                    <StackPanel Name="PART_Root" HorizontalAlignment="Center">
                        <Syncfusion_Windows_Controls_Primitives:CalendarItem 
                            x:Name="PART_CalendarItem" 
                            Style="{DynamicResource CalendarItemStyle1}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"                            
                            />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ShinyBlueCalendarStyle}" TargetType="Syncfusion_Windows_Controls:Calendar"/>



    <Style x:Key="ShinyBlueDateTimeEditStyle" TargetType="{x:Type sfshared:DateTimeEdit}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrushKey.ShinyBlue}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushKey.ShinyBlue}"/>
        <Setter Property="RepeatButtonBackground" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
        <Setter Property="RepeatButtonBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
		
		<Setter Property="DropDownButtonTemplate" Value="{StaticResource ToggleButtonTemplate}"/>
		<Setter Property="UpRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate}"/>
		<Setter Property="DownRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate}"/>
        <Setter Property="CalendarStyle" Value="{StaticResource ShinyBlueCalendarStyle}"/>
        <Setter Property="Foreground" Value="Black"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sfshared:DateTimeEdit}">
                    <Grid>
                <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="0"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}"/>

                                <ContentControl  x:Name="PART_EmptyContent" 
                        Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding NoneDateText}"
                        IsTabStop="False" IsHitTestVisible="False" 
                        FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                        Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" 
                        Foreground="{TemplateBinding Foreground}"
                        Opacity="0.5"/>

                                <!--Style="{StaticResource BrushEditToggleButtonStyle1}"-->
                                <!--Template="{TemplateBinding DropDownButtonTemplate}" -->

                                <ToggleButton x:Name="PART_DropDown" Grid.Column="2" BorderThickness="1" Padding="1"  IsTabStop="False"
                                Template="{TemplateBinding DropDownButtonTemplate}"
                                Style="{StaticResource ToggleButtonStyle}" 
                                                BorderBrush="Black"  Width="20" HorizontalAlignment="Stretch" 
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsButtonPopUpEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ToggleButton.Content>
                                        <Path Stretch="Uniform" Fill="{StaticResource GlyphBrushKey}" Height="5" Width="8" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " HorizontalAlignment="Center" VerticalAlignment="Center">
                                        </Path>
                                    </ToggleButton.Content>
                                </ToggleButton>

                                <Grid Grid.Column="3">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5*"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>

                                    <!--Template="{TemplateBinding UpRepeatButtonTemplate}"-->
                                    <RepeatButton x:Name="PART_UpArrow"    IsTabStop="False"       
Template="{TemplateBinding UpRepeatButtonTemplate}"									
                                                BorderThickness="{TemplateBinding RepeatButtonBorderThickness}" 
                                                Margin="{TemplateBinding UpRepeatButtonMargin}"
                                                BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" 
                                                Background="{TemplateBinding RepeatButtonBackground}"
                                                  Style="{StaticResource RepeatButtonStyle}"
                                                          IsEnabled="{TemplateBinding IsEnabledRepeatButton}"                                                          
                                                    Grid.Row="0" Grid.Column="1"  Width="25" Padding="1"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsVisibleRepeatButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <RepeatButton.Content>
                                            <Path Stretch="Uniform" Height="5" Width="8" Fill="{StaticResource GlyphBrushKey}" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " HorizontalAlignment="Center" VerticalAlignment="Center">
                                            </Path>
                                        </RepeatButton.Content>
                                    </RepeatButton>

                                    <!--Template="{TemplateBinding DownRepeatButtonTemplate}"-->
                                    <RepeatButton x:Name="PART_DownArrow"  IsTabStop="False"
                                    Template="{TemplateBinding DownRepeatButtonTemplate}"			
                                                BorderThickness="{TemplateBinding RepeatButtonBorderThickness}" 
                                                Margin="{TemplateBinding DownRepeatButtonMargin}"
                                                BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" 
                                                Background="{TemplateBinding RepeatButtonBackground}"
                                                  Style="{StaticResource RepeatButtonStyle}"
                                                  
                                                      IsEnabled="{TemplateBinding IsEnabledRepeatButton}"
                                                      
                                                    Grid.Row="1" Grid.Column="1"  Width="25" Padding="1"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsVisibleRepeatButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <RepeatButton.Content>
                                            <Path Stretch="Uniform" Fill="{StaticResource GlyphBrushKey}" Height="5" Width="8" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " HorizontalAlignment="Center" VerticalAlignment="Center">
                                            </Path>
                                        </RepeatButton.Content>
                                    </RepeatButton>

                                </Grid>

                                <Popup x:Name="PART_Popup" Grid.Row="1" IsOpen="False" StaysOpen="False">
								<Grid Background="Transparent">
                                    <Grid x:Name="PART_PopupGrid" Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*"/>
                                            <ColumnDefinition Width="5*"/>
                                            <ColumnDefinition Width="5*"/>
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessCalendarText}" Style="{StaticResource ToggleButtonStyle}" Width="60" FontSize="12"  Grid.Row="0" Grid.Column="0" x:Name="Button_Calender" Margin="0,0,0,0"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCalendarEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <ToggleButton Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessClockText}" Style="{StaticResource ToggleButtonStyle}" Width="60" FontSize="12" Grid.Row="0" Grid.Column="1" x:Name="Button_Clock" Margin="0,0,0,0" 
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsWatchEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <ToggleButton Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessEmptyDateText}" Style="{StaticResource ToggleButtonStyle}" Width="60" FontSize="12" Grid.Row="0" Grid.Column="2" x:Name="Button_NoDate"  Margin="0,0,0,0"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEmptyDateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>



                                        <Popup x:Name="PART_CalenderPopup" IsOpen="False" StaysOpen="False" Grid.ColumnSpan="3" Grid.Row="1">
                                            <StackPanel Visibility="Visible">
                                                        <Syncfusion_Windows_Controls:Calendar  x:Name="Calendar" Margin="0,-4,0,0"  Style="{TemplateBinding sfshared:DateTimeEdit.CalendarStyle}"/>
                                                <ToggleButton x:Name="Button_Today" Style="{StaticResource ToggleButtonStyle}" BorderBrush="Black" Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=TodayLabel}" Margin="0,-4,0,0"/>
                                            </StackPanel>
                                        </Popup>

                                        <Popup x:Name="PART_WatchPopup" IsOpen="False" Grid.ColumnSpan="3" Grid.Row="1" StaysOpen="False">
                                            <sfshared:Clock x:Name="Clock"/>
                                        </Popup>

                                    </Grid>
									
									<Grid x:Name="PART_PopupGrid_Classic" Background="Transparent">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="5*"/>
                                                    <ColumnDefinition Width="5*"/>
                                                </Grid.ColumnDefinitions>

                                                <Syncfusion_Windows_Controls:Calendar x:Name="Calendar_Classic" Margin="0,-2.5,0,0" Grid.ColumnSpan="2"  Style="{TemplateBinding sfshared:DateTimeEdit.CalendarStyle}"/>

                                                <ToggleButton x:Name="Button_Today_Classic" Style="{StaticResource ToggleButtonStyle}" Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=TodayLabel}" Margin="0,-4,0,0" 
                                                          FontSize="12" Grid.Column="0" Grid.Row="1"/>
                                                <ToggleButton Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessEmptyDateText}" Style="{StaticResource ToggleButtonStyle}" FontSize="12" x:Name="Button_NoDate_Classic"  Margin="0,-4,0,0"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEmptyDateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    Grid.Row="1" Grid.Column="1" />

                                            </Grid>
					</Grid>
                                </Popup>

                            </Grid>
                            <!--</Microsoft_Windows_Themes:ListBoxChrome>-->
                        </Grid>
                    </Border>

                        
                        <Border x:Name="MouseOverBorder" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource TextBoxMouseOverBorderBrush.ShinyBlue}"/>
                        <Border x:Name="FocusBorder" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource TextBoxFocusedBorderBrush.ShinyBlue}"/>
                        
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxFocusedBackground.ShinyBlue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                
</ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EnableCombinedStyle" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type sfshared:DateTimeEdit}">
                            <Grid>
                                <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="0"/>
                                            </Grid.RowDefinitions>

                                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}"/>

                                            <ContentControl  x:Name="PART_EmptyContent" 
                        Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding NoneDateText}"
                        IsTabStop="False" IsHitTestVisible="False" 
                        FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                        Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" 
                        Foreground="{TemplateBinding Foreground}"
                        Opacity="0.5"/>

                                            <ToggleButton x:Name="PART_DropDown" IsTabStop="False" Grid.Column="2" BorderThickness="1" Padding="1" Template="{TemplateBinding DropDownButtonTemplate}" Style="{StaticResource ToggleButtonStyle}"
                                                BorderBrush="Black"  Width="20" HorizontalAlignment="Stretch"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsButtonPopUpEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ToggleButton.Content>
                                                    <Path Stretch="Uniform" Fill="Transparent"  Height="5" Width="8" Data="M 1,0 L 4.5,5 L 8,0 " HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="White" StrokeThickness="2">
                                                    </Path>
                                                </ToggleButton.Content>
                                            </ToggleButton>

                                            <Grid Grid.Column="3">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="5*"/>
                                                    <RowDefinition Height="5*"/>
                                                </Grid.RowDefinitions>

                                                <RepeatButton x:Name="PART_UpArrow" IsTabStop="False" Template="{TemplateBinding UpRepeatButtonTemplate}"
                                                Style="{StaticResource RepeatButtonStyle}"
                                                BorderThickness="0.5" 
                                                Margin="{TemplateBinding UpRepeatButtonMargin}"
                                                BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" 
                                                Background="{TemplateBinding RepeatButtonBackground}"
                                                IsEnabled="{TemplateBinding IsEnabledRepeatButton}"
                                                Grid.Row="0" Grid.Column="1"  Width="20" Padding="1"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsVisibleRepeatButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <RepeatButton.Content>
                                                        <Path Stretch="Uniform" Height="5" Width="8" Fill="Transparent" Data="M 1,5 L 4.5,1 L 8,5" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="White" StrokeThickness="2">
                                                        </Path>

                                                    </RepeatButton.Content>
                                                </RepeatButton>

                                                <RepeatButton x:Name="PART_DownArrow" IsTabStop="False" Template="{TemplateBinding DownRepeatButtonTemplate}"
                                                  Style="{StaticResource RepeatButtonStyle}"
                                                BorderThickness="0.5" 
                                                Margin="{TemplateBinding DownRepeatButtonMargin}"
                                                BorderBrush="{TemplateBinding RepeatButtonBorderBrush}" 
                                                Background="{TemplateBinding RepeatButtonBackground}"
                                                IsEnabled="{TemplateBinding IsEnabledRepeatButton}"     
                                                Grid.Row="1" Grid.Column="1"  Width="20" Padding="1"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsVisibleRepeatButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <RepeatButton.Content>
                                                        <Path Stretch="Uniform" Height="5" Width="8" Fill="Transparent" Data="M 1,0 L 4.5,5 L 8,0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="White" StrokeThickness="2">
                                                        </Path>
                                                    </RepeatButton.Content>
                                                </RepeatButton>

                                            </Grid>

                                            <Popup x:Name="PART_Popup" Grid.Row="1" IsOpen="False" StaysOpen="False">
                                                <Grid Background="Transparent">
                                                    <Grid x:Name="PART_PopupGrid" Background="{TemplateBinding Background}">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="5*"/>
                                                            <ColumnDefinition Width="5*"/>
                                                        </Grid.ColumnDefinitions>

                                                            <Border Grid.Row="0" x:Name="CalendarBorder" Grid.Column="0" Height="190" >
                                                            <StackPanel Visibility="Visible">
                                                                    <Syncfusion_Windows_Controls:Calendar Style="{TemplateBinding sfshared:DateTimeEdit.CalendarStyle}"  x:Name="Calendar" />
                                                                    <ToggleButton x:Name="Button_Today" Style="{StaticResource ToggleButtonStyle}" Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=TodayLabel}"  FontSize="12"/>
                                                            </StackPanel>
                                                        </Border>

                                                        <Border x:Name="ClockBorder"  Grid.Row="0" Grid.Column="1" Height="190" Margin="2,2,2,2" Background="Transparent">
                                                            <sfshared:Clock x:Name="Clock" />
                                                        </Border>
                                                        </Grid>
                                                        <Grid Grid.Row="1" Margin="4,4,0,0" Background="{TemplateBinding Background}" x:Name="PART_OptionGrid" HorizontalAlignment="Center">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="70"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="50"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessCalendarText}"  Width="70" FontSize="12"  Grid.Column="0" x:Name="Button_Calender" Margin="0,0,0,2"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCalendarEnabled}"  Foreground="{StaticResource ButtonForegroundBrushKey.ShinyRed}"/>

                                                            <CheckBox Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessClockText}"  Width="50" FontSize="12" Grid.Column="1" x:Name="Button_Clock" Margin="0,0,0,2" 
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsWatchEnabled}" Foreground="{StaticResource ButtonForegroundBrushKey.ShinyRed}"/>

                                                            <ToggleButton Content="{Binding Source={StaticResource ResourceWrapperKey}, Path=AccessEmptyDateText}" Style="{StaticResource ToggleButtonStyle}" Width="50" FontSize="12" Grid.Column="2" x:Name="Button_NoDate"  Margin="0,0,2,4"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEmptyDateEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </Popup>

                                        </Grid>
                                    </Grid>
                                </Border>

                        <Border x:Name="MouseOverBorder" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource TextBoxMouseOverBorderBrush.ShinyBlue}"/>
                        <Border x:Name="FocusBorder" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource TextBoxFocusedBorderBrush.ShinyBlue}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed"/>
                                </Trigger>

                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible"/>
<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxFocusedBackground.ShinyBlue}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource ShinyBlueDateTimeEditStyle}" TargetType="{x:Type sfshared:DateTimeEdit}"/>

</ResourceDictionary>