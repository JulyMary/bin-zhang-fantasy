<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:local="clr-namespace:Syncfusion.Windows.Shared">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/ChromelessWindow/Themes/Brushes.xaml" />
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/ChromelessWindow/Themes/Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>
   
    <!--BlueTitleBarTemplate-->
    <ControlTemplate x:Key="BlueTitleBarTemplate" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"  CornerRadius="5,5,0,0" Background="{StaticResource Blue_ContentAreaBackground}" >
            <Border BorderBrush="{StaticResource Blue.TitleBarBorderBrush}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="MinimizeBlue" TargetType="{x:Type Button}" >
        <Border Name="minborder"   BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25">
           <Image Source="{StaticResource minimizeBlue}"  Width="22" Height="15" Margin="0,5,0,0"/> 
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="minborder" Property="Background" Value="{StaticResource OfficeBlueHoverBrush}"/>
                <Setter TargetName="minborder" Property="BorderBrush" Value="{StaticResource Blue.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="minborder" Property="Background" Value="{StaticResource OfficeBluePressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RestoreBlue" TargetType="{x:Type Button}">
        <Border Name="resborder"   BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25" >
         <Image Source="{StaticResource restoreBlue}"  Width="22" Height="15"/>   
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="resborder" Property="Background" Value="{StaticResource OfficeBlueHoverBrush}"/>
                <Setter TargetName="resborder" Property="BorderBrush" Value="{StaticResource Blue.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="resborder" Property="Background" Value="{StaticResource OfficeBluePressedBrush}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaximizeBlue" TargetType="{x:Type Button}">
        <Border Name="maxborder" BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25" >
         <Image Source="{StaticResource maximizeBlue}" Width="16" Height="13"/>   
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="maxborder" Property="Background" Value="{StaticResource OfficeBlueHoverBrush}"/>
                <Setter TargetName="maxborder" Property="BorderBrush" Value="{StaticResource Blue.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="maxborder" Property="Background" Value="{StaticResource OfficeBluePressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseBlue" TargetType="{x:Type Button}">
        <Border Name="closeborder" BorderThickness=".5" CornerRadius="2" Background="Transparent" Height="25" Width="25" Margin="0,2,4,0">
         <Image Source="{StaticResource closeBlue}" Width="22" Height="15"/>   
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource OfficeBlueHoverBrush}"/>
                   
                <Setter TargetName="closeborder" Property="BorderBrush" Value="{StaticResource Blue.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource OfficeBluePressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    


    <!--BlackTitleBarTemplate-->
    <ControlTemplate x:Key="BlackTitleBarTemplate" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"   CornerRadius="5,5,0,0"  Background="{StaticResource Black_ContentAreaBackground}">
            <Border BorderBrush="{StaticResource Black.TitleBarBorderBrush}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>

  
    <ControlTemplate x:Key="MinimizeBlack" TargetType="{x:Type Button}">
        <Border Name="minborder1"  BorderThickness="1" CornerRadius="2" Background="Transparent"  Height="25" Width="25"  Margin="0,2,0,0">
            <Image Source="{StaticResource minimizeblack}" Width="22" Height="15" Margin="0,5,0,0"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="minborder1" Property="Background" Value="{StaticResource BlackHoverBrush}"/>
                <Setter TargetName="minborder1" Property="BorderBrush" Value="{StaticResource Black.TriggerBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true"> 
                <Setter TargetName="minborder1" Property="Background" Value="{StaticResource BlackPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaximizeBlack" TargetType="{x:Type Button}">
        <Border Name="maxborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right" Margin="0,2,0,0">
            <Image Source="{StaticResource maximizeblack}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="maxborder1" Property="Background" Value="{StaticResource BlackHoverBrush}"/>
                <Setter TargetName="maxborder1" Property="BorderBrush" Value="{StaticResource Black.TriggerBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="maxborder1" Property="Background" Value="{StaticResource BlackPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="RestoreBlack" TargetType="{x:Type Button}">
        <Border Name="resborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right" Margin="0,2,0,0">
            <Image Source="{StaticResource restoreblack}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="resborder1" Property="Background" Value="{StaticResource BlackHoverBrush}"/>
                <Setter TargetName="resborder1" Property="BorderBrush" Value="{StaticResource Black.TriggerBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="resborder1" Property="Background" Value="{StaticResource BlackPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseBlack" TargetType="{x:Type Button}">
        <Border Name="closeborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" VerticalAlignment="Bottom" Margin="0,2,4,0">
            <Image Source="{StaticResource closeblack}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="closeborder1" Property="Background" Value="{StaticResource BlackHoverBrush}"/>                   
                <Setter TargetName="closeborder1" Property="BorderBrush" Value="{StaticResource Black.TriggerBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="closeborder1" Property="Background" Value="{StaticResource BlackPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

   
    <!--SilverTitleBarTemplate-->

    <ControlTemplate x:Key="SilverTitleBarTemplate" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"   CornerRadius="0"  Background="{StaticResource Silver_ContentAreaBackground}">
            <Border BorderBrush="{StaticResource Silver.TitleBarBorderBrush}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,0" />
            </Border>
        </Border>
    </ControlTemplate>

 
    <ControlTemplate x:Key="MinimizeSilver" TargetType="{x:Type Button}">
        <Border Name="minborder2"  BorderThickness=".5" CornerRadius="2" Background="Transparent"  Height="25" Width="25"  Margin="0,2,0,0">
            <Image Source="{StaticResource minimizesilver}" Width="22" Height="15"  Margin="0,5,0,0"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="minborder2" Property="Background" Value="{StaticResource SilverHoverBrush}"/>
                <Setter TargetName="minborder2" Property="BorderBrush" Value="{StaticResource Silver.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="minborder2" Property="Background" Value="{StaticResource SilverPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaximizeSilver" TargetType="{x:Type Button}">
        <Border Name="maxborder2" BorderThickness=".5" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right"  Margin="0,2,0,0">
            <Image Source="{StaticResource maximizesilver}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="maxborder2" Property="Background" Value="{StaticResource SilverHoverBrush}"/>
                <Setter TargetName="maxborder2" Property="BorderBrush" Value="{StaticResource Silver.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="maxborder2" Property="Background" Value="{StaticResource SilverPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
  
    <ControlTemplate x:Key="RestoreSilver" TargetType="{x:Type Button}">
        <Border Name="resborder2"  BorderThickness=".5" CornerRadius="2" Background="Transparent"  Height="25" Width="25"   Margin="0,2,0,0">
            <Image Source="{StaticResource restoresilver}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="resborder2" Property="Background" Value="{StaticResource SilverHoverBrush}"/>
                <Setter TargetName="resborder2" Property="BorderBrush" Value="{StaticResource Silver.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="resborder2" Property="Background" Value="{StaticResource SilverPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseSilver" TargetType="{x:Type Button}">
        <Border Name="closeborder2" BorderThickness=".5" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right"  Margin="0,2,4,0">
            <Image Source="{StaticResource closesilver}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="closeborder2" Property="Background" Value="{StaticResource SilverHoverBrush}"/>
                <Setter TargetName="closeborder2" Property="BorderBrush" Value="{StaticResource Silver.TitleBarBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="closeborder2" Property="Background" Value="{StaticResource SilverPressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

  
    <!--Blend-->
    <ControlTemplate x:Key="BlendTitleBarTemplate" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"  CornerRadius="5,5,0,0" Background="{StaticResource Blend_ContentAreaBackground}" >
            <Border BorderBrush="Black" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="MinimizeBlend" TargetType="{x:Type Button}" >
        <Border Name="minborder"   BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25">
            <Image Source="{StaticResource minimizewhite}"  Width="22" Height="15" Margin="0,5,0,0"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="minborder" Property="Background" Value="{StaticResource Blend.MouseOverBrush}"/>
                <Setter TargetName="minborder" Property="BorderBrush" Value="{StaticResource Blend.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="minborder" Property="Background" Value="{StaticResource Blend.PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RestoreBlend" TargetType="{x:Type Button}">
        <Border Name="resborder"   BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25" >
            <Image Source="{StaticResource restorewhite}"  Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="resborder" Property="Background" Value="{StaticResource Blend.MouseOverBrush}"/>
                <Setter TargetName="resborder" Property="BorderBrush" Value="{StaticResource Blend.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="resborder" Property="Background" Value="{StaticResource Blend.PressedBrush}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaximizeBlend" TargetType="{x:Type Button}">
        <Border Name="maxborder" BorderThickness=".5" CornerRadius="2" Background="Transparent" Margin="0,2,0,0" Height="25" Width="25" >
            <Image Source="{StaticResource maximizewhite}" Width="16" Height="13"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="maxborder" Property="Background" Value="{StaticResource Blend.MouseOverBrush}"/>
                <Setter TargetName="maxborder" Property="BorderBrush" Value="{StaticResource Blend.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="maxborder" Property="Background" Value="{StaticResource Blend.PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CloseBlend" TargetType="{x:Type Button}">
        <Border Name="closeborder" BorderThickness=".5" CornerRadius="2" Background="Transparent" Height="25" Width="25" Margin="0,2,4,0">
            <Image Source="{StaticResource closewhite}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource Blend.MouseOverBrush}"/>

                <Setter TargetName="closeborder" Property="BorderBrush" Value="{StaticResource Blend.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource Blend.PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

  
    <!--Blue03TitleBarTemplate-->
    <ControlTemplate x:Key="Blue03TitleBarTemplate" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"   CornerRadius="0"  Background="{StaticResource Office2003BackgroundBrush}">
            <Border BorderBrush="{StaticResource Office2003.TitleBarBorderBrush}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="Minimize03Blue" TargetType="{x:Type Button}">
        <Border Name="minborder1"  BorderThickness="1" CornerRadius="2" Background="Transparent"  Height="25" Width="25"  Margin="0,2,0,0">
            <Image Source="{StaticResource minimizeBlue}" Width="22" Height="15" Margin="0,5,0,0"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="minborder1" Property="Background" Value="{StaticResource Office2003HoverBrush}"/>
                <Setter TargetName="minborder1" Property="BorderBrush" Value="{StaticResource Office2003.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="minborder1" Property="Background" Value="{StaticResource Office2003PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Maximize03Blue" TargetType="{x:Type Button}">
        <Border Name="maxborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right" Margin="0,2,0,0">
            <Image Source="{StaticResource maximizeBlue}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="maxborder1" Property="Background" Value="{StaticResource Office2003HoverBrush}"/>
                <Setter TargetName="maxborder1" Property="BorderBrush" Value="{StaticResource Office2003.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="maxborder1" Property="Background" Value="{StaticResource Office2003PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Restore03Blue" TargetType="{x:Type Button}">
        <Border Name="resborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" HorizontalAlignment="Right" Margin="0,2,0,0">
            <Image Source="{StaticResource restoreBlue}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="resborder1" Property="Background" Value="{StaticResource Office2003HoverBrush}"/>
                <Setter TargetName="resborder1" Property="BorderBrush" Value="{StaticResource Office2003.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="resborder1" Property="Background" Value="{StaticResource Office2003PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Close03Blue" TargetType="{x:Type Button}">
        <Border Name="closeborder1" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="25" Width="25" VerticalAlignment="Bottom" Margin="0,2,4,0">
            <Image Source="{StaticResource closeBlue}" Width="22" Height="15"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="closeborder1" Property="Background" Value="{StaticResource Office2003HoverBrush}"/>

                <Setter TargetName="closeborder1" Property="BorderBrush" Value="{StaticResource Office2003.MouseOverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="closeborder1" Property="Background" Value="{StaticResource Office2003PressedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- ShinyRed -->

    
    <ControlTemplate x:Key="TitleBarTemplate.ShinyRed" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"  CornerRadius="5,5,0,0" Background="{StaticResource TitleBarBackgroundBrushKey.ShinyRed}" >
            <Border BorderBrush="{StaticResource TitleBarBorderBrushKey.ShinyRed}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="Minimize.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
           <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource minimizewhite}"  Width="22" Height="15" Margin="0,5,0,0"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>
      
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Restore.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource restorewhite}"  Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>           
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="Maximize.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource maximizewhite}" Width="16" Height="13"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>    

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Close.ShinyRed" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyRed}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyRed}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyRed}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource closewhite}" Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyRed}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>       

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <!-- ShinyBlue -->


    <ControlTemplate x:Key="TitleBarTemplate.ShinyBlue" TargetType="{x:Type local:TitleBar}">
        <Border Name="border"  Height="30"  CornerRadius="5,5,0,0" Background="{StaticResource TitleBarBackgroundBrushKey.ShinyBlue}" >
            <Border BorderBrush="{StaticResource TitleBarBorderBrushKey.ShinyBlue}" Background="Transparent" BorderThickness="0,0,0,1" Width="Auto" CornerRadius="5,5,0,0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,0"/>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="Minimize.ShinyBlue" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyBlue}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource minimizewhite}"  Width="22" Height="15" Margin="0,5,0,0"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Restore.ShinyBlue" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyBlue}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource restorewhite}"  Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="Maximize.ShinyBlue" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyBlue}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource maximizewhite}" Width="16" Height="13"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Close.ShinyBlue" TargetType="{x:Type Button}" >
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" BorderThickness="2" BorderBrush="{StaticResource ButtonBorderBrushKey.ShinyBlue}" CornerRadius="4" Background="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}" Margin="0,2,0,0" Height="22" Width="22">
                <Border x:Name="Hover" Background="{StaticResource HighlightBrushKey.ShinyBlue}" CornerRadius="1,1,1,1" Opacity="0"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True">
                <ContentPresenter.Content>
                    <Image Source="{StaticResource closewhite}" Width="22" Height="15"/>
                </ContentPresenter.Content>
            </ContentPresenter>
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HighlightBrushKey.ShinyBlue}"
                    BorderThickness="2"
                    CornerRadius="2,2,2,2" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>








</ResourceDictionary>