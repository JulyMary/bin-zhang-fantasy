<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared" >

    <!--converter-->

    <local:SecondsConverter x:Key="secondsConverter"/>
    <local:MinutesConverter x:Key="minutesConverter"/>
    <local:HoursConverter x:Key="hoursConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--brushes-->

    <SolidColorBrush x:Key="Office2010BlueClockPointColor" Color="#FFA1A1A1" />
    <SolidColorBrush x:Key="Office2007Blue.ClockPointLittleColor" Color="#A1A1A1" />    
    <RadialGradientBrush x:Key="Office2010BlueCenteredEllipseColor" RadiusX="0.673" RadiusY="0.673" Center="0.500006,0.5" GradientOrigin="0.500006,0.5">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup/>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FF5E7D95" Offset="0"/>
        <GradientStop Color="#FF071826" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="Office2007BlueFirstBorderFrameColor" Color="#9EB5CD"/>
    <RadialGradientBrush x:Key="Office2007Blue.SecondBorderFrameRadialBrush" >
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#B8CBDE" Offset="1" />
            <GradientStop Color="#CEDCEC" Offset="0.9" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="Office2007Blue.SecondBorderFrameColor" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#D1DFEE" Offset="0" />
            <GradientStop Color="#FAFCFD" Offset="0.3" />
            <GradientStop Color="#F0F5FA" Offset="0.43" />
            <GradientStop Color="Transparent" Offset="0.93" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="Office2010BlueSecondInnerBorderFrameColor" EndPoint="0.834,0.859" StartPoint="0.163,0.139">
        <GradientStop Color="#FFE8EBED" Offset="0"/>
        <GradientStop Color="#FFC6D2DA" Offset="1"/>
    </LinearGradientBrush>
    
        <RadialGradientBrush x:Key="Office2010BlueThirdBorderFrameBackgroundColor" RadiusX="0.500002" RadiusY="0.499999" Center="0.5,0.499999" GradientOrigin="0.5,0.499999">
            <RadialGradientBrush.RelativeTransform>
                <TransformGroup/>
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#FFDDE9F7" Offset="0"/>
            <GradientStop Color="#FFBAC9D6" Offset="0.448485"/>
            <GradientStop Color="#FFBCCBD8" Offset="0.975758"/>
            <GradientStop Color="#FFA2AFBA" Offset="0.993939"/>
        </RadialGradientBrush>
        <SolidColorBrush x:Key="Office2010BlueThirdBorderFrameBrushColor" Color="Transparent" />

    <RadialGradientBrush x:Key="Office2010BlueDialBorderBackground" RadiusX="0.697" RadiusY="0.679" Center="0.474,-0.053" GradientOrigin="0.474,-0.053">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="-0.028" CenterX="0.485" ScaleY="1" ScaleX="1"/>
                <SkewTransform AngleY="0" AngleX="0" CenterY="-0.028" CenterX="0.485"/>
                <RotateTransform Angle="54.74" CenterY="-0.028" CenterX="0.485"/>
                <TranslateTransform X="0"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="White"/>
        <GradientStop Offset="1" Color="#00E5E5E5"/>
    </RadialGradientBrush>
   
    <LinearGradientBrush x:Key="Office2007Blue.HourHandColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#9EB5CD" Offset="0.5"/>
            <GradientStop Color="#BBCBDC" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Office2010BlueHourHandColor" Color="#FF7697B2"/>

    <SolidColorBrush x:Key="Office2010BlueMinuteHandColor" Color="#FF7697B2"/>

    <SolidColorBrush x:Key="Office2010BlueSecondHandColor" Color="#FF7697B2" />
    
    <LinearGradientBrush x:Key="Office2007Blue.HourHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD65E" Offset="0.5"/>
            <GradientStop Color="#FFE69E" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Office2007Blue.MinuteHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFE69E" Offset="0.5"/>
            <GradientStop Color="#FFD65E" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Office2007Blue.SecondHandMouseOverColor" Color="#FFD65E" />
    <LinearGradientBrush x:Key="Office2007Blue.HourHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD65E" Offset="0.5"/>
            <GradientStop Color="#FFE69E" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Office2007Blue.MinuteHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFE69E" Offset="0.5"/>
            <GradientStop Color="#FFD65E" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Office2007Blue.SecondHandPressedColor" Color="#FFD65E" />
    <SolidColorBrush x:Key="Office2007Blue.ClockPanelBorderColor" Color="#FF849DBD" />
    <SolidColorBrush x:Key="Office2007Blue.ClockPanelInnerBorderColor" Color="#FFCFDDEE" />
    <LinearGradientBrush x:Key="Office2007Blue.ClockPanelBackgroundColor" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E9F3FE" Offset="1" />
            <GradientStop Color="#C3D4E9" Offset="0.3" />
            <GradientStop Color="#C4D6EA" Offset="0.4" />
            <GradientStop Color="#D8E9FB" Offset="0" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="Office2007Blue.RectangleStyle" Center="0.1,0.5" RadiusX="1.7" RadiusY="1">
        <GradientStop Color="#D3DDE8" Offset="1" />
        <GradientStop Color="#E2E9F2" Offset="0.4" />
        <GradientStop Color="#D3DDE8" Offset="0.5" />
        <GradientStop Color="#E2E9F2" Offset="0" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="Office2007Blue.RectangleOverStyle" Center="0.1,0.5" RadiusX="1.7" RadiusY="1">
        <GradientStop Color="#FFFEEB" Offset="1" />
        <GradientStop Color="#FFF6CC" Offset="0.4" />
        <GradientStop Color="#FFDB73" Offset="0.5" />
        <GradientStop Color="#FFE395" Offset="0" />
    </RadialGradientBrush>
    <SolidColorBrush x:Key="Office2007Blue.ArrowBorderColor" Color="#ADC3DE" />

    <SolidColorBrush x:Key="Office2007Blue.ArrowFill" Color="#456489" />
    <SolidColorBrush x:Key="Office2007Blue.ArrowBorderColorOver" Color="#DECF9C" />
    <SolidColorBrush x:Key="Office2007Blue.TextBlockBackground" Color="#EFF3FF" />

    <SolidColorBrush x:Key="Default.TextBlockForeground" Color="Black"/>


    <!--styles-->

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 3 L 7 0 Z</Geometry>
    <Geometry x:Key="UpArrowGeometry">M 0 3 L 3.5 0 L 7 3 Z</Geometry>

    <!--InnerClockGeneralStyle-->
    <Style x:Key="InnerClockGeneralStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="{Binding Path=InnerClockGeneralWidth, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=InnerClockGeneralHeight, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>   
   
    <!--SecondInnerBorderFrameStyle-->
    <Style x:Key="SecondInnerBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Office2010BlueSecondInnerBorderFrameColor}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#FFB4C2D6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
       
    </Style>
    <!--ThirdBorderFrameStyle-->
    <Style x:Key="ThirdBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Office2010BlueThirdBorderFrameBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource Office2010BlueThirdBorderFrameBrushColor}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=InnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
       
    </Style>
    <!--InnerBorderStyle-->
    <Style x:Key="InnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Office2010BlueDialBorderBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        
    </Style>

    <!--CenteredEllipseStyle-->
    <Style x:Key="CenteredEllipseStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Fill" Value="{StaticResource Office2010BlueCenteredEllipseColor}" />
        <Setter Property="Width" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="4" />
        <Setter Property="Canvas.Top" Value="60" />
        <Setter Property="Canvas.Left" Value="57" />
       
    </Style>

    <!--ClockPointStyle-->
    <Style x:Key="ClockPointStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Width" Value="2" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />
       
    </Style>

    <!--ClockPointLittleStyle-->
    <Style x:Key="ClockPointLittleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Height" Value="3" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />      
    </Style>
    
    <!--HourHandStyle-->
    <Style x:Key="HourHandStyle" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{StaticResource Office2010BlueHourHandColor}" />
        <Setter Property="Fill" Value="{StaticResource Office2010BlueHourHandColor}" />
        <Setter Property="Data" Value="M 5,5 L 0,28 L 3.5,38 L 8,28 Z" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="Canvas.Top" Value="27" />
        <Setter Property="Canvas.Left" Value="58" />
        <Style.Triggers>           
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{StaticResource Office2007Blue.HourHandMouseOverColor}" />
                <Setter Property="Stroke" Value="{StaticResource Office2007Blue.HourHandMouseOverColor}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedHourHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Office2007Blue.HourHandPressedColor}" />
                <Setter Property="Stroke" Value="{StaticResource Office2007Blue.HourHandPressedColor}" />
            </DataTrigger>       
          
        </Style.Triggers>
    </Style>

    <!--HourHandDefaultStyle-->
    <Style x:Key="HourHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource HourHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=HourHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=HourHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=HourHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=HourHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedHourHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=HourHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                <Setter Property="Stroke" Value="{StaticResource Office2007Blue.HourHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--MinuteHandStyle-->
    <Style x:Key="MinuteHandStyle" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{StaticResource Office2010BlueMinuteHandColor}" />
        <Setter Property="Fill" Value="{StaticResource Office2010BlueMinuteHandColor}" />
        <Setter Property="Data" Value="M 5,5 L 0,40 L 3.5,48 L 8,40 Z" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Canvas.Top" Value="16" />
        <Setter Property="Canvas.Left" Value="57" />
    </Style>

    <!--MinuteHandDefaultStyle-->
    <Style x:Key="MinuteHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource MinuteHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=MinuteHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=MinuteHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=MinuteHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=MinuteHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedMinuteHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=MinuteHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                <Setter Property="Stroke" Value="{StaticResource Office2007Blue.MinuteHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--SecondHandStyle-->
    <Style x:Key="SecondHandStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource Office2010BlueSecondHandColor}" />
        <Setter Property="Width" Value="{Binding Path=SecondHandThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondHandHeight, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="3" />
        <Setter Property="Canvas.Top" Value="12" />
        <Setter Property="Canvas.Left" Value="61" />
    </Style>
    <!--SecondHandDefaultStyle-->
    <Style x:Key="SecondHandDefaultStyle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource SecondHandStyle}">
        <Setter Property="Fill" Value="{Binding Path=SecondHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedSecondHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--TimeTextBlockStyle-->
    <Style x:Key="TimeTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="62" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource Default.TextBlockForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
       
    </Style>

    <!--TimeTextBlockSmallStyle-->
    <Style x:Key="TimeTextBlockSmallStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="{StaticResource Default.TextBlockForeground}" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        
    </Style>

    <!--ContentPresenterStyle-->
    <Style x:Key="ContentPresenterStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--RectangleStyle-->
    <Style x:Key="RectangleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="8" />
        <Setter Property="RadiusX" Value="0" />
        <Setter Property="RadiusY" Value="0" />
        <Setter Property="Fill" Value="{StaticResource Office2007Blue.RectangleStyle}" />       
    </Style>
    <!--PathStyle-->
    <Style x:Key="PathStyle" TargetType="{x:Type Path}">
        <Setter Property="Margin" Value="0,-3,0,-3" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="5" />
    </Style>
    <!--ArrowBorderStyle-->
    <Style x:Key="ArrowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Office2007Blue.ArrowBorderColor}" />
        
    </Style>
    <!--FrameBorderStyle-->
    <Style x:Key="FrameBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderBrush" Value="{StaticResource Office2007Blue.ClockPanelBorderColor}" />
        <Setter Property="Background" Value="{StaticResource Office2007Blue.ClockPanelInnerBorderColor}" />
        <Setter Property="Width" Value="{Binding Path=FrameWidth, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        
    </Style>

    <!--FrameInnerBorderStyle-->
    <Style x:Key="FrameInnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameInnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Padding" Value="10,5,10,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{Binding Path=FrameBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />

    </Style>


    <!--ScrollBarButtonDownTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonDownTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <Button Name="TopButton" Command="local:Clock.m_AMPMSelect"/>
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="DownBorder" BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="DownRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="DownPath"
						  Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
						  Data="{StaticResource DownArrowGeometry}"
						  Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="DownPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="DownPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="DownBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="DownRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="DownPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBarButtonUpTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonUpTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="UpBorder" BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="UpRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="UpPath"
					    Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
					    Data="{StaticResource UpArrowGeometry}"
					    Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="UpPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="UpPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="UpBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="UpRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="UpPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Office2010BlueClockStyle" TargetType="{x:Type local:Clock}">
        <Setter Property="local:Clock.ClockPointBrush" Value="{StaticResource Office2010BlueClockPointColor}" />
        <Setter Property="local:Clock.CenterCircleBrush" Value="{StaticResource Office2010BlueCenteredEllipseColor}" />
        <Setter Property="local:Clock.BorderBrush" Value="{StaticResource Office2007BlueFirstBorderFrameColor}" />
        <Setter Property="local:Clock.DialCenterBackground" Value="{StaticResource Office2010BlueThirdBorderFrameBackgroundColor}" />
        <Setter Property="local:Clock.InnerBorderBrush" Value="{StaticResource Office2010BlueThirdBorderFrameBrushColor}" />
        <Setter Property="local:Clock.DialBackground" Value="White"/>

        <Setter Property="local:Clock.HourHandBrush" Value="{StaticResource Office2010BlueHourHandColor}" />
        <Setter Property="local:Clock.MinuteHandBrush" Value="{StaticResource Office2010BlueMinuteHandColor}" />
        <Setter Property="local:Clock.SecondHandBrush" Value="{StaticResource Office2010BlueSecondHandColor}" />
        <Setter Property="local:Clock.HourHandMouseOverBrush" Value="{StaticResource Office2007Blue.HourHandMouseOverColor}" />
        <Setter Property="local:Clock.MinuteHandMouseOverBrush" Value="{StaticResource Office2007Blue.MinuteHandMouseOverColor}" />
        <Setter Property="local:Clock.SecondHandMouseOverBrush" Value="{StaticResource Office2007Blue.SecondHandMouseOverColor}" />
        <Setter Property="local:Clock.HourHandPressedBrush" Value="{StaticResource Office2007Blue.HourHandPressedColor}" />
        <Setter Property="local:Clock.MinuteHandPressedBrush" Value="{StaticResource Office2007Blue.MinuteHandPressedColor}" />
        <Setter Property="local:Clock.SecondHandPressedBrush" Value="{StaticResource Office2007Blue.SecondHandPressedColor}" />

        <Setter Property="local:Clock.AMPMSelectorButtonsBackground" Value="{StaticResource Office2007Blue.RectangleStyle}" />
        <Setter Property="local:Clock.AMPMSelectorButtonsBorderBrush" Value="{StaticResource Office2007Blue.RectangleStyle}" />
        <Setter Property="local:Clock.AMPMSelectorBorderBrush" Value="{StaticResource Office2007Blue.ArrowBorderColor}" />
        <Setter Property="local:Clock.AMPMSelectorButtonsArrowBrush" Value="{StaticResource Office2007Blue.ArrowFill}" />
        <Setter Property="local:Clock.AMPMMouseOverButtonsArrowBrush" Value="{StaticResource Office2007Blue.ArrowFill}" />
        <Setter Property="local:Clock.AMPMMouseOverButtonsBorderBrush" Value="{StaticResource Office2007Blue.ArrowBorderColorOver}" />
        <Setter Property="local:Clock.AMPMMouseOverButtonsBackground" Value="{StaticResource Office2007Blue.RectangleOverStyle}" />
        <Setter Property="local:Clock.AMPMSelectorBackground" Value="{StaticResource Office2007Blue.TextBlockBackground}" />
        <Setter Property="local:Clock.AMPMSelectorForeground" Value="{StaticResource Default.TextBlockForeground}" />

        <Setter Property="local:Clock.FrameBorderBrush" Value="{StaticResource Office2007Blue.ClockPanelBorderColor}" />
        <Setter Property="local:Clock.FrameInnerBorderBrush" Value="{StaticResource Office2007Blue.ClockPanelInnerBorderColor}" />
        <Setter Property="local:Clock.FrameBackground" Value="{StaticResource Office2007Blue.ClockPanelBackgroundColor}" />       
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ClockCornerRadius" Value="90"/>                
        <Setter Property="InnerBorderThickness" Value="2"/>
        <Setter Property="DialBorderThickness" Value="0"/>

        <Setter Property="FrameCornerRadius" Value="0"/>
        <Setter Property="FrameInnerBorderThickness" Value="1"/>
        <Setter Property="local:Clock.AMPMSelectorCornerRadius" Value="0"/>
        <Setter Property="CenteredEllipseRadius" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Clock}">
                    <Border Name="FrameBorder" Background="{Binding Path=FrameInnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" BorderBrush="{Binding Path=FrameBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource FrameBorderStyle}" SnapsToDevicePixels="True">                       
                        <Border Name="FrameInnerBorder" Style="{StaticResource FrameInnerBorderStyle}" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="9.66666666666663"/>
                                </Grid.RowDefinitions>
                                <Border Name="SecondInnerBorder" Background="{Binding Path=ClockFrameBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource SecondInnerBorderFrameStyle}" SnapsToDevicePixels="True">
                                                <Border Name="ThirdBorder" BorderBrush="{Binding Path=InnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ThirdBorderFrameStyle}" SnapsToDevicePixels="True">
                                        <Border Name="InnerBorder" Background="{Binding Path=DialCenterBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"  Style="{StaticResource InnerBorderStyle}" SnapsToDevicePixels="True"/>                                                        
                                            </Border>
                                        </Border>                                                                                 
                                <Canvas Style="{StaticResource InnerClockGeneralStyle}" FlowDirection="LeftToRight">
                                    <Ellipse Name="CenteredEllipse" Fill="{Binding Path=CenterCircleBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource CenteredEllipseStyle}" />                                   
                                    <Path x:Name="HourHand" Style="{StaticResource HourHandDefaultStyle}" SnapsToDevicePixels="True">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="HourHandRotateTransform" CenterX="4" CenterY="39" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hoursConverter}}"></RotateTransform>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="MinuteHand" Style="{StaticResource MinuteHandDefaultStyle}" SnapsToDevicePixels="True">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="MinuteHandRotateTransform" CenterX="4.7" CenterY="49" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource minutesConverter}}"></RotateTransform>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Rectangle x:Name="SecondHand" Style="{StaticResource SecondHandDefaultStyle}" SnapsToDevicePixels="True">
                                        <Rectangle.RenderTransform>
                                            <RotateTransform x:Name="SecondHandRotateTransform" CenterX="0.5" CenterY="55" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource secondsConverter}}"></RotateTransform>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>

                                    <StackPanel Name="SmallAmPmPanel" Width="26" Panel.ZIndex="0" Canvas.Top="76" Canvas.Left="45" Visibility="{TemplateBinding IsInsideAmPmVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border Name="SmallAmPmPanelBorder"
                CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
                BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" 
                BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                            <Grid Name="SmallAmPmPanelGrid" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="16" />
                                                    <ColumnDefinition Width="12" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Name="SmallTimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockSmallStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <RepeatButton Name="UpInnerRepeatButton" Grid.Row="0" Margin="-1,0,0,0" Width="10" Height="8" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                    <RepeatButton Name="DownInnerRepeatButton" Grid.Row="1" Margin="-1,0,0,0" Width="10" Height="8" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}"/>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </Canvas>

                                <StackPanel Name="BigAmPmPanel" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Width="90" 
                      Visibility="{TemplateBinding IsDigitalAmPmVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border Name="BigAmPmPanelBorder"
              CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
              BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" 
              BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                        <StackPanel Name="BigAmPmContainer" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Orientation="Horizontal">
                                            <TextBlock Name="TimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Name="BigAmPmSelectorGrid" Width="16" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <RepeatButton Name="UpRepeatButton" Grid.Row="0" Width="15" Height="10" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                <RepeatButton Name="DownRepeatButton" Grid.Row="1" Width="15" Height="10" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:Clock.IsDigitalAmPmVisible" Value="False">
                            <Setter TargetName="BigAmPmPanel" Property="Width" Value="75" />
                        </Trigger>
                        <Trigger Property="local:Clock.IsDigitalAmPmVisible" Value="True">
                            <Setter TargetName="BigAmPmPanel" Property="Width" Value="90" />
                        </Trigger>                     
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Bottom">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="96" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="49" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Top">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="16" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="48" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Left">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="10" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Right">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource Office2010BlueClockStyle}" TargetType="{x:Type local:Clock}"/>
        
    
</ResourceDictionary>