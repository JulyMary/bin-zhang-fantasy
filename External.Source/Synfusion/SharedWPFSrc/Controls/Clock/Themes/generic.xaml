<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared" >

    <!--converter-->

    <local:SecondsConverter x:Key="secondsConverter"/>
    <local:MinutesConverter x:Key="minutesConverter"/>
    <local:HoursConverter x:Key="hoursConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--brushes-->

    <SolidColorBrush x:Key="Aero.ClockPointColor" Color="#A1A1A1" />

    <RadialGradientBrush x:Key="Aero.CenteredEllipseColor" >
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#3C3C3C" Offset="1" />
            <GradientStop Color="#E7F2FB" Offset="0" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="Aero.FirstBorderFrameColor" Color="#BDE0E8" />

    <SolidColorBrush x:Key="Aero.ThirdBorderFrameBackgroundColor" Color="#EFF3F4" />

    <SolidColorBrush x:Key="Aero.ThirdBorderFrameBrushColor" Color="#BDE0E8" />

    <SolidColorBrush x:Key="Aero.DialBorderColor" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="Aero.HourHandColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#949697" Offset="0.5"/>
            <GradientStop Color="#BFC0C1" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Aero.MinuteHandColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#BFC0C1" Offset="0.5"/>
            <GradientStop Color="#949697" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Aero.SecondHandColor" Color="#66575B5B" />

    <LinearGradientBrush x:Key="Aero.HourHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#78CAF1" Offset="0.5"/>
            <GradientStop Color="#AEDFF7" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Aero.MinuteHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#AEDFF7" Offset="0.5"/>
            <GradientStop Color="#78CAF1" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Aero.SecondHandMouseOverColor" Color="#78CAF1" />

    <LinearGradientBrush x:Key="Aero.HourHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#78CAF1" Offset="0.5"/>
            <GradientStop Color="#AEDFF7" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Aero.MinuteHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#AEDFF7" Offset="0.5"/>
            <GradientStop Color="#78CAF1" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Aero.SecondHandPressedColor" Color="#78CAF1" />

    <SolidColorBrush x:Key="Aero.RectangleStyle" Color="#F4F4F4" />

    <SolidColorBrush x:Key="Aero.ArrowBorderColor" Color="#949694" />

    <SolidColorBrush x:Key="Aero.ArrowFill" Color="#464646" />

    <SolidColorBrush x:Key="Aero.ArrowBorderColorOver" Color="#9CDFFF" />

    <LinearGradientBrush x:Key="Aero.RectangleOverStyle" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#F3FAFF" Offset="1" />
        <GradientStop Color="#DAF4FF" Offset="0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.TextBlockBackground" Color="#FFFFFF" />

    <SolidColorBrush x:Key="Default.TextBlockForeground" Color="#000000" />

    <SolidColorBrush x:Key="Aero.ClockPanelBorderColor" Color="#5E9EAA" />

    <SolidColorBrush x:Key="Aero.ClockPanelInnerBorderColor" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="Aero.ClockPanelBackgroundColor" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#92CEDA" Offset="1" />
        <GradientStop Color="#7AB8C4" Offset="0.45" />
        <GradientStop Color="#5D9DA9" Offset="0.5" />
        <GradientStop Color="#7FBCC7" Offset="0" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="Aero.SecondBorderFrameRadialBrush" >
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#8EB1B9" Offset="1" />
            <GradientStop Color="#C0D1D5" Offset="0.9" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="Aero.SecondInnerBorderFrameColor" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#C3E2E9" Offset="0"/>
            <GradientStop Color="#FCFDFD" Offset="0.2"/>
            <GradientStop Color="#F3F9FA" Offset="0.4"/>
            <GradientStop Color="#D7E1E2" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Aero.SecondBorderFrameColor" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#C3E2E9" Offset="0" />
            <GradientStop Color="#F7F9FA" Offset="0.3" />
            <GradientStop Color="#F8FAFA" Offset="0.43" />
            <GradientStop Color="Transparent" Offset="0.93" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.ThirdBorderFrameBackgroundColor" Color="#FDF0D4" />

    <RadialGradientBrush x:Key="Default.CenteredEllipseColor" >
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#4A4C4E" Offset="1" />
            <GradientStop Color="#E7F2FB" Offset="0" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="Default.ClockPointColor" Color="#A1A1A1" />

    <SolidColorBrush x:Key="Default.FirstBorderFrameColor" Color="#9DC5FA" />
    
    <SolidColorBrush x:Key="Default.ThirdBorderFrameBrushColor" Color="#C4D3EE" />

    <SolidColorBrush x:Key="Default.DialBorderColor" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="Default.HourHandColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#1D72DB" Offset="0.5"/>
            <GradientStop Color="#77AAE9" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Default.MinuteHandColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#77AAE9" Offset="0.5"/>
            <GradientStop Color="#1D72DB" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.SecondHandColor" Color="#77AAE9" />

    <LinearGradientBrush x:Key="Default.HourHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EC7902" Offset="0.5"/>
            <GradientStop Color="#F3B06B" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Default.MinuteHandMouseOverColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F3B06B" Offset="0.5"/>
            <GradientStop Color="#EC7902" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.SecondHandMouseOverColor" Color="#EC7902" />

    <LinearGradientBrush x:Key="Default.HourHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EC7902" Offset="0.5"/>
            <GradientStop Color="#F3B06B" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="Default.MinuteHandPressedColor" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F3B06B" Offset="0.5"/>
            <GradientStop Color="#EC7902" Offset="0.6"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.SecondHandPressedColor" Color="#EC7902" />

    <LinearGradientBrush x:Key="Default.RectangleStyle" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#BDD7FD" Offset="1" />
        <GradientStop Color="#82AAE3" Offset="0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.ArrowBorderColor" Color="#C2D5F6" />

    <SolidColorBrush x:Key="Default.ArrowFill" Color="#FFFFFF" />

    <SolidColorBrush x:Key="Default.ArrowBorderColorOver" Color="#FF9934" />

    <LinearGradientBrush x:Key="Default.RectangleOverStyle" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FFCC62" Offset="1" />
        <GradientStop Color="#FF9934" Offset="0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Default.ClockPanelBorderColor" Color="#0B60CD" />

    <SolidColorBrush x:Key="Default.ClockPanelInnerBorderColor" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="Default.ClockPanelBackgroundColor" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#63A3F2" Offset="1" />
        <GradientStop Color="#83B4EF" Offset="0.4" />
        <GradientStop Color="#4C95EF" Offset="0.5" />
        <GradientStop Color="#599EF2" Offset="0" />
    </LinearGradientBrush>

    <!--styles-->

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 3 L 7 0 Z</Geometry>
    <Geometry x:Key="UpArrowGeometry">M 0 3 L 3.5 0 L 7 3 Z</Geometry>

    <!--InnerClockGeneralStyle-->
    <Style x:Key="InnerClockGeneralStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="{Binding Path=InnerClockGeneralWidth, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=InnerClockGeneralHeight, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>

    <!--FirstBorderFrameStyle-->
    <Style x:Key="FirstBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Default.FirstBorderFrameColor}" />
        <Setter Property="Width" Value="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />

    </Style>

    <!--SecondBorderFrameStyle-->
    <Style x:Key="SecondBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Aero.SecondInnerBorderFrameColor}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>

    <!--SecondInnerBorderFrameStyle-->
    <Style x:Key="SecondInnerBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Aero.SecondInnerBorderFrameColor}" />
        <Setter Property="Width" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>

    <!--ThirdBorderFrameStyle-->
    <Style x:Key="ThirdBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Default.ThirdBorderFrameBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource Default.ThirdBorderFrameBrushColor}" />
        <Setter Property="Width" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=InnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>
    
    <!--InnerBorderStyle-->
    <Style x:Key="InnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Default.DialBorderColor}" />
        <Setter Property="BorderThickness" Value="{Binding Path=DialBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>

    <!--CenteredEllipseStyle-->
    <Style x:Key="CenteredEllipseStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Fill" Value="{StaticResource Default.CenteredEllipseColor}" />
        <Setter Property="Width" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="4" />
        <Setter Property="Canvas.Top" Value="60" />
        <Setter Property="Canvas.Left" Value="57" />
    </Style>

    <!--ClockPointStyle-->
    <Style x:Key="ClockPointStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Width" Value="2" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />
        <Style.Triggers>
            <Trigger Property="utilsOuter:SkinStorage.VisualStyle" Value="Default">
                <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ClockPointLittleStyle-->
    <Style x:Key="ClockPointLittleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Height" Value="3" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />
        <Style.Triggers>
            <Trigger Property="utilsOuter:SkinStorage.VisualStyle" Value="Default">
                <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--HourHandStyle-->
    <Style x:Key="HourHandStyle" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{StaticResource Default.HourHandColor}" />
        <Setter Property="Fill" Value="{StaticResource Default.HourHandColor}" />
        <Setter Property="Data" Value="M 5,5 L 0,28 L 3.5,38 L 8,28 Z" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="Canvas.Top" Value="27" />
        <Setter Property="Canvas.Left" Value="58" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.HourHandMouseOverColor}" />
                <Setter Property="Stroke" Value="{StaticResource Default.HourHandMouseOverColor}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedHourHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.HourHandPressedColor}" />
                <Setter Property="Stroke" Value="{StaticResource Default.HourHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--HourHandDefaultStyle-->
    <Style x:Key="HourHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource HourHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=HourHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=HourHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=HourHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=HourHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedHourHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=HourHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                <Setter Property="Stroke" Value="{StaticResource Default.HourHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--MinuteHandStyle-->
    <Style x:Key="MinuteHandStyle" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{StaticResource Default.MinuteHandColor}" />
        <Setter Property="Fill" Value="{StaticResource Default.MinuteHandColor}" />
        <Setter Property="Data" Value="M 5,5 L 0,40 L 3.5,48 L 8,40 Z" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Canvas.Top" Value="16" />
        <Setter Property="Canvas.Left" Value="57" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.MinuteHandMouseOverColor}" />
                <Setter Property="Stroke" Value="{StaticResource Default.MinuteHandMouseOverColor}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedMinuteHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.MinuteHandPressedColor}" />
                <Setter Property="Stroke" Value="{StaticResource Default.MinuteHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--MinuteHandDefaultStyle-->
    <Style x:Key="MinuteHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource MinuteHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=MinuteHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=MinuteHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=MinuteHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=MinuteHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedMinuteHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=MinuteHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                <Setter Property="Stroke" Value="{StaticResource Default.MinuteHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--SecondHandStyle-->
    <Style x:Key="SecondHandStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource Default.SecondHandColor}" />
        <Setter Property="Width" Value="{Binding Path=SecondHandThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondHandHeight, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="3" />
        <Setter Property="Canvas.Top" Value="12" />
        <Setter Property="Canvas.Left" Value="61" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.SecondHandMouseOverColor}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedSecondHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Default.SecondHandPressedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--SecondHandDefaultStyle-->
    <Style x:Key="SecondHandDefaultStyle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource SecondHandStyle}">
        <Setter Property="Fill" Value="{Binding Path=SecondHandBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedSecondHand, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--TimeTextBlockStyle-->
    <Style x:Key="TimeTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="62" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource Default.TextBlockForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
    </Style>

    <!--TimeTextBlockSmallStyle-->
    <Style x:Key="TimeTextBlockSmallStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="{StaticResource Default.TextBlockForeground}" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!--ContentPresenterStyle-->
    <Style x:Key="ContentPresenterStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <!--RectangleStyle-->
    <Style x:Key="RectangleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="8" />
        <Setter Property="RadiusX" Value="0" />
        <Setter Property="RadiusY" Value="0" />
        <Setter Property="Fill" Value="{StaticResource Default.RectangleStyle}" />
    </Style>
    
    <!--PathStyle-->
    <Style x:Key="PathStyle" TargetType="{x:Type Path}">
        <Setter Property="Margin" Value="0,-3,0,-3" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="5" />
    </Style>
    
    <!--ArrowBorderStyle-->
    <Style x:Key="ArrowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Default.ArrowBorderColor}" />
    </Style>
    
    <!--FrameBorderStyle-->
    <Style x:Key="FrameBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderBrush" Value="{StaticResource Default.ClockPanelBorderColor}" />
        <Setter Property="Background" Value="{StaticResource Default.ClockPanelInnerBorderColor}" />
        <Setter Property="Width" Value="{Binding Path=FrameWidth, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
    </Style>

    <!--FrameInnerBorderStyle-->
    <Style x:Key="FrameInnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameInnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
        <Setter Property="Padding" Value="10,5,10,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{Binding Path=FrameBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />

    </Style>

    <!--TwelfthPartTemplate-->
    <DataTemplate x:Key="TwelfthPartTemplate">

        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="337" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="343" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="349" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="355" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="0" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--EleventhPartTemplate-->
    <DataTemplate x:Key="EleventhPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="307" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="313" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="319" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="325" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="330" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>


    <!--TenthPartTemplate-->
    <DataTemplate x:Key="TenthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="277" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="283" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="289" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="295" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="300" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--NinethPartTemplate-->
    <DataTemplate x:Key="NinethPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="247" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="253" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="259" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="265" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="270" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--EighthPartTemplate-->
    <DataTemplate x:Key="EighthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="217" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="223" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="229" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="235" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="240" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SeventhPartTemplate-->
    <DataTemplate x:Key="SeventhPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="187" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="193" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="199" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="205" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="210" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SixthPartTemplate-->
    <DataTemplate x:Key="SixthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="157" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="163" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="169" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="175" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="180" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FifthPartTemplate-->
    <DataTemplate x:Key="FifthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="127" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="133" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="139" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="145" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="150" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FourthPartTemplate-->
    <DataTemplate x:Key="FourthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="97" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="103" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="109" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="115" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="120" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--ThirdPartTemplate-->
    <DataTemplate x:Key="ThirdPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="67" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="73" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="79" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="85" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="90" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SecondPartTemplate-->
    <DataTemplate x:Key="SecondPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="37" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="43" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="49" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="55" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="60" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FirstPartTemplate-->
    <DataTemplate x:Key="FirstPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="7" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="13" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="19" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="25" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="30" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--ScrollBarButtonDownTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonDownTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <Button Name="TopButton" Command="local:Clock.m_AMPMSelect"/>
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="DownBorder" BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="DownRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="DownPath"
						  Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
						  Data="{StaticResource DownArrowGeometry}"
						  Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="DownPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="DownPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="DownBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="DownRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="DownPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBarButtonUpTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonUpTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="UpBorder" BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="UpRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="UpPath"
					    Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
					    Data="{StaticResource UpArrowGeometry}"
					    Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="UpPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="UpPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="UpBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="UpRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                <Setter TargetName="UpPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type local:Clock}">
        <Setter Property="local:Clock.ClockPointBrush" Value="{StaticResource Default.ClockPointColor}"/>
        <Setter Property="local:Clock.CenterCircleBrush" Value="{StaticResource Default.CenteredEllipseColor}"/>
        <Setter Property="local:Clock.BorderBrush" Value="{StaticResource Default.FirstBorderFrameColor}"/>
        <Setter Property="local:Clock.DialCenterBackground" Value="{StaticResource Default.ThirdBorderFrameBackgroundColor}"/>
        <Setter Property="local:Clock.InnerBorderBrush" Value="{StaticResource Default.ThirdBorderFrameBrushColor}"/>
        <Setter Property="local:Clock.DialBackground" Value="{StaticResource Default.DialBorderColor}"/>

        <Setter Property="local:Clock.HourHandBrush" Value="{StaticResource Default.HourHandColor}"/>
        <Setter Property="local:Clock.MinuteHandBrush" Value="{StaticResource Default.MinuteHandColor}"/>
        <Setter Property="local:Clock.SecondHandBrush" Value="{StaticResource Default.SecondHandColor}"/>
        <Setter Property="local:Clock.HourHandMouseOverBrush" Value="{StaticResource Default.HourHandMouseOverColor}"/>
        <Setter Property="local:Clock.MinuteHandMouseOverBrush"  Value="{StaticResource Default.MinuteHandMouseOverColor}"/>
        <Setter Property="local:Clock.SecondHandMouseOverBrush" Value="{StaticResource Default.SecondHandMouseOverColor}"/>
        <Setter Property="local:Clock.HourHandPressedBrush" Value="{StaticResource Default.HourHandPressedColor}"/>
        <Setter Property="local:Clock.MinuteHandPressedBrush" Value="{StaticResource Default.MinuteHandPressedColor}"/>
        <Setter Property="local:Clock.SecondHandPressedBrush" Value="{StaticResource Default.SecondHandPressedColor}"/>

        <Setter Property="local:Clock.AMPMSelectorButtonsBackground" Value="{StaticResource Default.RectangleStyle}"/>
        <Setter Property="local:Clock.AMPMSelectorButtonsBorderBrush" Value="{StaticResource Default.RectangleStyle}"/>
        <Setter Property="local:Clock.AMPMSelectorBorderBrush" Value="{StaticResource Default.ArrowBorderColor}"/>
        <Setter Property="local:Clock.AMPMSelectorButtonsArrowBrush" Value="{StaticResource Default.ArrowFill}"/>
        <Setter Property="local:Clock.AMPMMouseOverButtonsArrowBrush" Value="{StaticResource Default.ArrowFill}"/>
        <Setter Property="local:Clock.AMPMMouseOverButtonsBorderBrush" Value="{StaticResource Default.ArrowBorderColorOver}"/>
        <Setter Property="local:Clock.AMPMMouseOverButtonsBackground" Value="{StaticResource Default.RectangleOverStyle}"/>
        <Setter Property="local:Clock.AMPMSelectorBackground" Value="{StaticResource Default.TextBlockBackground}"/>
        <Setter Property="local:Clock.AMPMSelectorForeground" Value="{StaticResource Default.TextBlockForeground}"/>

        <Setter Property="local:Clock.FrameBorderBrush" Value="{StaticResource Default.ClockPanelBorderColor}"/>
        <Setter Property="local:Clock.FrameInnerBorderBrush" Value="{StaticResource Default.ClockPanelInnerBorderColor}"/>
        <Setter Property="local:Clock.FrameBackground" Value="{StaticResource Default.ClockPanelBackgroundColor}"/>
        <!--<Setter Property="FirstBorderFrameRadius" Value="151"/>-->
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ClockCornerRadius" Value="90"/>
        <!--<Setter Property="SecondInnerBorderFrameRadius" Value="135"/>
        <Setter Property="ThirdBorderFrameRadius" Value="122"/>-->
        <Setter Property="InnerBorderThickness" Value="2"/>
        <Setter Property="DialBorderThickness" Value="25"/>        
        <Setter Property="FrameCornerRadius" Value="0"/>
        <Setter Property="FrameInnerBorderThickness" Value="1"/>
        <Setter Property="local:Clock.AMPMSelectorCornerRadius" Value="0"/>  
        <!--<Setter Property="CenteredEllipseRadius" Value="10"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Clock}">
                    <Border Name="FrameBorder" Background="{Binding Path=FrameInnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" BorderBrush="{Binding Path=FrameBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource FrameBorderStyle}">
                        <Border Name="FrameInnerBorder" Style="{StaticResource FrameInnerBorderStyle}">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"/>
                                    <RowDefinition Height="30" />
                                </Grid.RowDefinitions>
                                <Border Name="FirstBorder" BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Grid.Row="0" Grid.Column="0" Style="{StaticResource FirstBorderFrameStyle}">
                                    <Border Style="{StaticResource SecondBorderFrameStyle}" Background="{StaticResource Aero.SecondBorderFrameRadialBrush}">
                                        <Border Name="SecondBorder" Background="{Binding Path=ClockFrameBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource SecondBorderFrameStyle}">
                                            <Border Name="SecondInnerBorder" Background="{Binding Path=ClockFrameBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource SecondInnerBorderFrameStyle}">
                                                <Border Name="ThirdBorder" BorderBrush="{Binding Path=InnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Background="{Binding Path=DialCenterBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource ThirdBorderFrameStyle}">
                                                    <Border Name="InnerBorder" BorderBrush="{Binding Path=DialBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource InnerBorderStyle}"/>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>

                                <Canvas Style="{StaticResource InnerClockGeneralStyle}" FlowDirection="LeftToRight">
                                    <Ellipse Name="CenteredEllipse" Fill="{Binding Path=CenterCircleBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Style="{StaticResource CenteredEllipseStyle}" />
                                    <ContentPresenter ContentTemplate="{StaticResource FirstPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource SecondPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource ThirdPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource FourthPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource FifthPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource SixthPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource SeventhPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource EighthPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource NinethPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource TenthPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource EleventhPartTemplate}"/>
                                    <ContentPresenter ContentTemplate="{StaticResource TwelfthPartTemplate}"/>
                                    <Path x:Name="HourHand" Style="{StaticResource HourHandDefaultStyle}">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="HourHandRotateTransform" CenterX="4" CenterY="39" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hoursConverter}}"></RotateTransform>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="MinuteHand" Style="{StaticResource MinuteHandDefaultStyle}">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="MinuteHandRotateTransform" CenterX="4.7" CenterY="49" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource minutesConverter}}"></RotateTransform>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Rectangle x:Name="SecondHand" Style="{StaticResource SecondHandDefaultStyle}">
                                        <Rectangle.RenderTransform>
                                            <RotateTransform x:Name="SecondHandRotateTransform" CenterX="0.5" CenterY="55" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource secondsConverter}}"></RotateTransform>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>

                                    <StackPanel Name="SmallAmPmPanel" Width="26" Panel.ZIndex="0" Canvas.Top="76" Canvas.Left="45" Visibility="{TemplateBinding IsInsideAmPmVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border Name="SmallAmPmPanelBorder"
                CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
                BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" 
                BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                            <Grid Name="SmallAmPmPanelGrid" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="16" />
                                                    <ColumnDefinition Width="12" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Name="SmallTimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockSmallStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <RepeatButton Name="UpInnerRepeatButton" Grid.Row="0" Margin="-1,0,0,0" Width="10" Height="8" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                    <RepeatButton Name="DownInnerRepeatButton" Grid.Row="1" Margin="-1,0,0,0" Width="10" Height="8" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}"/>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </Canvas>

                                <StackPanel Name="BigAmPmPanel" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Width="90" 
                      Visibility="{TemplateBinding IsDigitalAmPmVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border Name="BigAmPmPanelBorder"
              CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}"
              BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" 
              BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}">
                                        <StackPanel Name="BigAmPmContainer" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Orientation="Horizontal">
                                            <TextBlock Name="TimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type local:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Name="BigAmPmSelectorGrid" Width="16" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <RepeatButton Name="UpRepeatButton" Grid.Row="0" Width="15" Height="10" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                <RepeatButton Name="DownRepeatButton" Grid.Row="1" Width="15" Height="10" Command="local:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:Clock.IsDigitalAmPmVisible" Value="False">
                            <Setter TargetName="BigAmPmPanel" Property="Width" Value="75" />
                        </Trigger>
                        <Trigger Property="local:Clock.IsDigitalAmPmVisible" Value="True">
                            <Setter TargetName="BigAmPmPanel" Property="Width" Value="90" />
                        </Trigger>

                        <Trigger Property="local:Clock.ClockFrameBrush" Value="Transparent">
                            <Setter TargetName="SecondInnerBorder" Property="Background" Value="{StaticResource Aero.SecondInnerBorderFrameColor}" />
                            <Setter TargetName="SecondBorder" Property="Background" Value="{StaticResource Aero.SecondBorderFrameColor}" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Bottom">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="96" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="49" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Top">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="16" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="48" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Left">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="10" />
                        </Trigger>
                        <Trigger Property="local:Clock.AMPMSelectorPosition" Value="Right">
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                            <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>    
      
    </Style>
    
</ResourceDictionary>
