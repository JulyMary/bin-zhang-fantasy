<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:system="clr-namespace:System;assembly=mscorlib"
					xmlns:converters="clr-namespace:Syncfusion.Windows.Tools">

	<converters:CultureToCalendarConverter x:Key="CultureToCalendarConverter"/>
	<local:BooleanToVisibilityConverterEx x:Key="BooleanToVisibilityConverter"/>	
    
	
	<system:String x:Uid="system:String_4" x:Key="AccessTodayText">Today : </system:String>
	
	<!-- Brushes-->
	<SolidColorBrush x:Key="Default.NotCurrentMonthDayCellForeground" Color="#000000"/>
	<!-- ShinyRed -->

 <SolidColorBrush x:Key="Default.SelectedWeekCellBorderBrush" Color="Beige"/>
    <LinearGradientBrush x:Key="ButtonBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FFCE6865"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFAF231E"
                  Offset="0.418" />
        <GradientStop Color="#FF601818"
                  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBorderBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FF000000"
                  Offset="1" />
    </LinearGradientBrush>
    
   
    <LinearGradientBrush x:Key="CalendarBorderBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FF646464" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FF000000"
                  Offset="1" />
    </LinearGradientBrush>

    <!--<SolidColorBrush x:Key="BorderBrushKey.ShinyRed" Color="#FF646464"/>-->

    <SolidColorBrush x:Key="BorderBrushKey.ShinyRed" Color="#FFCE6865"/>

    <!--<LinearGradientBrush x:Key="BorderBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FFCE6865"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFAF231E"
                  Offset="0.418" />
        <GradientStop Color="#FF601818"
                  Offset="1" />
    </LinearGradientBrush>-->

    <RadialGradientBrush x:Key="HighlightBrushKey.ShinyRed">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5"
                        CenterY="0.5"
                        ScaleX="1.804"
                        ScaleY="0.743" />
                <SkewTransform CenterX="0.5"
                       CenterY="0.5" />
                <RotateTransform CenterX="0.5"
                         CenterY="0.5" />
                <TranslateTransform Y="0.47999998927116394" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FFFFC398"
                  Offset="0.209" />
        <GradientStop Color="#FFAF231E"
                  Offset="1" />
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
    </RadialGradientBrush>

   

    <SolidColorBrush x:Key="TextBrushKey.ShinyRed" Color="#FF000000"/>
    <SolidColorBrush x:Key="SelectedTextBrushKey.ShinyRed" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="NotCurrentMonthTextBrushKey.ShinyRed" Color="#FFCE6865"/>

    <!--<LinearGradientBrush EndPoint="0.5,1" x:Key="CalendarBackgroundBrushKey.ShinyRed"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FF601818"
                  Offset="1" />
        <GradientStop Color="#FFAF231E"
        	Offset="0.326" />
        <GradientStop Color="#FF891D1B" Offset="1"/>
    </LinearGradientBrush>-->
    
    <SolidColorBrush x:Key="CalendarBackgroundBrushKey.ShinyRed" Color="#FFFFFFFF"/>
    
    <SolidColorBrush x:Key="HeaderHighlightTextBrushKey.ShinyRed" Color="#FFFAFAFA"/>
    <SolidColorBrush x:Key="HeaderTextBrushKey.ShinyRed" Color="#FFFFFFFF"/>

    <LinearGradientBrush x:Key="WindowBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,0"
                       StartPoint="0.5,1">
        <GradientStop Color="#FFD1D0D0" />
        <GradientStop Color="#FFAE3239"
                  Offset="1" />
    </LinearGradientBrush>

    <!--<LinearGradientBrush x:Key="HeaderBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FFA1A1A1"
                  Offset="1" />
    </LinearGradientBrush>-->

    <!--<LinearGradientBrush x:Key="HeaderBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FFA1A1A1"
                  Offset="1" />
    </LinearGradientBrush>-->
    
    <LinearGradientBrush x:Key="HeaderBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FFCE6865"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFAF231E"
                  Offset="0.418" />
        <GradientStop Color="#FF601818"
                  Offset="1" />
    </LinearGradientBrush>


    <!--<LinearGradientBrush x:Key="WindowBackgroundBrushKey.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFD1D1D1" />
        <GradientStop Color="#FF8496AA"
                  Offset="1" />
    </LinearGradientBrush>-->

    <LinearGradientBrush x:Key="SelectedDayCellBorderBrush.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373"
                  Offset="0.38" />
        <GradientStop Color="#FF646464"
                  Offset="0.384" />
        <GradientStop Color="#FF000000"
                  Offset="1" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="ToDayCellBorderBrush.ShinyRed"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFF1BCBE"
                  Offset="0" />
        <GradientStop Color="#FFCE6865"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFAF231E"
                  Offset="0.418" />
        <GradientStop Color="#FF601818"
                  Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="ToDayCellForeground.ShinyRed" Color="#FF000000"/>
    
    <!-- ShinyBlue -->

    <LinearGradientBrush x:Key="ButtonBackgroundBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBAE4FF" Offset="0" />
        <GradientStop Color="#FF398FDF" Offset="0.41800001263618469" />
        <GradientStop Color="#FF006DD4" Offset="0.418" />
        <GradientStop Color="#FF0A3E69" Offset="1" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="ToDayCellBorderBrush.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBAE4FF" Offset="0" />
        <GradientStop Color="#FF398FDF" Offset="0.41800001263618469" />
        <GradientStop Color="#FF006DD4" Offset="0.418" />
        <GradientStop Color="#FF0A3E69" Offset="1" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="HeaderBackgroundBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBAE4FF" Offset="0" />
        <GradientStop Color="#FF398FDF" Offset="0.41800001263618469" />
        <GradientStop Color="#FF006DD4" Offset="0.418" />
        <GradientStop Color="#FF0A3E69" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonBorderBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FF000000" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedDayCellBorderBrush.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FF000000" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CalendarBorderBrushKey.ShinyBlue" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Color="#FF737373" Offset="0.38" />
        <GradientStop Color="#FF646464" Offset="0.384" />
        <GradientStop Color="#FF000000" Offset="1" />
    </LinearGradientBrush>


    <SolidColorBrush x:Key="BorderBrushKey.ShinyBlue" Color="#FF2C323A"/>

    <RadialGradientBrush x:Key="HighlightBrushKey.ShinyBlue">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.804" ScaleY="0.743" />
                <SkewTransform CenterX="0.5" CenterY="0.5" />
                <RotateTransform CenterX="0.5" CenterY="0.5" />
                <TranslateTransform Y="0.47999998927116394" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FF98DAFF" Offset="0.209" />
        <GradientStop Color="#FF006DD4" Offset="1" />
        <GradientStop Color="#FFBAE4FF" Offset="0" />
    </RadialGradientBrush>

    <SolidColorBrush x:Key="NotCurrentMonthTextBrushKey.ShinyBlue" Color="#FF2C323A"/>

    <LinearGradientBrush x:Key="WindowBackgroundBrushKey.ShinyBlue" StartPoint="0.500001,0" EndPoint="0.500001,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF2C3239" Offset="0"/>
            <GradientStop Color="#FF8395A9" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
	
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="OfficeForegroundBrush" Color="#000000"/>
    <SolidColorBrush x:Key="DefaultHeaderBackground" Color="Transparent"/>
	  <SolidColorBrush x:Key="DayNameCellBorderBrush" Color="LightGray"/>
	  <SolidColorBrush x:Key="Default.WeekCellBackground" Color="Transparent"/>
	<SolidColorBrush x:Key="Default.CalendarInnerBorderBrush" Color="#EAEEEF"/>
	
	 <!--NavigateButtonBase-->
    <Style  TargetType="{x:Type local:NavigateButtonBase}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
       <Setter Property="Template">
            <Setter.Value>              
        <ControlTemplate  TargetType="{x:Type local:NavigateButtonBase}">
        <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
    </ControlTemplate> 
      </Setter.Value>
        </Setter>
    </Style>
	
	
	    <!--WeekNumberCellDefault-->
    <ControlTemplate x:Key="WeekNumberCellDefault" TargetType="{x:Type local:WeekNumberCell}">
        <Border x:Name="Border" TextBlock.Foreground="{Binding Path=WeekNumberForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
		    Background="{Binding Path=WeekNumberBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"                                    
			CornerRadius="{Binding Path=WeekNumberCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                Focusable="True"
                BorderBrush="{Binding Path=WeekNumberBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
		    BorderThickness="{Binding Path=WeekNumberBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}">
            <ContentPresenter ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              />
        </Border>
      <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>

                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberSelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberSelectionBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberSelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=WeekNumberSelectionBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Path=WeekNumberSelectionBorderCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>	
    

    <ControlTemplate x:Key="ButtonNextTemplate.ShinyRed" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.NextCommand"   
								  Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center"  
								 Width="25" Height="25"
								  BorderBrush="Transparent"
								  CornerRadius="2">
            <Border Name="Bd" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"   CornerRadius="2">
                <StackPanel Margin="4" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path x:Name="Triangle"  StrokeThickness="1" Data="F1 M 4.03778,1.39136L 2.75128,1.39136L 2.75128,0L 0,0L 0,1.40689L 1.34644,1.40689L 1.34644,2.71475L 2.67975,2.71475L 2.67975,4.01627L 1.34644,4.01627L 1.34644,5.31836L 0.0442505,5.31836L 0.0442505,6.64185L 2.73578,6.64185L 2.73578,5.33984L 4.03778,5.33984L 4.03778,4.02734L 5.37109,4.02734L 5.37109,2.7037L 4.03778,2.7037L 4.03778,1.39136 Z" Fill="#FFFFFFFF"/>
                    <Path x:Name="Triangle1" Margin="-7,0,0,0" StrokeThickness="1" Data="F1 M 10.2044,2.7037L 10.2044,1.39136L 8.91797,1.39136L 8.91797,0L 6.16669,0L 6.16669,1.40689L 7.51312,1.40689L 7.51312,2.71475L 8.84644,2.71475L 8.84644,4.01627L 7.51312,4.01627L 7.51312,5.31836L 6.21094,5.31836L 6.21094,6.64185L 8.9024,6.64185L 8.9024,5.33984L 10.2044,5.33984L 10.2044,4.02734L 11.5378,4.02734L 11.5378,2.7037L 10.2044,2.7037 Z" Fill="#FFFFFFFF"/>
                </StackPanel>
            </Border>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyBlue}"/>
            </Trigger>
           
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonPrevTemplate.ShinyRed" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.PrevCommand"
								  Background="Transparent" 
								  Width="25" Height="25"  HorizontalAlignment="Center" VerticalAlignment="Center"  
								  BorderBrush="Transparent"
							      CornerRadius="2">
            <Border Name="Bd" Margin="1,0,0,0" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"   CornerRadius="2">
                <StackPanel Margin="4" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path x:Name="Triangle" Margin="-6,0,0,0"  StrokeThickness="1" Data="F1 M 7.5,5.25073L 8.78644,5.25073L 8.78644,6.64191L 11.5378,6.64191L 11.5378,5.23492L 10.1913,5.23492L 10.1913,3.92706L 8.858,3.92706L 8.858,2.62564L 10.1913,2.62564L 10.1913,1.32349L 11.4935,1.32349L 11.4935,0L 8.802,0L 8.802,1.302L 7.5,1.302L 7.5,2.61456L 6.16669,2.61456L 6.16669,3.93814L 7.5,3.93814L 7.5,5.25073 Z " Fill="#FFFFFFFF"/>
                    <Path x:Name="Triangle1" Margin="-1,0,0,0" StrokeThickness="1" Data="F1 M 1.33334,3.93814L 1.33334,5.25073L 2.61975,5.25073L 2.61975,6.64191L 5.37109,6.64191L 5.37109,5.23492L 4.02466,5.23492L 4.02466,3.92706L 2.69135,3.92706L 2.69135,2.62564L 4.02466,2.62564L 4.02466,1.32349L 5.32684,1.32349L 5.32684,0L 2.63535,0L 2.63535,1.302L 1.33334,1.302L 1.33334,2.61456L 0,2.61456L 0,3.93814L 1.33334,3.93814 Z " Fill="#FFFFFFFF"/>
                </StackPanel>
            </Border>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
      <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyBlue}"/>
            </Trigger>
            
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
	
	
	
	    <!--WeekNumberCellPanelDefault-->
    <ControlTemplate x:Key="WeekNumberCellPanelDefault" TargetType="{x:Type local:WeekNumberCellPanel}">
        <Border x:Name="Border" TextBlock.Foreground="{Binding Path=WeekNumberForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    Background="{Binding Path=WeekNumberBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    CornerRadius="{Binding Path=WeekNumberCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    Focusable="True"
                    BorderBrush="{Binding Path=WeekNumberBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
                    BorderThickness="{Binding Path=WeekNumberBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}">

            <ContentPresenter  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}"			
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					>
            </ContentPresenter>


        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>

                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberSelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberSelectionBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberSelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=WeekNumberSelectionBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Path=WeekNumberSelectionBorderCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
	
	

	<Style  TargetType="{x:Type local:DayCell}" >
<Setter Property="Template">
            <Setter.Value>
    <ControlTemplate  TargetType="{x:Type local:DayCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter" 
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle"
				Visibility="{TemplateBinding Rectangle.Visibility}"
				RadiusX="2" 
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDate" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsDate" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <EventTrigger RoutedEvent="local:DayCell.Highlight">
                <EventTrigger.Actions>                   
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" AutoReverse="True" FillBehavior="Stop">
                            <ThicknessAnimation To="0.5" Duration="0:0:0.75" AccelerationRatio="0.8"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

         
			
			

        <Trigger Property="IsCurrentMonth" Value="False">
            <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{Binding Path=NotCurrentMonthForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        </Trigger>
                       
           
              <Trigger Property="IsToday" Value="True">
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectedDayCellForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsToday" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
                       
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsToday" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                        </MultiTrigger>


						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsToday" Value="false"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
                       
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsToday" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsToday" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsToday" Value="true"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>	
  </Setter.Value>
        </Setter>
    </Style>
	
	<!--WeekNumberCell-->
    <Style  TargetType="{x:Type local:WeekNumberCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderThickness" Value="0,0,0.5,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
        <Setter Property="Control.Template" Value ="{StaticResource WeekNumberCellDefault}"/>       
        <Setter Property="Focusable" Value="True"/>
        
    </Style>
	
	<!--WeekNumberCellPanel-->
    <Style  TargetType="{x:Type local:WeekNumberCellPanel}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderThickness" Value="0,0,0.5,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
        <Setter Property="Control.Template" Value ="{StaticResource WeekNumberCellPanelDefault}"/>
        <Setter Property="Control.Focusable" Value="True"/>
        
    </Style>

    <!--MonthCellDefault-->
	<Style  TargetType="{x:Type local:MonthCell}" >
<Setter Property="Template">
            <Setter.Value>
    <ControlTemplate  TargetType="{x:Type local:MonthCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

               <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>                      


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>
	  </Setter.Value>
        </Setter>
    </Style>

    <!--YearCellDefault-->
	<Style  TargetType="{x:Type local:YearCell}" >
<Setter Property="Template">
            <Setter.Value>
    <ControlTemplate  TargetType="{x:Type local:YearCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>           
            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyRed}"/>
            </Trigger>          
               <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>                      


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>
	  </Setter.Value>
        </Setter>
    </Style>

    <!--YearRangeCellDefault-->
	<Style  TargetType="{x:Type local:YearRangeCell}" >
<Setter Property="Template">
            <Setter.Value>
    <ControlTemplate  TargetType="{x:Type local:YearRangeCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyRed}"/>
            </Trigger>
                <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>                      


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </MultiTrigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>
	  </Setter.Value>
        </Setter>
    </Style>
	
    
	<ControlTemplate x:Key="ShinyMonthButtonDefault" TargetType="{x:Type local:MonthButton}">
        <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="ShinyMonthButtonStyle" TargetType="{x:Type local:MonthButton}">
        <Setter Property="HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource  HeaderTextBrushKey.ShinyRed}"/>
        <Setter Property="TextBlock.FontFamily" Value="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontSize" Value="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontStyle" Value="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontWeight" Value="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template" Value ="{StaticResource ShinyMonthButtonDefault}"/>
       
    </Style>

    <Style x:Key="ShinyTodayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Default.NotCurrentMonthDayCellForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="1,0,1,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 <!--DayNameCellDefault-->
    <ControlTemplate x:Key="DayNameCellDefault" TargetType="{x:Type local:DayNameCell}">
        <Border x:Name="Border" TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>

 <!--NavigateButton-->
    <Style  TargetType="{x:Type local:NavigateButton}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
    </Style>

    <!--DayNameCell-->
    <Style  TargetType="{x:Type local:DayNameCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource DayNameCellBorderBrush}"/>
        <Setter Property="Control.Template" Value ="{StaticResource DayNameCellDefault}"/>
       
    </Style>

    <!--DayNamesGrid-->
    <Style  TargetType="{x:Type local:DayNamesGrid}">
        <Setter Property="Control.Focusable" Value="False"/>
        
    </Style>

    

    <!--WeekNumberGrid-->
    <Style  TargetType="{x:Type local:WeekNumbersGrid}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>

    <!--DayGrid-->
    <Style  TargetType="{x:Type local:DayGrid}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>

    <!--MonthGrid-->
    <Style  TargetType="{x:Type local:MonthGrid}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>

    <!--YearGrid-->
    <Style  TargetType="{x:Type local:YearGrid}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>

    <!--YearRangeGrid-->
    <Style  TargetType="{x:Type local:YearRangeGrid}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>
    
    <!--WeekNumberGridPanel-->
    <Style  TargetType="{x:Type local:WeekNumberGridPanel}">
        <Setter Property="Control.Focusable" Value="True"/>
    </Style>   
    

	<Style x:Key="ShinyBlueCalendarEditStyle" TargetType="{x:Type local:CalendarEdit}" >        
	<Setter Property="Control.MinWidth" Value="150"/>
        <Setter Property="Control.MinHeight" Value="150"/>
        <Setter Property="Control.MaxWidth" Value="450"/>
        <Setter Property="Control.MaxHeight" Value="450"/>
        <Setter Property="BorderThickness" Value="1"/>
		   <Setter Property="WeekNumberBorderThickness" Value="1"/>
        <Setter Property="WeekNumberCornerRadius" Value="2"/>
		    <Setter Property="WeekNumberSelectionBorderThickness" Value="1"/>
        <Setter Property="WeekNumberSelectionBorderCornerRadius" Value="2"/>
		<Setter Property="Calendar" Value="{Binding	Path=Culture, RelativeSource={RelativeSource Self}, Converter={StaticResource CultureToCalendarConverter}}"/>
		<Setter Property="Background" Value="{StaticResource CalendarBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrushKey.ShinyBlue}"/>
                <Setter Property="HeaderBackground" Value="{StaticResource HeaderBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="HeaderForeground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="SelectionBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberSelectionBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberHoverBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberHoverBackground" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberHoverForeground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="WeekNumberSelectionBackground" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberSelectionBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="WeekNumberSelectionForeground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="WeekNumberBackground" Value="{StaticResource CalendarBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="WeekNumberForeground" Value="{StaticResource TextBrushKey.ShinyRed}"/>
                <Setter Property="SelectionForeground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
				
				
				  <Setter Property="MouseOverBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="MouseOverBackground" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="MouseOverForeground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="SelectedDayCellBackground" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="SelectedDayCellBorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
        <Setter Property="SelectedDayCellForeground" Value="{StaticResource Default.NotCurrentMonthDayCellForeground}"/>
				
				<Setter Property="NotCurrentMonthForeground" Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyBlue}"/>

    
                       
				
				
<Setter Property="Template">
            <Setter.Value>
    <ControlTemplate  TargetType="{x:Type local:CalendarEdit}">
        <Border Name="Border" CornerRadius="4"  BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}">
            <Border BorderBrush="{StaticResource CalendarBorderBrushKey.ShinyRed}"  BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="MainGrid" FlowDirection="{TemplateBinding FlowDirection}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Margin="0,0,0,-2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>

                        <StackPanel Name="PART_NextMonthButtonPanel" Grid.Row="0" Grid.Column="2" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:NavigateButton Name="PART_NextMonthButton" 
				            Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" 
				            MinWidth="5" MinHeight="5"
				            HorizontalAlignment="Right" VerticalAlignment="Center"
				            Template="{StaticResource ButtonNextTemplate.ShinyRed}" />
                        </StackPanel>
                        <StackPanel Name="PART_PrevMonthButtonPanel" Grid.Row="0"  Grid.Column="0" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:NavigateButton Name ="PART_PrevMonthButton" 
				                Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
				                MinWidth="5" MinHeight="5"
				                HorizontalAlignment="Left" VerticalAlignment="Center"
				                Template="{StaticResource ButtonPrevTemplate.ShinyRed}" />
                        </StackPanel>

                        <local:MonthButton Name="PART_Month1" Grid.Row="0" Grid.Column="1" Margin="-2,0,-2,0"
                                            Style="{StaticResource ShinyMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <local:MonthButton Name="PART_Month2" Grid.Row="0" Grid.Column="1" Margin="-2,0,-2,0"
                                            Style="{StaticResource ShinyMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" />

                        <StackPanel Name="PART_YearUpDownPanel" 
                              Grid.Row="0" Grid.Column="1" 
                              Visibility="Collapsed"
                              HorizontalAlignment="Center" 
                              Orientation="Horizontal">
                            <TextBlock Name="PART_EditMonthName"
                                   Padding="1"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"/>
                        <local:UpDown Name="PART_YearUpDown"
                                        MinValue="{Binding Path=MinDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        MaxValue="{Binding Path=MaxDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        Width="45"
                                        Height="18"
                                        HorizontalAlignment="Center"
                                        BorderThickness="0" />
                    </StackPanel>

                    </Grid>

                    <Popup Name="PART_MonthPopup" Grid.Row="0" Grid.Column="2" Placement="Center">
                        <ListBox Width="100" HorizontalContentAlignment ="Center"/>
                    </Popup>

                    <ContentPresenter Name="PART_WeekNumbers" Visibility="Collapsed" Grid.Column="0" Grid.Row="2"
                    ClipToBounds="True"
                    Content="{Binding Path=WeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="4"  Content="{Binding Path=DayNamesGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Name="WeekNumbersForYearCurrent" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Name="WeekNumbersForYearFollow" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>

                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Grid  Name="PART_TodayGrid" Grid.Row="3" Height="25" Grid.ColumnSpan="4" 
						Background="Transparent"
						TextBlock.Foreground="{StaticResource TextBrushKey.ShinyRed}"
						Visibility="{Binding Path=TodayRowIsVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"  x:Uid="AccessTodayTextID"
							Content="{StaticResource AccessTodayText}"                         
							Style="{StaticResource ShinyTodayButtonStyle}"
							Width="Auto" Name="PART_TodayButton"/>
                        <Border Grid.Column="1" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
                            <TextBlock HorizontalAlignment="Center" 
								Text="{Binding Path=TodayDate, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Border>
                    </Grid>
                </Grid>
            </Border>
        </Border>       
    </ControlTemplate>
	  </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ShinyBlueCalendarEditStyle}" TargetType="{x:Type local:CalendarEdit}"/>
	
</ResourceDictionary>