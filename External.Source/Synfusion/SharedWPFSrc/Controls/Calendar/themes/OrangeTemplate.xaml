<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:utilsOuter="clr-namespace:Syncfusion.Windows.Shared">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/Calendar/themes/Brushes.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/Calendar/themes/generic.converters.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Themes/LangDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="OrangeButtonNextDefault" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.NextCommand"   
								  Background="Transparent"
								  BorderThickness="0.5"
								  BorderBrush="Transparent"
								  CornerRadius="3">
            <StackPanel Height="15" Width="30" >
                <Polygon Name="Triangle" HorizontalAlignment="Center" Points="9,9 3,3 3,13 9,9" Fill="{StaticResource ButtonFill.Orange}" Stroke="{StaticResource ButtonStroke.Orange}" StrokeThickness="1"/>
            </StackPanel>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Triangle" Property="Fill" Value="{StaticResource MouseOverButtonFillLeft.Orange}"/>
                <Setter TargetName="Triangle" Property="Stroke" Value="{StaticResource MouseOverButtonStroke.Orange}"/>
            </Trigger>
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="Triangle"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="OrangeButtonPrevDefault" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.PrevCommand"
								  Background="Transparent"
								  BorderThickness="0.5"
								  BorderBrush="Transparent"
							      CornerRadius="3">
            <StackPanel Height="15"  Width="30" >
                <Polygon Name="Triangle"  HorizontalAlignment="Center" Points="-1,8 5,3 5,13 -1,8" Fill="{StaticResource ButtonFill.Orange}" Stroke="{StaticResource ButtonStroke.Orange}" StrokeThickness="1"/>
            </StackPanel>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Triangle" Property="Fill" Value="{StaticResource MouseOverButtonFillRight.Orange}"/>
                <Setter TargetName="Triangle" Property="Stroke" Value="{StaticResource MouseOverButtonStroke.Orange}"/>
            </Trigger>
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="Triangle"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="OrangeMonthButtonDefault" TargetType="{x:Type local:MonthButton}">
        <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="MonthButtonStyle" TargetType="{x:Type local:MonthButton}">
        <Setter Property="HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Aero.HeaderColor}"/>
        <Setter Property="TextBlock.FontFamily" Value="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontSize" Value="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontStyle" Value="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontWeight" Value="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template" Value ="{StaticResource OrangeMonthButtonDefault}"/>
      
    </Style>


    <!--DayCellDefault-->
    <ControlTemplate x:Key="OrangeDayCellDefault" TargetType="{x:Type local:DayCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter" 
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle"
				Visibility="{TemplateBinding Rectangle.Visibility}"
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource SelectedDayCellBorderBrush.Orange}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDate" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsDate" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <EventTrigger RoutedEvent="local:DayCell.Highlight">
                <EventTrigger.Actions>                    
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" AutoReverse="True" FillBehavior="Stop">
                            <ThicknessAnimation To="0.5" Duration="0:0:0.75" AccelerationRatio="0.8"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <Trigger Property="IsCurrentMonth" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthDayCellForeground.Orange}"/>
            </Trigger>
            <Trigger Property="IsToday" Value="True">
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedDayCellForeground.Orange}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <!--<Setter Property="BorderBrush" Value="{utilsOuter:SkinObject MouseOverDayCellBorderBrush}"/>-->
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource SelectedDayCellBackground.Orange}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>-->
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <!--<Setter Property="BorderBrush" Value="{utilsOuter:SkinObject MouseOverDayCellBorderBrush}"/>-->
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource SelectedDayCellBackground.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>-->
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--MonthCellDefault-->
    <ControlTemplate x:Key="OrangeMonthCellDefault" TargetType="{x:Type local:MonthCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource SelectedDayCellBorderBrush.Orange}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>

                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource SelectedDayCellBackground.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

                <!--<Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>-->
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--YearCellDefault-->
    <ControlTemplate x:Key="OrangeYearCellDefault" TargetType="{x:Type local:YearCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource SelectedDayCellBorderBrush.Orange}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthDayCellForeground.Orange}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource SelectedDayCellBackground.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>-->
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--YearRangeCellDefault-->
    <ControlTemplate x:Key="OrangeYearRangeCellDefault" TargetType="{x:Type local:YearRangeCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource SelectedDayCellBorderBrush.Orange}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthDayCellForeground.Orange}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource SelectedDayCellBackground.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <!--<Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>-->
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource MouseOverDayCellForeground.Orange}"/>
                <Setter Property="Background" Value="{StaticResource MouseOverDayCellBackground.Orange}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SelectedDayCellBorderBrush.Orange}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--TodayButtonStyle-->
    <Style x:Key="OrangeTodayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource NotCurrentMonthDayCellForeground.Orange}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="1,0,1,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="OrangeCalendarEditTemplate" TargetType="{x:Type local:CalendarEdit}">
        <Border Name="Border" CornerRadius="4" BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid x:Name="MainGrid" FlowDirection="{TemplateBinding FlowDirection}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <StackPanel Name="PART_NextMonthButtonPanel" Grid.Row="0"  Grid.Column="2" >
                        <local:NavigateButton Name="PART_NextMonthButton"
				            Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" 
				            MinWidth="7" MinHeight="5"  Margin="0,5,0,0"
				            HorizontalAlignment="Right" VerticalAlignment="Bottom"
				            Template="{StaticResource OrangeButtonNextDefault}" />
                    </StackPanel>
                    <StackPanel Name="PART_PrevMonthButtonPanel" Grid.Row="0" Grid.Column="0">
                        <local:NavigateButton Name ="PART_PrevMonthButton" Margin="0,5,0,0"
				                Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
				                MinWidth="7" MinHeight="5"
				                HorizontalAlignment="Left" VerticalAlignment="Center"
				                Template="{StaticResource OrangeButtonPrevDefault}" />
                    </StackPanel>

                    <local:MonthButton Name="PART_Month1" Grid.Row="0" Grid.Column="1"
                                            Style="{StaticResource MonthButtonStyle}" 
							     Background="{Binding Path=HeaderBackground,  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <local:MonthButton Name="PART_Month2" Grid.Row="0" Grid.Column="1"
                                            Style="{StaticResource MonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground,  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" />

                    <StackPanel Name="PART_YearUpDownPanel" 
                              Grid.Row="0" Grid.Column="1"
                              Visibility="Collapsed"
                              HorizontalAlignment="Center" 
                              Orientation="Horizontal">
                        <TextBlock Name="PART_EditMonthName"
                                   Padding="1"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"/>
                        <local:UpDown Name="PART_YearUpDown"
                                        MinValue="{Binding Path=MinDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        MaxValue="{Binding Path=MaxDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        Width="45"
                                        Height="18"
                                        HorizontalAlignment="Center"
                                        BorderThickness="0" />
                    </StackPanel>

                </Grid>

                <Popup Name="PART_MonthPopup" Grid.Row="0" Grid.Column="2" Placement="Center">
                    <ListBox Width="100" HorizontalContentAlignment ="Center"/>
                </Popup>

                <ContentPresenter Name="PART_WeekNumbers" Visibility="Collapsed" Grid.Column="0" Grid.Row="2"
                                  ClipToBounds="True" 
                                  Content="{Binding Path=WeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>

                <Grid Grid.ColumnSpan="4" Grid.Row="1" Grid.Column="1">
                    <ContentPresenter Margin="0,5,0,0" Content="{Binding Path=DayNamesGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
                <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Name="WeekNumbersForYearCurrent" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Name="WeekNumbersForYearFollow" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Grid  Name="PART_TodayGrid" Grid.Row="3" Grid.ColumnSpan="4" 
						Background="{StaticResource DefaultHeaderBackground.Orange}"						
						TextBlock.Foreground="{StaticResource ForegroundBrush.Orange}"
						Visibility="{Binding Path=TodayRowIsVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"  x:Uid="AccessTodayTextID"
							Content="{StaticResource AccessTodayText}"                         
							Style="{StaticResource OrangeTodayButtonStyle}"
							Width="Auto" Name="PART_TodayButton"/>
                    <Border Grid.Column="1" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center" 
								Text="{Binding Path=TodayDate, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </Grid>
            </Grid>
        </Border>
       
    </ControlTemplate>


</ResourceDictionary>