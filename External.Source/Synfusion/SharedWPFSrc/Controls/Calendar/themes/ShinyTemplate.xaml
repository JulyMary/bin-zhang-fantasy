<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Syncfusion.Windows.Shared"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/Calendar/themes/Brushes.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Controls/Calendar/themes/generic.converters.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/Themes/LangDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="NavigateButtonTemplate.ShinyRed" TargetType="{x:Type local:NavigateButtonBase}">
        <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>   

    <ControlTemplate x:Key="ButtonNextTemplate.ShinyRed" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.NextCommand"   
								  Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center"  
								 Width="25" Height="25"
								  BorderBrush="Transparent"
								  CornerRadius="2">
            <Border Name="Bd" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"   CornerRadius="2">
                <StackPanel Margin="4" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path x:Name="Triangle"  StrokeThickness="1" Data="F1 M 4.03778,1.39136L 2.75128,1.39136L 2.75128,0L 0,0L 0,1.40689L 1.34644,1.40689L 1.34644,2.71475L 2.67975,2.71475L 2.67975,4.01627L 1.34644,4.01627L 1.34644,5.31836L 0.0442505,5.31836L 0.0442505,6.64185L 2.73578,6.64185L 2.73578,5.33984L 4.03778,5.33984L 4.03778,4.02734L 5.37109,4.02734L 5.37109,2.7037L 4.03778,2.7037L 4.03778,1.39136 Z" Fill="#FFFFFFFF"/>
                    <Path x:Name="Triangle1" Margin="-7,0,0,0" StrokeThickness="1" Data="F1 M 10.2044,2.7037L 10.2044,1.39136L 8.91797,1.39136L 8.91797,0L 6.16669,0L 6.16669,1.40689L 7.51312,1.40689L 7.51312,2.71475L 8.84644,2.71475L 8.84644,4.01627L 7.51312,4.01627L 7.51312,5.31836L 6.21094,5.31836L 6.21094,6.64185L 8.9024,6.64185L 8.9024,5.33984L 10.2044,5.33984L 10.2044,4.02734L 11.5378,4.02734L 11.5378,2.7037L 10.2044,2.7037 Z" Fill="#FFFFFFFF"/>
                </StackPanel>
            </Border>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyRed}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyBlue}"/>
            </MultiTrigger>
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonPrevTemplate.ShinyRed" TargetType="{x:Type local:NavigateButton}">
        <local:NavigateButtonBase x:Name="Button" Command="local:CalendarEdit.PrevCommand"
								  Background="Transparent" 
								  Width="25" Height="25"  HorizontalAlignment="Center" VerticalAlignment="Center"  
								  BorderBrush="Transparent"
							      CornerRadius="2">
            <Border Name="Bd" Margin="1,0,0,0" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"   CornerRadius="2">
                <StackPanel Margin="4" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path x:Name="Triangle" Margin="-6,0,0,0"  StrokeThickness="1" Data="F1 M 7.5,5.25073L 8.78644,5.25073L 8.78644,6.64191L 11.5378,6.64191L 11.5378,5.23492L 10.1913,5.23492L 10.1913,3.92706L 8.858,3.92706L 8.858,2.62564L 10.1913,2.62564L 10.1913,1.32349L 11.4935,1.32349L 11.4935,0L 8.802,0L 8.802,1.302L 7.5,1.302L 7.5,2.61456L 6.16669,2.61456L 6.16669,3.93814L 7.5,3.93814L 7.5,5.25073 Z " Fill="#FFFFFFFF"/>
                    <Path x:Name="Triangle1" Margin="-1,0,0,0" StrokeThickness="1" Data="F1 M 1.33334,3.93814L 1.33334,5.25073L 2.61975,5.25073L 2.61975,6.64191L 5.37109,6.64191L 5.37109,5.23492L 4.02466,5.23492L 4.02466,3.92706L 2.69135,3.92706L 2.69135,2.62564L 4.02466,2.62564L 4.02466,1.32349L 5.32684,1.32349L 5.32684,0L 2.63535,0L 2.63535,1.302L 1.33334,1.302L 1.33334,2.61456L 0,2.61456L 0,3.93814L 1.33334,3.93814 Z " Fill="#FFFFFFFF"/>
                </StackPanel>
            </Border>
        </local:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyRed}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrushKey.ShinyBlue}"/>
            </MultiTrigger>
            <Trigger Property="Enabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ShinyDayCellDefault" TargetType="{x:Type local:DayCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter" 
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle"
				Visibility="{TemplateBinding Rectangle.Visibility}"
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource ButtonBorderBrushKey.ShinyRed}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDate" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsDate" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <EventTrigger RoutedEvent="local:DayCell.Highlight">
                <EventTrigger.Actions>                   
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" AutoReverse="True" FillBehavior="Stop">
                            <ThicknessAnimation To="0.5" Duration="0:0:0.75" AccelerationRatio="0.8"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsCurrentMonth" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyRed}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCurrentMonth" Value="False"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyBlue}"/>

            </MultiTrigger>
            <Trigger Property="IsToday" Value="True">
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource ToDayCellForeground.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToDayCellBorderBrush.ShinyRed}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsToday" Value="True"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource ToDayCellForeground.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToDayCellBorderBrush.ShinyBlue}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>               
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsToday" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>              
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsToday" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>                
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsToday" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--MonthCellDefault-->
    <ControlTemplate x:Key="ShinyMonthCellDefault" TargetType="{x:Type local:MonthCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource ButtonBorderBrushKey.ShinyRed}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>

                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>

                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--YearCellDefault-->
    <ControlTemplate x:Key="ShinyYearCellDefault" TargetType="{x:Type local:YearCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource ButtonBorderBrushKey.ShinyRed}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2"
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>           
            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyRed}"/>
            </Trigger>          
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--YearRangeCellDefault-->
    <ControlTemplate x:Key="ShinyYearRangeCellDefault" TargetType="{x:Type local:YearRangeCell}" >
        <local:DayCellPanel>
            <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"
			>
                <ContentPresenter x:Name="DayContentPresenter"  				
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                </ContentPresenter>
            </Border>
            <Rectangle x:Name="Rectangle" 			    				
				Visibility="{TemplateBinding Rectangle.Visibility}" 
				RadiusX="2" 
				RadiusY="2"
				Stroke="{StaticResource ButtonBorderBrushKey.ShinyRed}" 
				StrokeThickness="1" 
				StrokeDashArray="2,2" 						
				Margin="2"/>
        </local:DayCellPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsBelongToCurrentRange" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource NotCurrentMonthTextBrushKey.ShinyRed}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource HeaderTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyRed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyRed}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false"/>
                    <Condition Property="local:SkinStorage.VisualStyle" Value="ShinyBlue"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{StaticResource SelectedTextBrushKey.ShinyRed}"/>
                <Setter Property="Background" Value="{StaticResource HighlightBrushKey.ShinyBlue}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushKey.ShinyBlue}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ShinyMonthButtonDefault" TargetType="{x:Type local:MonthButton}">
        <Border x:Name="Border" 
		    Background="{TemplateBinding Background}" 
			BorderBrush="{TemplateBinding Border.BorderBrush}" 			
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="ShinyMonthButtonStyle" TargetType="{x:Type local:MonthButton}">
        <Setter Property="HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Aero.HeaderColor}"/>
        <Setter Property="TextBlock.FontFamily" Value="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontSize" Value="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontStyle" Value="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="TextBlock.FontWeight" Value="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CalendarEdit}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template" Value ="{StaticResource ShinyMonthButtonDefault}"/>
        <Style.Triggers>           
            <Trigger Property="local:SkinStorage.VisualStyle" Value="ShinyRed">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource  HeaderTextBrushKey.ShinyRed}"/>
            </Trigger>
            <Trigger Property="local:SkinStorage.VisualStyle" Value="ShinyBlue">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource  HeaderTextBrushKey.ShinyRed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShinyTodayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Default.NotCurrentMonthDayCellForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="1,0,1,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="CalendarEditTemplate.ShinyRed" TargetType="{x:Type local:CalendarEdit}">
        <Border Name="Border" CornerRadius="4"  BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}">
            <Border BorderBrush="{StaticResource CalendarBorderBrushKey.ShinyRed}"  BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="MainGrid" FlowDirection="{TemplateBinding FlowDirection}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Margin="0,0,0,-2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>

                        <StackPanel Name="PART_NextMonthButtonPanel" Grid.Row="0" Grid.Column="2" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:NavigateButton Name="PART_NextMonthButton" 
				            Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" 
				            MinWidth="5" MinHeight="5"
				            HorizontalAlignment="Right" VerticalAlignment="Center"
				            Template="{StaticResource ButtonNextTemplate.ShinyRed}" />
                        </StackPanel>
                        <StackPanel Name="PART_PrevMonthButtonPanel" Grid.Row="0"  Grid.Column="0" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:NavigateButton Name ="PART_PrevMonthButton" 
				                Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
				                MinWidth="5" MinHeight="5"
				                HorizontalAlignment="Left" VerticalAlignment="Center"
				                Template="{StaticResource ButtonPrevTemplate.ShinyRed}" />
                        </StackPanel>

                        <local:MonthButton Name="PART_Month1" Grid.Row="0" Grid.Column="1" Margin="-2,0,-2,0"
                                            Style="{StaticResource ShinyMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <local:MonthButton Name="PART_Month2" Grid.Row="0" Grid.Column="1" Margin="-2,0,-2,0"
                                            Style="{StaticResource ShinyMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" />

                        <StackPanel Name="PART_YearUpDownPanel" 
                              Grid.Row="0" Grid.Column="1" 
                              Visibility="Collapsed"
                              HorizontalAlignment="Center" 
                              Orientation="Horizontal">
                            <TextBlock Name="PART_EditMonthName"
                                   Padding="1"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"/>
                        <local:UpDown Name="PART_YearUpDown"
                                        MinValue="{Binding Path=MinDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        MaxValue="{Binding Path=MaxDate.Year, RelativeSource={RelativeSource AncestorType={x:Type local:CalendarEdit}}}"
                                        Width="45"
                                        Height="18"
                                        HorizontalAlignment="Center"
                                        BorderThickness="0" />
                    </StackPanel>

                    </Grid>

                    <Popup Name="PART_MonthPopup" Grid.Row="0" Grid.Column="2" Placement="Center">
                        <ListBox Width="100" HorizontalContentAlignment ="Center"/>
                    </Popup>

                    <ContentPresenter Name="PART_WeekNumbers" Visibility="Collapsed" Grid.Column="0" Grid.Row="2"
                    ClipToBounds="True"
                    Content="{Binding Path=WeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="4"  Content="{Binding Path=DayNamesGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingDayGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Name="WeekNumbersForYearCurrent" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Name="WeekNumbersForYearFollow" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}"/>

                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=CurrentYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingMonthGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="4" ClipToBounds="True" Content="{Binding Path=FollowingYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Grid  Name="PART_TodayGrid" Grid.Row="3" Height="25" Grid.ColumnSpan="4" 
						Background="Transparent"
						TextBlock.Foreground="{StaticResource TextBrushKey.ShinyRed}"
						Visibility="{Binding Path=TodayRowIsVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"  x:Uid="AccessTodayTextID"
							Content="{StaticResource AccessTodayText}"                         
							Style="{StaticResource ShinyTodayButtonStyle}"
							Width="Auto" Name="PART_TodayButton"/>
                        <Border Grid.Column="1" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
                            <TextBlock HorizontalAlignment="Center" 
								Text="{Binding Path=TodayDate, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Border>
                    </Grid>
                </Grid>
            </Border>
        </Border>       
    </ControlTemplate>


</ResourceDictionary>