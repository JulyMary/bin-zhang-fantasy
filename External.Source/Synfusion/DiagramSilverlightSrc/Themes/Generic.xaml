<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Syncfusion.Windows.Diagram"
  
     xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
   >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Diagram.Silverlight;Component/Controls/ContextMenuControl/Themes/ContextMenu.xaml"/>
        <!--<ResourceDictionary Source="/Syncfusion.Diagram.Silverlight;Component/Controls/MenuControl/Themes/MenuAdvResources.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibility"></local:BooleanToVisibilityConverter>
    <local:PalleteFilterConverter x:Key="PalleteFilterConverter"/>
    <local:FilterToRibbonButtonConverter x:Key="FilterToRibbonButtonConverter"/>

    <!--DiagramView Default Template-->
    <Style TargetType="local:DiagramView">       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DiagramView">
                    <Border>
                        <Grid Name="PART_RulerGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer IsTabStop="False" Padding="0" Margin="0" BorderThickness="0" Name="PART_ScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  Grid.Row="1" Grid.Column="1" >
                                <Grid Name="viewgrid">
                                   
                                    <!--<local:DiagramViewGrid  Name="PART_Grid"/>-->
                                    <ContentPresenter  Name="PART_page"  Content="{TemplateBinding Page}" />

                                </Grid>
                            </ScrollViewer>
                            <Border  Name="PART_HorizontalRuler" 
                                     
                                     Background="White" 
                                      Grid.Row="0" Grid.Column="1">
                                <ContentPresenter>
                                    
                                </ContentPresenter>
                            </Border>
                            
                            <Border Name="PART_VerticalRuler" 
                                    Background="White" 
                                     Grid.Row="1" Grid.Column="0">
                                <ContentPresenter>
                                    
                                </ContentPresenter>
                            </Border>
                            <Border Background="WhiteSmoke" Grid.Column="0" Grid.Row="0"/>
                            <Canvas x:Name="PART_Adorner" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <!--DiagramControl Default Template-->
    <Style TargetType="local:DiagramControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="local:DiagramControl">
                    <Border Grid.Column="1"  Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>


                            <Grid Grid.Column="1"  Name="ControlGrid" Background="{TemplateBinding Background}">
                                <ContentPresenter Name="CP"  Content="{TemplateBinding View}" />
                            </Grid>
                            <ContentPresenter Grid.Column="0"  Content="{TemplateBinding SymbolPalette}" ></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   
    <!--Resizer Thumb Template-->
    <Style x:Key="TopResizerThumpTemplate" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="Margin" Value="0 -3 0 0"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Height" Value="3" />
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="LeftResizerThumpTemplate" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="Margin" Value="-3 0 0 0"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Width" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightResizerThumpTemplate" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="Margin" Value="0 0 -3 0"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Width" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BottomResizerThumpTemplate" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="Margin" Value="0 0 0 -3"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Height" Value="3" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TopLeftCornerResizerThumpTemplate"  TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Margin" Value="-5 -5 0 0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TopRightCornerResizerThumpTemplate"  TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Cursor" Value="SizeNESW"/>
        <Setter Property="Margin" Value=" 0 -5 -5 0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="BottomLeftCornerResizerThumpTemplate"  TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Cursor" Value="SizeNESW"/>
        <Setter Property="Margin" Value="-5 0 0 -5"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="BottomRightCornerResizerThumpTemplate"  TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="#55000000"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Margin" Value="0 0 -5 -5"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="PART_ResizerBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
          VerticalAlignment="{TemplateBinding VerticalAlignment}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"
           CornerRadius="7" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="local:Resizer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="local:Resizer">
                    <Grid Opacity="0.7">
                        <Thumb x:Name="PART_Top"  Style="{TemplateBinding TopResizer}"/>
                        <Thumb x:Name="PART_Left"  Style="{TemplateBinding LeftResizer}"/>
                        <Thumb x:Name="PART_Right"  Style="{TemplateBinding RightResizer}"/>
                        <Thumb x:Name="PART_Bottom"  Style="{TemplateBinding BottomResizer}"/>
                        <Thumb x:Name="PART_TopLeftCorner"  Style="{TemplateBinding TopLeftCornerResizer}"/>
                        <Thumb x:Name="PART_TopRightCorner"   Style="{TemplateBinding TopRightCornerResizer}"/>
                        <Thumb x:Name="PART_BottomLeftCorner"  Style="{TemplateBinding BottomLeftCornerResizer}"/>
                        <Thumb x:Name="PART_BottomRightCorner"  Style="{TemplateBinding BottomRightCornerResizer}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style  x:Key="RotateDecorator" TargetType="Thumb">
        <Setter Property="Background" Value="#55000000" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="-26,-19,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Height="18" Width="8">
                        <Path x:Name="PART_RotatorPath" Stretch="UniformToFill" Data="M16.5,8C16.5,12.142135623731,12.9182779986463,15.5,8.5,15.5C4.08172200135365,15.5,0.5,12.142135623731,0.5,8C0.5,3.85786437626905,4.08172200135365,0.5,8.5,0.5C12.9182779986463,0.5,16.5,3.85786437626905,16.5,8z M6,15.5L10.625,15.375 10.375,60.125 6.125,60.125z" Fill="Red"
                              Stroke="DarkSlateGray"  StrokeThickness=".7" Visibility="{Binding AllowRotate}"> 
                            <Path.RenderTransform>
                                <RotateTransform Angle="-400"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ItemBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FAFBE9" Offset="0" />
            <GradientStop Color="CornflowerBlue" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <Style x:Key="PathStyles" TargetType="Path">
        <Setter Property="Stroke" Value="MidnightBlue"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <!--<Setter Property="StrokeLineJoin" Value="Round" />-->
        <!--<Setter Property="Stretch" Value="Fill"/>-->
    </Style>

    
    <!--Node Default Template-->
    <Style TargetType="local:Node">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="CustomPathStyle" Value="{StaticResource PathStyles}"/>-->
        <Setter Property="NodePathFill" Value="{StaticResource ItemBrush}"/>
        <Setter Property="NodePathStroke" Value="MidnightBlue"/>
        <Setter Property="NodePathStrokeThickness" Value="1"/>
        <Setter Property="TopResizer"      Value="{StaticResource TopResizerThumpTemplate}"/>
        <Setter Property="LeftResizer"     Value="{StaticResource LeftResizerThumpTemplate}" />
        <Setter Property="RightResizer"    Value="{StaticResource RightResizerThumpTemplate}"/>
        <Setter Property="BottomResizer"   Value="{StaticResource BottomResizerThumpTemplate}"/>
        <Setter Property="TopLeftCornerResizer" Value="{StaticResource TopLeftCornerResizerThumpTemplate}"/>
        <Setter Property="TopRightCornerResizer" Value="{StaticResource TopRightCornerResizerThumpTemplate}"/>
        <Setter Property="BottomLeftCornerResizer" Value="{StaticResource BottomLeftCornerResizerThumpTemplate}"/>
        <Setter Property="BottomRightCornerResizer" Value="{StaticResource BottomRightCornerResizerThumpTemplate}"/>
        <!--<Setter Property="MeasurementUnits" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DiagramView}},Path=Page.MeasurementUnits,Mode=TwoWay}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Node">

                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" 
                            IsHitTestVisible="True" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            >
                      
                        <Grid x:Name="PART_NodeGrid" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="True">
                            <!--<Thumb  Opacity="0" IsHitTestVisible="True"  />-->
                            <local:Resizer x:Name="PART_Resizer"  Visibility="Collapsed" IsHitTestVisible="True"/>
                            <Path Stroke="{TemplateBinding NodePathStroke}" StrokeThickness="{TemplateBinding NodePathStrokeThickness}" Name="PART_Shape" Fill="{TemplateBinding NodePathFill}" IsHitTestVisible="false" Style="{TemplateBinding CustomPathStyle}"/>

                            <ContentPresenter  
										  Visibility="Visible" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  >
                            </ContentPresenter>
                            <ItemsControl  x:Name="PART_PortItems" Visibility="Collapsed">
                                <ItemsPresenter />
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <TextBlock x:Name="PART_TextBlock"
							                 HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
							                 Text="{Binding  Path=Label,Mode=TwoWay}" 
                                             FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}"
                                              FontWeight="{TemplateBinding LabelFontWeight}" Visibility="{TemplateBinding LabelVisibility}"
                                               Foreground="{TemplateBinding LabelForeground}" Width="{TemplateBinding LabelWidth}" Height="{TemplateBinding LabelHeight}"
                                           TextWrapping="{TemplateBinding LabelTextWrapping}"    TextAlignment="{TemplateBinding LabelTextAlignment}" RenderTransformOrigin="0.5,0.5"                                               
							                 >
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <TextBox  x:Name="PART_TextBox" 
							                 Visibility="Collapsed"  HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                             Width="auto" Height="auto"  FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}" 
                                              FontWeight="{TemplateBinding LabelFontWeight}"
                                               Foreground="{TemplateBinding LabelForeground}" 
							                 Text="{Binding  Path=Label,Mode=TwoWay}"
                                            TextWrapping="{TemplateBinding LabelTextWrapping}" 
							                 RenderTransformOrigin="0.5,0.5"    TextAlignment="{TemplateBinding LabelTextAlignment}"                                       
							                 >
                                <TextBox.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                                </TextBox.RenderTransform>
                            </TextBox>

                            <Thumb Style="{StaticResource RotateDecorator}"  Visibility="Collapsed" x:Name="PART_Rotator">
                            </Thumb>
                            <Border Name="PART_DragConnectionOver" BorderThickness="2" BorderBrush="Red" IsHitTestVisible="False" Visibility="{Binding Path=IsDragConnectionOver, Converter={StaticResource BooleanToVisibility}}"/>
                        </Grid>               
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Group Default Template-->
    <Style TargetType="local:Group" >
        <Setter Property="TopResizer"      Value="{StaticResource TopResizerThumpTemplate}"/>
        <Setter Property="LeftResizer"     Value="{StaticResource LeftResizerThumpTemplate}" />
        <Setter Property="RightResizer"    Value="{StaticResource RightResizerThumpTemplate}"/>
        <Setter Property="BottomResizer"   Value="{StaticResource BottomResizerThumpTemplate}"/>
        <Setter Property="TopLeftCornerResizer" Value="{StaticResource TopLeftCornerResizerThumpTemplate}"/>
        <Setter Property="TopRightCornerResizer" Value="{StaticResource TopRightCornerResizerThumpTemplate}"/>
        <Setter Property="BottomLeftCornerResizer" Value="{StaticResource BottomLeftCornerResizerThumpTemplate}"/>
        <Setter Property="BottomRightCornerResizer" Value="{StaticResource BottomRightCornerResizerThumpTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Group">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" 
                            IsHitTestVisible="True" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            >

                        <Grid x:Name="PART_NodeGrid" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="True">
                            <!--<Thumb  Opacity="0" IsHitTestVisible="True"  />-->
                            <local:Resizer x:Name="PART_Resizer"  Visibility="Collapsed" IsHitTestVisible="True"/>
                            <Path  Stretch="Fill" Stroke="{TemplateBinding NodePathStroke}" StrokeThickness="{TemplateBinding NodePathStrokeThickness}" Name="PART_Shape" Fill="{TemplateBinding NodePathFill}" IsHitTestVisible="false" Style="{TemplateBinding CustomPathStyle}"/>

                            <ContentPresenter  
										  Visibility="Visible" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  >
                            </ContentPresenter>
                            <ItemsControl  x:Name="PART_PortItems" Visibility="Collapsed">
                                <ItemsPresenter />
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <TextBlock x:Name="PART_TextBlock"
							                 HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
							                 Text="{TemplateBinding Label}" 
                                             FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}"
                                              FontWeight="{TemplateBinding LabelFontWeight}" Visibility="{TemplateBinding LabelVisibility}"
                                               Foreground="{TemplateBinding LabelForeground}" Width="{TemplateBinding LabelWidth}" Height="{TemplateBinding LabelHeight}"
                                           TextWrapping="{TemplateBinding LabelTextWrapping}"     TextAlignment="{TemplateBinding LabelTextAlignment}" RenderTransformOrigin="0.5,0.5"                                               
							                 >
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <TextBox x:Name="PART_TextBox" 
							                 Visibility="Collapsed"  HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                            Width="auto" Height="auto"  FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}" 
                                              FontWeight="{TemplateBinding LabelFontWeight}"
                                               Foreground="{TemplateBinding LabelForeground}" 
							                 Text="{TemplateBinding Label}"
                                            TextWrapping="{TemplateBinding LabelTextWrapping}" 
							                 RenderTransformOrigin="0.5,0.5"    TextAlignment="{TemplateBinding LabelTextAlignment}"                                       
							                 >
                                <TextBox.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                                </TextBox.RenderTransform>
                            </TextBox>
                            <Popup Name="PART_Name">
                                <Path Stretch="Uniform" Fill="#FFFFFFFF" Stroke="Black" Data="M 283.83,229.491L 288.376,224.415L 288.376,228.279L 294.831,228.279L 294.831,221.293L 290.892,221.293L 296.127,217.015L 301.048,221.328L 297.447,221.328L 297.438,228.164L 303.515,228.164L 303.443,224.148L 307.832,229.269L 303.626,234.939L 303.626,231.098L 297.225,231.098L 297.225,238.414L 301.119,238.333L 296.31,242.559L 291.271,238.333L 294.793,238.333L 294.793,230.779L 288.603,230.779L 288.603,234.87L 283.83,229.491 Z "/>
                                <!--Data="F1 M 238.819,224.963L 244.049,219.92L 248.906,224.776L 245.543,224.776L 245.543,239.534L 249.279,239.534L 244.235,243.922L 238.632,239.534L 242.928,239.534L 242.928,224.963L 238.819,224.963 Z "/>-->
                            </Popup>
                            <Thumb Style="{StaticResource RotateDecorator}"  x:Name="PART_Rotator" Visibility="{Binding ElementName=PART_Resizer, Path=Visibility}">
                            </Thumb>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Arrow Grid Style -->
            <Style x:Key="ArrowGridStyle" TargetType="Grid">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-5" Y="-5"/>
                    </Setter.Value>
                </Setter>
            </Style>
    
            <!-- base style for all arrow shapes -->
            <Style x:Key="DecoratorBaseStyle" TargetType="Path">
                <Setter Property="Fill" Value="Gray"/>
                <Setter Property="Stretch" Value="Fill"/>
            </Style>
    
            <!-- Arrow -->
            <Style x:Key="Arrow" TargetType="Path" BasedOn="{StaticResource DecoratorBaseStyle}">
                <Setter Property="Data"  Value="M0,0 8,4 0,8 Z"/>
            </Style>
    
            <!-- Diamond  -->
            <Style x:Key="Diamond" TargetType="Path" BasedOn="{StaticResource DecoratorBaseStyle}">
                <Setter Property="Data" Value="M-5,0 0,-5 5,0 0,5 Z"/>
            </Style>
    
            <!-- Circle  -->
            <Style x:Key="Circle" TargetType="Path" BasedOn="{StaticResource DecoratorBaseStyle}">
                <Setter Property="Data" Value="M5,3C5,4.10456949966159,4.10456949966159,5,3,5C1.89543050033841,5,1,4.10456949966159,1,3C1,1.89543050033841,1.89543050033841,1,3,1C4.10456949966159,1,5,1.89543050033841,5,3z"/>
            </Style>
    
        <Style TargetType="local:LineConnector" >       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LineConnector">
                    <Canvas x:Name="PART_LineCanvas">
                        <Path Name="PART_ConnectionPath"                           
                              Data="{Binding Path=ConnectorPathGeometry,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeThickness="{Binding Path=LineStyle.StrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"  
                              Stroke="{Binding Path=LineStyle.Stroke,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeStartLineCap="{Binding Path=LineStyle.StrokeStartLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeEndLineCap="{Binding Path=LineStyle.StrokeEndLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeLineJoin="{Binding Path=LineStyle.StrokeLineJoin,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeDashArray="{Binding Path=LineStyle.StrokeDashArray,RelativeSource={RelativeSource TemplatedParent}}" >

                        </Path>
                        <Grid  Cursor="Hand" Style="{StaticResource ArrowGridStyle}" x:Name="PART_HeadDecoratorGrid"
                              Canvas.Left="{Binding Path=HeadDecoratorPosition.X,RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Top="{Binding Path=HeadDecoratorPosition.Y,RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Name="PART_HeadDecoratorAnchorPath" 
                              StrokeThickness="{Binding Path=HeadDecoratorStyle.StrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"  
                              Stroke="{Binding Path=HeadDecoratorStyle.Stroke,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeStartLineCap="{Binding Path=HeadDecoratorStyle.StrokeStartLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeEndLineCap="{Binding Path=HeadDecoratorStyle.StrokeEndLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeLineJoin="{Binding Path=HeadDecoratorStyle.StrokeLineJoin,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeDashArray="{Binding Path=HeadDecoratorStyle.StrokeDashArray,RelativeSource={RelativeSource TemplatedParent}}" 
                                  Fill="{Binding Path=HeadDecoratorStyle.Fill,RelativeSource={RelativeSource TemplatedParent}}"/>
                        
                        </Grid>
                        <Grid  Cursor="Hand" Style="{StaticResource ArrowGridStyle}" x:Name="PART_TailDecoratorGrid"
                              Canvas.Left="{Binding Path=TailDecoratorPosition.X,RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Top="{Binding Path=TailDecoratorPosition.Y,RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Name="PART_SinkAnchorPath" 
                              StrokeThickness="{Binding Path=TailDecoratorStyle.StrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"  
                              Stroke="{Binding Path=TailDecoratorStyle.Stroke,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeStartLineCap="{Binding Path=TailDecoratorStyle.StrokeStartLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeEndLineCap="{Binding Path=TailDecoratorStyle.StrokeEndLineCap,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeLineJoin="{Binding Path=TailDecoratorStyle.StrokeLineJoin,RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeDashArray="{Binding Path=TailDecoratorStyle.StrokeDashArray,RelativeSource={RelativeSource TemplatedParent}}" 
                                  Fill="{Binding Path=TailDecoratorStyle.Fill,RelativeSource={RelativeSource TemplatedParent}}"
                                 />
                        
                        </Grid>
                        <Grid x:Name="PART_LabelGrid" Height="auto" Width="auto"  Canvas.Left="{Binding Path=LabelTemplatePosition.X,RelativeSource={RelativeSource TemplatedParent}}"
                               
                               Canvas.Top="{Binding Path=LabelTemplatePosition.Y,RelativeSource={RelativeSource TemplatedParent}}" >
                           
                            <ContentPresenter x:Name="PART_ConnectorLabelTemplateEditor"  
										  Visibility="Visible" 
										  HorizontalAlignment="{Binding Path=LabelTemplateHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                          VerticalAlignment="{Binding Path=LabelTemplateVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 										  
                                          Content="{TemplateBinding Content}"
										  ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=LabelTemplate,Mode=TwoWay}"
										>
                            </ContentPresenter>

                            <!--<Grid.RenderTransform >
                                <RotateTransform Angle="{Binding Path=LabelTemplateAngle,RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid.RenderTransform>-->
                        </Grid>
                        <Grid x:Name="PART_Grid" Height="auto" Width="auto"
                            Canvas.Left="{Binding Path=LabelPosition.X,RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Top="{Binding Path=LabelPosition.Y,RelativeSource={RelativeSource TemplatedParent}}">
                        
                        <TextBlock x:Name="PART_TextBlock1" 
							                 HorizontalAlignment="Left"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
							                 Text="{TemplateBinding Label}"
                                             FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}" Height="Auto"  Width="{TemplateBinding LabelWidth}"
                                              FontWeight="{TemplateBinding LabelFontWeight}" Visibility="{TemplateBinding LabelVisibility}"
                                               Foreground="{TemplateBinding LabelForeground}" 
                                           TextWrapping="{TemplateBinding LabelTextWrapping}"  TextAlignment="{TemplateBinding LabelTextAlignment}"                                                
							                 >
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                                </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBox x:Name="PART_TextBox1"                                 
							                 Visibility="Collapsed"  HorizontalAlignment="Left"
                                             VerticalAlignment="{TemplateBinding LabelVerticalAlignment}"
                                            Width="{TemplateBinding LabelWidth}" Height="auto"  FontSize="{TemplateBinding LabelFontSize}"
                                              FontFamily="{TemplateBinding LabelFontFamily}"
                                              FontStyle="{TemplateBinding LabelFontStyle}" 
                                              FontWeight="{TemplateBinding LabelFontWeight}" 
                                               Foreground="{TemplateBinding LabelForeground}" 
							                 Text="{TemplateBinding Label}"      TextAlignment="{TemplateBinding LabelTextAlignment}"                                       
							               TextWrapping="{TemplateBinding LabelTextWrapping}"   RenderTransformOrigin="0.5,0.5"                                               
							                 >
                            <TextBox.RenderTransform>
                                <RotateTransform Angle="{TemplateBinding LabelAngle}"/>
                            </TextBox.RenderTransform>
                        </TextBox>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Connection Port-->

    <Style TargetType="local:ConnectionPort">        
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ConnectionPort">
                    <Grid>
                        <Grid.Resources>
                            <!-- Arrow -->
                            <Style x:Key="Arrow" TargetType="Path" >
                                <Setter Property="Data"  Value="M0,0 8,4 0,8 Z"/>
                            </Style>

                            <!-- Diamond  -->
                            <Style x:Key="Diamond" TargetType="Path" >
                                <Setter Property="Data" Value="M-5,0 0,-5 5,0 0,5 Z"/>
                            </Style>
                            
                            <!-- Circle  -->
                            <Style x:Key="Circle" TargetType="Path" >
                                <Setter Property="Data" Value="M5,3C5,4.10456949966159,4.10456949966159,5,3,5C1.89543050033841,5,1,4.10456949966159,1,3C1,1.89543050033841,1.89543050033841,1,3,1C4.10456949966159,1,5,1.89543050033841,5,3z"/>
                            </Style>
                        </Grid.Resources>
                        <Path x:Name="PART_PortPath" 
                            StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.StrokeThickness}"  
                              Stroke="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.Stroke}"
                              StrokeStartLineCap="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.StrokeStartLineCap}"
                              StrokeEndLineCap="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.StrokeEndLineCap}"
                              StrokeLineJoin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.StrokeLineJoin}"
                             Fill="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PortStyle.Fill}" Stretch="Uniform"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Border BorderThickness="2" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="PART_PortHit" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDragOverPort,Mode=TwoWay,Converter={StaticResource BooleanToVisibility}}" IsHitTestVisible="False" BorderBrush="Red" Background="Transparent" />
                    </Grid>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SymbolPalette-->
    <Style TargetType="local:SymbolPaletteItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SymbolPaletteItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="{TemplateBinding ItemMouseOverBorderBrush}"/>
                                        </ColorAnimationUsingKeyFrames>-->

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="{TemplateBinding ItemCheckedBorderBrush}"/>
                                        </ColorAnimationUsingKeyFrames>-->

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>-->

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverSelected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ItemBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="{TemplateBinding ItemCheckedMouseOverBorderBrush}"/>
                                        </ColorAnimationUsingKeyFrames>-->

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="OuterBorder" BorderThickness="1">
                                    <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="#ffc5c5c5"  Grid.Row="0" >
                                        <ToolTipService.ToolTip >
                                            <TextBlock Text="{TemplateBinding Name}"></TextBlock>
                                        </ToolTipService.ToolTip>
                                    </Border>
                                </Border>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SymbolPaletteGroup">
       <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                  <local:WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="local:SymbolPaletteGroup">
                    <Grid Visibility="{TemplateBinding PanelVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition  Height="*"/>
                        </Grid.RowDefinitions>

                        <Rectangle Grid.Row="0" Height="25" HorizontalAlignment="Stretch" Visibility="{TemplateBinding HeaderVisibility}" Fill="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=SymbolPaletteGroupBackground}" Margin="2,0,2,0">
                        </Rectangle>
                        <TextBlock  Text="{TemplateBinding HeaderName}" Visibility="{TemplateBinding HeaderVisibility}" Grid.Row="0" VerticalAlignment="Center" FontWeight="bold" Margin="5"  Foreground="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=SymbolPaletteGroupForeground}" HorizontalAlignment="Left"  FontSize="13"/>
                        <ItemsPresenter Grid.Row="1" HorizontalAlignment="Left"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>       
    
    <Style TargetType="local:SymbolPalette" >
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SymbolPalette" >
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="MouseOverAutomatic">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="Orange"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFE6"/>
                                        </ColorAnimationUsingKeyFrames>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFEF8E1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCDE93"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFF6D3"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>

                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFEF8E1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCDE93"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Automatic1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFF6D3"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="Orange"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFE6"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD8ECFE"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="AutoBorder2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD8ECFE"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MoreBorders">
                                <VisualState x:Name="MouseOverBorder">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFEF8E1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCDE93"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFF6D3"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NormalBorder">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MoreColors1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="UpDownStates">
                                <VisualState x:Name="UpDown">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFF6D3"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD0B989"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD0B989"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFF6E4B4"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCEFBD"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCCD52"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ColorMouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFF6D3"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFFDD83"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD0B989"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD0B989"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ColorBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFF6E4B4"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ColorBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCEFBD"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ColorBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFFCCD52"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>

                                <VisualState x:Name="UpDownNormal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD3E1F0"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFBED5F4"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFC0D4ED"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF9BB9DF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="UpDownBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" >
                            <StackPanel Orientation="Vertical">
                                <local:PalleteFilterSelector  Width="{TemplateBinding Width}" Filters="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SymbolFilters,Mode=TwoWay}"  SelectedFilter="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CurrentFilter,Mode=TwoWay}"/>
                                <Border BorderThickness="1" BorderBrush="#FF868686" x:Name="b" Width="Auto"  Background="{TemplateBinding Background}" >
                                <ItemsPresenter/>                              
                                </Border>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupNamesPopupItemStyle" TargetType="local:FilterRibbonButton">
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FilterRibbonButton">
                    <Grid>                                              
                    <Border BorderThickness="0" x:Name="PART_Button"
                  BorderBrush="{TemplateBinding BorderBrush}" 
                  Background="Transparent"
                  Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  MinWidth="{TemplateBinding MinWidth}"
                  MaxWidth="{TemplateBinding MaxWidth}"
                  MinHeight="{TemplateBinding MinHeight}"
                  MaxHeight="{TemplateBinding MaxHeight}" 
                  Margin="{TemplateBinding Margin}" 
                  >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="21"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                                <Border Name="PART_PopUpLeftColumnBorder" Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.PopUpLeftColumnBackground,Mode=TwoWay}"  Grid.Column="0">
                                <Border Name="PART_CheckBorder" 
                                        Visibility="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BooleanToVisibility},Mode=TwoWay}" 
                                        Width="21" Height="21"
                                        BorderThickness="1" 
                                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.CheckerBorderBrush,Mode=TwoWay}"  
                                        Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.CheckerBackground,Mode=TwoWay}"  
                                        CornerRadius="2"
                                         >
                                    <Path Stroke="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.CheckerTickBrush,Mode=TwoWay}" StrokeThickness="1.4">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Border>
                            </Border>
                            <TextBlock Grid.Column="1" Margin="10,0,0,0"   Text="{TemplateBinding Label}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.PopUpForeground}" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PalleteFilterSelector-->
    <Style TargetType="local:PalleteFilterSelector">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PalleteFilterSelector">
                    <Grid>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="MouseOver">
                                <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownBorder" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownBorder" Storyboard.TargetProperty="BorderBrush">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Orange"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                        <Canvas Height="25" Width="{TemplateBinding Width}">

                            <Border Height="25" Width="{TemplateBinding Width}" 
                    Name="PART_DropDownButton" 
                    Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.FilterSelectorBackground,Mode=TwoWay}"
                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.FilterSelectorBorderThickness,Mode=TwoWay}" 
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.FilterSelectorBorderBrush,Mode=TwoWay}">

                                <StackPanel Orientation="Horizontal" Width="{TemplateBinding Width}">
                                    <TextBlock Margin="10,0,0,0" 
                           Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.FilterSelectorForeground}" 
                           FontStyle="Normal"           x:Name="PART_text"              
                           FontSize="12"
                           VerticalAlignment="Center"
                           Text="{Binding RelativeSource={RelativeSource TemplatedParent},                  
                                          Path=SelectedFilter.Label}"/>
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Path Fill="{Binding ElementName=PART_text,Path=Foreground}" 
					            HorizontalAlignment="Right" 
					            VerticalAlignment="Center"
					            Data="M 0 0 L 4 4 L 8 0 Z"
					            Margin="3"/>
                                    </Border>
                                </StackPanel>
                            </Border>
                            <Popup Name="PART_Popup"                           
             Canvas.Top="20"
                   IsOpen="{Binding Path=IsDropDownOpen, 
                                    Mode=TwoWay, 
                                    RelativeSource={RelativeSource TemplatedParent}}">


                                <Border Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FilterParent.PopUpBackground}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PopUpBorderBrush,Mode=TwoWay}"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PopUpBorderThickness,Mode=TwoWay}">

                                    <local:ButtonChecker x:Name="PART_Filters" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},
                                        Path=Filters}"
                      CheckedButton="{Binding Mode=TwoWay,
                                          RelativeSource={RelativeSource TemplatedParent},
                                          Converter={StaticResource FilterToRibbonButtonConverter},
                                          Path=SelectedFilter}">

                                        <local:ButtonChecker.ItemTemplate>
                                            <DataTemplate>
                                                <local:FilterRibbonButton Content="{Binding}" Style="{StaticResource GroupNamesPopupItemStyle}" Label="{Binding Label}" ClickMode="Release"/>
                                            </DataTemplate>
                                        </local:ButtonChecker.ItemTemplate>
                                    </local:ButtonChecker>

                                </Border>
                            </Popup>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       
    </Style>


   


    <!--ButtonChecker-->
    <Style TargetType="local:ButtonChecker">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ButtonChecker">
                    <Border Background="Transparent" >
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:DiagramViewGrid">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DiagramViewGrid">
                    <Grid>
                        <Grid Name="HorGrid">
                        </Grid>
                        <Grid Name="VerGrid">                           
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>
