/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['MicrosoftAjax.js']) {
  _$jscoverage['MicrosoftAjax.js'] = [];
  _$jscoverage['MicrosoftAjax.js'][5] = 0;
  _$jscoverage['MicrosoftAjax.js'][6] = 0;
  _$jscoverage['MicrosoftAjax.js'][7] = 0;
}
_$jscoverage['MicrosoftAjax.js'].source = ["<span class=\"c\">//----------------------------------------------------------</span>","<span class=\"c\">// Copyright (C) Microsoft Corporation. All rights reserved.</span>","<span class=\"c\">//----------------------------------------------------------</span>","<span class=\"c\">// MicrosoftAjax.js</span>","Function<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Function\"</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>createCallback<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>arguments<span class=\"k\">.</span>length<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=[];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>c<span class=\"k\">&lt;</span>e<span class=\"k\">;</span>c<span class=\"k\">++)</span>d<span class=\"k\">[</span>c<span class=\"k\">]=</span>arguments<span class=\"k\">[</span>c<span class=\"k\">];</span>d<span class=\"k\">[</span>e<span class=\"k\">]=</span>a<span class=\"k\">;</span><span class=\"k\">return</span> b<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> b<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> b<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">,</span>arguments<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>emptyFunction<span class=\"k\">=</span>Function<span class=\"k\">.</span>emptyMethod<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>_validateParams<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">;</span>a<span class=\"k\">=</span>Function<span class=\"k\">.</span>_validateParameterCount<span class=\"k\">(</span>e<span class=\"k\">,</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>e<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>c<span class=\"k\">[</span>Math<span class=\"k\">.</span>min<span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)],</span>f<span class=\"k\">=</span>d<span class=\"k\">.</span>name<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>parameterArray<span class=\"k\">)</span>f<span class=\"k\">+=</span><span class=\"s\">\"[\"</span><span class=\"k\">+(</span>b<span class=\"k\">-</span>c<span class=\"k\">.</span>length<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span><span class=\"s\">\"]\"</span><span class=\"k\">;</span>a<span class=\"k\">=</span>Function<span class=\"k\">.</span>_validateParameter<span class=\"k\">(</span>e<span class=\"k\">[</span>b<span class=\"k\">],</span>d<span class=\"k\">,</span>f<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> a<span class=\"k\">}}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>_validateParameterCount<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>a<span class=\"k\">.</span>length<span class=\"k\">,</span>d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">[</span>b<span class=\"k\">].</span>parameterArray<span class=\"k\">)</span>c<span class=\"k\">=</span>Number<span class=\"k\">.</span>MAX_VALUE<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">[</span>b<span class=\"k\">].</span>optional<span class=\"k\">)</span>d<span class=\"k\">++;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>length<span class=\"k\">&lt;</span>d<span class=\"k\">||</span>e<span class=\"k\">.</span>length<span class=\"k\">&gt;</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>Error<span class=\"k\">.</span>parameterCount<span class=\"k\">();</span>f<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> f<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>_validateParameter<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">,</span>g<span class=\"k\">=</span>a<span class=\"k\">.</span>type<span class=\"k\">,</span>l<span class=\"k\">=!!</span>a<span class=\"k\">.</span>integer<span class=\"k\">,</span>k<span class=\"k\">=!!</span>a<span class=\"k\">.</span>domElement<span class=\"k\">,</span>m<span class=\"k\">=!!</span>a<span class=\"k\">.</span>mayBeNull<span class=\"k\">;</span>b<span class=\"k\">=</span>Function<span class=\"k\">.</span>_validateParameterType<span class=\"k\">(</span>c<span class=\"k\">,</span>g<span class=\"k\">,</span>l<span class=\"k\">,</span>k<span class=\"k\">,</span>m<span class=\"k\">,</span>h<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">var</span> e<span class=\"k\">=</span>a<span class=\"k\">.</span>elementType<span class=\"k\">,</span>f<span class=\"k\">=!!</span>a<span class=\"k\">.</span>elementMayBeNull<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">===</span>Array<span class=\"k\">&amp;&amp;</span><span class=\"k\">typeof</span> c<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;(</span>e<span class=\"k\">||!</span>f<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">var</span> j<span class=\"k\">=!!</span>a<span class=\"k\">.</span>elementInteger<span class=\"k\">,</span>i<span class=\"k\">=!!</span>a<span class=\"k\">.</span>elementDomElement<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>d<span class=\"k\">&lt;</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>d<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> n<span class=\"k\">=</span>c<span class=\"k\">[</span>d<span class=\"k\">];</span>b<span class=\"k\">=</span>Function<span class=\"k\">.</span>_validateParameterType<span class=\"k\">(</span>n<span class=\"k\">,</span>e<span class=\"k\">,</span>j<span class=\"k\">,</span>i<span class=\"k\">,</span>f<span class=\"k\">,</span>h<span class=\"k\">+</span><span class=\"s\">\"[\"</span><span class=\"k\">+</span>d<span class=\"k\">+</span><span class=\"s\">\"]\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}}}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Function<span class=\"k\">.</span>_validateParameterType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">,</span>n<span class=\"k\">,</span>m<span class=\"k\">,</span>k<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>k<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">else</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentUndefined<span class=\"k\">(</span>d<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>k<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">else</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentNull<span class=\"k\">(</span>d<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&amp;&amp;</span>c<span class=\"k\">.</span>__enum<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">!==</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentType<span class=\"k\">(</span>d<span class=\"k\">,</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>a<span class=\"k\">),</span>c<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">%</span><span class=\"s\">1</span><span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">.</span>prototype<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>c<span class=\"k\">.</span>__flags<span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> e<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">[</span>i<span class=\"k\">]===</span>a<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>e<span class=\"k\">[</span>i<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">continue</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">((</span>f<span class=\"k\">&amp;</span>a<span class=\"k\">)===</span>f<span class=\"k\">)</span>l<span class=\"k\">-=</span>f<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>l<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}}}</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentOutOfRange<span class=\"k\">(</span>d<span class=\"k\">,</span>a<span class=\"k\">,</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>enumInvalidValue<span class=\"k\">,</span>a<span class=\"k\">,</span>c<span class=\"k\">.</span>getName<span class=\"k\">()));</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>m<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> h<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>nodeType<span class=\"k\">!==</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span>a<span class=\"k\">.</span>ownerDocument<span class=\"k\">||</span>a<span class=\"k\">.</span>document<span class=\"k\">||</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">!=</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> j<span class=\"k\">=</span>g<span class=\"k\">.</span>defaultView<span class=\"k\">||</span>g<span class=\"k\">.</span>parentWindow<span class=\"k\">;</span>h<span class=\"k\">=</span>j<span class=\"k\">!=</span>a<span class=\"k\">&amp;&amp;!(</span>j<span class=\"k\">.</span>document<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>document<span class=\"k\">&amp;&amp;</span>j<span class=\"k\">.</span>document<span class=\"k\">===</span>a<span class=\"k\">.</span>document<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> h<span class=\"k\">=</span><span class=\"k\">typeof</span> g<span class=\"k\">.</span>body<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">}</span><span class=\"k\">else</span> h<span class=\"k\">=</span>a<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">3</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argument<span class=\"k\">(</span>d<span class=\"k\">,</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentDomElement<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}}</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&amp;&amp;!</span>c<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentType<span class=\"k\">(</span>d<span class=\"k\">,</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>a<span class=\"k\">),</span>c<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">===</span>Number<span class=\"k\">&amp;&amp;</span>n<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">%</span><span class=\"s\">1</span><span class=\"k\">!==</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>argumentOutOfRange<span class=\"k\">(</span>d<span class=\"k\">,</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentInteger<span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Error\"</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>create<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> Error<span class=\"k\">(</span>d<span class=\"k\">);</span>a<span class=\"k\">.</span>message<span class=\"k\">=</span>d<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> b<span class=\"k\">)</span>a<span class=\"k\">[</span>c<span class=\"k\">]=</span>b<span class=\"k\">[</span>c<span class=\"k\">];</span>a<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>argument<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">\"Sys.ArgumentException: \"</span><span class=\"k\">+(</span>c<span class=\"k\">?</span>c<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argument<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>b<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>paramName<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ArgumentException\"</span><span class=\"k\">,</span>paramName<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">);</span>d<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> d<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>argumentNull<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">\"Sys.ArgumentNullException: \"</span><span class=\"k\">+(</span>c<span class=\"k\">?</span>c<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentNull<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>b<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>paramName<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ArgumentNullException\"</span><span class=\"k\">,</span>paramName<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">);</span>d<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> d<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>argumentOutOfRange<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">\"Sys.ArgumentOutOfRangeException: \"</span><span class=\"k\">+(</span>d<span class=\"k\">?</span>d<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentOutOfRange<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>b<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>paramName<span class=\"k\">,</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span>b<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>actualValue<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">var</span> e<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ArgumentOutOfRangeException\"</span><span class=\"k\">,</span>paramName<span class=\"k\">:</span>c<span class=\"k\">,</span>actualValue<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">);</span>e<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>argumentType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">\"Sys.ArgumentTypeException: \"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">)</span>a<span class=\"k\">+=</span>e<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">)</span>a<span class=\"k\">+=</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentTypeWithTypes<span class=\"k\">,</span>c<span class=\"k\">.</span>getName<span class=\"k\">(),</span>b<span class=\"k\">.</span>getName<span class=\"k\">());</span><span class=\"k\">else</span> a<span class=\"k\">+=</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentType<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span>a<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>paramName<span class=\"k\">,</span>d<span class=\"k\">);</span><span class=\"k\">var</span> f<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ArgumentTypeException\"</span><span class=\"k\">,</span>paramName<span class=\"k\">:</span>d<span class=\"k\">,</span>actualType<span class=\"k\">:</span>c<span class=\"k\">,</span>expectedType<span class=\"k\">:</span>b<span class=\"k\">}</span><span class=\"k\">);</span>f<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> f<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>argumentUndefined<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">\"Sys.ArgumentUndefinedException: \"</span><span class=\"k\">+(</span>c<span class=\"k\">?</span>c<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>argumentUndefined<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>b<span class=\"k\">+=</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>paramName<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ArgumentUndefinedException\"</span><span class=\"k\">,</span>paramName<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">);</span>d<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> d<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>format<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"Sys.FormatException: \"</span><span class=\"k\">+(</span>a<span class=\"k\">?</span>a<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>format<span class=\"k\">),</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.FormatException\"</span><span class=\"k\">}</span><span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"Sys.InvalidOperationException: \"</span><span class=\"k\">+(</span>a<span class=\"k\">?</span>a<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>invalidOperation<span class=\"k\">),</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.InvalidOperationException\"</span><span class=\"k\">}</span><span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>notImplemented<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"Sys.NotImplementedException: \"</span><span class=\"k\">+(</span>a<span class=\"k\">?</span>a<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>notImplemented<span class=\"k\">),</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.NotImplementedException\"</span><span class=\"k\">}</span><span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>parameterCount<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"Sys.ParameterCountException: \"</span><span class=\"k\">+(</span>a<span class=\"k\">?</span>a<span class=\"k\">:</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>parameterCount<span class=\"k\">),</span>b<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ParameterCountException\"</span><span class=\"k\">}</span><span class=\"k\">);</span>b<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Error<span class=\"k\">.</span>prototype<span class=\"k\">.</span>popStackFrame<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>stack<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span><span class=\"k\">this</span><span class=\"k\">.</span>stack<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>fileName<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span><span class=\"k\">this</span><span class=\"k\">.</span>fileName<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>lineNumber<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span><span class=\"k\">this</span><span class=\"k\">.</span>lineNumber<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>stack<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">),</span>c<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>e<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>fileName<span class=\"k\">+</span><span class=\"s\">\":\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>lineNumber<span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span><span class=\"k\">typeof</span> c<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>e<span class=\"k\">)===-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>shift<span class=\"k\">();</span>c<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">var</span> d<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> d<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>d<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>d<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/@(.*):(\\d+)$/</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>b<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>fileName<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span><span class=\"k\">this</span><span class=\"k\">.</span>lineNumber<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>a<span class=\"k\">.</span>shift<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>stack<span class=\"k\">=</span>a<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Object<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Object\"</span><span class=\"k\">;</span>Object<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Object<span class=\"k\">.</span>getType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>constructor<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||</span><span class=\"k\">typeof</span> a<span class=\"k\">!==</span><span class=\"s\">\"function\"</span><span class=\"k\">||!</span>a<span class=\"k\">.</span>__typeName<span class=\"k\">||</span>a<span class=\"k\">.</span>__typeName<span class=\"k\">===</span><span class=\"s\">\"Object\"</span><span class=\"k\">)</span><span class=\"k\">return</span> Object<span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Object<span class=\"k\">.</span>getTypeName<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>a<span class=\"k\">).</span>getName<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"String\"</span><span class=\"k\">;</span>String<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>endsWith<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">-</span>a<span class=\"k\">.</span>length<span class=\"k\">)===</span>a<span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>startsWith<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">.</span>length<span class=\"k\">)===</span>a<span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>trim<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\s+|\\s+$/g</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>trimEnd<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+$/</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>trimStart<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\s+/</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>format<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> String<span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span>arguments<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>localeFormat<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> String<span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span>arguments<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>String<span class=\"k\">.</span>_toFormattedString<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>l<span class=\"k\">,</span>j<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>e<span class=\"k\">=</span>j<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">true</span><span class=\"k\">;)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>e<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"{\"</span><span class=\"k\">,</span>a<span class=\"k\">),</span>d<span class=\"k\">=</span>e<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"}\"</span><span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">&amp;&amp;</span>d<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">+=</span>e<span class=\"k\">.</span>slice<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">&amp;&amp;(</span>d<span class=\"k\">&lt;</span>f<span class=\"k\">||</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">))</span><span class=\"k\">{</span>c<span class=\"k\">+=</span>e<span class=\"k\">.</span>slice<span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">);</span>a<span class=\"k\">=</span>d<span class=\"k\">+</span><span class=\"s\">2</span><span class=\"k\">;</span><span class=\"k\">continue</span><span class=\"k\">}</span>c<span class=\"k\">+=</span>e<span class=\"k\">.</span>slice<span class=\"k\">(</span>a<span class=\"k\">,</span>f<span class=\"k\">);</span>a<span class=\"k\">=</span>f<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>charAt<span class=\"k\">(</span>a<span class=\"k\">)===</span><span class=\"s\">\"{\"</span><span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">+=</span><span class=\"s\">\"{\"</span><span class=\"k\">;</span>a<span class=\"k\">++;</span><span class=\"k\">continue</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">var</span> h<span class=\"k\">=</span>e<span class=\"k\">.</span>substring<span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">),</span>g<span class=\"k\">=</span>h<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\":\"</span><span class=\"k\">),</span>k<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>g<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">?</span>h<span class=\"k\">:</span>h<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>g<span class=\"k\">),</span><span class=\"s\">10</span><span class=\"k\">)+</span><span class=\"s\">1</span><span class=\"k\">,</span>i<span class=\"k\">=</span>g<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">?</span><span class=\"s\">\"\"</span><span class=\"k\">:</span>h<span class=\"k\">.</span>substring<span class=\"k\">(</span>g<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">),</span>b<span class=\"k\">=</span>j<span class=\"k\">[</span>k<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>b<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>toFormattedString<span class=\"k\">)</span>c<span class=\"k\">+=</span>b<span class=\"k\">.</span>toFormattedString<span class=\"k\">(</span>i<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>l<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>localeFormat<span class=\"k\">)</span>c<span class=\"k\">+=</span>b<span class=\"k\">.</span>localeFormat<span class=\"k\">(</span>i<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>format<span class=\"k\">)</span>c<span class=\"k\">+=</span>b<span class=\"k\">.</span>format<span class=\"k\">(</span>i<span class=\"k\">);</span><span class=\"k\">else</span> c<span class=\"k\">+=</span>b<span class=\"k\">.</span>toString<span class=\"k\">();</span>a<span class=\"k\">=</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">}</span><span class=\"k\">return</span> c<span class=\"k\">}</span><span class=\"k\">;</span>Boolean<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Boolean\"</span><span class=\"k\">;</span>Boolean<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Boolean<span class=\"k\">.</span>parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>trim<span class=\"k\">().</span>toLowerCase<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"s\">\"false\"</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"s\">\"true\"</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Date\"</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_appendPreOrPostMatch<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>g<span class=\"k\">=</span>e<span class=\"k\">.</span>length<span class=\"k\">;</span>c<span class=\"k\">&lt;</span>g<span class=\"k\">;</span>c<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>e<span class=\"k\">.</span>charAt<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">switch</span><span class=\"k\">(</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"'\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>b<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"'\"</span><span class=\"k\">);</span><span class=\"k\">else</span> d<span class=\"k\">++;</span>a<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>b<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">);</span>a<span class=\"k\">=!</span>a<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span>b<span class=\"k\">.</span>append<span class=\"k\">(</span>f<span class=\"k\">);</span>a<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}}</span><span class=\"k\">return</span> d<span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_expandFormat<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"s\">\"F\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">switch</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"d\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>ShortDatePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"D\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>LongDatePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"t\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>ShortTimePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"T\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>LongTimePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"F\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>FullDateTimePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"M\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"m\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>MonthDayPattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"s\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>SortableDateTimePattern<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"Y\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"y\"</span><span class=\"k\">:</span><span class=\"k\">return</span> a<span class=\"k\">.</span>YearMonthPattern<span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>formatInvalidString<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_expandYear<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">100</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=(</span><span class=\"k\">new</span> Date<span class=\"k\">).</span>getFullYear<span class=\"k\">();</span>a<span class=\"k\">+=</span>b<span class=\"k\">-</span>b<span class=\"k\">%</span><span class=\"s\">100</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&gt;</span>c<span class=\"k\">.</span>Calendar<span class=\"k\">.</span>TwoDigitYearMax<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">-</span><span class=\"s\">100</span><span class=\"k\">}</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_getParseRegExp<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">.</span>_parseRegExp<span class=\"k\">)</span>b<span class=\"k\">.</span>_parseRegExp<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>_parseRegExp<span class=\"k\">[</span>e<span class=\"k\">])</span><span class=\"k\">return</span> b<span class=\"k\">.</span>_parseRegExp<span class=\"k\">[</span>e<span class=\"k\">];</span><span class=\"k\">var</span> c<span class=\"k\">=</span>Date<span class=\"k\">.</span>_expandFormat<span class=\"k\">(</span>b<span class=\"k\">,</span>e<span class=\"k\">);</span>c<span class=\"k\">=</span>c<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">$1\"</span><span class=\"k\">);</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">(</span><span class=\"s\">\"^\"</span><span class=\"k\">),</span>j<span class=\"k\">=[],</span>f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>h<span class=\"k\">=</span>Date<span class=\"k\">.</span>_getTokenRegExp<span class=\"k\">(),</span>d<span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">((</span>d<span class=\"k\">=</span>h<span class=\"k\">.</span>exec<span class=\"k\">(</span>c<span class=\"k\">))!==</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span>c<span class=\"k\">.</span>slice<span class=\"k\">(</span>f<span class=\"k\">,</span>d<span class=\"k\">.</span>index<span class=\"k\">);</span>f<span class=\"k\">=</span>h<span class=\"k\">.</span>lastIndex<span class=\"k\">;</span>i<span class=\"k\">+=</span>Date<span class=\"k\">.</span>_appendPreOrPostMatch<span class=\"k\">(</span>l<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">%</span><span class=\"s\">2</span><span class=\"k\">===</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span><span class=\"k\">continue</span><span class=\"k\">}</span><span class=\"k\">switch</span><span class=\"k\">(</span>d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"dddd\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"ddd\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"MMMM\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"MMM\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">D+)\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"tt\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"t\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">D*)\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"yyyy\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">d{4})\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"fff\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">d{3})\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ff\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">d{2})\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"f\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">d)\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"dd\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"d\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"MM\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"M\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"yy\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"y\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"HH\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"hh\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"h\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"mm\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"m\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"ss\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"s\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">d</span><span class=\"t\">\\\\</span><span class=\"s\">d?)\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"zzz\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"([+-]?</span><span class=\"t\">\\\\</span><span class=\"s\">d</span><span class=\"t\">\\\\</span><span class=\"s\">d?:</span><span class=\"t\">\\\\</span><span class=\"s\">d{2})\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"zz\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"z\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"([+-]?</span><span class=\"t\">\\\\</span><span class=\"s\">d</span><span class=\"t\">\\\\</span><span class=\"s\">d?)\"</span><span class=\"k\">)</span><span class=\"k\">}</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span>j<span class=\"k\">,</span>d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span><span class=\"k\">}</span>Date<span class=\"k\">.</span>_appendPreOrPostMatch<span class=\"k\">(</span>c<span class=\"k\">.</span>slice<span class=\"k\">(</span>f<span class=\"k\">),</span>a<span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"$\"</span><span class=\"k\">);</span><span class=\"k\">var</span> k<span class=\"k\">=</span>a<span class=\"k\">.</span>toString<span class=\"k\">().</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+/g</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">s+\"</span><span class=\"k\">),</span>g<span class=\"k\">=</span><span class=\"k\">{</span><span class=\"s\">\"regExp\"</span><span class=\"k\">:</span>k<span class=\"k\">,</span><span class=\"s\">\"groups\"</span><span class=\"k\">:</span>j<span class=\"k\">}</span><span class=\"k\">;</span>b<span class=\"k\">.</span>_parseRegExp<span class=\"k\">[</span>e<span class=\"k\">]=</span>g<span class=\"k\">;</span><span class=\"k\">return</span> g<span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_getTokenRegExp<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"s\">/dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>parseLocale<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Date<span class=\"k\">.</span>_parse<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>CurrentCulture<span class=\"k\">,</span>arguments<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>parseInvariant<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Date<span class=\"k\">.</span>_parse<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>InvariantCulture<span class=\"k\">,</span>arguments<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>g<span class=\"k\">,</span>c<span class=\"k\">,</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">,</span>i<span class=\"k\">=</span>h<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>i<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>h<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Date<span class=\"k\">.</span>_parseExact<span class=\"k\">(</span>g<span class=\"k\">,</span>f<span class=\"k\">,</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">return</span> b<span class=\"k\">}}</span><span class=\"k\">if</span><span class=\"k\">(!</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>c<span class=\"k\">.</span>_getDateTimeFormats<span class=\"k\">();</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span>d<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>i<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Date<span class=\"k\">.</span>_parseExact<span class=\"k\">(</span>g<span class=\"k\">,</span>d<span class=\"k\">[</span>a<span class=\"k\">],</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">return</span> b<span class=\"k\">}}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>_parseExact<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span>y<span class=\"k\">,</span>j<span class=\"k\">)</span><span class=\"k\">{</span>s<span class=\"k\">=</span>s<span class=\"k\">.</span>trim<span class=\"k\">();</span><span class=\"k\">var</span> m<span class=\"k\">=</span>j<span class=\"k\">.</span>dateTimeFormat<span class=\"k\">,</span>v<span class=\"k\">=</span>Date<span class=\"k\">.</span>_getParseRegExp<span class=\"k\">(</span>m<span class=\"k\">,</span>y<span class=\"k\">),</span>x<span class=\"k\">=(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span>v<span class=\"k\">.</span>regExp<span class=\"k\">)).</span>exec<span class=\"k\">(</span>s<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>x<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> w<span class=\"k\">=</span>v<span class=\"k\">.</span>groups<span class=\"k\">,</span>f<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>c<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>h<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>g<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>n<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>o<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>e<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>k<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>r<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>z<span class=\"k\">=</span>w<span class=\"k\">.</span>length<span class=\"k\">;</span>p<span class=\"k\">&lt;</span>z<span class=\"k\">;</span>p<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>x<span class=\"k\">[</span>p<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">switch</span><span class=\"k\">(</span>w<span class=\"k\">[</span>p<span class=\"k\">])</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"dd\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"d\"</span><span class=\"k\">:</span>h<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">&lt;</span><span class=\"s\">1</span><span class=\"k\">||</span>h<span class=\"k\">&gt;</span><span class=\"s\">31</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"MMMM\"</span><span class=\"k\">:</span>c<span class=\"k\">=</span>j<span class=\"k\">.</span>_getMonthIndex<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>c<span class=\"k\">&gt;</span><span class=\"s\">11</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"MMM\"</span><span class=\"k\">:</span>c<span class=\"k\">=</span>j<span class=\"k\">.</span>_getAbbrMonthIndex<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>c<span class=\"k\">&gt;</span><span class=\"s\">11</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"M\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"MM\"</span><span class=\"k\">:</span><span class=\"k\">var</span> c<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">)-</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>c<span class=\"k\">&gt;</span><span class=\"s\">11</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"y\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"yy\"</span><span class=\"k\">:</span>f<span class=\"k\">=</span>Date<span class=\"k\">.</span>_expandYear<span class=\"k\">(</span>m<span class=\"k\">,</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">));</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>f<span class=\"k\">&gt;</span><span class=\"s\">9999</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"yyyy\"</span><span class=\"k\">:</span>f<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>f<span class=\"k\">&gt;</span><span class=\"s\">9999</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"h\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"hh\"</span><span class=\"k\">:</span>d<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">===</span><span class=\"s\">12</span><span class=\"k\">)</span>d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>d<span class=\"k\">&gt;</span><span class=\"s\">11</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"H\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"HH\"</span><span class=\"k\">:</span>d<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>d<span class=\"k\">&gt;</span><span class=\"s\">23</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"m\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"mm\"</span><span class=\"k\">:</span>n<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>n<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>n<span class=\"k\">&gt;</span><span class=\"s\">59</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"s\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"ss\"</span><span class=\"k\">:</span>o<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>o<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>o<span class=\"k\">&gt;</span><span class=\"s\">59</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"tt\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"t\"</span><span class=\"k\">:</span><span class=\"k\">var</span> u<span class=\"k\">=</span>a<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>r<span class=\"k\">=</span>u<span class=\"k\">===</span>m<span class=\"k\">.</span>PMDesignator<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>r<span class=\"k\">&amp;&amp;</span>u<span class=\"k\">!==</span>m<span class=\"k\">.</span>AMDesignator<span class=\"k\">.</span>toUpperCase<span class=\"k\">())</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"f\"</span><span class=\"k\">:</span>e<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">)*</span><span class=\"s\">100</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>e<span class=\"k\">&gt;</span><span class=\"s\">999</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ff\"</span><span class=\"k\">:</span>e<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">)*</span><span class=\"s\">10</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>e<span class=\"k\">&gt;</span><span class=\"s\">999</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"fff\"</span><span class=\"k\">:</span>e<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>e<span class=\"k\">&gt;</span><span class=\"s\">999</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"dddd\"</span><span class=\"k\">:</span>g<span class=\"k\">=</span>j<span class=\"k\">.</span>_getDayIndex<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>g<span class=\"k\">&gt;</span><span class=\"s\">6</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ddd\"</span><span class=\"k\">:</span>g<span class=\"k\">=</span>j<span class=\"k\">.</span>_getAbbrDayIndex<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>g<span class=\"k\">&gt;</span><span class=\"s\">6</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"zzz\"</span><span class=\"k\">:</span><span class=\"k\">var</span> q<span class=\"k\">=</span>a<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/:/</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>q<span class=\"k\">.</span>length<span class=\"k\">!==</span><span class=\"s\">2</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> i<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>q<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">&lt;-</span><span class=\"s\">12</span><span class=\"k\">||</span>i<span class=\"k\">&gt;</span><span class=\"s\">13</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> l<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>q<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>l<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">||</span>l<span class=\"k\">&gt;</span><span class=\"s\">59</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>k<span class=\"k\">=</span>i<span class=\"k\">*</span><span class=\"s\">60</span><span class=\"k\">+(</span>a<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"-\"</span><span class=\"k\">)?-</span>l<span class=\"k\">:</span>l<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"z\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"zz\"</span><span class=\"k\">:</span><span class=\"k\">var</span> i<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">&lt;-</span><span class=\"s\">12</span><span class=\"k\">||</span>i<span class=\"k\">&gt;</span><span class=\"s\">13</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>k<span class=\"k\">=</span>i<span class=\"k\">*</span><span class=\"s\">60</span><span class=\"k\">}}</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">new</span> Date<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span>f<span class=\"k\">=</span>b<span class=\"k\">.</span>getFullYear<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span>c<span class=\"k\">=</span>b<span class=\"k\">.</span>getMonth<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span>h<span class=\"k\">=</span>b<span class=\"k\">.</span>getDate<span class=\"k\">();</span>b<span class=\"k\">.</span>setFullYear<span class=\"k\">(</span>f<span class=\"k\">,</span>c<span class=\"k\">,</span>h<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>getDate<span class=\"k\">()!==</span>h<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>getDay<span class=\"k\">()!==</span>g<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>r<span class=\"k\">&amp;&amp;</span>d<span class=\"k\">&lt;</span><span class=\"s\">12</span><span class=\"k\">)</span>d<span class=\"k\">+=</span><span class=\"s\">12</span><span class=\"k\">;</span>b<span class=\"k\">.</span>setHours<span class=\"k\">(</span>d<span class=\"k\">,</span>n<span class=\"k\">,</span>o<span class=\"k\">,</span>e<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>k<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> t<span class=\"k\">=</span>b<span class=\"k\">.</span>getMinutes<span class=\"k\">()-(</span>k<span class=\"k\">+</span>b<span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">());</span>b<span class=\"k\">.</span>setHours<span class=\"k\">(</span>b<span class=\"k\">.</span>getHours<span class=\"k\">()+</span>parseInt<span class=\"k\">(</span>t<span class=\"k\">/</span><span class=\"s\">60</span><span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">),</span>t<span class=\"k\">%</span><span class=\"s\">60</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>prototype<span class=\"k\">.</span>format<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>InvariantCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>prototype<span class=\"k\">.</span>localeFormat<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>CurrentCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Date<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_toFormattedString<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>e<span class=\"k\">||</span>e<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">||</span>e<span class=\"k\">===</span><span class=\"s\">\"i\"</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">&amp;&amp;</span>h<span class=\"k\">.</span>name<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>toLocaleString<span class=\"k\">();</span><span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>toString<span class=\"k\">();</span><span class=\"k\">var</span> d<span class=\"k\">=</span>h<span class=\"k\">.</span>dateTimeFormat<span class=\"k\">;</span>e<span class=\"k\">=</span>Date<span class=\"k\">.</span>_expandFormat<span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">);</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">,</span>b<span class=\"k\">;</span><span class=\"k\">function</span> c<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">10</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"0\"</span><span class=\"k\">+</span>a<span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">.</span>toString<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">function</span> g<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">10</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"00\"</span><span class=\"k\">+</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">100</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"0\"</span><span class=\"k\">+</span>a<span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">.</span>toString<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">var</span> j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span>Date<span class=\"k\">.</span>_getTokenRegExp<span class=\"k\">();</span><span class=\"k\">for</span><span class=\"k\">(;</span><span class=\"k\">true</span><span class=\"k\">;)</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span>i<span class=\"k\">.</span>lastIndex<span class=\"k\">,</span>f<span class=\"k\">=</span>i<span class=\"k\">.</span>exec<span class=\"k\">(</span>e<span class=\"k\">),</span>k<span class=\"k\">=</span>e<span class=\"k\">.</span>slice<span class=\"k\">(</span>l<span class=\"k\">,</span>f<span class=\"k\">?</span>f<span class=\"k\">.</span>index<span class=\"k\">:</span>e<span class=\"k\">.</span>length<span class=\"k\">);</span>j<span class=\"k\">+=</span>Date<span class=\"k\">.</span>_appendPreOrPostMatch<span class=\"k\">(</span>k<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>f<span class=\"k\">)</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>j<span class=\"k\">%</span><span class=\"s\">2</span><span class=\"k\">===</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>f<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span><span class=\"k\">continue</span><span class=\"k\">}</span><span class=\"k\">switch</span><span class=\"k\">(</span>f<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"dddd\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>d<span class=\"k\">.</span>DayNames<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>getDay<span class=\"k\">()]);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ddd\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>d<span class=\"k\">.</span>AbbreviatedDayNames<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>getDay<span class=\"k\">()]);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"dd\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getDate<span class=\"k\">()));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"d\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getDate<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"MMMM\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>d<span class=\"k\">.</span>MonthNames<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>getMonth<span class=\"k\">()]);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"MMM\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>d<span class=\"k\">.</span>AbbreviatedMonthNames<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>getMonth<span class=\"k\">()]);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"MM\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMonth<span class=\"k\">()+</span><span class=\"s\">1</span><span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"M\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMonth<span class=\"k\">()+</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"yyyy\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getFullYear<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"yy\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getFullYear<span class=\"k\">()%</span><span class=\"s\">100</span><span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"y\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getFullYear<span class=\"k\">()%</span><span class=\"s\">100</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"hh\"</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">()%</span><span class=\"s\">12</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"s\">12</span><span class=\"k\">;</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span>b<span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"h\"</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">()%</span><span class=\"s\">12</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"s\">12</span><span class=\"k\">;</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"HH\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">()));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"H\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"mm\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMinutes<span class=\"k\">()));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"m\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMinutes<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ss\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getSeconds<span class=\"k\">()));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"s\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getSeconds<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"tt\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">()&lt;</span><span class=\"s\">12</span><span class=\"k\">?</span>d<span class=\"k\">.</span>AMDesignator<span class=\"k\">:</span>d<span class=\"k\">.</span>PMDesignator<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"t\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>getHours<span class=\"k\">()&lt;</span><span class=\"s\">12</span><span class=\"k\">?</span>d<span class=\"k\">.</span>AMDesignator<span class=\"k\">:</span>d<span class=\"k\">.</span>PMDesignator<span class=\"k\">).</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"f\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>g<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMilliseconds<span class=\"k\">()).</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"ff\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>g<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMilliseconds<span class=\"k\">()).</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">2</span><span class=\"k\">));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"fff\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>g<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getMilliseconds<span class=\"k\">()));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"z\"</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">()/</span><span class=\"s\">60</span><span class=\"k\">;</span>a<span class=\"k\">.</span>append<span class=\"k\">((</span>b<span class=\"k\">&lt;=</span><span class=\"s\">0</span><span class=\"k\">?</span><span class=\"s\">\"+\"</span><span class=\"k\">:</span><span class=\"s\">\"-\"</span><span class=\"k\">)+</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>b<span class=\"k\">)));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"zz\"</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">()/</span><span class=\"s\">60</span><span class=\"k\">;</span>a<span class=\"k\">.</span>append<span class=\"k\">((</span>b<span class=\"k\">&lt;=</span><span class=\"s\">0</span><span class=\"k\">?</span><span class=\"s\">\"+\"</span><span class=\"k\">:</span><span class=\"s\">\"-\"</span><span class=\"k\">)+</span>c<span class=\"k\">(</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>b<span class=\"k\">))));</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"zzz\"</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">()/</span><span class=\"s\">60</span><span class=\"k\">;</span>a<span class=\"k\">.</span>append<span class=\"k\">((</span>b<span class=\"k\">&lt;=</span><span class=\"s\">0</span><span class=\"k\">?</span><span class=\"s\">\"+\"</span><span class=\"k\">:</span><span class=\"s\">\"-\"</span><span class=\"k\">)+</span>c<span class=\"k\">(</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>b<span class=\"k\">)))+</span>d<span class=\"k\">.</span>TimeSeparator<span class=\"k\">+</span>c<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">()%</span><span class=\"s\">60</span><span class=\"k\">)))</span><span class=\"k\">}}</span><span class=\"k\">return</span> a<span class=\"k\">.</span>toString<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Number\"</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>parseLocale<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Number<span class=\"k\">.</span>_parse<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>CurrentCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>parseInvariant<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Number<span class=\"k\">.</span>_parse<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>InvariantCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>_parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>o<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span>b<span class=\"k\">.</span>trim<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/^[+-]?infinity$/i</span><span class=\"k\">))</span><span class=\"k\">return</span> parseFloat<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/^0x[a-f0-9]+$/i</span><span class=\"k\">))</span><span class=\"k\">return</span> parseInt<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">var</span> a<span class=\"k\">=</span>o<span class=\"k\">.</span>numberFormat<span class=\"k\">,</span>g<span class=\"k\">=</span>Number<span class=\"k\">.</span>_parseNumberNegativePattern<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span>a<span class=\"k\">.</span>NumberNegativePattern<span class=\"k\">),</span>h<span class=\"k\">=</span>g<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>e<span class=\"k\">=</span>g<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">===</span><span class=\"s\">\"\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>NumberNegativePattern<span class=\"k\">!==</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>g<span class=\"k\">=</span>Number<span class=\"k\">.</span>_parseNumberNegativePattern<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span>h<span class=\"k\">=</span>g<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>e<span class=\"k\">=</span>g<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">===</span><span class=\"s\">\"\"</span><span class=\"k\">)</span>h<span class=\"k\">=</span><span class=\"s\">\"+\"</span><span class=\"k\">;</span><span class=\"k\">var</span> j<span class=\"k\">,</span>d<span class=\"k\">,</span>f<span class=\"k\">=</span>e<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"e\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>f<span class=\"k\">=</span>e<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"E\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">=</span>e<span class=\"k\">;</span>j<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>d<span class=\"k\">=</span>e<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">);</span>j<span class=\"k\">=</span>e<span class=\"k\">.</span>substr<span class=\"k\">(</span>f<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> c<span class=\"k\">,</span>k<span class=\"k\">,</span>m<span class=\"k\">=</span>d<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>a<span class=\"k\">.</span>NumberDecimalSeparator<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>m<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">=</span>d<span class=\"k\">;</span>k<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>c<span class=\"k\">=</span>d<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>m<span class=\"k\">);</span>k<span class=\"k\">=</span>d<span class=\"k\">.</span>substr<span class=\"k\">(</span>m<span class=\"k\">+</span>a<span class=\"k\">.</span>NumberDecimalSeparator<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">}</span>c<span class=\"k\">=</span>c<span class=\"k\">.</span>split<span class=\"k\">(</span>a<span class=\"k\">.</span>NumberGroupSeparator<span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">);</span><span class=\"k\">var</span> n<span class=\"k\">=</span>a<span class=\"k\">.</span>NumberGroupSeparator<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\u00A0/g</span><span class=\"k\">,</span><span class=\"s\">\" \"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>NumberGroupSeparator<span class=\"k\">!==</span>n<span class=\"k\">)</span>c<span class=\"k\">=</span>c<span class=\"k\">.</span>split<span class=\"k\">(</span>n<span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">);</span><span class=\"k\">var</span> l<span class=\"k\">=</span>h<span class=\"k\">+</span>c<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>k<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span>l<span class=\"k\">+=</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>k<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>j<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=</span>Number<span class=\"k\">.</span>_parseNumberNegativePattern<span class=\"k\">(</span>j<span class=\"k\">,</span>a<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]===</span><span class=\"s\">\"\"</span><span class=\"k\">)</span>i<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]=</span><span class=\"s\">\"+\"</span><span class=\"k\">;</span>l<span class=\"k\">+=</span><span class=\"s\">\"e\"</span><span class=\"k\">+</span>i<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]+</span>i<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>l<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/</span><span class=\"k\">))</span><span class=\"k\">return</span> parseFloat<span class=\"k\">(</span>l<span class=\"k\">);</span><span class=\"k\">return</span> Number<span class=\"k\">.</span>NaN<span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>_parseNumberNegativePattern<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>d<span class=\"k\">.</span>NegativeSign<span class=\"k\">,</span>c<span class=\"k\">=</span>d<span class=\"k\">.</span>PositiveSign<span class=\"k\">;</span><span class=\"k\">switch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">4</span><span class=\"k\">:</span>b<span class=\"k\">=</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>b<span class=\"k\">;</span>c<span class=\"k\">=</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>c<span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">3</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>endsWith<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"-\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">.</span>length<span class=\"k\">-</span>b<span class=\"k\">.</span>length<span class=\"k\">)];</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>endsWith<span class=\"k\">(</span>c<span class=\"k\">))</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"+\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">.</span>length<span class=\"k\">-</span>c<span class=\"k\">.</span>length<span class=\"k\">)];</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">2</span><span class=\"k\">:</span>b<span class=\"k\">+=</span><span class=\"s\">\" \"</span><span class=\"k\">;</span>c<span class=\"k\">+=</span><span class=\"s\">\" \"</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">1</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>startsWith<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"-\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>b<span class=\"k\">.</span>length<span class=\"k\">)];</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>startsWith<span class=\"k\">(</span>c<span class=\"k\">))</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"+\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>c<span class=\"k\">.</span>length<span class=\"k\">)];</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"(\"</span><span class=\"k\">)&amp;&amp;</span>a<span class=\"k\">.</span>endsWith<span class=\"k\">(</span><span class=\"s\">\")\"</span><span class=\"k\">))</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"-\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span>a<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">)]</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">[</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>a<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>prototype<span class=\"k\">.</span>format<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>InvariantCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>prototype<span class=\"k\">.</span>localeFormat<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_toFormattedString<span class=\"k\">(</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>CurrentCulture<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Number<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_toFormattedString<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>j<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>d<span class=\"k\">||</span>d<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">||</span>d<span class=\"k\">===</span><span class=\"s\">\"i\"</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>j<span class=\"k\">&amp;&amp;</span>j<span class=\"k\">.</span>name<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>toLocaleString<span class=\"k\">();</span><span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>toString<span class=\"k\">();</span><span class=\"k\">var</span> o<span class=\"k\">=[</span><span class=\"s\">\"n %\"</span><span class=\"k\">,</span><span class=\"s\">\"n%\"</span><span class=\"k\">,</span><span class=\"s\">\"%n\"</span><span class=\"k\">],</span>n<span class=\"k\">=[</span><span class=\"s\">\"-n %\"</span><span class=\"k\">,</span><span class=\"s\">\"-n%\"</span><span class=\"k\">,</span><span class=\"s\">\"-%n\"</span><span class=\"k\">],</span>p<span class=\"k\">=[</span><span class=\"s\">\"(n)\"</span><span class=\"k\">,</span><span class=\"s\">\"-n\"</span><span class=\"k\">,</span><span class=\"s\">\"- n\"</span><span class=\"k\">,</span><span class=\"s\">\"n-\"</span><span class=\"k\">,</span><span class=\"s\">\"n -\"</span><span class=\"k\">],</span>m<span class=\"k\">=[</span><span class=\"s\">\"$n\"</span><span class=\"k\">,</span><span class=\"s\">\"n$\"</span><span class=\"k\">,</span><span class=\"s\">\"$ n\"</span><span class=\"k\">,</span><span class=\"s\">\"n $\"</span><span class=\"k\">],</span>l<span class=\"k\">=[</span><span class=\"s\">\"($n)\"</span><span class=\"k\">,</span><span class=\"s\">\"-$n\"</span><span class=\"k\">,</span><span class=\"s\">\"$-n\"</span><span class=\"k\">,</span><span class=\"s\">\"$n-\"</span><span class=\"k\">,</span><span class=\"s\">\"(n$)\"</span><span class=\"k\">,</span><span class=\"s\">\"-n$\"</span><span class=\"k\">,</span><span class=\"s\">\"n-$\"</span><span class=\"k\">,</span><span class=\"s\">\"n$-\"</span><span class=\"k\">,</span><span class=\"s\">\"-n $\"</span><span class=\"k\">,</span><span class=\"s\">\"-$ n\"</span><span class=\"k\">,</span><span class=\"s\">\"n $-\"</span><span class=\"k\">,</span><span class=\"s\">\"$ n-\"</span><span class=\"k\">,</span><span class=\"s\">\"$ -n\"</span><span class=\"k\">,</span><span class=\"s\">\"n- $\"</span><span class=\"k\">,</span><span class=\"s\">\"($ n)\"</span><span class=\"k\">,</span><span class=\"s\">\"(n $)\"</span><span class=\"k\">];</span><span class=\"k\">function</span> g<span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>c<span class=\"k\">;</span>b<span class=\"k\">++)</span>a<span class=\"k\">=</span>d<span class=\"k\">?</span><span class=\"s\">\"0\"</span><span class=\"k\">+</span>a<span class=\"k\">:</span>a<span class=\"k\">+</span><span class=\"s\">\"0\"</span><span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">function</span> i<span class=\"k\">(</span>j<span class=\"k\">,</span>i<span class=\"k\">,</span>l<span class=\"k\">,</span>n<span class=\"k\">,</span>p<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> h<span class=\"k\">=</span>l<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>k<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">,</span>o<span class=\"k\">=</span>Math<span class=\"k\">.</span>pow<span class=\"k\">(</span><span class=\"s\">10</span><span class=\"k\">,</span>i<span class=\"k\">),</span>m<span class=\"k\">=</span>Math<span class=\"k\">.</span>round<span class=\"k\">(</span>j<span class=\"k\">*</span>o<span class=\"k\">)/</span>o<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>isFinite<span class=\"k\">(</span>m<span class=\"k\">))</span>m<span class=\"k\">=</span>j<span class=\"k\">;</span>j<span class=\"k\">=</span>m<span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>j<span class=\"k\">.</span>toString<span class=\"k\">(),</span>a<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>c<span class=\"k\">,</span>e<span class=\"k\">=</span>b<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/e/i</span><span class=\"k\">);</span>b<span class=\"k\">=</span>e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>c<span class=\"k\">=</span>e<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">1</span><span class=\"k\">?</span>parseInt<span class=\"k\">(</span>e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]):</span><span class=\"s\">0</span><span class=\"k\">;</span>e<span class=\"k\">=</span>b<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span>b<span class=\"k\">=</span>e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>a<span class=\"k\">=</span>e<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">1</span><span class=\"k\">?</span>e<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]:</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">var</span> q<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>g<span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">);</span>b<span class=\"k\">+=</span>a<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">);</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">=-</span>c<span class=\"k\">;</span>b<span class=\"k\">=</span>g<span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>a<span class=\"k\">=</span>b<span class=\"k\">.</span>slice<span class=\"k\">(-</span>c<span class=\"k\">,</span>b<span class=\"k\">.</span>length<span class=\"k\">)+</span>a<span class=\"k\">;</span>b<span class=\"k\">=</span>b<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,-</span>c<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">&gt;</span>i<span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">);</span><span class=\"k\">else</span> a<span class=\"k\">=</span>g<span class=\"k\">(</span>a<span class=\"k\">,</span>i<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">);</span>a<span class=\"k\">=</span>p<span class=\"k\">+</span>a<span class=\"k\">}</span><span class=\"k\">else</span> a<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">var</span> d<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span>f<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>d<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">||</span>h<span class=\"k\">&gt;</span>d<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> b<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span>n<span class=\"k\">+</span>f<span class=\"k\">+</span>a<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">return</span> b<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span>f<span class=\"k\">=</span>b<span class=\"k\">.</span>slice<span class=\"k\">(</span>d<span class=\"k\">-</span>h<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span>n<span class=\"k\">+</span>f<span class=\"k\">;</span><span class=\"k\">else</span> f<span class=\"k\">=</span>b<span class=\"k\">.</span>slice<span class=\"k\">(</span>d<span class=\"k\">-</span>h<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">);</span>d<span class=\"k\">-=</span>h<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>k<span class=\"k\">&lt;</span>l<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>h<span class=\"k\">=</span>l<span class=\"k\">[</span>k<span class=\"k\">];</span>k<span class=\"k\">++</span><span class=\"k\">}}</span><span class=\"k\">return</span> b<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span>n<span class=\"k\">+</span>f<span class=\"k\">+</span>a<span class=\"k\">}</span><span class=\"k\">var</span> a<span class=\"k\">=</span>j<span class=\"k\">.</span>numberFormat<span class=\"k\">,</span>e<span class=\"k\">=</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>d<span class=\"k\">)</span>d<span class=\"k\">=</span><span class=\"s\">\"D\"</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=-</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">1</span><span class=\"k\">)</span>b<span class=\"k\">=</span>parseInt<span class=\"k\">(</span>d<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">),</span><span class=\"s\">10</span><span class=\"k\">);</span><span class=\"k\">var</span> c<span class=\"k\">;</span><span class=\"k\">switch</span><span class=\"k\">(</span>d<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"d\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"D\"</span><span class=\"k\">:</span>c<span class=\"k\">=</span><span class=\"s\">\"n\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">)</span>e<span class=\"k\">=</span>g<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">+</span>e<span class=\"k\">,</span>b<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>e<span class=\"k\">=-</span>e<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"c\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"C\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>c<span class=\"k\">=</span>l<span class=\"k\">[</span>a<span class=\"k\">.</span>CurrencyNegativePattern<span class=\"k\">];</span><span class=\"k\">else</span> c<span class=\"k\">=</span>m<span class=\"k\">[</span>a<span class=\"k\">.</span>CurrencyPositivePattern<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===-</span><span class=\"s\">1</span><span class=\"k\">)</span>b<span class=\"k\">=</span>a<span class=\"k\">.</span>CurrencyDecimalDigits<span class=\"k\">;</span>e<span class=\"k\">=</span>i<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>b<span class=\"k\">,</span>a<span class=\"k\">.</span>CurrencyGroupSizes<span class=\"k\">,</span>a<span class=\"k\">.</span>CurrencyGroupSeparator<span class=\"k\">,</span>a<span class=\"k\">.</span>CurrencyDecimalSeparator<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"n\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"N\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>c<span class=\"k\">=</span>p<span class=\"k\">[</span>a<span class=\"k\">.</span>NumberNegativePattern<span class=\"k\">];</span><span class=\"k\">else</span> c<span class=\"k\">=</span><span class=\"s\">\"n\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===-</span><span class=\"s\">1</span><span class=\"k\">)</span>b<span class=\"k\">=</span>a<span class=\"k\">.</span>NumberDecimalDigits<span class=\"k\">;</span>e<span class=\"k\">=</span>i<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>b<span class=\"k\">,</span>a<span class=\"k\">.</span>NumberGroupSizes<span class=\"k\">,</span>a<span class=\"k\">.</span>NumberGroupSeparator<span class=\"k\">,</span>a<span class=\"k\">.</span>NumberDecimalSeparator<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"p\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"P\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>c<span class=\"k\">=</span>n<span class=\"k\">[</span>a<span class=\"k\">.</span>PercentNegativePattern<span class=\"k\">];</span><span class=\"k\">else</span> c<span class=\"k\">=</span>o<span class=\"k\">[</span>a<span class=\"k\">.</span>PercentPositivePattern<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===-</span><span class=\"s\">1</span><span class=\"k\">)</span>b<span class=\"k\">=</span>a<span class=\"k\">.</span>PercentDecimalDigits<span class=\"k\">;</span>e<span class=\"k\">=</span>i<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)*</span><span class=\"s\">100</span><span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">.</span>PercentGroupSizes<span class=\"k\">,</span>a<span class=\"k\">.</span>PercentGroupSeparator<span class=\"k\">,</span>a<span class=\"k\">.</span>PercentDecimalSeparator<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>formatBadFormatSpecifier<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> k<span class=\"k\">=</span><span class=\"s\">/n|\\$|-|%/g</span><span class=\"k\">,</span>f<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(;</span><span class=\"k\">true</span><span class=\"k\">;)</span><span class=\"k\">{</span><span class=\"k\">var</span> q<span class=\"k\">=</span>k<span class=\"k\">.</span>lastIndex<span class=\"k\">,</span>h<span class=\"k\">=</span>k<span class=\"k\">.</span>exec<span class=\"k\">(</span>c<span class=\"k\">);</span>f<span class=\"k\">+=</span>c<span class=\"k\">.</span>slice<span class=\"k\">(</span>q<span class=\"k\">,</span>h<span class=\"k\">?</span>h<span class=\"k\">.</span>index<span class=\"k\">:</span>c<span class=\"k\">.</span>length<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>h<span class=\"k\">)</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">switch</span><span class=\"k\">(</span>h<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"n\"</span><span class=\"k\">:</span>f<span class=\"k\">+=</span>e<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"$\"</span><span class=\"k\">:</span>f<span class=\"k\">+=</span>a<span class=\"k\">.</span>CurrencySymbol<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"-\"</span><span class=\"k\">:</span>f<span class=\"k\">+=</span>a<span class=\"k\">.</span>NegativeSign<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"%\"</span><span class=\"k\">:</span>f<span class=\"k\">+=</span>a<span class=\"k\">.</span>PercentSymbol<span class=\"k\">}}</span><span class=\"k\">return</span> f<span class=\"k\">}</span><span class=\"k\">;</span>RegExp<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"RegExp\"</span><span class=\"k\">;</span>RegExp<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>__typeName<span class=\"k\">=</span><span class=\"s\">\"Array\"</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>add<span class=\"k\">=</span>Array<span class=\"k\">.</span>enqueue<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">[</span>a<span class=\"k\">.</span>length<span class=\"k\">]=</span>b<span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>addRange<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>push<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>clear<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>length<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>clone<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">[</span>a<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]];</span><span class=\"k\">else</span> <span class=\"k\">return</span> Array<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>contains<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)&gt;=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>dequeue<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> a<span class=\"k\">.</span>shift<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>forEach<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>e<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> c<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span>e<span class=\"k\">.</span>call<span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>indexOf<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> e<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">var</span> c<span class=\"k\">=</span>d<span class=\"k\">.</span>length<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>a<span class=\"k\">-</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>isNaN<span class=\"k\">(</span>a<span class=\"k\">))</span>a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>isFinite<span class=\"k\">(</span>a<span class=\"k\">))</span>a<span class=\"k\">=</span>a<span class=\"k\">-</span>a<span class=\"k\">%</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span>a<span class=\"k\">=</span>Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">+</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>c<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> d<span class=\"k\">[</span>b<span class=\"k\">]!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>d<span class=\"k\">[</span>b<span class=\"k\">]===</span>e<span class=\"k\">)</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>insert<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>splice<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>value<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>value<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">[];</span><span class=\"k\">return</span> eval<span class=\"k\">(</span>value<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>remove<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">)</span>b<span class=\"k\">.</span>splice<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>removeAt<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>splice<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>window<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>window<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span>window<span class=\"k\">.</span>Type<span class=\"k\">=</span>Function<span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>callBaseMethod<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getBaseMethod<span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">return</span> c<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">return</span> c<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getBaseMethod<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>getBaseType<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>prototype<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">return</span> a <span class=\"k\">instanceof</span> Function<span class=\"k\">?</span>a<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getBaseType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">?</span><span class=\"k\">null</span><span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getInterfaces<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=[],</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">.</span>__interfaces<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">=</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>d<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>d<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">[</span>d<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>Array<span class=\"k\">.</span>contains<span class=\"k\">(</span>a<span class=\"k\">,</span>e<span class=\"k\">))</span>a<span class=\"k\">[</span>a<span class=\"k\">.</span>length<span class=\"k\">]=</span>e<span class=\"k\">}</span>b<span class=\"k\">=</span>b<span class=\"k\">.</span>__baseType<span class=\"k\">}</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getName<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">?</span><span class=\"s\">\"\"</span><span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>implementsInterface<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>resolveInheritance<span class=\"k\">();</span><span class=\"k\">var</span> c<span class=\"k\">=</span>d<span class=\"k\">.</span>getName<span class=\"k\">(),</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__interfaceCache<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>a<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> e<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">else</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__interfaceCache<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>b<span class=\"k\">.</span>__interfaces<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>f<span class=\"k\">,</span>d<span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">[</span>c<span class=\"k\">]=</span><span class=\"k\">true</span><span class=\"k\">;</span>b<span class=\"k\">=</span>b<span class=\"k\">.</span>__baseType<span class=\"k\">}</span><span class=\"k\">return</span> a<span class=\"k\">[</span>c<span class=\"k\">]=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>inheritsFrom<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>resolveInheritance<span class=\"k\">();</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span>b<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>__baseType<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>initializeBase<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>resolveInheritance<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isImplementedBy<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">!!(</span>b<span class=\"k\">.</span>implementsInterface<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>implementsInterface<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>b<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b <span class=\"k\">instanceof</span> <span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">!!(</span>a<span class=\"k\">===</span><span class=\"k\">this</span><span class=\"k\">)||</span>a<span class=\"k\">.</span>inheritsFrom<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>inheritsFrom<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)||</span>a<span class=\"k\">.</span>implementsInterface<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>implementsInterface<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>registerClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">.</span>constructor<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__class<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__basePrototypePending<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span>Sys<span class=\"k\">.</span>__upperCaseTypes<span class=\"k\">[</span>c<span class=\"k\">.</span>toUpperCase<span class=\"k\">()]=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>__interfaces<span class=\"k\">=[];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">2</span><span class=\"k\">,</span>f<span class=\"k\">=</span>arguments<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>arguments<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">this</span><span class=\"k\">.</span>__interfaces<span class=\"k\">.</span>push<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>registerInterface<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>__upperCaseTypes<span class=\"k\">[</span>a<span class=\"k\">.</span>toUpperCase<span class=\"k\">()]=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">.</span>constructor<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__interface<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>resolveInheritance<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>__basePrototypePending<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__baseType<span class=\"k\">;</span>b<span class=\"k\">.</span>resolveInheritance<span class=\"k\">();</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> b<span class=\"k\">.</span>prototype<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">.</span>prototype<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">[</span>a<span class=\"k\">])</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">[</span>a<span class=\"k\">]=</span>c<span class=\"k\">}</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>__basePrototypePending<span class=\"k\">}}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>getRootNamespaces<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>clone<span class=\"k\">(</span>Sys<span class=\"k\">.</span>__rootNamespaces<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>isClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">!!</span>a<span class=\"k\">.</span>__class<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>isInterface<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">!!</span>a<span class=\"k\">.</span>__interface<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>isNamespace<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">!!</span>a<span class=\"k\">.</span>__namespace<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>typeName<span class=\"k\">,</span>ns<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> fn<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>ns<span class=\"k\">)</span><span class=\"k\">{</span>fn<span class=\"k\">=</span>Sys<span class=\"k\">.</span>__upperCaseTypes<span class=\"k\">[</span>ns<span class=\"k\">.</span>getName<span class=\"k\">().</span>toUpperCase<span class=\"k\">()+</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>typeName<span class=\"k\">.</span>toUpperCase<span class=\"k\">()];</span><span class=\"k\">return</span> fn<span class=\"k\">||</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(!</span>typeName<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>Type<span class=\"k\">.</span>__htClasses<span class=\"k\">)</span>Type<span class=\"k\">.</span>__htClasses<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>fn<span class=\"k\">=</span>Type<span class=\"k\">.</span>__htClasses<span class=\"k\">[</span>typeName<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>fn<span class=\"k\">)</span><span class=\"k\">{</span>fn<span class=\"k\">=</span>eval<span class=\"k\">(</span>typeName<span class=\"k\">);</span>Type<span class=\"k\">.</span>__htClasses<span class=\"k\">[</span>typeName<span class=\"k\">]=</span>fn<span class=\"k\">}</span><span class=\"k\">return</span> fn<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>window<span class=\"k\">,</span>c<span class=\"k\">=</span>f<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">[</span>b<span class=\"k\">],</span>a<span class=\"k\">=</span>d<span class=\"k\">[</span>e<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>d<span class=\"k\">[</span>e<span class=\"k\">]=</span><span class=\"k\">{</span>__namespace<span class=\"k\">:</span><span class=\"k\">true</span><span class=\"k\">,</span>__typeName<span class=\"k\">:</span>c<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>b<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span>Sys<span class=\"k\">.</span>__rootNamespaces<span class=\"k\">[</span>Sys<span class=\"k\">.</span>__rootNamespaces<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">;</span>a<span class=\"k\">.</span>getName<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">}}</span>d<span class=\"k\">=</span>a<span class=\"k\">}}</span><span class=\"k\">;</span>window<span class=\"k\">.</span>Sys<span class=\"k\">=</span><span class=\"k\">{</span>__namespace<span class=\"k\">:</span><span class=\"k\">true</span><span class=\"k\">,</span>__typeName<span class=\"k\">:</span><span class=\"s\">\"Sys\"</span><span class=\"k\">,</span>getName<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"s\">\"Sys\"</span><span class=\"k\">}</span><span class=\"k\">,</span>__upperCaseTypes<span class=\"k\">:</span><span class=\"k\">{}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>__rootNamespaces<span class=\"k\">=[</span>Sys<span class=\"k\">];</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">.</span>registerInterface<span class=\"k\">(</span><span class=\"s\">\"Sys.IDisposable\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">=</span><span class=\"k\">typeof</span> a<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">!==</span><span class=\"s\">\"\"</span><span class=\"k\">?[</span>a<span class=\"k\">.</span>toString<span class=\"k\">()]:[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_value<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_len<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>append<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>appendLine<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">.</span>length<span class=\"k\">]=</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"s\">\"\"</span><span class=\"k\">?</span><span class=\"s\">\"</span><span class=\"t\">\\r\\n</span><span class=\"s\">\"</span><span class=\"k\">:</span>a<span class=\"k\">+</span><span class=\"s\">\"</span><span class=\"t\">\\r\\n</span><span class=\"s\">\"</span><span class=\"k\">}</span><span class=\"k\">,</span>clear<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_value<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_len<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">,</span>isEmpty<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>toString<span class=\"k\">()===</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>toString<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>a<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_len<span class=\"k\">!==</span>b<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_value<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_len<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">}</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_value<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> d<span class=\"k\">[</span>a<span class=\"k\">]===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>c<span class=\"k\">&lt;</span>b<span class=\"k\">.</span>length<span class=\"k\">;)</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">[</span>c<span class=\"k\">]===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>b<span class=\"k\">[</span>c<span class=\"k\">]===</span><span class=\"s\">\"\"</span><span class=\"k\">||</span>b<span class=\"k\">[</span>c<span class=\"k\">]===</span><span class=\"k\">null</span><span class=\"k\">)</span>b<span class=\"k\">.</span>splice<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">else</span> c<span class=\"k\">++;</span>d<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">.</span>_parts<span class=\"k\">.</span>join<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> d<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.StringBuilder\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>window<span class=\"k\">.</span>XMLHttpRequest<span class=\"k\">)</span>window<span class=\"k\">.</span>XMLHttpRequest<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=[</span><span class=\"s\">\"Msxml2.XMLHTTP.3.0\"</span><span class=\"k\">,</span><span class=\"s\">\"Msxml2.XMLHTTP\"</span><span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>c<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span>b<span class=\"k\">[</span>a<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Firefox<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Opera<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>hasDebuggerStatement<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>name<span class=\"k\">=</span>navigator<span class=\"k\">.</span>appName<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">=</span>parseFloat<span class=\"k\">(</span>navigator<span class=\"k\">.</span>appVersion<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>documentMode<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\" MSIE \"</span><span class=\"k\">)&gt;-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">=</span>parseFloat<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/MSIE (\\d+\\.\\d+)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]);</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">&gt;=</span><span class=\"s\">8</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>document<span class=\"k\">.</span>documentMode<span class=\"k\">&gt;=</span><span class=\"s\">7</span><span class=\"k\">)</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>documentMode<span class=\"k\">=</span>document<span class=\"k\">.</span>documentMode<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>hasDebuggerStatement<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\" Firefox/\"</span><span class=\"k\">)&gt;-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Firefox<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">=</span>parseFloat<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/Firefox\\/(\\d+\\.\\d+)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]);</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>name<span class=\"k\">=</span><span class=\"s\">\"Firefox\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>hasDebuggerStatement<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\" AppleWebKit/\"</span><span class=\"k\">)&gt;-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">=</span>parseFloat<span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/AppleWebKit\\/(\\d+(\\.\\d+)?)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]);</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>name<span class=\"k\">=</span><span class=\"s\">\"Safari\"</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"Opera/\"</span><span class=\"k\">)&gt;-</span><span class=\"s\">1</span><span class=\"k\">)</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Opera<span class=\"k\">;</span>Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">(</span><span class=\"s\">\"Sys.UI\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>_Debug<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_Debug<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_appendConsole<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> Debug<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>Debug<span class=\"k\">.</span>writeln<span class=\"k\">)</span>Debug<span class=\"k\">.</span>writeln<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>console<span class=\"k\">&amp;&amp;</span>window<span class=\"k\">.</span>console<span class=\"k\">.</span>log<span class=\"k\">)</span>window<span class=\"k\">.</span>console<span class=\"k\">.</span>log<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>opera<span class=\"k\">)</span>window<span class=\"k\">.</span>opera<span class=\"k\">.</span>postError<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>debugService<span class=\"k\">)</span>window<span class=\"k\">.</span>debugService<span class=\"k\">.</span>trace<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_appendTrace<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"TraceConsole\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">()===</span><span class=\"s\">\"TEXTAREA\"</span><span class=\"k\">)</span>a<span class=\"k\">.</span>value<span class=\"k\">+=</span>b<span class=\"k\">+</span><span class=\"s\">\"</span><span class=\"t\">\\n</span><span class=\"s\">\"</span><span class=\"k\">}</span><span class=\"k\">,</span>assert<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>c<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>b<span class=\"k\">&amp;&amp;</span><span class=\"k\">this</span><span class=\"k\">.</span>assert<span class=\"k\">.</span>caller<span class=\"k\">?</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>assertFailedCaller<span class=\"k\">,</span>a<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>assert<span class=\"k\">.</span>caller<span class=\"k\">):</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>assertFailed<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>confirm<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>breakIntoDebugger<span class=\"k\">,</span>a<span class=\"k\">)))</span><span class=\"k\">this</span><span class=\"k\">.</span>fail<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>clearTrace<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"TraceConsole\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">()===</span><span class=\"s\">\"TEXTAREA\"</span><span class=\"k\">)</span>a<span class=\"k\">.</span>value<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>fail<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>message<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_appendConsole<span class=\"k\">(</span>message<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>hasDebuggerStatement<span class=\"k\">)</span>eval<span class=\"k\">(</span><span class=\"s\">\"debugger\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>trace<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_appendConsole<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_appendTrace<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>traceDump<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_traceDump<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_traceDump<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">,</span>f<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">=</span>c<span class=\"k\">?</span>c<span class=\"k\">:</span><span class=\"s\">\"traceDump\"</span><span class=\"k\">;</span>b<span class=\"k\">=</span>b<span class=\"k\">?</span>b<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\": null\"</span><span class=\"k\">);</span><span class=\"k\">return</span><span class=\"k\">}</span><span class=\"k\">switch</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\": Undefined\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"number\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"string\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"boolean\"</span><span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\": \"</span><span class=\"k\">+</span>a<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>Date<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">)||</span>RegExp<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\": \"</span><span class=\"k\">+</span>a<span class=\"k\">.</span>toString<span class=\"k\">());</span><span class=\"k\">break</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(!</span>d<span class=\"k\">)</span>d<span class=\"k\">=[];</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>contains<span class=\"k\">(</span>d<span class=\"k\">,</span>a<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\": ...\"</span><span class=\"k\">);</span><span class=\"k\">return</span><span class=\"k\">}</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span>d<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">==</span>window<span class=\"k\">||</span>a<span class=\"k\">===</span>document<span class=\"k\">||</span>window<span class=\"k\">.</span>HTMLElement<span class=\"k\">&amp;&amp;</span>a <span class=\"k\">instanceof</span> HTMLElement<span class=\"k\">||</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>nodeName<span class=\"k\">===</span><span class=\"s\">\"string\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> k<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">:</span><span class=\"s\">\"DomElement\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>id<span class=\"k\">)</span>k<span class=\"k\">+=</span><span class=\"s\">\" - \"</span><span class=\"k\">+</span>a<span class=\"k\">.</span>id<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\" {\"</span><span class=\"k\">+</span>k<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=</span>Object<span class=\"k\">.</span>getTypeName<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>trace<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">+(</span><span class=\"k\">typeof</span> i<span class=\"k\">===</span><span class=\"s\">\"string\"</span><span class=\"k\">?</span><span class=\"s\">\" {\"</span><span class=\"k\">+</span>i<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">));</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"s\">\"\"</span><span class=\"k\">||</span>f<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">+=</span><span class=\"s\">\"    \"</span><span class=\"k\">;</span><span class=\"k\">var</span> e<span class=\"k\">,</span>j<span class=\"k\">,</span>l<span class=\"k\">,</span>g<span class=\"k\">,</span>h<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">{</span>j<span class=\"k\">=</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span>e<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>e<span class=\"k\">&lt;</span>j<span class=\"k\">;</span>e<span class=\"k\">++)</span><span class=\"k\">this</span><span class=\"k\">.</span>_traceDump<span class=\"k\">(</span>a<span class=\"k\">[</span>e<span class=\"k\">],</span><span class=\"s\">\"[\"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">\"]\"</span><span class=\"k\">,</span>f<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">for</span><span class=\"k\">(</span>g <span class=\"k\">in</span> a<span class=\"k\">)</span><span class=\"k\">{</span>h<span class=\"k\">=</span>a<span class=\"k\">[</span>g<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>Function<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>h<span class=\"k\">))</span><span class=\"k\">this</span><span class=\"k\">.</span>_traceDump<span class=\"k\">(</span>h<span class=\"k\">,</span>g<span class=\"k\">,</span>f<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}}}</span>Array<span class=\"k\">.</span>remove<span class=\"k\">(</span>d<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_Debug<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys._Debug\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Debug<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>_Debug<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Debug<span class=\"k\">.</span>isDebug<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">function</span> Sys$Enum$parse<span class=\"k\">(</span>c<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">,</span>b<span class=\"k\">,</span>i<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__lowerCaseValues<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>__lowerCaseValues<span class=\"k\">=</span>a<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> g<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> f <span class=\"k\">in</span> g<span class=\"k\">)</span>a<span class=\"k\">[</span>f<span class=\"k\">.</span>toLowerCase<span class=\"k\">()]=</span>g<span class=\"k\">[</span>f<span class=\"k\">]</span><span class=\"k\">}}</span><span class=\"k\">else</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__flags<span class=\"k\">)</span><span class=\"k\">{</span>i<span class=\"k\">=</span>e<span class=\"k\">?</span>c<span class=\"k\">.</span>toLowerCase<span class=\"k\">():</span>c<span class=\"k\">;</span>b<span class=\"k\">=</span>a<span class=\"k\">[</span>i<span class=\"k\">.</span>trim<span class=\"k\">()];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">!==</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>argument<span class=\"k\">(</span><span class=\"s\">\"value\"</span><span class=\"k\">,</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>enumInvalidValue<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">));</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> h<span class=\"k\">=(</span>e<span class=\"k\">?</span>c<span class=\"k\">.</span>toLowerCase<span class=\"k\">():</span>c<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">),</span>j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d<span class=\"k\">=</span>h<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>d<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">;</span>d<span class=\"k\">--)</span><span class=\"k\">{</span><span class=\"k\">var</span> k<span class=\"k\">=</span>h<span class=\"k\">[</span>d<span class=\"k\">].</span>trim<span class=\"k\">();</span>b<span class=\"k\">=</span>a<span class=\"k\">[</span>k<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">!==</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>argument<span class=\"k\">(</span><span class=\"s\">\"value\"</span><span class=\"k\">,</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>enumInvalidValue<span class=\"k\">,</span>c<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">)[</span>d<span class=\"k\">].</span>trim<span class=\"k\">(),</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">));</span>j<span class=\"k\">|=</span>b<span class=\"k\">}</span><span class=\"k\">return</span> j<span class=\"k\">}}</span><span class=\"k\">function</span> Sys$Enum$toString<span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> c<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>c<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>__string<span class=\"k\">;</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">,</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>__flags<span class=\"k\">||</span>c<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span>a <span class=\"k\">in</span> d<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">[</span>a<span class=\"k\">]===</span>c<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>__sortedValues<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=[];</span><span class=\"k\">for</span><span class=\"k\">(</span>a <span class=\"k\">in</span> d<span class=\"k\">)</span>b<span class=\"k\">[</span>b<span class=\"k\">.</span>length<span class=\"k\">]=</span><span class=\"k\">{</span>key<span class=\"k\">:</span>a<span class=\"k\">,</span>value<span class=\"k\">:</span>d<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">;</span>b<span class=\"k\">.</span>sort<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> a<span class=\"k\">.</span>value<span class=\"k\">-</span>b<span class=\"k\">.</span>value<span class=\"k\">}</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>__sortedValues<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">var</span> e<span class=\"k\">=[],</span>g<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span>a<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>a<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">;</span>a<span class=\"k\">--)</span><span class=\"k\">{</span><span class=\"k\">var</span> h<span class=\"k\">=</span>b<span class=\"k\">[</span>a<span class=\"k\">],</span>f<span class=\"k\">=</span>h<span class=\"k\">.</span>value<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">continue</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">((</span>f<span class=\"k\">&amp;</span>c<span class=\"k\">)===</span>f<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">[</span>e<span class=\"k\">.</span>length<span class=\"k\">]=</span>h<span class=\"k\">.</span>key<span class=\"k\">;</span>g<span class=\"k\">-=</span>f<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">break</span><span class=\"k\">}}</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>length<span class=\"k\">&amp;&amp;</span>g<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> e<span class=\"k\">.</span>reverse<span class=\"k\">().</span>join<span class=\"k\">(</span><span class=\"s\">\", \"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">}</span>Type<span class=\"k\">.</span>prototype<span class=\"k\">.</span>registerEnum<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>__upperCaseTypes<span class=\"k\">[</span>b<span class=\"k\">.</span>toUpperCase<span class=\"k\">()]=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">.</span>prototype<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">this</span><span class=\"k\">.</span>__typeName<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">=</span>Sys$Enum$parse<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__string<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>toString<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>toString<span class=\"k\">=</span>Sys$Enum$toString<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__flags<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>__enum<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>isEnum<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">!!</span>a<span class=\"k\">.</span>__enum<span class=\"k\">}</span><span class=\"k\">;</span>Type<span class=\"k\">.</span>isFlags<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">||</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">!!</span>a<span class=\"k\">.</span>__flags<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_list<span class=\"k\">=</span><span class=\"k\">{}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>addHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_getEvent<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">),</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>removeHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_getEvent<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>remove<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>getHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_getEvent<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||</span>a<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>a<span class=\"k\">=</span>Array<span class=\"k\">.</span>clone<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>e<span class=\"k\">=</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>e<span class=\"k\">;</span>b<span class=\"k\">++)</span>a<span class=\"k\">[</span>b<span class=\"k\">](</span>c<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_getEvent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_list<span class=\"k\">[</span>a<span class=\"k\">])</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_list<span class=\"k\">[</span>a<span class=\"k\">]=[]</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_list<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.EventHandlerList\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.EventArgs\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">;</span>Sys<span class=\"k\">.</span>CancelEventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>CancelEventArgs<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_cancel<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CancelEventArgs<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_cancel<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_cancel<span class=\"k\">}</span><span class=\"k\">,</span>set_cancel<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_cancel<span class=\"k\">=</span>a<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CancelEventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.CancelEventArgs\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">);</span>Sys<span class=\"k\">.</span>INotifyPropertyChange<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>INotifyPropertyChange<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>INotifyPropertyChange<span class=\"k\">.</span>registerInterface<span class=\"k\">(</span><span class=\"s\">\"Sys.INotifyPropertyChange\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>PropertyChangedEventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>PropertyChangedEventArgs<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_propertyName<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>PropertyChangedEventArgs<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_propertyName<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_propertyName<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>PropertyChangedEventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.PropertyChangedEventArgs\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">);</span>Sys<span class=\"k\">.</span>INotifyDisposing<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>INotifyDisposing<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>INotifyDisposing<span class=\"k\">.</span>registerInterface<span class=\"k\">(</span><span class=\"s\">\"Sys.INotifyDisposing\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">)</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>registerDisposableObject<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_id<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_initialized<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>_updating<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>get_events<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">}</span><span class=\"k\">,</span>get_id<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_id<span class=\"k\">}</span><span class=\"k\">,</span>set_id<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_id<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_isInitialized<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">}</span><span class=\"k\">,</span>get_isUpdating<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_updating<span class=\"k\">}</span><span class=\"k\">,</span>add_disposing<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"disposing\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_disposing<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"disposing\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>add_propertyChanged<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"propertyChanged\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_propertyChanged<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"propertyChanged\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>beginUpdate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_updating<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">.</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"disposing\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>unregisterDisposableObject<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>removeComponent<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>endUpdate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_updating<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>initialize<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>updated<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>initialize<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>raisePropertyChanged<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">.</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"propertyChanged\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>PropertyChangedEventArgs<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>updated<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Component\"</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">,</span>Sys<span class=\"k\">.</span>INotifyPropertyChange<span class=\"k\">,</span>Sys<span class=\"k\">.</span>INotifyDisposing<span class=\"k\">);</span><span class=\"k\">function</span> Sys$Component$_setProperties<span class=\"k\">(</span>a<span class=\"k\">,</span>i<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">,</span>j<span class=\"k\">=</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>a<span class=\"k\">),</span>e<span class=\"k\">=</span>j<span class=\"k\">===</span>Object<span class=\"k\">||</span>j<span class=\"k\">===</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">,</span>h<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">)&amp;&amp;!</span>a<span class=\"k\">.</span>get_isUpdating<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">)</span>a<span class=\"k\">.</span>beginUpdate<span class=\"k\">();</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> i<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>i<span class=\"k\">[</span>c<span class=\"k\">],</span>f<span class=\"k\">=</span>e<span class=\"k\">?</span><span class=\"k\">null</span><span class=\"k\">:</span>a<span class=\"k\">[</span><span class=\"s\">\"get_\"</span><span class=\"k\">+</span>c<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">||</span><span class=\"k\">typeof</span> f<span class=\"k\">!==</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> k<span class=\"k\">=</span>a<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">||</span><span class=\"k\">typeof</span> b<span class=\"k\">!==</span><span class=\"s\">\"object\"</span><span class=\"k\">||</span>e<span class=\"k\">&amp;&amp;!</span>k<span class=\"k\">)</span>a<span class=\"k\">[</span>c<span class=\"k\">]=</span>b<span class=\"k\">;</span><span class=\"k\">else</span> Sys$Component$_setProperties<span class=\"k\">(</span>k<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">\"set_\"</span><span class=\"k\">+</span>c<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> l<span class=\"k\">===</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span>l<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">,[</span>b<span class=\"k\">]);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>b <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">=</span>f<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> g<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>m<span class=\"k\">=</span>d<span class=\"k\">.</span>length<span class=\"k\">,</span>n<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">;</span>g<span class=\"k\">&lt;</span>n<span class=\"k\">;</span>g<span class=\"k\">++,</span>m<span class=\"k\">++)</span>d<span class=\"k\">[</span>m<span class=\"k\">]=</span>b<span class=\"k\">[</span>g<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">===</span><span class=\"s\">\"object\"</span><span class=\"k\">&amp;&amp;</span>Object<span class=\"k\">.</span>getType<span class=\"k\">(</span>b<span class=\"k\">)===</span>Object<span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">=</span>f<span class=\"k\">.</span>apply<span class=\"k\">(</span>a<span class=\"k\">);</span>Sys$Component$_setProperties<span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">)</span>a<span class=\"k\">.</span>endUpdate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">function</span> Sys$Component$_setReferences<span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">\"set_\"</span><span class=\"k\">+</span>a<span class=\"k\">],</span>d<span class=\"k\">=</span>$find<span class=\"k\">(</span>b<span class=\"k\">[</span>a<span class=\"k\">]);</span>e<span class=\"k\">.</span>apply<span class=\"k\">(</span>c<span class=\"k\">,[</span>d<span class=\"k\">])</span><span class=\"k\">}}</span><span class=\"k\">var</span> $create<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">.</span>create<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>h<span class=\"k\">,</span>f<span class=\"k\">,</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>g<span class=\"k\">?</span><span class=\"k\">new</span> h<span class=\"k\">(</span>g<span class=\"k\">):</span><span class=\"k\">new</span> h<span class=\"k\">,</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">,</span>i<span class=\"k\">=</span>b<span class=\"k\">.</span>get_isCreatingComponents<span class=\"k\">();</span>a<span class=\"k\">.</span>beginUpdate<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">)</span>Sys$Component$_setProperties<span class=\"k\">(</span>a<span class=\"k\">,</span>f<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> e <span class=\"k\">in</span> d<span class=\"k\">)</span>a<span class=\"k\">[</span><span class=\"s\">\"add_\"</span><span class=\"k\">+</span>e<span class=\"k\">](</span>d<span class=\"k\">[</span>e<span class=\"k\">]);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>get_id<span class=\"k\">())</span>b<span class=\"k\">.</span>addComponent<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">.</span>_createdComponents<span class=\"k\">[</span>b<span class=\"k\">.</span>_createdComponents<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>b<span class=\"k\">.</span>_addComponentToSecondPass<span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">);</span><span class=\"k\">else</span> a<span class=\"k\">.</span>endUpdate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>Sys$Component$_setReferences<span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">);</span>a<span class=\"k\">.</span>endUpdate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>leftButton<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>middleButton<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>rightButton<span class=\"k\">:</span><span class=\"s\">2</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">.</span>registerEnum<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.MouseButton\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Key<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Key<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>backspace<span class=\"k\">:</span><span class=\"s\">8</span><span class=\"k\">,</span>tab<span class=\"k\">:</span><span class=\"s\">9</span><span class=\"k\">,</span>enter<span class=\"k\">:</span><span class=\"s\">13</span><span class=\"k\">,</span>esc<span class=\"k\">:</span><span class=\"s\">27</span><span class=\"k\">,</span>space<span class=\"k\">:</span><span class=\"s\">32</span><span class=\"k\">,</span>pageUp<span class=\"k\">:</span><span class=\"s\">33</span><span class=\"k\">,</span>pageDown<span class=\"k\">:</span><span class=\"s\">34</span><span class=\"k\">,</span>end<span class=\"k\">:</span><span class=\"s\">35</span><span class=\"k\">,</span>home<span class=\"k\">:</span><span class=\"s\">36</span><span class=\"k\">,</span>left<span class=\"k\">:</span><span class=\"s\">37</span><span class=\"k\">,</span>up<span class=\"k\">:</span><span class=\"s\">38</span><span class=\"k\">,</span>right<span class=\"k\">:</span><span class=\"s\">39</span><span class=\"k\">,</span>down<span class=\"k\">:</span><span class=\"s\">40</span><span class=\"k\">,</span>del<span class=\"k\">:</span><span class=\"s\">127</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Key<span class=\"k\">.</span>registerEnum<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.Key\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>x<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>y<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.Point\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Bounds<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>d<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>x<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>y<span class=\"k\">=</span>d<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>height<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>width<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Bounds<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.Bounds\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>e<span class=\"k\">,</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">=</span>a<span class=\"k\">.</span>type<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>altKey<span class=\"k\">=</span>a<span class=\"k\">.</span>altKey<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>button<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>button<span class=\"k\">=</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>which<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">?</span>a<span class=\"k\">.</span>button<span class=\"k\">:</span>a<span class=\"k\">.</span>button<span class=\"k\">===</span><span class=\"s\">4</span><span class=\"k\">?</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">.</span>middleButton<span class=\"k\">:</span>a<span class=\"k\">.</span>button<span class=\"k\">===</span><span class=\"s\">2</span><span class=\"k\">?</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">.</span>rightButton<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>MouseButton<span class=\"k\">.</span>leftButton<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"s\">\"keypress\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>charCode<span class=\"k\">=</span>a<span class=\"k\">.</span>charCode<span class=\"k\">||</span>a<span class=\"k\">.</span>keyCode<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>keyCode<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>keyCode<span class=\"k\">===</span><span class=\"s\">46</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>keyCode<span class=\"k\">=</span><span class=\"s\">127</span><span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>keyCode<span class=\"k\">=</span>a<span class=\"k\">.</span>keyCode<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>clientX<span class=\"k\">=</span>a<span class=\"k\">.</span>clientX<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>clientY<span class=\"k\">=</span>a<span class=\"k\">.</span>clientY<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>ctrlKey<span class=\"k\">=</span>a<span class=\"k\">.</span>ctrlKey<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>target<span class=\"k\">=</span>a<span class=\"k\">.</span>target<span class=\"k\">?</span>a<span class=\"k\">.</span>target<span class=\"k\">:</span>a<span class=\"k\">.</span>srcElement<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"key\"</span><span class=\"k\">))</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>offsetX<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>offsetY<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>offsetX<span class=\"k\">=</span>a<span class=\"k\">.</span>offsetX<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>offsetY<span class=\"k\">=</span>a<span class=\"k\">.</span>offsetY<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>target<span class=\"k\">&amp;&amp;</span><span class=\"k\">this</span><span class=\"k\">.</span>target<span class=\"k\">.</span>nodeType<span class=\"k\">!==</span><span class=\"s\">3</span><span class=\"k\">&amp;&amp;</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>clientX<span class=\"k\">===</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>target<span class=\"k\">),</span>d<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getWindow<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>target<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>offsetX<span class=\"k\">=(</span>d<span class=\"k\">.</span>pageXOffset<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">)+</span>a<span class=\"k\">.</span>clientX<span class=\"k\">-</span>c<span class=\"k\">.</span>x<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>offsetY<span class=\"k\">=(</span>d<span class=\"k\">.</span>pageYOffset<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">)+</span>a<span class=\"k\">.</span>clientY<span class=\"k\">-</span>c<span class=\"k\">.</span>y<span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>screenX<span class=\"k\">=</span>a<span class=\"k\">.</span>screenX<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>screenY<span class=\"k\">=</span>a<span class=\"k\">.</span>screenY<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>shiftKey<span class=\"k\">=</span>a<span class=\"k\">.</span>shiftKey<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>preventDefault<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>preventDefault<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>event<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>returnValue<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>stopPropagation<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>stopPropagation<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>event<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>rawEvent<span class=\"k\">.</span>cancelBubble<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.DomEvent\"</span><span class=\"k\">);</span><span class=\"k\">var</span> $addHandler<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>addHandler<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>_events<span class=\"k\">)</span>a<span class=\"k\">.</span>_events<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> c<span class=\"k\">=</span>a<span class=\"k\">.</span>_events<span class=\"k\">[</span>d<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>c<span class=\"k\">)</span>a<span class=\"k\">.</span>_events<span class=\"k\">[</span>d<span class=\"k\">]=</span>c<span class=\"k\">=[];</span><span class=\"k\">var</span> b<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> e<span class=\"k\">.</span>call<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">;</span>a<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>attachEvent<span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getWindow<span class=\"k\">(</span>a<span class=\"k\">).</span>event<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">return</span> e<span class=\"k\">.</span>call<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">;</span>a<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">\"on\"</span><span class=\"k\">+</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span>c<span class=\"k\">[</span>c<span class=\"k\">.</span>length<span class=\"k\">]=</span><span class=\"k\">{</span>handler<span class=\"k\">:</span>e<span class=\"k\">,</span>browserHandler<span class=\"k\">:</span>b<span class=\"k\">}}</span><span class=\"k\">,</span>$addHandlers<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>addHandlers<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>d<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>d<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>a<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">);</span>$addHandler<span class=\"k\">(</span>e<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>$clearHandlers<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>clearHandlers<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>a<span class=\"k\">.</span>_events<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>e<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c<span class=\"k\">=</span>d<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>c<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">;</span>c<span class=\"k\">--)</span>$removeHandler<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">[</span>c<span class=\"k\">].</span>handler<span class=\"k\">)</span><span class=\"k\">}</span>a<span class=\"k\">.</span>_events<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}</span><span class=\"k\">,</span>$removeHandler<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>removeHandler<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>e<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>c<span class=\"k\">=</span>a<span class=\"k\">.</span>_events<span class=\"k\">[</span>e<span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>g<span class=\"k\">=</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>g<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">[</span>b<span class=\"k\">].</span>handler<span class=\"k\">===</span>f<span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">=</span>c<span class=\"k\">[</span>b<span class=\"k\">].</span>browserHandler<span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>removeEventListener<span class=\"k\">)</span>a<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>e<span class=\"k\">,</span>d<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>detachEvent<span class=\"k\">)</span>a<span class=\"k\">.</span>detachEvent<span class=\"k\">(</span><span class=\"s\">\"on\"</span><span class=\"k\">+</span>e<span class=\"k\">,</span>d<span class=\"k\">);</span>c<span class=\"k\">.</span>splice<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.DomElement\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>addCssClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>containsCssClass<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">))</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>className<span class=\"k\">===</span><span class=\"s\">\"\"</span><span class=\"k\">)</span>a<span class=\"k\">.</span>className<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">else</span> a<span class=\"k\">.</span>className<span class=\"k\">+=</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>b<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>containsCssClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>contains<span class=\"k\">(</span>b<span class=\"k\">.</span>className<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\" \"</span><span class=\"k\">),</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getBounds<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Bounds<span class=\"k\">(</span>b<span class=\"k\">.</span>x<span class=\"k\">,</span>b<span class=\"k\">.</span>y<span class=\"k\">,</span>a<span class=\"k\">.</span>offsetWidth<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">.</span>offsetHeight<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">var</span> $get<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getElementById<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>f<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>e<span class=\"k\">)</span><span class=\"k\">return</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>f<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>getElementById<span class=\"k\">)</span><span class=\"k\">return</span> e<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>f<span class=\"k\">);</span><span class=\"k\">var</span> c<span class=\"k\">=[],</span>d<span class=\"k\">=</span>e<span class=\"k\">.</span>childNodes<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>d<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>d<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>nodeType<span class=\"k\">==</span><span class=\"s\">1</span><span class=\"k\">)</span>c<span class=\"k\">[</span>c<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">}</span><span class=\"k\">while</span><span class=\"k\">(</span>c<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>c<span class=\"k\">.</span>shift<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>id<span class=\"k\">==</span>f<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">;</span>d<span class=\"k\">=</span>a<span class=\"k\">.</span>childNodes<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span>b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>d<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>d<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>nodeType<span class=\"k\">==</span><span class=\"s\">1</span><span class=\"k\">)</span>c<span class=\"k\">[</span>c<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">}}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">switch</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>self<span class=\"k\">||</span>a<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span>a<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>e<span class=\"k\">=</span>b<span class=\"k\">.</span>left<span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">+</span>d<span class=\"k\">.</span>scrollLeft<span class=\"k\">,</span>f<span class=\"k\">=</span>b<span class=\"k\">.</span>top<span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">+</span>d<span class=\"k\">.</span>scrollTop<span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>a<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>parentWindow<span class=\"k\">.</span>frameElement<span class=\"k\">||</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span>c<span class=\"k\">.</span>frameBorder<span class=\"k\">===</span><span class=\"s\">\"0\"</span><span class=\"k\">||</span>c<span class=\"k\">.</span>frameBorder<span class=\"k\">===</span><span class=\"s\">\"no\"</span><span class=\"k\">?</span><span class=\"s\">2</span><span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">;</span>e<span class=\"k\">+=</span>g<span class=\"k\">;</span>f<span class=\"k\">+=</span>g<span class=\"k\">}}</span><span class=\"k\">catch</span><span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span>e<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">.</span>window<span class=\"k\">&amp;&amp;</span>c<span class=\"k\">.</span>window<span class=\"k\">===</span>c<span class=\"k\">||</span>c<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span><span class=\"k\">var</span> f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>g<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>e<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>b<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>c<span class=\"k\">;</span>a<span class=\"k\">;</span>j<span class=\"k\">=</span>a<span class=\"k\">,(</span>e<span class=\"k\">=</span>b<span class=\"k\">,</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>offsetParent<span class=\"k\">))</span><span class=\"k\">{</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">():</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">((</span>a<span class=\"k\">.</span>offsetLeft<span class=\"k\">||</span>a<span class=\"k\">.</span>offsetTop<span class=\"k\">)&amp;&amp;(</span>d<span class=\"k\">!==</span><span class=\"s\">\"BODY\"</span><span class=\"k\">||(!</span>e<span class=\"k\">||</span>e<span class=\"k\">.</span>position<span class=\"k\">!==</span><span class=\"s\">\"absolute\"</span><span class=\"k\">)))</span><span class=\"k\">{</span>f<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetLeft<span class=\"k\">;</span>g<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetTop<span class=\"k\">}}</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">var</span> h<span class=\"k\">=</span>b<span class=\"k\">?</span>b<span class=\"k\">.</span>position<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>h<span class=\"k\">||</span>h<span class=\"k\">!==</span><span class=\"s\">\"absolute\"</span><span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>c<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>a<span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">():</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">!==</span><span class=\"s\">\"BODY\"</span><span class=\"k\">&amp;&amp;</span>d<span class=\"k\">!==</span><span class=\"s\">\"HTML\"</span><span class=\"k\">&amp;&amp;(</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">))</span><span class=\"k\">{</span>f<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">;</span>g<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">}</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">var</span> i<span class=\"k\">=</span>b<span class=\"k\">?</span>b<span class=\"k\">.</span>position<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">&amp;&amp;</span>i<span class=\"k\">===</span><span class=\"s\">\"absolute\"</span><span class=\"k\">)</span><span class=\"k\">break</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span>f<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Opera<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>window<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>window<span class=\"k\">===</span>b<span class=\"k\">||</span>b<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>e<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">;</span>a<span class=\"k\">;</span>i<span class=\"k\">=</span>a<span class=\"k\">,</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>offsetParent<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">;</span>d<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetLeft<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">;</span>e<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetTop<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">var</span> g<span class=\"k\">=</span>b<span class=\"k\">.</span>style<span class=\"k\">.</span>position<span class=\"k\">,</span>c<span class=\"k\">=</span>g<span class=\"k\">&amp;&amp;</span>g<span class=\"k\">!==</span><span class=\"s\">\"static\"</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>a<span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>f<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">():</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">!==</span><span class=\"s\">\"BODY\"</span><span class=\"k\">&amp;&amp;</span>f<span class=\"k\">!==</span><span class=\"s\">\"HTML\"</span><span class=\"k\">&amp;&amp;(</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">)&amp;&amp;(</span>c<span class=\"k\">&amp;&amp;(</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>overflow<span class=\"k\">===</span><span class=\"s\">\"scroll\"</span><span class=\"k\">||</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>overflow<span class=\"k\">===</span><span class=\"s\">\"auto\"</span><span class=\"k\">)))</span><span class=\"k\">{</span>d<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">;</span>e<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">var</span> h<span class=\"k\">=</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>style<span class=\"k\">?</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>position<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">;</span>c<span class=\"k\">=</span>c<span class=\"k\">||</span>h<span class=\"k\">&amp;&amp;</span>h<span class=\"k\">!==</span><span class=\"s\">\"static\"</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getLocation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>window<span class=\"k\">&amp;&amp;</span>d<span class=\"k\">.</span>window<span class=\"k\">===</span>d<span class=\"k\">||</span>d<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>g<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">,</span>b<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>d<span class=\"k\">;</span>a<span class=\"k\">;</span>i<span class=\"k\">=</span>a<span class=\"k\">,(</span>g<span class=\"k\">=</span>b<span class=\"k\">,</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>offsetParent<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">():</span><span class=\"k\">null</span><span class=\"k\">;</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">((</span>a<span class=\"k\">.</span>offsetLeft<span class=\"k\">||</span>a<span class=\"k\">.</span>offsetTop<span class=\"k\">)&amp;&amp;!(</span>c<span class=\"k\">===</span><span class=\"s\">\"BODY\"</span><span class=\"k\">&amp;&amp;(!</span>g<span class=\"k\">||</span>g<span class=\"k\">.</span>position<span class=\"k\">!==</span><span class=\"s\">\"absolute\"</span><span class=\"k\">)))</span><span class=\"k\">{</span>e<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetLeft<span class=\"k\">;</span>f<span class=\"k\">+=</span>a<span class=\"k\">.</span>offsetTop<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==</span><span class=\"s\">\"TABLE\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"s\">\"TD\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"s\">\"HTML\"</span><span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>borderLeftWidth<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">;</span>f<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>borderTopWidth<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">===</span><span class=\"s\">\"TABLE\"</span><span class=\"k\">&amp;&amp;(</span>b<span class=\"k\">.</span>position<span class=\"k\">===</span><span class=\"s\">\"relative\"</span><span class=\"k\">||</span>b<span class=\"k\">.</span>position<span class=\"k\">===</span><span class=\"s\">\"absolute\"</span><span class=\"k\">))</span><span class=\"k\">{</span>e<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>marginLeft<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">;</span>f<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>marginTop<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">}}}</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>d<span class=\"k\">);</span><span class=\"k\">var</span> h<span class=\"k\">=</span>b<span class=\"k\">?</span>b<span class=\"k\">.</span>position<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>h<span class=\"k\">||</span>h<span class=\"k\">!==</span><span class=\"s\">\"absolute\"</span><span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span>d<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>a<span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">=</span>a<span class=\"k\">.</span>tagName<span class=\"k\">?</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">():</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==</span><span class=\"s\">\"BODY\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"s\">\"HTML\"</span><span class=\"k\">&amp;&amp;(</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">))</span><span class=\"k\">{</span>e<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollLeft<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">;</span>f<span class=\"k\">-=</span>a<span class=\"k\">.</span>scrollTop<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>borderLeftWidth<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">;</span>f<span class=\"k\">+=</span>parseInt<span class=\"k\">(</span>b<span class=\"k\">.</span>borderTopWidth<span class=\"k\">)||</span><span class=\"s\">0</span><span class=\"k\">}}}</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Point<span class=\"k\">(</span>e<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">}}</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>removeCssClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>d<span class=\"k\">.</span>className<span class=\"k\">+</span><span class=\"s\">\" \"</span><span class=\"k\">,</span>b<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\" \"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">)</span>d<span class=\"k\">.</span>className<span class=\"k\">=(</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>b<span class=\"k\">)+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>a<span class=\"k\">.</span>substring<span class=\"k\">(</span>b<span class=\"k\">+</span>c<span class=\"k\">.</span>length<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">,</span>a<span class=\"k\">.</span>length<span class=\"k\">)).</span>trim<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>setLocation<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>style<span class=\"k\">;</span>a<span class=\"k\">.</span>position<span class=\"k\">=</span><span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>a<span class=\"k\">.</span>left<span class=\"k\">=</span>c<span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">;</span>a<span class=\"k\">.</span>top<span class=\"k\">=</span>d<span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>toggleCssClass<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>containsCssClass<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">))</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>removeCssClass<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">else</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>addCssClass<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisibilityMode<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">===</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>hide<span class=\"k\">?</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>hide<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>collapse<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>setVisibilityMode<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_ensureOldDisplayMode<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">!==</span>b<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisible<span class=\"k\">(</span>a<span class=\"k\">)===</span><span class=\"k\">false</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">===</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>hide<span class=\"k\">)</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">;</span><span class=\"k\">else</span> a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span><span class=\"s\">\"none\"</span><span class=\"k\">;</span>a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">=</span>b<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisible<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>currentStyle<span class=\"k\">||</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">.</span>visibility<span class=\"k\">!==</span><span class=\"s\">\"hidden\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>display<span class=\"k\">!==</span><span class=\"s\">\"none\"</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>setVisible<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">!==</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisible<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_ensureOldDisplayMode<span class=\"k\">(</span>a<span class=\"k\">);</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>visibility<span class=\"k\">=</span>b<span class=\"k\">?</span><span class=\"s\">\"visible\"</span><span class=\"k\">:</span><span class=\"s\">\"hidden\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">||</span>a<span class=\"k\">.</span>_visibilityMode<span class=\"k\">===</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>hide<span class=\"k\">)</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">;</span><span class=\"k\">else</span> a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span><span class=\"s\">\"none\"</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_ensureOldDisplayMode<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>currentStyle<span class=\"k\">||</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">(</span>a<span class=\"k\">);</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">=</span>b<span class=\"k\">?</span>b<span class=\"k\">.</span>display<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">||</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">===</span><span class=\"s\">\"none\"</span><span class=\"k\">)</span><span class=\"k\">switch</span><span class=\"k\">(</span>a<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">())</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"P\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"ADDRESS\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"BLOCKQUOTE\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"BODY\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"COL\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"COLGROUP\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"DD\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"DL\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"DT\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"FIELDSET\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"FORM\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H1\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H2\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H3\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H4\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H5\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"H6\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"HR\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"IFRAME\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"LEGEND\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"OL\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"PRE\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"TABLE\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"TD\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"TH\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"TR\"</span><span class=\"k\">:</span><span class=\"k\">case</span> <span class=\"s\">\"UL\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">=</span><span class=\"s\">\"block\"</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"LI\"</span><span class=\"k\">:</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">=</span><span class=\"s\">\"list-item\"</span><span class=\"k\">;</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span>a<span class=\"k\">.</span>_oldDisplayMode<span class=\"k\">=</span><span class=\"s\">\"inline\"</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getWindow<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>ownerDocument<span class=\"k\">||</span>a<span class=\"k\">.</span>document<span class=\"k\">||</span>a<span class=\"k\">;</span><span class=\"k\">return</span> b<span class=\"k\">.</span>defaultView<span class=\"k\">||</span>b<span class=\"k\">.</span>parentWindow<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getCurrentStyle<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>nodeType<span class=\"k\">===</span><span class=\"s\">3</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> c<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>_getWindow<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>c<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">!==</span>c<span class=\"k\">&amp;&amp;</span>c<span class=\"k\">.</span>getComputedStyle<span class=\"k\">?</span>c<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">):</span>a<span class=\"k\">.</span>currentStyle<span class=\"k\">||</span>a<span class=\"k\">.</span>style<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>style<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">,</span>f<span class=\"k\">=</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>position<span class=\"k\">;</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>position<span class=\"k\">=</span><span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span><span class=\"s\">\"block\"</span><span class=\"k\">;</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">);</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">=</span>g<span class=\"k\">;</span>a<span class=\"k\">.</span>style<span class=\"k\">.</span>position<span class=\"k\">=</span>f<span class=\"k\">;</span>b<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d <span class=\"k\">in</span> e<span class=\"k\">)</span>b<span class=\"k\">[</span>d<span class=\"k\">]=</span>e<span class=\"k\">[</span>d<span class=\"k\">];</span>b<span class=\"k\">.</span>display<span class=\"k\">=</span><span class=\"s\">\"none\"</span><span class=\"k\">}</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>IContainer<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>IContainer<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>IContainer<span class=\"k\">.</span>registerInterface<span class=\"k\">(</span><span class=\"s\">\"Sys.IContainer\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadedDelegate<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadedHandler<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_stopSession<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadedDelegate<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">,</span>loadScripts<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">,</span>c<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">{</span>allScriptsLoadedCallback<span class=\"k\">:</span>b<span class=\"k\">,</span>scriptLoadFailedCallback<span class=\"k\">:</span>c<span class=\"k\">,</span>scriptLoadTimeoutCallback<span class=\"k\">:</span>a<span class=\"k\">,</span>scriptsToLoad<span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">,</span>scriptTimeout<span class=\"k\">:</span>d<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">.</span>length<span class=\"k\">]=</span>e<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_nextSession<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>notifyScriptLoaded<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>_notified<span class=\"k\">++;</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>_notified<span class=\"k\">===</span><span class=\"s\">1</span><span class=\"k\">)</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadedHandler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>get_scriptElement<span class=\"k\">(),</span><span class=\"k\">true</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">),</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>queueCustomScriptTag<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">=[];</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>queueScriptBlock<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">=[];</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">,</span><span class=\"k\">{</span>text<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>queueScriptReference<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">=[];</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptsToLoad<span class=\"k\">,</span><span class=\"k\">{</span>src<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_createScriptElement<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"script\"</span><span class=\"k\">);</span>a<span class=\"k\">.</span>type<span class=\"k\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> c<span class=\"k\">)</span>a<span class=\"k\">[</span>b<span class=\"k\">]=</span>c<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>_loadScriptsInternal<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>scriptsToLoad<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>scriptsToLoad<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>Array<span class=\"k\">.</span>dequeue<span class=\"k\">(</span>b<span class=\"k\">.</span>scriptsToLoad<span class=\"k\">),</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_createScriptElement<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>text<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>innerHTML<span class=\"k\">=</span>a<span class=\"k\">.</span>text<span class=\"k\">;</span><span class=\"k\">delete</span> a<span class=\"k\">.</span>text<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> c<span class=\"k\">.</span>src<span class=\"k\">===</span><span class=\"s\">\"string\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>_ScriptLoaderTask<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadedDelegate<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>execute<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>a<span class=\"k\">);</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_clearScript<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadScriptsInternal<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_stopSession<span class=\"k\">();</span><span class=\"k\">var</span> d<span class=\"k\">=</span>b<span class=\"k\">.</span>allScriptsLoadedCallback<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span>d<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_nextSession<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">,</span>_nextSession<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">return</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Array<span class=\"k\">.</span>dequeue<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_sessions<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>scriptTimeout<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeoutCookie<span class=\"k\">=</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadTimeoutHandler<span class=\"k\">),</span>a<span class=\"k\">.</span>scriptTimeout<span class=\"k\">*</span><span class=\"s\">1000</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadScriptsInternal<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>_raiseError<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">.</span>scriptLoadFailedCallback<span class=\"k\">,</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>get_scriptElement<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_stopSession<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_nextSession<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_loading<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">throw</span> Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_errorScriptLoadFailed<span class=\"k\">(</span>b<span class=\"k\">.</span>src<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_scriptLoadedHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">&amp;&amp;</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>_notified<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>_notified<span class=\"k\">&gt;</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_raiseError<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span><span class=\"k\">else</span><span class=\"k\">{</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_getLoadedScripts<span class=\"k\">(),</span>a<span class=\"k\">.</span>src<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>dispose<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadScriptsInternal<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>_raiseError<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_scriptLoadTimeoutHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentSession<span class=\"k\">.</span>scriptLoadTimeoutCallback<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_stopSession<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_nextSession<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>_stopSession<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeoutCookie<span class=\"k\">)</span><span class=\"k\">{</span>window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeoutCookie<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeoutCookie<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">.</span>dispose<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentTask<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys._ScriptLoader\"</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">);</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>getInstance<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_activeInstance<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_activeInstance<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>isScriptLoaded<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"script\"</span><span class=\"k\">);</span>a<span class=\"k\">.</span>src<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>contains<span class=\"k\">(</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_getLoadedScripts<span class=\"k\">(),</span>a<span class=\"k\">.</span>src<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>readLoadedScripts<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_referencedScripts<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_referencedScripts<span class=\"k\">=[],</span>c<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"script\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span>i<span class=\"k\">=</span>c<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>i<span class=\"k\">&gt;=</span><span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">--)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>c<span class=\"k\">[</span>i<span class=\"k\">],</span>a<span class=\"k\">=</span>d<span class=\"k\">.</span>src<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(!</span>Array<span class=\"k\">.</span>contains<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">))</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_clearScript<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>Sys<span class=\"k\">.</span>Debug<span class=\"k\">.</span>isDebug<span class=\"k\">)</span>a<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_errorScriptLoadFailed<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>scriptLoadMultipleCallbacks<span class=\"k\">;</span><span class=\"k\">else</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>scriptLoadFailed<span class=\"k\">;</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"s\">\"Sys.ScriptLoadFailedException: \"</span><span class=\"k\">+</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">),</span>c<span class=\"k\">=</span>Error<span class=\"k\">.</span>create<span class=\"k\">(</span>e<span class=\"k\">,</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Sys.ScriptLoadFailedException\"</span><span class=\"k\">,</span><span class=\"s\">\"scriptUrl\"</span><span class=\"k\">:</span>b<span class=\"k\">}</span><span class=\"k\">);</span>c<span class=\"k\">.</span>popStackFrame<span class=\"k\">();</span><span class=\"k\">return</span> c<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_getLoadedScripts<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_referencedScripts<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_referencedScripts<span class=\"k\">=[];</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>readLoadedScripts<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_referencedScripts<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoaderTask<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_completedCallback<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_notified<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoaderTask<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_scriptElement<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">}</span><span class=\"k\">,</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposed<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposed<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_removeScriptElementHandlers<span class=\"k\">();</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>_clearScript<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">,</span>execute<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_addScriptElementHandlers<span class=\"k\">();</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_addScriptElementHandlers<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadHandler<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">!==</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">.</span>readyState<span class=\"k\">=</span><span class=\"s\">\"loaded\"</span><span class=\"k\">;</span>$addHandler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">,</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> $addHandler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">,</span><span class=\"s\">\"readystatechange\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorDelegate<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorHandler<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"error\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorDelegate<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_removeScriptElementHandlers<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_scriptElement<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">!==</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">)</span>$removeHandler<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">);</span><span class=\"k\">else</span> $removeHandler<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"s\">\"readystatechange\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorDelegate<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptElement<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">\"error\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorDelegate<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptErrorDelegate<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_scriptLoadDelegate<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}</span><span class=\"k\">,</span>_scriptErrorHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposed<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_completedCallback<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>get_scriptElement<span class=\"k\">(),</span><span class=\"k\">false</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_scriptLoadHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposed<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_scriptElement<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>readyState<span class=\"k\">!==</span><span class=\"s\">\"loaded\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>readyState<span class=\"k\">!==</span><span class=\"s\">\"complete\"</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>b<span class=\"k\">.</span>_completedCallback<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_ScriptLoaderTask<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys._ScriptLoaderTask\"</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>IDisposable<span class=\"k\">);</span>Sys<span class=\"k\">.</span>ApplicationLoadEventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>ApplicationLoadEventArgs<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_isPartialLoad<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>ApplicationLoadEventArgs<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_components<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">}</span><span class=\"k\">,</span>get_isPartialLoad<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_isPartialLoad<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>ApplicationLoadEventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.ApplicationLoadEventArgs\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">);</span>Sys<span class=\"k\">.</span>HistoryEventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>HistoryEventArgs<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>HistoryEventArgs<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_state<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>HistoryEventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.HistoryEventArgs\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">);</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_createdComponents<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_secondPassComponents<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_appLoadHandler<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_clientId<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_history<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_enableHistory<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyFrame<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialized<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialLength<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyLength<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialState<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerHandler<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_uniqueId<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_unloadHandlerDelegate<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_unloadHandler<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandler<span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>addHandler<span class=\"k\">(</span>window<span class=\"k\">,</span><span class=\"s\">\"unload\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_unloadHandlerDelegate<span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>addHandler<span class=\"k\">(</span>window<span class=\"k\">,</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_creatingComponents<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>_disposing<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>get_isCreatingComponents<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_creatingComponents<span class=\"k\">}</span><span class=\"k\">,</span>get_stateString<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>window<span class=\"k\">.</span>location<span class=\"k\">.</span>hash<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_isSafari2<span class=\"k\">())</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_getHistory<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span>a<span class=\"k\">=</span>b<span class=\"k\">[</span>window<span class=\"k\">.</span>history<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialLength<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)===</span><span class=\"s\">\"#\"</span><span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Firefox<span class=\"k\">)</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_serializeState<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_deserializeState<span class=\"k\">(</span>a<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">));</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>get_enableHistory<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_enableHistory<span class=\"k\">}</span><span class=\"k\">,</span>set_enableHistory<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_enableHistory<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>add_init<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"init\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_init<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"init\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>add_load<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_load<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>add_navigate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"navigate\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_navigate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"navigate\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>add_unload<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"unload\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_unload<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"unload\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>addComponent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">[</span>a<span class=\"k\">.</span>get_id<span class=\"k\">()]=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>addHistoryPoint<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ensureHistory<span class=\"k\">();</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>c<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">[</span>a<span class=\"k\">]!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">delete</span> b<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">else</span> b<span class=\"k\">[</span>a<span class=\"k\">]=</span>d<span class=\"k\">}</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_serializeState<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_setState<span class=\"k\">(</span>e<span class=\"k\">,</span>f<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_raiseNavigate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>beginCreateComponents<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_creatingComponents<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposing<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposing<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">)</span><span class=\"k\">{</span>window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">);</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>WebForms<span class=\"k\">.</span>PageRequestManager<span class=\"k\">.</span>getInstance<span class=\"k\">().</span>remove_endRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">);</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>WebForms<span class=\"k\">.</span>PageRequestManager<span class=\"k\">.</span>getInstance<span class=\"k\">().</span>remove_beginRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">);</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>pageUnload<span class=\"k\">)</span>window<span class=\"k\">.</span>pageUnload<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">);</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"unload\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">);</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Array<span class=\"k\">.</span>clone<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>e<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>e<span class=\"k\">;</span>a<span class=\"k\">++)</span>b<span class=\"k\">[</span>a<span class=\"k\">].</span>dispose<span class=\"k\">();</span>Array<span class=\"k\">.</span>clear<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>removeHandler<span class=\"k\">(</span>window<span class=\"k\">,</span><span class=\"s\">\"unload\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_unloadHandlerDelegate<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>removeHandler<span class=\"k\">(</span>window<span class=\"k\">,</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">var</span> d<span class=\"k\">=</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>getInstance<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span>d<span class=\"k\">.</span>dispose<span class=\"k\">();</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"dispose\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>endCreateComponents<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_secondPassComponents<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">=</span>b<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>d<span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span>a<span class=\"k\">].</span>component<span class=\"k\">;</span>Sys$Component$_setReferences<span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">[</span>a<span class=\"k\">].</span>references<span class=\"k\">);</span>c<span class=\"k\">.</span>endUpdate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_secondPassComponents<span class=\"k\">=[];</span><span class=\"k\">this</span><span class=\"k\">.</span>_creatingComponents<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>findComponent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> a<span class=\"k\">?</span>Sys<span class=\"k\">.</span>IContainer<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">)?</span>a<span class=\"k\">.</span>findComponent<span class=\"k\">(</span>b<span class=\"k\">):</span>a<span class=\"k\">[</span>b<span class=\"k\">]||</span><span class=\"k\">null</span><span class=\"k\">:</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>_components<span class=\"k\">[</span>b<span class=\"k\">]||</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">,</span>getComponents<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=[],</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> b<span class=\"k\">)</span>a<span class=\"k\">[</span>a<span class=\"k\">.</span>length<span class=\"k\">]=</span>b<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>initialize<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialized<span class=\"k\">&amp;&amp;!</span><span class=\"k\">this</span><span class=\"k\">.</span>_initializing<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_initializing<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_doInitialize<span class=\"k\">),</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>notifyScriptLoaded<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>_ScriptLoader<span class=\"k\">.</span>getInstance<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">.</span>notifyScriptLoaded<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>registerDisposableObject<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposing<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>raiseLoad<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"load\"</span><span class=\"k\">),</span>a<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>ApplicationLoadEventArgs<span class=\"k\">(</span>Array<span class=\"k\">.</span>clone<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_createdComponents<span class=\"k\">),!</span><span class=\"k\">this</span><span class=\"k\">.</span>_initializing<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span>b<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>pageLoad<span class=\"k\">)</span>window<span class=\"k\">.</span>pageLoad<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_createdComponents<span class=\"k\">=[]</span><span class=\"k\">}</span><span class=\"k\">,</span>removeComponent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>get_id<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_components<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">,</span>setServerId<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_clientId<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_uniqueId<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">,</span>setServerState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ensureHistory<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">.</span>__s<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_updateHiddenField<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>unregisterDisposableObject<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposing<span class=\"k\">)</span>Array<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_disposableObjects<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_addComponentToSecondPass<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_secondPassComponents<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_secondPassComponents<span class=\"k\">.</span>length<span class=\"k\">]=</span><span class=\"k\">{</span>component<span class=\"k\">:</span>b<span class=\"k\">,</span>references<span class=\"k\">:</span>a<span class=\"k\">}}</span><span class=\"k\">,</span>_deserializeState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>i<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"&amp;&amp;\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">&amp;&amp;</span>b<span class=\"k\">+</span><span class=\"s\">2</span><span class=\"k\">&lt;</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">.</span>__s<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>b<span class=\"k\">+</span><span class=\"s\">2</span><span class=\"k\">);</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> g<span class=\"k\">=</span>a<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"&amp;\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>k<span class=\"k\">=</span>g<span class=\"k\">.</span>length<span class=\"k\">;</span>f<span class=\"k\">&lt;</span>k<span class=\"k\">;</span>f<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>g<span class=\"k\">[</span>f<span class=\"k\">],</span>c<span class=\"k\">=</span>d<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"=\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">&lt;</span>d<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> j<span class=\"k\">=</span>d<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">),</span>h<span class=\"k\">=</span>d<span class=\"k\">.</span>substr<span class=\"k\">(</span>c<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">);</span>e<span class=\"k\">[</span>j<span class=\"k\">]=</span>i<span class=\"k\">?</span>h<span class=\"k\">:</span>decodeURIComponent<span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">,</span>_doInitialize<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"initialize\"</span><span class=\"k\">);</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"init\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>beginCreateComponents<span class=\"k\">();</span>b<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>endCreateComponents<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>WebForms<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onPageRequestManagerBeginRequest<span class=\"k\">);</span>Sys<span class=\"k\">.</span>WebForms<span class=\"k\">.</span>PageRequestManager<span class=\"k\">.</span>getInstance<span class=\"k\">().</span>add_beginRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_beginRequestHandler<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onPageRequestManagerEndRequest<span class=\"k\">);</span>Sys<span class=\"k\">.</span>WebForms<span class=\"k\">.</span>PageRequestManager<span class=\"k\">.</span>getInstance<span class=\"k\">().</span>add_endRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_endRequestHandler<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_stateString<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_navigate<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>raiseLoad<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_initializing<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>_enableHistoryInScriptManager<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_enableHistory<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>_ensureHistory<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialized<span class=\"k\">&amp;&amp;</span><span class=\"k\">this</span><span class=\"k\">.</span>_enableHistory<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>InternetExplorer<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>documentMode<span class=\"k\">&lt;</span><span class=\"s\">8</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyFrame<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"__historyFrame\"</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreIFrame<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_isSafari2<span class=\"k\">())</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"__history\"</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_setHistory<span class=\"k\">([</span>window<span class=\"k\">.</span>location<span class=\"k\">.</span>hash<span class=\"k\">]);</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialLength<span class=\"k\">=</span>window<span class=\"k\">.</span>history<span class=\"k\">.</span>length<span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerHandler<span class=\"k\">=</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onIdle<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">=</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerHandler<span class=\"k\">,</span><span class=\"s\">100</span><span class=\"k\">);</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_initialState<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_deserializeState<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>get_stateString<span class=\"k\">())</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialized<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">,</span>_getHistory<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"__history\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">.</span>value<span class=\"k\">;</span><span class=\"k\">return</span> b<span class=\"k\">?</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>deserialize<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">):</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>_isSafari2<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Safari<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>version<span class=\"k\">&lt;=</span><span class=\"s\">419.3</span><span class=\"k\">}</span><span class=\"k\">,</span>_loadHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomEvent<span class=\"k\">.</span>removeHandler<span class=\"k\">(</span>window<span class=\"k\">,</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_loadHandlerDelegate<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>initialize<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>_navigate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ensureHistory<span class=\"k\">();</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_deserializeState<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_uniqueId<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">.</span>__s<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>a<span class=\"k\">=</span>b<span class=\"k\">.</span>__s<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_updateHiddenField<span class=\"k\">(</span>a<span class=\"k\">);</span>__doPostBack<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_uniqueId<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">return</span><span class=\"k\">}}</span><span class=\"k\">this</span><span class=\"k\">.</span>_setState<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_raiseNavigate<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>_onIdle<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_stateString<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_navigate<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyLength<span class=\"k\">=</span>window<span class=\"k\">.</span>history<span class=\"k\">.</span>length<span class=\"k\">}}</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerCookie<span class=\"k\">=</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timerHandler<span class=\"k\">,</span><span class=\"s\">100</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_onIFrameLoad<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ensureHistory<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreIFrame<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_navigate<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreIFrame<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>_onPageRequestManagerBeginRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>_onPageRequestManagerEndRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>d<span class=\"k\">.</span>get_dataItems<span class=\"k\">()[</span><span class=\"k\">this</span><span class=\"k\">.</span>_clientId<span class=\"k\">],</span>a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"__EVENTTARGET\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>value<span class=\"k\">===</span><span class=\"k\">this</span><span class=\"k\">.</span>_uniqueId<span class=\"k\">)</span>a<span class=\"k\">.</span>value<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>setServerState<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_serializeState<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_setState<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_raiseNavigate<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">,</span>_raiseNavigate<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_events<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"navigate\"</span><span class=\"k\">),</span>b<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"s\">\"__s\"</span><span class=\"k\">)</span>b<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">.</span>_state<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>HistoryEventArgs<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>c<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_serializeState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=[];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>d<span class=\"k\">[</span>a<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"s\">\"__s\"</span><span class=\"k\">)</span><span class=\"k\">var</span> c<span class=\"k\">=</span>e<span class=\"k\">;</span><span class=\"k\">else</span> b<span class=\"k\">[</span>b<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">+</span><span class=\"s\">\"=\"</span><span class=\"k\">+</span>encodeURIComponent<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">return</span> b<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\"&amp;\"</span><span class=\"k\">)+(</span>c<span class=\"k\">?</span><span class=\"s\">\"&amp;&amp;\"</span><span class=\"k\">+</span>c<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_setHistory<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"__history\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">.</span>value<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>serialize<span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_setState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>a<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>theForm<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>window<span class=\"k\">.</span>theForm<span class=\"k\">.</span>action<span class=\"k\">,</span>f<span class=\"k\">=</span>e<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">);</span>window<span class=\"k\">.</span>theForm<span class=\"k\">.</span>action<span class=\"k\">=(</span>f<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">?</span>e<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">):</span>e<span class=\"k\">)+</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>a<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyFrame<span class=\"k\">&amp;&amp;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreIFrame<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyPointIsNew<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyFrame<span class=\"k\">.</span>contentWindow<span class=\"k\">.</span>document<span class=\"k\">;</span>d<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"s\">\"javascript:'&lt;html&gt;&lt;/html&gt;'\"</span><span class=\"k\">);</span>d<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">\"&lt;html&gt;&lt;head&gt;&lt;title&gt;\"</span><span class=\"k\">+(</span>c<span class=\"k\">||</span>document<span class=\"k\">.</span>title<span class=\"k\">)+</span><span class=\"s\">\"&lt;/title&gt;&lt;scri\"</span><span class=\"k\">+</span><span class=\"s\">'pt type=\"text/javascript\"&gt;parent.Sys.Application._onIFrameLoad(</span><span class=\"t\">\\'</span><span class=\"s\">'</span><span class=\"k\">+</span>a<span class=\"k\">+</span><span class=\"s\">\"');&lt;/scri\"</span><span class=\"k\">+</span><span class=\"s\">\"pt&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;\"</span><span class=\"k\">);</span>d<span class=\"k\">.</span>close<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">this</span><span class=\"k\">.</span>_ignoreTimer<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">var</span> h<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_stateString<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_currentEntry<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_isSafari2<span class=\"k\">())</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_getHistory<span class=\"k\">();</span>g<span class=\"k\">[</span>window<span class=\"k\">.</span>history<span class=\"k\">.</span>length<span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyInitialLength<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">]=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_setHistory<span class=\"k\">(</span>g<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_historyLength<span class=\"k\">=</span>window<span class=\"k\">.</span>history<span class=\"k\">.</span>length<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"form\"</span><span class=\"k\">);</span>b<span class=\"k\">.</span>method<span class=\"k\">=</span><span class=\"s\">\"get\"</span><span class=\"k\">;</span>b<span class=\"k\">.</span>action<span class=\"k\">=</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>a<span class=\"k\">;</span>document<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>b<span class=\"k\">);</span>b<span class=\"k\">.</span>submit<span class=\"k\">();</span>document<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> window<span class=\"k\">.</span>location<span class=\"k\">.</span>hash<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> c<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>c<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span>document<span class=\"k\">.</span>title<span class=\"k\">=</span>c<span class=\"k\">}}}</span><span class=\"k\">,</span>_unloadHandler<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>dispose<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>_updateHiddenField<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_clientId<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_clientId<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">.</span>value<span class=\"k\">=</span>b<span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>_Application<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys._Application\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">,</span>Sys<span class=\"k\">.</span>IContainer<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>_Application<span class=\"k\">;</span><span class=\"k\">var</span> $find<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>findComponent<span class=\"k\">;</span>Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">(</span><span class=\"s\">\"Sys.Net\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestExecutor<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_resultObject<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestExecutor<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_webRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">}</span><span class=\"k\">,</span>_set_webRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_started<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_responseAvailable<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_timedOut<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_aborted<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_responseData<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_statusCode<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_statusText<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_xml<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_object<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_resultObject<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_resultObject<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>deserialize<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>get_responseData<span class=\"k\">());</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_resultObject<span class=\"k\">}</span><span class=\"k\">,</span>executeRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>abort<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>getResponseHeader<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>getAllResponseHeaders<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestExecutor<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.WebRequestExecutor\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLDOM<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>window<span class=\"k\">.</span>DOMParser<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=[</span><span class=\"s\">\"Msxml2.DOMDocument.3.0\"</span><span class=\"k\">,</span><span class=\"s\">\"Msxml2.DOMDocument\"</span><span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">=</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span>c<span class=\"k\">[</span>b<span class=\"k\">]);</span>a<span class=\"k\">.</span>async<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span>a<span class=\"k\">.</span>loadXML<span class=\"k\">(</span>d<span class=\"k\">);</span>a<span class=\"k\">.</span>setProperty<span class=\"k\">(</span><span class=\"s\">\"SelectionLanguage\"</span><span class=\"k\">,</span><span class=\"s\">\"XPath\"</span><span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>g<span class=\"k\">)</span><span class=\"k\">{}}</span><span class=\"k\">else</span> <span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">new</span> window<span class=\"k\">.</span>DOMParser<span class=\"k\">;</span><span class=\"k\">return</span> e<span class=\"k\">.</span>parseFromString<span class=\"k\">(</span>d<span class=\"k\">,</span><span class=\"s\">\"text/xml\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>g<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLHttpExecutor<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLHttpExecutor<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_responseAvailable<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timedOut<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timer<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_aborted<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_started<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_onReadyStateChange<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>readyState<span class=\"k\">===</span><span class=\"s\">4</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>status<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span><span class=\"k\">}</span>a<span class=\"k\">.</span>_clearTimer<span class=\"k\">();</span>a<span class=\"k\">.</span>_responseAvailable<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span>a<span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>completed<span class=\"k\">(</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">finally</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">!=</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>onreadystatechange<span class=\"k\">=</span>Function<span class=\"k\">.</span>emptyMethod<span class=\"k\">;</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}}}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_clearTimer<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>_timer<span class=\"k\">!=</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span>a<span class=\"k\">.</span>_timer<span class=\"k\">);</span>a<span class=\"k\">.</span>_timer<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_onTimeout<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>_responseAvailable<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>_clearTimer<span class=\"k\">();</span>a<span class=\"k\">.</span>_timedOut<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>onreadystatechange<span class=\"k\">=</span>Function<span class=\"k\">.</span>emptyMethod<span class=\"k\">;</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>abort<span class=\"k\">();</span>a<span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>completed<span class=\"k\">(</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">);</span>a<span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLHttpExecutor<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_timedOut<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timedOut<span class=\"k\">}</span><span class=\"k\">,</span>get_started<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_started<span class=\"k\">}</span><span class=\"k\">,</span>get_responseAvailable<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_responseAvailable<span class=\"k\">}</span><span class=\"k\">,</span>get_aborted<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_aborted<span class=\"k\">}</span><span class=\"k\">,</span>executeRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_webRequest<span class=\"k\">();</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>get_body<span class=\"k\">(),</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>get_headers<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">=</span><span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>onreadystatechange<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_onReadyStateChange<span class=\"k\">;</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>get_httpVerb<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>open<span class=\"k\">(</span>e<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>getResolvedUrl<span class=\"k\">(),</span><span class=\"k\">true</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>a<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> f<span class=\"k\">!==</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span>b<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>toLowerCase<span class=\"k\">()===</span><span class=\"s\">\"post\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||!</span>a<span class=\"k\">[</span><span class=\"s\">\"Content-Type\"</span><span class=\"k\">])</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span><span class=\"s\">\"Content-Type\"</span><span class=\"k\">,</span><span class=\"s\">\"application/x-www-form-urlencoded; charset=utf-8\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>c<span class=\"k\">)</span>c<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>get_timeout<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_timer<span class=\"k\">=</span>window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onTimeout<span class=\"k\">),</span>d<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>send<span class=\"k\">(</span>c<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_started<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span><span class=\"k\">,</span>getResponseHeader<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span>a<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>getAllResponseHeaders<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>getAllResponseHeaders<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_responseData<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>responseText<span class=\"k\">}</span><span class=\"k\">,</span>get_statusCode<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>status<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>get_statusText<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>statusText<span class=\"k\">}</span><span class=\"k\">,</span>get_xml<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>responseXML<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLDOM<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>responseText<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"MSIE\"</span><span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span>a<span class=\"k\">.</span>setProperty<span class=\"k\">(</span><span class=\"s\">\"SelectionLanguage\"</span><span class=\"k\">,</span><span class=\"s\">\"XPath\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>namespaceURI<span class=\"k\">===</span><span class=\"s\">\"http://www.mozilla.org/newlayout/xml/parsererror.xml\"</span><span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>tagName<span class=\"k\">===</span><span class=\"s\">\"parsererror\"</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>firstChild<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>tagName<span class=\"k\">===</span><span class=\"s\">\"parsererror\"</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>abort<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_aborted<span class=\"k\">||</span><span class=\"k\">this</span><span class=\"k\">.</span>_responseAvailable<span class=\"k\">||</span><span class=\"k\">this</span><span class=\"k\">.</span>_timedOut<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_aborted<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_clearTimer<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">&amp;&amp;!</span><span class=\"k\">this</span><span class=\"k\">.</span>_responseAvailable<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>onreadystatechange<span class=\"k\">=</span>Function<span class=\"k\">.</span>emptyMethod<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">.</span>abort<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_xmlHttpRequest<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">.</span>completed<span class=\"k\">(</span>Sys<span class=\"k\">.</span>EventArgs<span class=\"k\">.</span>Empty<span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>XMLHttpExecutor<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.XMLHttpExecutor\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestExecutor<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>_WebRequestManager<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultTimeout<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultExecutorType<span class=\"k\">=</span><span class=\"s\">\"Sys.Net.XMLHttpExecutor\"</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>_WebRequestManager<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>add_invokingRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"invokingRequest\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_invokingRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"invokingRequest\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>add_completedRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"completedRequest\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_completedRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"completedRequest\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_get_eventHandlerList<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultTimeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultTimeout<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultTimeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultTimeout<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultExecutorType<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultExecutorType<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultExecutorType<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultExecutorType<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>executeRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>webRequest<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> executor<span class=\"k\">=</span>webRequest<span class=\"k\">.</span>get_executor<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>executor<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> failed<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> executorType<span class=\"k\">=</span>eval<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultExecutorType<span class=\"k\">);</span>executor<span class=\"k\">=</span><span class=\"k\">new</span> executorType<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>failed<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}</span>webRequest<span class=\"k\">.</span>set_executor<span class=\"k\">(</span>executor<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>executor<span class=\"k\">.</span>get_aborted<span class=\"k\">())</span><span class=\"k\">return</span><span class=\"k\">;</span><span class=\"k\">var</span> evArgs<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>NetworkRequestEventArgs<span class=\"k\">(</span>webRequest<span class=\"k\">),</span>handler<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"invokingRequest\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>handler<span class=\"k\">)</span>handler<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>evArgs<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>evArgs<span class=\"k\">.</span>get_cancel<span class=\"k\">())</span>executor<span class=\"k\">.</span>executeRequest<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>_WebRequestManager<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net._WebRequestManager\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestManager<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>_WebRequestManager<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>NetworkRequestEventArgs<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>NetworkRequestEventArgs<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>NetworkRequestEventArgs<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_webRequest<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_webRequest<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>NetworkRequestEventArgs<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.NetworkRequestEventArgs\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>CancelEventArgs<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_url<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_headers<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_body<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_userContext<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_httpVerb<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_invokeCalled<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>add_completed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>addHandler<span class=\"k\">(</span><span class=\"s\">\"completed\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>remove_completed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>removeHandler<span class=\"k\">(</span><span class=\"s\">\"completed\"</span><span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>completed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestManager<span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"completedRequest\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">,</span>b<span class=\"k\">);</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_eventHandlerList<span class=\"k\">().</span>getHandler<span class=\"k\">(</span><span class=\"s\">\"completed\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_get_eventHandlerList<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>EventHandlerList<span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_events<span class=\"k\">}</span><span class=\"k\">,</span>get_url<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_url<span class=\"k\">}</span><span class=\"k\">,</span>set_url<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_url<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_headers<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_headers<span class=\"k\">}</span><span class=\"k\">,</span>get_httpVerb<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_httpVerb<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_body<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"GET\"</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"s\">\"POST\"</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_httpVerb<span class=\"k\">}</span><span class=\"k\">,</span>set_httpVerb<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_httpVerb<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_body<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_body<span class=\"k\">}</span><span class=\"k\">,</span>set_body<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_body<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_userContext<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_userContext<span class=\"k\">}</span><span class=\"k\">,</span>set_userContext<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_userContext<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_executor<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">}</span><span class=\"k\">,</span>set_executor<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_executor<span class=\"k\">.</span>_set_webRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>get_timeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestManager<span class=\"k\">.</span>get_defaultTimeout<span class=\"k\">();</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">}</span><span class=\"k\">,</span>set_timeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>getResolvedUrl<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_resolveUrl<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_url<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>invoke<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequestManager<span class=\"k\">.</span>executeRequest<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_invokeCalled<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_resolveUrl<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">&amp;&amp;</span>b<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"://\"</span><span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">return</span> b<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||</span>a<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> d<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"base\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">&amp;&amp;</span>d<span class=\"k\">.</span>href<span class=\"k\">&amp;&amp;</span>d<span class=\"k\">.</span>href<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span>a<span class=\"k\">=</span>d<span class=\"k\">.</span>href<span class=\"k\">;</span><span class=\"k\">else</span> a<span class=\"k\">=</span>document<span class=\"k\">.</span>URL<span class=\"k\">}</span><span class=\"k\">var</span> c<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"?\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">);</span>c<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>c<span class=\"k\">);</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>a<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">)+</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">||</span>b<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)===</span><span class=\"s\">\"/\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"://\"</span><span class=\"k\">),</span>g<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">,</span>e<span class=\"k\">+</span><span class=\"s\">3</span><span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>g<span class=\"k\">)+</span>b<span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>a<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">)+</span>b<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_createQueryString<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span>b<span class=\"k\">=</span>encodeURIComponent<span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">,</span>f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>d<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> e<span class=\"k\">===</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">continue</span><span class=\"k\">;</span><span class=\"k\">var</span> g<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>serialize<span class=\"k\">(</span>e<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">!==</span><span class=\"s\">0</span><span class=\"k\">)</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"&amp;\"</span><span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>c<span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"=\"</span><span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>b<span class=\"k\">(</span>g<span class=\"k\">));</span>f<span class=\"k\">++</span><span class=\"k\">}</span><span class=\"k\">return</span> a<span class=\"k\">.</span>toString<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_createUrl<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">;</span><span class=\"k\">var</span> d<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_createQueryString<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>length<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"?\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"?\"</span><span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span>c<span class=\"k\">=</span><span class=\"s\">\"&amp;\"</span><span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">+</span>c<span class=\"k\">+</span>d<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.WebRequest\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_timeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">}</span><span class=\"k\">,</span>set_timeout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>argumentOutOfRange<span class=\"k\">(</span><span class=\"s\">\"value\"</span><span class=\"k\">,</span>a<span class=\"k\">,</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>invalidTimeout<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_timeout<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultUserContext<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_userContext<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultUserContext<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_userContext<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultSucceededCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_succeeded<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultSucceededCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_succeeded<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultFailedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_failed<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultFailedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_failed<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_path<span class=\"k\">}</span><span class=\"k\">,</span>set_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_path<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>_invoke<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>g<span class=\"k\">,</span>f<span class=\"k\">,</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span><span class=\"k\">typeof</span> c<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span>c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span><span class=\"k\">typeof</span> b<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">===</span><span class=\"k\">null</span><span class=\"k\">||</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span>a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>invoke<span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>g<span class=\"k\">,</span>f<span class=\"k\">,</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>get_timeout<span class=\"k\">())</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.WebServiceProxy\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>invoke<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>k<span class=\"k\">,</span>a<span class=\"k\">,</span>j<span class=\"k\">,</span>d<span class=\"k\">,</span>i<span class=\"k\">,</span>c<span class=\"k\">,</span>f<span class=\"k\">,</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">;</span>b<span class=\"k\">.</span>get_headers<span class=\"k\">()[</span><span class=\"s\">\"Content-Type\"</span><span class=\"k\">]=</span><span class=\"s\">\"application/json; charset=utf-8\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>d<span class=\"k\">)</span>d<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> g<span class=\"k\">=</span>d<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>j<span class=\"k\">||!</span>g<span class=\"k\">)</span>g<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>b<span class=\"k\">.</span>set_url<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebRequest<span class=\"k\">.</span>_createUrl<span class=\"k\">(</span>k<span class=\"k\">+</span><span class=\"s\">\"/\"</span><span class=\"k\">+</span>encodeURIComponent<span class=\"k\">(</span>a<span class=\"k\">),</span>g<span class=\"k\">));</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>j<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>serialize<span class=\"k\">(</span>d<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">===</span><span class=\"s\">\"{}\"</span><span class=\"k\">)</span>e<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">}</span>b<span class=\"k\">.</span>set_body<span class=\"k\">(</span>e<span class=\"k\">);</span>b<span class=\"k\">.</span>add_completed<span class=\"k\">(</span>l<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">&amp;&amp;</span>h<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span>b<span class=\"k\">.</span>set_timeout<span class=\"k\">(</span>h<span class=\"k\">);</span>b<span class=\"k\">.</span>invoke<span class=\"k\">();</span><span class=\"k\">function</span> l<span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>get_responseAvailable<span class=\"k\">())</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span>d<span class=\"k\">.</span>get_statusCode<span class=\"k\">(),</span>b<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>d<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span><span class=\"s\">\"Content-Type\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"application/json\"</span><span class=\"k\">))</span>b<span class=\"k\">=</span>d<span class=\"k\">.</span>get_object<span class=\"k\">();</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"text/xml\"</span><span class=\"k\">))</span>b<span class=\"k\">=</span>d<span class=\"k\">.</span>get_xml<span class=\"k\">();</span><span class=\"k\">else</span> b<span class=\"k\">=</span>d<span class=\"k\">.</span>get_responseData<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>m<span class=\"k\">)</span><span class=\"k\">{}</span><span class=\"k\">var</span> k<span class=\"k\">=</span>d<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span><span class=\"s\">\"jsonerror\"</span><span class=\"k\">),</span>h<span class=\"k\">=</span>k<span class=\"k\">===</span><span class=\"s\">\"true\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span>b<span class=\"k\">.</span>Message<span class=\"k\">,</span>b<span class=\"k\">.</span>StackTrace<span class=\"k\">,</span>b<span class=\"k\">.</span>ExceptionType<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"application/json\"</span><span class=\"k\">))</span>b<span class=\"k\">=</span>b<span class=\"k\">.</span>d<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>g<span class=\"k\">&lt;</span><span class=\"s\">200</span><span class=\"k\">||</span>g<span class=\"k\">&gt;=</span><span class=\"s\">300</span><span class=\"k\">||</span>h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">||!</span>h<span class=\"k\">)</span>b<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceFailedNoMsg<span class=\"k\">,</span>a<span class=\"k\">),</span><span class=\"s\">\"\"</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">);</span>b<span class=\"k\">.</span>_statusCode<span class=\"k\">=</span>g<span class=\"k\">;</span>c<span class=\"k\">(</span>b<span class=\"k\">,</span>f<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">)</span>i<span class=\"k\">(</span>b<span class=\"k\">,</span>f<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">var</span> j<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">.</span>get_timedOut<span class=\"k\">())</span>j<span class=\"k\">=</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceTimedOut<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">else</span> j<span class=\"k\">=</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceFailedNoMsg<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>c<span class=\"k\">(</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">(</span>d<span class=\"k\">.</span>get_timedOut<span class=\"k\">(),</span>j<span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">),</span>f<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>_generateTypedConstructor<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> b<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">[</span>c<span class=\"k\">]=</span>b<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">this</span><span class=\"k\">.</span>__type<span class=\"k\">=</span>a<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>d<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_timedOut<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_message<span class=\"k\">=</span>d<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_stackTrace<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_exceptionType<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_statusCode<span class=\"k\">=-</span><span class=\"s\">1</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>get_timedOut<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_timedOut<span class=\"k\">}</span><span class=\"k\">,</span>get_statusCode<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_statusCode<span class=\"k\">}</span><span class=\"k\">,</span>get_message<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_message<span class=\"k\">}</span><span class=\"k\">,</span>get_stackTrace<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_stackTrace<span class=\"k\">}</span><span class=\"k\">,</span>get_exceptionType<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_exceptionType<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceError<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Net.WebServiceError\"</span><span class=\"k\">);</span>Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">(</span><span class=\"s\">\"Sys.Services\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">=</span><span class=\"k\">{}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_defaultSaveCompletedCallback<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_path<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>_timeout<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>get_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoadCompletedCallback<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoadCompletedCallback<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultSaveCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultSaveCompletedCallback<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultSaveCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultSaveCompletedCallback<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_path<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>load<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">,</span>a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>c<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">=</span><span class=\"s\">\"GetAllPropertiesForCurrentUser\"</span><span class=\"k\">;</span>b<span class=\"k\">=</span><span class=\"k\">{</span>authenticatedUserOnly<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">}}</span><span class=\"k\">else</span><span class=\"k\">{</span>a<span class=\"k\">=</span><span class=\"s\">\"GetPropertiesForCurrentUser\"</span><span class=\"k\">;</span>b<span class=\"k\">=</span><span class=\"k\">{</span>properties<span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>_clonePropertyNames<span class=\"k\">(</span>c<span class=\"k\">),</span>authenticatedUserOnly<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">}}</span><span class=\"k\">this</span><span class=\"k\">.</span>_invoke<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_path<span class=\"k\">(),</span>a<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span>b<span class=\"k\">,</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoadComplete<span class=\"k\">),</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoadFailed<span class=\"k\">),[</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>f<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">,</span>save<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">,</span>c<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_flattenProperties<span class=\"k\">(</span>d<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_invoke<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_path<span class=\"k\">(),</span><span class=\"s\">\"SetPropertiesForCurrentUser\"</span><span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">{</span>values<span class=\"k\">:</span>a<span class=\"k\">.</span>value<span class=\"k\">,</span>authenticatedUserOnly<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onSaveComplete<span class=\"k\">),</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onSaveFailed<span class=\"k\">),[</span>b<span class=\"k\">,</span>c<span class=\"k\">,</span>e<span class=\"k\">,</span>a<span class=\"k\">.</span>count<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">,</span>_clonePropertyNames<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=[],</span>d<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>b<span class=\"k\">&lt;</span>e<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>e<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>d<span class=\"k\">[</span>a<span class=\"k\">])</span><span class=\"k\">{</span>Array<span class=\"k\">.</span>add<span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">);</span>d<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">return</span> c<span class=\"k\">}</span><span class=\"k\">,</span>_flattenProperties<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>i<span class=\"k\">,</span>j<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">,</span>e<span class=\"k\">,</span>d<span class=\"k\">,</span>g<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">{</span>value<span class=\"k\">:</span>b<span class=\"k\">,</span>count<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">in</span> i<span class=\"k\">)</span><span class=\"k\">{</span>e<span class=\"k\">=</span>i<span class=\"k\">[</span>c<span class=\"k\">];</span>d<span class=\"k\">=</span>j<span class=\"k\">?</span>j<span class=\"k\">+</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>c<span class=\"k\">:</span>c<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileGroup<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>e<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">var</span> k<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_flattenProperties<span class=\"k\">(</span>a<span class=\"k\">,</span>e<span class=\"k\">,</span>d<span class=\"k\">),</span>h<span class=\"k\">=</span>k<span class=\"k\">.</span>value<span class=\"k\">;</span>g<span class=\"k\">+=</span>k<span class=\"k\">.</span>count<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> f <span class=\"k\">in</span> h<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span>h<span class=\"k\">[</span>f<span class=\"k\">];</span>b<span class=\"k\">[</span>f<span class=\"k\">]=</span>l<span class=\"k\">}}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||</span>Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>a<span class=\"k\">,</span>d<span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>b<span class=\"k\">[</span>d<span class=\"k\">]=</span>e<span class=\"k\">;</span>g<span class=\"k\">++</span><span class=\"k\">}}</span><span class=\"k\">return</span> <span class=\"k\">{</span>value<span class=\"k\">:</span>b<span class=\"k\">,</span>count<span class=\"k\">:</span>g<span class=\"k\">}}</span><span class=\"k\">,</span>_get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_path<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>servicePathNotSet<span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>_onLoadComplete<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>e<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">!==</span><span class=\"s\">\"object\"</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceInvalidReturnType<span class=\"k\">,</span>g<span class=\"k\">,</span><span class=\"s\">\"Object\"</span><span class=\"k\">));</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_unflattenProperties<span class=\"k\">(</span>a<span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> c<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>properties<span class=\"k\">[</span>b<span class=\"k\">]=</span>c<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">var</span> d<span class=\"k\">=</span>e<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultLoadCompletedCallback<span class=\"k\">()||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span>e<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>d<span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">,</span>f<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.ProfileService.load\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_onLoadFailed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>a<span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.ProfileService.load\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_onSaveComplete<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>a <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span>c<span class=\"k\">-=</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> a<span class=\"k\">===</span><span class=\"s\">\"number\"</span><span class=\"k\">)</span>c<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">else</span> <span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceInvalidReturnType<span class=\"k\">,</span>f<span class=\"k\">,</span><span class=\"s\">\"Array\"</span><span class=\"k\">));</span><span class=\"k\">var</span> d<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSaveCompletedCallback<span class=\"k\">()||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>d<span class=\"k\">(</span>c<span class=\"k\">,</span>e<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.ProfileService.save\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_onSaveFailed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>a<span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.ProfileService.save\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_unflattenProperties<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">,</span>d<span class=\"k\">,</span>f<span class=\"k\">,</span>h<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a <span class=\"k\">in</span> e<span class=\"k\">)</span><span class=\"k\">{</span>h<span class=\"k\">++;</span>f<span class=\"k\">=</span>e<span class=\"k\">[</span>a<span class=\"k\">];</span>d<span class=\"k\">=</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>d<span class=\"k\">!==-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">);</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>d<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">var</span> b<span class=\"k\">=</span>c<span class=\"k\">[</span>g<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">||!</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileGroup<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">{</span>b<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileGroup<span class=\"k\">;</span>c<span class=\"k\">[</span>g<span class=\"k\">]=</span>b<span class=\"k\">}</span>b<span class=\"k\">[</span>a<span class=\"k\">]=</span>f<span class=\"k\">}</span><span class=\"k\">else</span> c<span class=\"k\">[</span>a<span class=\"k\">]=</span>f<span class=\"k\">}</span>e<span class=\"k\">.</span>length<span class=\"k\">=</span>h<span class=\"k\">;</span><span class=\"k\">return</span> c<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Services._ProfileService\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileService<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_ProfileService<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileGroup<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b <span class=\"k\">in</span> a<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">[</span>b<span class=\"k\">]=</span>a<span class=\"k\">[</span>b<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>ProfileGroup<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Services.ProfileGroup\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_defaultLoginCompletedCallback<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_defaultLogoutCompletedCallback<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_path<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>_timeout<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>_authenticated<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>get_defaultLoginCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoginCompletedCallback<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultLoginCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoginCompletedCallback<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_defaultLogoutCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultLogoutCompletedCallback<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultLogoutCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultLogoutCompletedCallback<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_isLoggedIn<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_authenticated<span class=\"k\">}</span><span class=\"k\">,</span>get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_path<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>login<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span>h<span class=\"k\">,</span>f<span class=\"k\">,</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_invoke<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_path<span class=\"k\">(),</span><span class=\"s\">\"Login\"</span><span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">{</span>userName<span class=\"k\">:</span>c<span class=\"k\">,</span>password<span class=\"k\">:</span>b<span class=\"k\">,</span>createPersistentCookie<span class=\"k\">:</span>a<span class=\"k\">}</span><span class=\"k\">,</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoginComplete<span class=\"k\">),</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoginFailed<span class=\"k\">),[</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span>h<span class=\"k\">,</span>f<span class=\"k\">,</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span>g<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">,</span>logout<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_invoke<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_path<span class=\"k\">(),</span><span class=\"s\">\"Logout\"</span><span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">{}</span><span class=\"k\">,</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLogoutComplete<span class=\"k\">),</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLogoutFailed<span class=\"k\">),[</span>c<span class=\"k\">,</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>d<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">,</span>_get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_path<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>servicePathNotSet<span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>_onLoginComplete<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>c<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> e<span class=\"k\">!==</span><span class=\"s\">\"boolean\"</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceInvalidReturnType<span class=\"k\">,</span>f<span class=\"k\">,</span><span class=\"s\">\"Boolean\"</span><span class=\"k\">));</span><span class=\"k\">var</span> b<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">],</span>d<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">7</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">(),</span>a<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultLoginCompletedCallback<span class=\"k\">()||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_authenticated<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span>d<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.AuthenticationService.login\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span>b<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span>window<span class=\"k\">.</span>location<span class=\"k\">.</span>href<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span>d<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.AuthenticationService.login\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_onLoginFailed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">7</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>a<span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.AuthenticationService.login\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_onLogoutComplete<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>f<span class=\"k\">,</span>a<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>f<span class=\"k\">!==</span><span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceInvalidReturnType<span class=\"k\">,</span>e<span class=\"k\">,</span><span class=\"s\">\"null\"</span><span class=\"k\">));</span><span class=\"k\">var</span> b<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>d<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">(),</span>c<span class=\"k\">=</span>a<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultLogoutCompletedCallback<span class=\"k\">()||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">this</span><span class=\"k\">.</span>_authenticated<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">)</span>c<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span>d<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.AuthenticationService.logout\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>b<span class=\"k\">)</span>window<span class=\"k\">.</span>location<span class=\"k\">.</span>reload<span class=\"k\">();</span><span class=\"k\">else</span> window<span class=\"k\">.</span>location<span class=\"k\">.</span>href<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">,</span>_onLogoutFailed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span>a<span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span><span class=\"s\">\"Sys.Services.AuthenticationService.logout\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>_setAuthenticated<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_authenticated<span class=\"k\">=</span>a<span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Services._AuthenticationService\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>AuthenticationService<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_AuthenticationService<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_roles<span class=\"k\">=[]</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">=</span><span class=\"s\">\"\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_rolesIndex<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_timeout<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>_path<span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>get_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoadCompletedCallback<span class=\"k\">}</span><span class=\"k\">,</span>set_defaultLoadCompletedCallback<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_defaultLoadCompletedCallback<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_path<span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">}</span><span class=\"k\">,</span>get_roles<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>clone<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_roles<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>isUserInRole<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_rolesIndex<span class=\"k\">()[</span>a<span class=\"k\">.</span>trim<span class=\"k\">().</span>toLowerCase<span class=\"k\">()];</span><span class=\"k\">return</span> <span class=\"k\">!!</span>b<span class=\"k\">}</span><span class=\"k\">,</span>load<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">.</span>invoke<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_get_path<span class=\"k\">(),</span><span class=\"s\">\"GetRolesForCurrentUser\"</span><span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">{}</span><span class=\"k\">,</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoadComplete<span class=\"k\">),</span>Function<span class=\"k\">.</span>createDelegate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_onLoadFailed<span class=\"k\">),[</span>a<span class=\"k\">,</span>b<span class=\"k\">,</span>c<span class=\"k\">],</span><span class=\"k\">this</span><span class=\"k\">.</span>get_timeout<span class=\"k\">())</span><span class=\"k\">}</span><span class=\"k\">,</span>_get_path<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_path<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span>a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">.</span>DefaultWebServicePath<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">||!</span>a<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>servicePathNotSet<span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>_get_rolesIndex<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_rolesIndex<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>a<span class=\"k\">&lt;</span><span class=\"k\">this</span><span class=\"k\">.</span>_roles<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">++)</span>b<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_roles<span class=\"k\">[</span>a<span class=\"k\">].</span>toLowerCase<span class=\"k\">()]=</span><span class=\"k\">true</span><span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_rolesIndex<span class=\"k\">=</span>b<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rolesIndex<span class=\"k\">}</span><span class=\"k\">,</span>_onLoadComplete<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">,</span>f<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">&amp;&amp;!(</span>a <span class=\"k\">instanceof</span> Array<span class=\"k\">))</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>String<span class=\"k\">.</span>format<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>webServiceInvalidReturnType<span class=\"k\">,</span>f<span class=\"k\">,</span><span class=\"s\">\"Array\"</span><span class=\"k\">));</span><span class=\"k\">this</span><span class=\"k\">.</span>_roles<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_rolesIndex<span class=\"k\">=</span><span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultLoadCompletedCallback<span class=\"k\">()||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultSucceededCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>c<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">(),</span>d<span class=\"k\">=</span>Array<span class=\"k\">.</span>clone<span class=\"k\">(</span>a<span class=\"k\">);</span>b<span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.RoleService.load\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">,</span>_onLoadFailed<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultFailedCallback<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span>b<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]||</span><span class=\"k\">this</span><span class=\"k\">.</span>get_defaultUserContext<span class=\"k\">();</span>a<span class=\"k\">(</span>d<span class=\"k\">,</span>c<span class=\"k\">,</span><span class=\"s\">\"Sys.Services.RoleService.load\"</span><span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Services._RoleService\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Net<span class=\"k\">.</span>WebServiceProxy<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>RoleService<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>Services<span class=\"k\">.</span>_RoleService<span class=\"k\">;</span>Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">(</span><span class=\"s\">\"Sys.Serialization\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.Serialization.JavaScriptSerializer\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscapeRegExs<span class=\"k\">=[];</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">=[];</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_dateRegEx<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'(^|[^</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">])</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">/Date</span><span class=\"t\">\\\\</span><span class=\"s\">((-?[0-9]+)(?:[a-zA-Z]|(?:</span><span class=\"t\">\\\\</span><span class=\"s\">+|-)[0-9]{4})?</span><span class=\"t\">\\\\</span><span class=\"s\">)</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">/</span><span class=\"t\">\\\\</span><span class=\"s\">\"'</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeRegEx<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'[\"</span><span class=\"t\">\\\\\\\\\\\\</span><span class=\"s\">x00-</span><span class=\"t\">\\\\</span><span class=\"s\">x1F]'</span><span class=\"k\">,</span><span class=\"s\">\"i\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeRegExGlobal<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'[\"</span><span class=\"t\">\\\\\\\\\\\\</span><span class=\"s\">x00-</span><span class=\"t\">\\\\</span><span class=\"s\">x1F]'</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_jsonRegEx<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"[^,:{}</span><span class=\"t\">\\\\</span><span class=\"s\">[</span><span class=\"t\">\\\\</span><span class=\"s\">]0-9.</span><span class=\"t\">\\\\</span><span class=\"s\">-+Eaeflnr-u </span><span class=\"t\">\\\\</span><span class=\"s\">n</span><span class=\"t\">\\\\</span><span class=\"s\">r</span><span class=\"t\">\\\\</span><span class=\"s\">t]\"</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_jsonStringRegEx<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'\"(</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">])*\"'</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serverTypeFieldName<span class=\"k\">=</span><span class=\"s\">\"__type\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_init<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=[</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0000\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0001\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0002\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0003\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0004\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0005\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0006\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0007\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">b\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">t\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">n\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u000b\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">f\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">r\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u000e\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u000f\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0010\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0011\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0012\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0013\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0014\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0015\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0016\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0017\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0018\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u0019\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001a\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001b\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001c\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001d\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001e\"</span><span class=\"k\">,</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">u001f\"</span><span class=\"k\">];</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]=</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscapeRegExs<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">]=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">\"</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">]=</span><span class=\"s\">\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">\"</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]=</span><span class=\"s\">'\"'</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscapeRegExs<span class=\"k\">[</span><span class=\"s\">'\"'</span><span class=\"k\">]=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'\"'</span><span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span><span class=\"s\">'\"'</span><span class=\"k\">]=</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">\"'</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>a<span class=\"k\">&lt;</span><span class=\"s\">32</span><span class=\"k\">;</span>a<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>a<span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">[</span>a<span class=\"k\">+</span><span class=\"s\">2</span><span class=\"k\">]=</span>b<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscapeRegExs<span class=\"k\">[</span>b<span class=\"k\">]=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span>b<span class=\"k\">,</span><span class=\"s\">\"g\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span>b<span class=\"k\">]=</span>c<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeBooleanWithBuilder<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>b<span class=\"k\">.</span>toString<span class=\"k\">())</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeNumberWithBuilder<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>isFinite<span class=\"k\">(</span>a<span class=\"k\">))</span>b<span class=\"k\">.</span>append<span class=\"k\">(</span>String<span class=\"k\">(</span>a<span class=\"k\">));</span><span class=\"k\">else</span> <span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>cannotSerializeNonFiniteNumbers<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeStringWithBuilder<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span>c<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">'\"'</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeRegEx<span class=\"k\">.</span>test<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_init<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>length<span class=\"k\">&lt;</span><span class=\"s\">128</span><span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>replace<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeRegExGlobal<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span>a<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>d<span class=\"k\">&lt;</span><span class=\"s\">34</span><span class=\"k\">;</span>d<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscape<span class=\"k\">[</span>d<span class=\"k\">];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>b<span class=\"k\">)!==-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>Opera<span class=\"k\">||</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>agent<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Browser<span class=\"k\">.</span>FireFox<span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>split<span class=\"k\">(</span>b<span class=\"k\">).</span>join<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span>b<span class=\"k\">]);</span><span class=\"k\">else</span> a<span class=\"k\">=</span>a<span class=\"k\">.</span>replace<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_charsToEscapeRegExs<span class=\"k\">[</span>b<span class=\"k\">],</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_escapeChars<span class=\"k\">[</span>b<span class=\"k\">])</span><span class=\"k\">}}</span>c<span class=\"k\">.</span>append<span class=\"k\">(</span>a<span class=\"k\">);</span>c<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">'\"'</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeWithBuilder<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span>i<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">;</span><span class=\"k\">switch</span><span class=\"k\">(</span><span class=\"k\">typeof</span> b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">case</span> <span class=\"s\">\"object\"</span><span class=\"k\">:</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">if</span><span class=\"k\">(</span>Number<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeNumberWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>Boolean<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeBooleanWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>String<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeStringWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">{</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"[\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span>c<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>c<span class=\"k\">&lt;</span>b<span class=\"k\">.</span>length<span class=\"k\">;++</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>c<span class=\"k\">&gt;</span><span class=\"s\">0</span><span class=\"k\">)</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeWithBuilder<span class=\"k\">(</span>b<span class=\"k\">[</span>c<span class=\"k\">],</span>a<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">}</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"]\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>Date<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>b<span class=\"k\">))</span><span class=\"k\">{</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">'\"</span><span class=\"t\">\\\\</span><span class=\"s\">/Date('</span><span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span>b<span class=\"k\">.</span>getTime<span class=\"k\">());</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">')</span><span class=\"t\">\\\\</span><span class=\"s\">/\"'</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">}</span><span class=\"k\">var</span> d<span class=\"k\">=[],</span>f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> e <span class=\"k\">in</span> b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>startsWith<span class=\"k\">(</span><span class=\"s\">\"$\"</span><span class=\"k\">))</span><span class=\"k\">continue</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">===</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serverTypeFieldName<span class=\"k\">&amp;&amp;</span>f<span class=\"k\">!==</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>d<span class=\"k\">[</span>f<span class=\"k\">++]=</span>d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>d<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]=</span>e<span class=\"k\">}</span><span class=\"k\">else</span> d<span class=\"k\">[</span>f<span class=\"k\">++]=</span>e<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">)</span>d<span class=\"k\">.</span>sort<span class=\"k\">();</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"{\"</span><span class=\"k\">);</span><span class=\"k\">var</span> j<span class=\"k\">=</span><span class=\"k\">false</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span>c<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>c<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>c<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> h<span class=\"k\">=</span>b<span class=\"k\">[</span>d<span class=\"k\">[</span>c<span class=\"k\">]];</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> h<span class=\"k\">!==</span><span class=\"s\">\"undefined\"</span><span class=\"k\">&amp;&amp;</span><span class=\"k\">typeof</span> h<span class=\"k\">!==</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>j<span class=\"k\">)</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span><span class=\"k\">else</span> j<span class=\"k\">=</span><span class=\"k\">true</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeWithBuilder<span class=\"k\">(</span>d<span class=\"k\">[</span>c<span class=\"k\">],</span>a<span class=\"k\">,</span>i<span class=\"k\">,</span>g<span class=\"k\">);</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\":\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeWithBuilder<span class=\"k\">(</span>h<span class=\"k\">,</span>a<span class=\"k\">,</span>i<span class=\"k\">,</span>g<span class=\"k\">)</span><span class=\"k\">}}</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"}\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span> a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"null\"</span><span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"number\"</span><span class=\"k\">:</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeNumberWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"string\"</span><span class=\"k\">:</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeStringWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">case</span> <span class=\"s\">\"boolean\"</span><span class=\"k\">:</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeBooleanWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">);</span><span class=\"k\">break</span><span class=\"k\">;</span><span class=\"k\">default</span><span class=\"k\">:</span>a<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"s\">\"null\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>serialize<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">new</span> Sys<span class=\"k\">.</span>StringBuilder<span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_serializeWithBuilder<span class=\"k\">(</span>b<span class=\"k\">,</span>a<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">);</span><span class=\"k\">return</span> a<span class=\"k\">.</span>toString<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>deserialize<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">,</span>secure<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>data<span class=\"k\">.</span>length<span class=\"k\">===</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>argument<span class=\"k\">(</span><span class=\"s\">\"data\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>cannotDeserializeEmptyString<span class=\"k\">);</span><span class=\"k\">try</span><span class=\"k\">{</span><span class=\"k\">var</span> exp<span class=\"k\">=</span>data<span class=\"k\">.</span>replace<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_dateRegEx<span class=\"k\">,</span><span class=\"s\">\"$1new Date($2)\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>secure<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_jsonRegEx<span class=\"k\">.</span>test<span class=\"k\">(</span>exp<span class=\"k\">.</span>replace<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>_jsonStringRegEx<span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">)))</span><span class=\"k\">throw</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">return</span> eval<span class=\"k\">(</span><span class=\"s\">\"(\"</span><span class=\"k\">+</span>exp<span class=\"k\">+</span><span class=\"s\">\")\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>argument<span class=\"k\">(</span><span class=\"s\">\"data\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>cannotDeserializeInvalidJson<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">,</span>b<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>name<span class=\"k\">=</span>c<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>numberFormat<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_getDateTimeFormats<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_dateTimeFormats<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">;</span><span class=\"k\">this</span><span class=\"k\">.</span>_dateTimeFormats<span class=\"k\">=[</span>a<span class=\"k\">.</span>MonthDayPattern<span class=\"k\">,</span>a<span class=\"k\">.</span>YearMonthPattern<span class=\"k\">,</span>a<span class=\"k\">.</span>ShortDatePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>ShortTimePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>LongDatePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>LongTimePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>FullDateTimePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>RFC1123Pattern<span class=\"k\">,</span>a<span class=\"k\">.</span>SortableDateTimePattern<span class=\"k\">,</span>a<span class=\"k\">.</span>UniversalSortableDateTimePattern<span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dateTimeFormats<span class=\"k\">}</span><span class=\"k\">,</span>_getMonthIndex<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperMonths<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperMonths<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpperArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">.</span>MonthNames<span class=\"k\">);</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperMonths<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpper<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>_getAbbrMonthIndex<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrMonths<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrMonths<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpperArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">.</span>AbbreviatedMonthNames<span class=\"k\">);</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrMonths<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpper<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>_getDayIndex<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperDays<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperDays<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpperArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">.</span>DayNames<span class=\"k\">);</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperDays<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpper<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>_getAbbrDayIndex<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrDays<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrDays<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpperArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>dateTimeFormat<span class=\"k\">.</span>AbbreviatedDayNames<span class=\"k\">);</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_upperAbbrDays<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpper<span class=\"k\">(</span>a<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>_toUpperArray<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> b<span class=\"k\">=[];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>d<span class=\"k\">=</span>c<span class=\"k\">.</span>length<span class=\"k\">;</span>a<span class=\"k\">&lt;</span>d<span class=\"k\">;</span>a<span class=\"k\">++)</span>b<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">.</span>_toUpper<span class=\"k\">(</span>c<span class=\"k\">[</span>a<span class=\"k\">]);</span><span class=\"k\">return</span> b<span class=\"k\">}</span><span class=\"k\">,</span>_toUpper<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> a<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\u</span><span class=\"s\">00a0\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\" \"</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>_parse<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>Serialization<span class=\"k\">.</span>JavaScriptSerializer<span class=\"k\">.</span>deserialize<span class=\"k\">(</span>b<span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">new</span> Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">(</span>a<span class=\"k\">.</span>name<span class=\"k\">,</span>a<span class=\"k\">.</span>numberFormat<span class=\"k\">,</span>a<span class=\"k\">.</span>dateTimeFormat<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.CultureInfo\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>InvariantCulture<span class=\"k\">=</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>_parse<span class=\"k\">(</span><span class=\"s\">'{\"name\":\"\",\"numberFormat\":{\"CurrencyDecimalDigits\":2,\"CurrencyDecimalSeparator\":\".\",\"IsReadOnly\":true,\"CurrencyGroupSizes\":[3],\"NumberGroupSizes\":[3],\"PercentGroupSizes\":[3],\"CurrencyGroupSeparator\":\",\",\"CurrencySymbol\":\"</span><span class=\"t\">\\u</span><span class=\"s\">00a4\",\"NaNSymbol\":\"NaN\",\"CurrencyNegativePattern\":0,\"NumberNegativePattern\":1,\"PercentPositivePattern\":0,\"PercentNegativePattern\":0,\"NegativeInfinitySymbol\":\"-Infinity\",\"NegativeSign\":\"-\",\"NumberDecimalDigits\":2,\"NumberDecimalSeparator\":\".\",\"NumberGroupSeparator\":\",\",\"CurrencyPositivePattern\":0,\"PositiveInfinitySymbol\":\"Infinity\",\"PositiveSign\":\"+\",\"PercentDecimalDigits\":2,\"PercentDecimalSeparator\":\".\",\"PercentGroupSeparator\":\",\",\"PercentSymbol\":\"%\",\"PerMilleSymbol\":\"</span><span class=\"t\">\\u</span><span class=\"s\">2030\",\"NativeDigits\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\"DigitSubstitution\":1},\"dateTimeFormat\":{\"AMDesignator\":\"AM\",\"Calendar\":{\"MinSupportedDateTime\":\"@-62135568000000@\",\"MaxSupportedDateTime\":\"@253402300799999@\",\"AlgorithmType\":1,\"CalendarType\":1,\"Eras\":[1],\"TwoDigitYearMax\":2029,\"IsReadOnly\":true},\"DateSeparator\":\"/\",\"FirstDayOfWeek\":0,\"CalendarWeekRule\":0,\"FullDateTimePattern\":\"dddd, dd MMMM yyyy HH:mm:ss\",\"LongDatePattern\":\"dddd, dd MMMM yyyy\",\"LongTimePattern\":\"HH:mm:ss\",\"MonthDayPattern\":\"MMMM dd\",\"PMDesignator\":\"PM\",\"RFC1123Pattern\":\"ddd, dd MMM yyyy HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss </span><span class=\"t\">\\'</span><span class=\"s\">GMT</span><span class=\"t\">\\'</span><span class=\"s\">\",\"ShortDatePattern\":\"MM/dd/yyyy\",\"ShortTimePattern\":\"HH:mm\",\"SortableDateTimePattern\":\"yyyy</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">MM</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">dd</span><span class=\"t\">\\'</span><span class=\"s\">T</span><span class=\"t\">\\'</span><span class=\"s\">HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss\",\"TimeSeparator\":\":\",\"UniversalSortableDateTimePattern\":\"yyyy</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">MM</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">dd HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss</span><span class=\"t\">\\'</span><span class=\"s\">Z</span><span class=\"t\">\\'</span><span class=\"s\">\",\"YearMonthPattern\":\"yyyy MMMM\",\"AbbreviatedDayNames\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"ShortestDayNames\":[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\"DayNames\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\"AbbreviatedMonthNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],\"IsReadOnly\":true,\"NativeCalendarName\":\"Gregorian Calendar\",\"AbbreviatedMonthGenitiveNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthGenitiveNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"]}}'</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> __cultureInfo<span class=\"k\">===</span><span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">var</span> __cultureInfo<span class=\"k\">=</span><span class=\"s\">'{\"name\":\"en-US\",\"numberFormat\":{\"CurrencyDecimalDigits\":2,\"CurrencyDecimalSeparator\":\".\",\"IsReadOnly\":false,\"CurrencyGroupSizes\":[3],\"NumberGroupSizes\":[3],\"PercentGroupSizes\":[3],\"CurrencyGroupSeparator\":\",\",\"CurrencySymbol\":\"$\",\"NaNSymbol\":\"NaN\",\"CurrencyNegativePattern\":0,\"NumberNegativePattern\":1,\"PercentPositivePattern\":0,\"PercentNegativePattern\":0,\"NegativeInfinitySymbol\":\"-Infinity\",\"NegativeSign\":\"-\",\"NumberDecimalDigits\":2,\"NumberDecimalSeparator\":\".\",\"NumberGroupSeparator\":\",\",\"CurrencyPositivePattern\":0,\"PositiveInfinitySymbol\":\"Infinity\",\"PositiveSign\":\"+\",\"PercentDecimalDigits\":2,\"PercentDecimalSeparator\":\".\",\"PercentGroupSeparator\":\",\",\"PercentSymbol\":\"%\",\"PerMilleSymbol\":\"</span><span class=\"t\">\\u</span><span class=\"s\">2030\",\"NativeDigits\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\"DigitSubstitution\":1},\"dateTimeFormat\":{\"AMDesignator\":\"AM\",\"Calendar\":{\"MinSupportedDateTime\":\"@-62135568000000@\",\"MaxSupportedDateTime\":\"@253402300799999@\",\"AlgorithmType\":1,\"CalendarType\":1,\"Eras\":[1],\"TwoDigitYearMax\":2029,\"IsReadOnly\":false},\"DateSeparator\":\"/\",\"FirstDayOfWeek\":0,\"CalendarWeekRule\":0,\"FullDateTimePattern\":\"dddd, MMMM dd, yyyy h:mm:ss tt\",\"LongDatePattern\":\"dddd, MMMM dd, yyyy\",\"LongTimePattern\":\"h:mm:ss tt\",\"MonthDayPattern\":\"MMMM dd\",\"PMDesignator\":\"PM\",\"RFC1123Pattern\":\"ddd, dd MMM yyyy HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss </span><span class=\"t\">\\'</span><span class=\"s\">GMT</span><span class=\"t\">\\'</span><span class=\"s\">\",\"ShortDatePattern\":\"M/d/yyyy\",\"ShortTimePattern\":\"h:mm tt\",\"SortableDateTimePattern\":\"yyyy</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">MM</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">dd</span><span class=\"t\">\\'</span><span class=\"s\">T</span><span class=\"t\">\\'</span><span class=\"s\">HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss\",\"TimeSeparator\":\":\",\"UniversalSortableDateTimePattern\":\"yyyy</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">MM</span><span class=\"t\">\\'</span><span class=\"s\">-</span><span class=\"t\">\\'</span><span class=\"s\">dd HH</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">mm</span><span class=\"t\">\\'</span><span class=\"s\">:</span><span class=\"t\">\\'</span><span class=\"s\">ss</span><span class=\"t\">\\'</span><span class=\"s\">Z</span><span class=\"t\">\\'</span><span class=\"s\">\",\"YearMonthPattern\":\"MMMM, yyyy\",\"AbbreviatedDayNames\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"ShortestDayNames\":[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\"DayNames\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\"AbbreviatedMonthNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],\"IsReadOnly\":false,\"NativeCalendarName\":\"Gregorian Calendar\",\"AbbreviatedMonthGenitiveNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthGenitiveNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"]}}'</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>CurrentCulture<span class=\"k\">=</span>Sys<span class=\"k\">.</span>CultureInfo<span class=\"k\">.</span>_parse<span class=\"k\">(</span>__cultureInfo<span class=\"k\">);</span><span class=\"k\">delete</span> __cultureInfo<span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">=</span>b<span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">.</span>_behaviors<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">)</span>b<span class=\"k\">.</span>_behaviors<span class=\"k\">=[</span><span class=\"k\">this</span><span class=\"k\">];</span><span class=\"k\">else</span> a<span class=\"k\">[</span>a<span class=\"k\">.</span>length<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_name<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>get_element<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">}</span><span class=\"k\">,</span>get_id<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"get_id\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">||!</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>id<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>id<span class=\"k\">+</span><span class=\"s\">\"$\"</span><span class=\"k\">+</span><span class=\"k\">this</span><span class=\"k\">.</span>get_name<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span>get_name<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_name<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_name<span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span>Object<span class=\"k\">.</span>getTypeName<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>b<span class=\"k\">=</span>a<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>b<span class=\"k\">!=-</span><span class=\"s\">1</span><span class=\"k\">)</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>substr<span class=\"k\">(</span>b<span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>get_isInitialized<span class=\"k\">())</span><span class=\"k\">this</span><span class=\"k\">.</span>_name<span class=\"k\">=</span>a<span class=\"k\">;</span><span class=\"k\">return</span> a<span class=\"k\">}</span><span class=\"k\">,</span>set_name<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_name<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>initialize<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"initialize\"</span><span class=\"k\">);</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_name<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">,</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"dispose\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_name<span class=\"k\">();</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">[</span>a<span class=\"k\">]=</span><span class=\"k\">null</span><span class=\"k\">;</span>Array<span class=\"k\">.</span>remove<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>_behaviors<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">}}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.Behavior\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>getBehaviorByName<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>b<span class=\"k\">[</span>c<span class=\"k\">];</span><span class=\"k\">return</span> a<span class=\"k\">&amp;&amp;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">)?</span>a<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>getBehaviors<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>a<span class=\"k\">.</span>_behaviors<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">[];</span><span class=\"k\">return</span> Array<span class=\"k\">.</span>clone<span class=\"k\">(</span>a<span class=\"k\">.</span>_behaviors<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Behavior<span class=\"k\">.</span>getBehaviorsByType<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">,</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span>d<span class=\"k\">.</span>_behaviors<span class=\"k\">,</span>c<span class=\"k\">=[];</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>f<span class=\"k\">=</span>a<span class=\"k\">.</span>length<span class=\"k\">;</span>b<span class=\"k\">&lt;</span>f<span class=\"k\">;</span>b<span class=\"k\">++)</span><span class=\"k\">if</span><span class=\"k\">(</span>e<span class=\"k\">.</span>isInstanceOfType<span class=\"k\">(</span>a<span class=\"k\">[</span>b<span class=\"k\">]))</span>c<span class=\"k\">[</span>c<span class=\"k\">.</span>length<span class=\"k\">]=</span>a<span class=\"k\">[</span>b<span class=\"k\">];</span><span class=\"k\">return</span> c<span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>notImplemented<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>hide<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>collapse<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>registerEnum<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.VisibilityMode\"</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Control<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Control<span class=\"k\">.</span>initializeBase<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">=</span>a<span class=\"k\">;</span>a<span class=\"k\">.</span>control<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Control<span class=\"k\">.</span>prototype<span class=\"k\">=</span><span class=\"k\">{</span>_parent<span class=\"k\">:</span><span class=\"k\">null</span><span class=\"k\">,</span>_visibilityMode<span class=\"k\">:</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>VisibilityMode<span class=\"k\">.</span>hide<span class=\"k\">,</span>get_element<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">}</span><span class=\"k\">,</span>get_id<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>id<span class=\"k\">}</span><span class=\"k\">,</span>set_id<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">throw</span> Error<span class=\"k\">.</span>invalidOperation<span class=\"k\">(</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">.</span>cantSetId<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>get_parent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_parent<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_parent<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>parentNode<span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>control<span class=\"k\">)</span><span class=\"k\">return</span> a<span class=\"k\">.</span>control<span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>parentNode<span class=\"k\">}</span><span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">,</span>set_parent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_parent<span class=\"k\">=</span>a<span class=\"k\">}</span><span class=\"k\">,</span>get_visibilityMode<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisibilityMode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>set_visibilityMode<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>setVisibilityMode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>get_visible<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>getVisible<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>set_visible<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>setVisible<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>addCssClass<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>addCssClass<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>dispose<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Control<span class=\"k\">.</span>callBaseMethod<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span><span class=\"s\">\"dispose\"</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>control<span class=\"k\">=</span>undefined<span class=\"k\">;</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">}</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_parent<span class=\"k\">)</span><span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>_parent<span class=\"k\">}</span><span class=\"k\">,</span>onBubbleEvent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">}</span><span class=\"k\">,</span>raiseBubbleEvent<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>get_parent<span class=\"k\">();</span><span class=\"k\">while</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>a<span class=\"k\">.</span>onBubbleEvent<span class=\"k\">(</span>b<span class=\"k\">,</span>c<span class=\"k\">))</span><span class=\"k\">return</span><span class=\"k\">;</span>a<span class=\"k\">=</span>a<span class=\"k\">.</span>get_parent<span class=\"k\">()</span><span class=\"k\">}}</span><span class=\"k\">,</span>removeCssClass<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>removeCssClass<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>toggleCssClass<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>DomElement<span class=\"k\">.</span>toggleCssClass<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>Sys<span class=\"k\">.</span>UI<span class=\"k\">.</span>Control<span class=\"k\">.</span>registerClass<span class=\"k\">(</span><span class=\"s\">\"Sys.UI.Control\"</span><span class=\"k\">,</span>Sys<span class=\"k\">.</span>Component<span class=\"k\">);</span>","Type<span class=\"k\">.</span>registerNamespace<span class=\"k\">(</span><span class=\"s\">'Sys'</span><span class=\"k\">);</span>Sys<span class=\"k\">.</span>Res<span class=\"k\">=</span><span class=\"k\">{</span><span class=\"s\">'argumentInteger'</span><span class=\"k\">:</span><span class=\"s\">'Value must be an integer.'</span><span class=\"k\">,</span><span class=\"s\">'scriptLoadMultipleCallbacks'</span><span class=\"k\">:</span><span class=\"s\">'The script </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> contains multiple calls to Sys.Application.notifyScriptLoaded(). Only one is allowed.'</span><span class=\"k\">,</span><span class=\"s\">'invokeCalledTwice'</span><span class=\"k\">:</span><span class=\"s\">'Cannot call invoke more than once.'</span><span class=\"k\">,</span><span class=\"s\">'webServiceFailed'</span><span class=\"k\">:</span><span class=\"s\">'The server method </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> failed with the following error: {1}'</span><span class=\"k\">,</span><span class=\"s\">'webServiceInvalidJsonWrapper'</span><span class=\"k\">:</span><span class=\"s\">'The server method </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> returned invalid data. The </span><span class=\"t\">\\'</span><span class=\"s\">d</span><span class=\"t\">\\'</span><span class=\"s\"> property is missing from the JSON wrapper.'</span><span class=\"k\">,</span><span class=\"s\">'argumentType'</span><span class=\"k\">:</span><span class=\"s\">'Object cannot be converted to the required type.'</span><span class=\"k\">,</span><span class=\"s\">'argumentNull'</span><span class=\"k\">:</span><span class=\"s\">'Value cannot be null.'</span><span class=\"k\">,</span><span class=\"s\">'controlCantSetId'</span><span class=\"k\">:</span><span class=\"s\">'The id property can</span><span class=\"t\">\\'</span><span class=\"s\">t be set on a control.'</span><span class=\"k\">,</span><span class=\"s\">'formatBadFormatSpecifier'</span><span class=\"k\">:</span><span class=\"s\">'Format specifier was invalid.'</span><span class=\"k\">,</span><span class=\"s\">'webServiceFailedNoMsg'</span><span class=\"k\">:</span><span class=\"s\">'The server method </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> failed.'</span><span class=\"k\">,</span><span class=\"s\">'argumentDomElement'</span><span class=\"k\">:</span><span class=\"s\">'Value must be a DOM element.'</span><span class=\"k\">,</span><span class=\"s\">'invalidExecutorType'</span><span class=\"k\">:</span><span class=\"s\">'Could not create a valid Sys.Net.WebRequestExecutor from: {0}.'</span><span class=\"k\">,</span><span class=\"s\">'cannotCallBeforeResponse'</span><span class=\"k\">:</span><span class=\"s\">'Cannot call {0} when responseAvailable is false.'</span><span class=\"k\">,</span><span class=\"s\">'actualValue'</span><span class=\"k\">:</span><span class=\"s\">'Actual value was {0}.'</span><span class=\"k\">,</span><span class=\"s\">'enumInvalidValue'</span><span class=\"k\">:</span><span class=\"s\">'</span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> is not a valid value for enum {1}.'</span><span class=\"k\">,</span><span class=\"s\">'scriptLoadFailed'</span><span class=\"k\">:</span><span class=\"s\">'The script </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> could not be loaded.'</span><span class=\"k\">,</span><span class=\"s\">'parameterCount'</span><span class=\"k\">:</span><span class=\"s\">'Parameter count mismatch.'</span><span class=\"k\">,</span><span class=\"s\">'cannotDeserializeEmptyString'</span><span class=\"k\">:</span><span class=\"s\">'Cannot deserialize empty string.'</span><span class=\"k\">,</span><span class=\"s\">'formatInvalidString'</span><span class=\"k\">:</span><span class=\"s\">'Input string was not in a correct format.'</span><span class=\"k\">,</span><span class=\"s\">'invalidTimeout'</span><span class=\"k\">:</span><span class=\"s\">'Value must be greater than or equal to zero.'</span><span class=\"k\">,</span><span class=\"s\">'cannotAbortBeforeStart'</span><span class=\"k\">:</span><span class=\"s\">'Cannot abort when executor has not started.'</span><span class=\"k\">,</span><span class=\"s\">'argument'</span><span class=\"k\">:</span><span class=\"s\">'Value does not fall within the expected range.'</span><span class=\"k\">,</span><span class=\"s\">'cannotDeserializeInvalidJson'</span><span class=\"k\">:</span><span class=\"s\">'Cannot deserialize. The data does not correspond to valid JSON.'</span><span class=\"k\">,</span><span class=\"s\">'invalidHttpVerb'</span><span class=\"k\">:</span><span class=\"s\">'httpVerb cannot be set to an empty or null string.'</span><span class=\"k\">,</span><span class=\"s\">'nullWebRequest'</span><span class=\"k\">:</span><span class=\"s\">'Cannot call executeRequest with a null webRequest.'</span><span class=\"k\">,</span><span class=\"s\">'eventHandlerInvalid'</span><span class=\"k\">:</span><span class=\"s\">'Handler was not added through the Sys.UI.DomEvent.addHandler method.'</span><span class=\"k\">,</span><span class=\"s\">'cannotSerializeNonFiniteNumbers'</span><span class=\"k\">:</span><span class=\"s\">'Cannot serialize non finite numbers.'</span><span class=\"k\">,</span><span class=\"s\">'argumentUndefined'</span><span class=\"k\">:</span><span class=\"s\">'Value cannot be undefined.'</span><span class=\"k\">,</span><span class=\"s\">'webServiceInvalidReturnType'</span><span class=\"k\">:</span><span class=\"s\">'The server method </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> returned an invalid type. Expected type: {1}'</span><span class=\"k\">,</span><span class=\"s\">'servicePathNotSet'</span><span class=\"k\">:</span><span class=\"s\">'The path to the web service has not been set.'</span><span class=\"k\">,</span><span class=\"s\">'argumentTypeWithTypes'</span><span class=\"k\">:</span><span class=\"s\">'Object of type </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> cannot be converted to type </span><span class=\"t\">\\'</span><span class=\"s\">{1}</span><span class=\"t\">\\'</span><span class=\"s\">.'</span><span class=\"k\">,</span><span class=\"s\">'cannotCallOnceStarted'</span><span class=\"k\">:</span><span class=\"s\">'Cannot call {0} once started.'</span><span class=\"k\">,</span><span class=\"s\">'badBaseUrl1'</span><span class=\"k\">:</span><span class=\"s\">'Base URL does not contain ://.'</span><span class=\"k\">,</span><span class=\"s\">'badBaseUrl2'</span><span class=\"k\">:</span><span class=\"s\">'Base URL does not contain another /.'</span><span class=\"k\">,</span><span class=\"s\">'badBaseUrl3'</span><span class=\"k\">:</span><span class=\"s\">'Cannot find last / in base URL.'</span><span class=\"k\">,</span><span class=\"s\">'setExecutorAfterActive'</span><span class=\"k\">:</span><span class=\"s\">'Cannot set executor after it has become active.'</span><span class=\"k\">,</span><span class=\"s\">'paramName'</span><span class=\"k\">:</span><span class=\"s\">'Parameter name: {0}'</span><span class=\"k\">,</span><span class=\"s\">'cannotCallOutsideHandler'</span><span class=\"k\">:</span><span class=\"s\">'Cannot call {0} outside of a completed event handler.'</span><span class=\"k\">,</span><span class=\"s\">'cannotSerializeObjectWithCycle'</span><span class=\"k\">:</span><span class=\"s\">'Cannot serialize object with cyclic reference within child properties.'</span><span class=\"k\">,</span><span class=\"s\">'format'</span><span class=\"k\">:</span><span class=\"s\">'One of the identified items was in an invalid format.'</span><span class=\"k\">,</span><span class=\"s\">'assertFailedCaller'</span><span class=\"k\">:</span><span class=\"s\">'Assertion Failed: {0}</span><span class=\"t\">\\r\\n</span><span class=\"s\">at {1}'</span><span class=\"k\">,</span><span class=\"s\">'argumentOutOfRange'</span><span class=\"k\">:</span><span class=\"s\">'Specified argument was out of the range of valid values.'</span><span class=\"k\">,</span><span class=\"s\">'webServiceTimedOut'</span><span class=\"k\">:</span><span class=\"s\">'The server method </span><span class=\"t\">\\'</span><span class=\"s\">{0}</span><span class=\"t\">\\'</span><span class=\"s\"> timed out.'</span><span class=\"k\">,</span><span class=\"s\">'notImplemented'</span><span class=\"k\">:</span><span class=\"s\">'The method or operation is not implemented.'</span><span class=\"k\">,</span><span class=\"s\">'assertFailed'</span><span class=\"k\">:</span><span class=\"s\">'Assertion Failed: {0}'</span><span class=\"k\">,</span><span class=\"s\">'invalidOperation'</span><span class=\"k\">:</span><span class=\"s\">'Operation is not valid due to the current state of the object.'</span><span class=\"k\">,</span><span class=\"s\">'breakIntoDebugger'</span><span class=\"k\">:</span><span class=\"s\">'{0}</span><span class=\"t\">\\r\\n\\r\\n</span><span class=\"s\">Break into debugger?'</span><span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>Sys<span class=\"k\">)!==</span><span class=\"s\">'undefined'</span><span class=\"k\">)</span>Sys<span class=\"k\">.</span>Application<span class=\"k\">.</span>notifyScriptLoaded<span class=\"k\">();</span>"];
_$jscoverage['MicrosoftAjax.js'][5]++;
Function.__typeName = "Function";
_$jscoverage['MicrosoftAjax.js'][5]++;
Function.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Function.createCallback = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = arguments.length;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((e > 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = [];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var c = 0; (c < e); (c++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d[c] = arguments[c];
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d[e] = a;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b.apply(this, d);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b.call(this, a);
});
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Function.createDelegate = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b.apply(a, arguments);
});
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Function.emptyFunction = (Function.emptyMethod = (function () {
}));
_$jscoverage['MicrosoftAjax.js'][5]++;
Function._validateParams = (function (e, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = Function._validateParameterCount(e, c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.popStackFrame();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0; (b < e.length); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = c[Math.min(b, (c.length - 1))], f = d.name;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (d.parameterArray) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += ("[" + ((b - c.length) + 1) + "]");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Function._validateParameter(e[b], d, f);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Function._validateParameterCount = (function (e, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = a.length, d = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0; (b < a.length); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a[b].parameterArray) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = Number.MAX_VALUE;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((! a[b].optional)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        (d++);
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((e.length < d) || (e.length > c))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = Error.parameterCount();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f.popStackFrame();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return f;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Function._validateParameter = (function (c, a, h) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b, g = a.type, l = (! (! a.integer)), k = (! (! a.domElement)), m = (! (! a.mayBeNull));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b = Function._validateParameterType(c, g, l, k, m, h);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.popStackFrame();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = a.elementType, f = (! (! a.elementMayBeNull));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((g === Array) && ((typeof c) !== "undefined") && (c !== null) && (e || (! f)))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var j = (! (! a.elementInteger)), i = (! (! a.elementDomElement));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var d = 0; (d < c.length); (d++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var n = c[d];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Function._validateParameterType(n, e, j, i, f, (h + "[" + d + "]"));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (b) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.popStackFrame();
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return b;
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Function._validateParameterType = (function (a, c, n, m, k, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof a) === "undefined")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (k) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return null;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Error.argumentUndefined(d);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (k) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return null;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Error.argumentNull(d);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c && c.__enum)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof a) !== "number")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Error.argumentType(d, Object.getType(a), c);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a % 1) === 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var e = c.prototype;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((! c.__flags) || (a === 0))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        for (var i in e) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if ((e[i] === a)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            return null;
          }
}
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var l = a;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        for (var i = i in e) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          var f = e[i];
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if ((f === 0)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            continue;
          }
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if (((f & a) === f)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            l -= f;
          }
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if ((l === 0)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            return null;
          }
}
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = Error.argumentOutOfRange(d, a, String.format(Sys.Res.enumInvalidValue, a, c.getName()));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.popStackFrame();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (m) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof a.nodeType) !== "number")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var g = (a.ownerDocument || a.document || a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((g != a)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var j = (g.defaultView || g.parentWindow);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        h = ((j != a) && (! (j.document && a.document && (j.document === a.document))));
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        h = ((typeof g.body) === "undefined");
      }
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      h = (a.nodeType === 3);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (h) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Error.argument(d, Sys.Res.argumentDomElement);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c && (! c.isInstanceOfType(a)))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = Error.argumentType(d, Object.getType(a), c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.popStackFrame();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((c === Number) && n)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a % 1) !== 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Error.argumentOutOfRange(d, a, Sys.Res.argumentInteger);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.popStackFrame();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.__typeName = "Error";
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.create = (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = new Error(d);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.message = d;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var c in b) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a[c] = b[c];
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.argument = (function (a, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ("Sys.ArgumentException: " + (c? c: Sys.Res.argument));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += ("\n" + String.format(Sys.Res.paramName, a));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = Error.create(b, {name: "Sys.ArgumentException", paramName: a});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  d.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return d;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.argumentNull = (function (a, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ("Sys.ArgumentNullException: " + (c? c: Sys.Res.argumentNull));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += ("\n" + String.format(Sys.Res.paramName, a));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = Error.create(b, {name: "Sys.ArgumentNullException", paramName: a});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  d.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return d;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.argumentOutOfRange = (function (c, a, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ("Sys.ArgumentOutOfRangeException: " + (d? d: Sys.Res.argumentOutOfRange));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += ("\n" + String.format(Sys.Res.paramName, c));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) !== "undefined") && (a !== null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += ("\n" + String.format(Sys.Res.actualValue, a));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = Error.create(b, {name: "Sys.ArgumentOutOfRangeException", paramName: c, actualValue: a});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  e.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return e;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.argumentType = (function (d, c, b, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = "Sys.ArgumentTypeException: ";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (e) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a += e;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((c && b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a += String.format(Sys.Res.argumentTypeWithTypes, c.getName(), b.getName());
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a += Sys.Res.argumentType;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a += ("\n" + String.format(Sys.Res.paramName, d));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var f = Error.create(a, {name: "Sys.ArgumentTypeException", paramName: d, actualType: c, expectedType: b});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  f.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return f;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.argumentUndefined = (function (a, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ("Sys.ArgumentUndefinedException: " + (c? c: Sys.Res.argumentUndefined));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += ("\n" + String.format(Sys.Res.paramName, a));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = Error.create(b, {name: "Sys.ArgumentUndefinedException", paramName: a});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  d.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return d;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.format = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = ("Sys.FormatException: " + (a? a: Sys.Res.format)), b = Error.create(c, {name: "Sys.FormatException"});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.invalidOperation = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = ("Sys.InvalidOperationException: " + (a? a: Sys.Res.invalidOperation)), b = Error.create(c, {name: "Sys.InvalidOperationException"});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.notImplemented = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = ("Sys.NotImplementedException: " + (a? a: Sys.Res.notImplemented)), b = Error.create(c, {name: "Sys.NotImplementedException"});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.parameterCount = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = ("Sys.ParameterCountException: " + (a? a: Sys.Res.parameterCount)), b = Error.create(c, {name: "Sys.ParameterCountException"});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Error.prototype.popStackFrame = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof this.stack) === "undefined") || (this.stack === null) || ((typeof this.fileName) === "undefined") || (this.fileName === null) || ((typeof this.lineNumber) === "undefined") || (this.lineNumber === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.stack.split("\n"), c = a[0], e = (this.fileName + ":" + this.lineNumber);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while ((((typeof c) !== "undefined") && (c !== null) && (c.indexOf(e) === -1))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.shift();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = a[0];
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = a[1];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof d) === "undefined") || (d === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = d.match(/@(.*):(\d+)$/);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof b) === "undefined") || (b === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.fileName = b[1];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.lineNumber = parseInt(b[2]);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.shift();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.stack = a.join("\n");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Object.__typeName = "Object";
_$jscoverage['MicrosoftAjax.js'][5]++;
Object.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Object.getType = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b.constructor;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || ((typeof a) !== "function") || (! a.__typeName) || (a.__typeName === "Object"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return Object;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Object.getTypeName = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Object.getType(a).getName();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.__typeName = "String";
_$jscoverage['MicrosoftAjax.js'][5]++;
String.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
String.prototype.endsWith = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this.substr((this.length - a.length)) === a);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.prototype.startsWith = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this.substr(0, a.length) === a);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.prototype.trim = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this.replace(/^\s+|\s+$/g, "");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.prototype.trimEnd = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this.replace(/\s+$/, "");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.prototype.trimStart = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this.replace(/^\s+/, "");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.format = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return String._toFormattedString(false, arguments);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String.localeFormat = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return String._toFormattedString(true, arguments);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
String._toFormattedString = (function (l, j) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = "", e = j[0];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0;;) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = e.indexOf("{", a), d = e.indexOf("}", a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((f < 0) && (d < 0))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c += e.slice(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((d > 0) && ((d < f) || (f < 0)))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c += e.slice(a, (d + 1));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = (d + 2);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      continue;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c += e.slice(a, f);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = (f + 1);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((e.charAt(a) === "{")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c += "{";
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (a++);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      continue;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((d < 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h = e.substring(a, d), g = h.indexOf(":"), k = (parseInt(((g < 0)? h: h.substring(0, g)), 10) + 1), i = ((g < 0)? "": h.substring((g + 1))), b = j[k];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((((typeof b) === "undefined") || (b === null))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = "";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (b.toFormattedString) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c += b.toFormattedString(i);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((l && b.localeFormat)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c += b.localeFormat(i);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (b.format) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          c += b.format(i);
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          c += b.toString();
        }
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = (d + 1);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return c;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Boolean.__typeName = "Boolean";
_$jscoverage['MicrosoftAjax.js'][5]++;
Boolean.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Boolean.parse = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b.trim().toLowerCase();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a === "false")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a === "true")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return true;
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.__typeName = "Date";
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._appendPreOrPostMatch = (function (e, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = 0, a = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var c = 0, g = e.length; (c < g); (c++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = e.charAt(c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    switch (f) {
    case "'":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.append("'");
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        (d++);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = false;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "\\":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.append("\\");
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = (! a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    default:
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.append(f);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = false;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return d;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._expandFormat = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = "F";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b.length === 1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    switch (b) {
    case "d":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.ShortDatePattern;
    case "D":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.LongDatePattern;
    case "t":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.ShortTimePattern;
    case "T":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.LongTimePattern;
    case "F":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.FullDateTimePattern;
    case "M":
    case "m":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.MonthDayPattern;
    case "s":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.SortableDateTimePattern;
    case "Y":
    case "y":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.YearMonthPattern;
    default:
      _$jscoverage['MicrosoftAjax.js'][5]++;
      throw Error.format(Sys.Res.formatInvalidString);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._expandYear = (function (c, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a < 100)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = new Date().getFullYear();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a += (b - (b % 100));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a > c.Calendar.TwoDigitYearMax)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return (a - 100);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._getParseRegExp = (function (b, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b._parseRegExp)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b._parseRegExp = {};
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (b._parseRegExp[e]) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return b._parseRegExp[e];
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = Date._expandFormat(b, e);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c = c.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = new (Sys.StringBuilder)("^"), j = [], f = 0, i = 0, h = Date._getTokenRegExp(), d;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (((d = h.exec(c)) !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var l = c.slice(f, d.index);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f = h.lastIndex;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    i += Date._appendPreOrPostMatch(l, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((i % 2) === 1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(d[0]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      continue;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    switch (d[0]) {
    case "dddd":
    case "ddd":
    case "MMMM":
    case "MMM":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\D+)");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "tt":
    case "t":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\D*)");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "yyyy":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\d{4})");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "fff":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\d{3})");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "ff":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\d{2})");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "f":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\d)");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "dd":
    case "d":
    case "MM":
    case "M":
    case "yy":
    case "y":
    case "HH":
    case "H":
    case "hh":
    case "h":
    case "mm":
    case "m":
    case "ss":
    case "s":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("(\\d\\d?)");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "zzz":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("([+-]?\\d\\d?:\\d{2})");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "zz":
    case "z":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("([+-]?\\d\\d?)");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.add(j, d[0]);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Date._appendPreOrPostMatch(c.slice(f), a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.append("$");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var k = a.toString().replace(/\s+/g, "\\s+"), g = {"regExp": k, "groups": j};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b._parseRegExp[e] = g;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return g;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._getTokenRegExp = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.parseLocale = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Date._parse(a, Sys.CultureInfo.CurrentCulture, arguments);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.parseInvariant = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Date._parse(a, Sys.CultureInfo.InvariantCulture, arguments);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._parse = (function (g, c, h) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 1, i = h.length; (a < i); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = h[a];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (f) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e = true;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var b = Date._parseExact(g, f, c);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (b) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return b;
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! e)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = c._getDateTimeFormats();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = 0, i = d.length; (a < i); (a++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var b = Date._parseExact(g, d[a], c);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (b) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return b;
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date._parseExact = (function (s, y, j) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  s = s.trim();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var m = j.dateTimeFormat, v = Date._getParseRegExp(m, y), x = new RegExp(v.regExp).exec(s);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((x === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var w = v.groups, f = null, c = null, h = null, g = null, d = 0, n = 0, o = 0, e = 0, k = null, r = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var p = 0, z = w.length; (p < z); (p++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = x[(p + 1)];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      switch (w[p]) {
      case "dd":
      case "d":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        h = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((h < 1) || (h > 31))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "MMMM":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c = j._getMonthIndex(a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((c < 0) || (c > 11))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "MMM":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c = j._getAbbrMonthIndex(a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((c < 0) || (c > 11))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "M":
      case "MM":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var c = (parseInt(a, 10) - 1);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((c < 0) || (c > 11))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "y":
      case "yy":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f = Date._expandYear(m, parseInt(a, 10));
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((f < 0) || (f > 9999))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "yyyy":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((f < 0) || (f > 9999))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "h":
      case "hh":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        d = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((d === 12)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          d = 0;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((d < 0) || (d > 11))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "H":
      case "HH":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        d = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((d < 0) || (d > 23))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "m":
      case "mm":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        n = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((n < 0) || (n > 59))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "s":
      case "ss":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        o = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((o < 0) || (o > 59))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "tt":
      case "t":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var u = a.toUpperCase();
        _$jscoverage['MicrosoftAjax.js'][5]++;
        r = (u === m.PMDesignator.toUpperCase());
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((! r) && (u !== m.AMDesignator.toUpperCase()))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "f":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e = (parseInt(a, 10) * 100);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((e < 0) || (e > 999))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "ff":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e = (parseInt(a, 10) * 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((e < 0) || (e > 999))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "fff":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((e < 0) || (e > 999))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "dddd":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        g = j._getDayIndex(a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((g < 0) || (g > 6))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "ddd":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        g = j._getAbbrDayIndex(a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((g < 0) || (g > 6))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "zzz":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var q = a.split(/:/);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((q.length !== 2)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var i = parseInt(q[0], 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((i < -12) || (i > 13))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var l = parseInt(q[1], 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((l < 0) || (l > 59))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        k = ((i * 60) + (a.startsWith("-")? (- l): l));
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "z":
      case "zz":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var i = parseInt(a, 10);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (((i < -12) || (i > 13))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return null;
        }
        _$jscoverage['MicrosoftAjax.js'][5]++;
        k = (i * 60);
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = new Date();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((f === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f = b.getFullYear();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = b.getMonth();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((h === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    h = b.getDate();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.setFullYear(f, c, h);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b.getDate() !== h)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((g !== null) && (b.getDay() !== g))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((r && (d < 12))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d += 12;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.setHours(d, n, o, e);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((k !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var t = (b.getMinutes() - (k + b.getTimezoneOffset()));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.setHours((b.getHours() + parseInt((t / 60), 10)), (t % 60));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.prototype.format = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._toFormattedString(a, Sys.CultureInfo.InvariantCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.prototype.localeFormat = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._toFormattedString(a, Sys.CultureInfo.CurrentCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Date.prototype._toFormattedString = (function (e, h) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! e) || (e.length === 0) || (e === "i"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((h && (h.name.length > 0))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return this.toLocaleString();
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return this.toString();
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = h.dateTimeFormat;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  e = Date._expandFormat(d, e);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = new (Sys.StringBuilder)(), b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  function c(a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a < 10)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ("0" + a);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a.toString();
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  function g(a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a < 10)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ("00" + a);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a < 100)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ("0" + a);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a.toString();
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var j = 0, i = Date._getTokenRegExp();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (;;) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var l = i.lastIndex, f = i.exec(e), k = e.slice(l, (f? f.index: e.length));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    j += Date._appendPreOrPostMatch(k, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! f)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((j % 2) === 1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(f[0]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      continue;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    switch (f[0]) {
    case "dddd":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(d.DayNames[this.getDay()]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "ddd":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(d.AbbreviatedDayNames[this.getDay()]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "dd":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c(this.getDate()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "d":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(this.getDate());
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "MMMM":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(d.MonthNames[this.getMonth()]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "MMM":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(d.AbbreviatedMonthNames[this.getMonth()]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "MM":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c((this.getMonth() + 1)));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "M":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append((this.getMonth() + 1));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "yyyy":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(this.getFullYear());
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "yy":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c((this.getFullYear() % 100)));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "y":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append((this.getFullYear() % 100));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "hh":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (this.getHours() % 12);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((b === 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = 12;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c(b));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "h":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (this.getHours() % 12);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((b === 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = 12;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(b);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "HH":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c(this.getHours()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "H":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(this.getHours());
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "mm":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c(this.getMinutes()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "m":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(this.getMinutes());
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "ss":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(c(this.getSeconds()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "s":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(this.getSeconds());
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "tt":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(((this.getHours() < 12)? d.AMDesignator: d.PMDesignator));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "t":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(((this.getHours() < 12)? d.AMDesignator: d.PMDesignator).charAt(0));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "f":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(g(this.getMilliseconds()).charAt(0));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "ff":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(g(this.getMilliseconds()).substr(0, 2));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "fff":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append(g(this.getMilliseconds()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "z":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (this.getTimezoneOffset() / 60);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append((((b <= 0)? "+": "-") + Math.floor(Math.abs(b))));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "zz":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (this.getTimezoneOffset() / 60);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append((((b <= 0)? "+": "-") + c(Math.floor(Math.abs(b)))));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "zzz":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (this.getTimezoneOffset() / 60);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append((((b <= 0)? "+": "-") + c(Math.floor(Math.abs(b))) + d.TimeSeparator + c(Math.abs((this.getTimezoneOffset() % 60)))));
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a.toString();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.__typeName = "Number";
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.parseLocale = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Number._parse(a, Sys.CultureInfo.CurrentCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.parseInvariant = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Number._parse(a, Sys.CultureInfo.InvariantCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number._parse = (function (b, o) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b = b.trim();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b.match(/^[+-]?infinity$/i)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return parseFloat(b);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b.match(/^0x[a-f0-9]+$/i)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return parseInt(b);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = o.numberFormat, g = Number._parseNumberNegativePattern(b, a, a.NumberNegativePattern), h = g[0], e = g[1];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((h === "") && (a.NumberNegativePattern !== 1))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    g = Number._parseNumberNegativePattern(b, a, 1);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    h = g[0];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = g[1];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((h === "")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    h = "+";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var j, d, f = e.indexOf("e");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((f < 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f = e.indexOf("E");
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((f < 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = e;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    j = null;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = e.substr(0, f);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    j = e.substr((f + 1));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c, k, m = d.indexOf(a.NumberDecimalSeparator);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((m < 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = d;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    k = null;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = d.substr(0, m);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    k = d.substr((m + a.NumberDecimalSeparator.length));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c = c.split(a.NumberGroupSeparator).join("");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var n = a.NumberGroupSeparator.replace(/\u00A0/g, " ");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.NumberGroupSeparator !== n)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = c.split(n).join("");
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var l = (h + c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((k !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    l += ("." + k);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((j !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var i = Number._parseNumberNegativePattern(j, a, 1);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((i[0] === "")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      i[0] = "+";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    l += ("e" + i[0] + i[1]);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (l.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return parseFloat(l);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Number.NaN;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number._parseNumberNegativePattern = (function (a, d, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = d.NegativeSign, c = d.PositiveSign;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  switch (e) {
  case 4:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = (" " + b);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = (" " + c);
  case 3:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.endsWith(b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ["-", a.substr(0, (a.length - b.length))];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a.endsWith(c)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return ["+", a.substr(0, (a.length - c.length))];
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case 2:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b += " ";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c += " ";
  case 1:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.startsWith(b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ["-", a.substr(b.length)];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a.startsWith(c)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return ["+", a.substr(c.length)];
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case 0:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.startsWith("(") && a.endsWith(")"))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return ["-", a.substr(1, (a.length - 2))];
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ["", a];
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.prototype.format = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._toFormattedString(a, Sys.CultureInfo.InvariantCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.prototype.localeFormat = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._toFormattedString(a, Sys.CultureInfo.CurrentCulture);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Number.prototype._toFormattedString = (function (d, j) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! d) || (d.length === 0) || (d === "i"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((j && (j.name.length > 0))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return this.toLocaleString();
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return this.toString();
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var o = ["n %", "n%", "%n"], n = ["-n %", "-n%", "-%n"], p = ["(n)", "-n", "- n", "n-", "n -"], m = ["$n", "n$", "$ n", "n $"], l = ["($n)", "-$n", "$-n", "$n-", "(n$)", "-n$", "n-$", "n$-", "-n $", "-$ n", "n $-", "$ n-", "$ -n", "n- $", "($ n)", "(n $)"];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  function g(a, c, d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b = a.length; (b < c); (b++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = (d? ("0" + a): (a + "0"));
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  function i(j, i, l, n, p) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h = l[0], k = 1, o = Math.pow(10, i), m = (Math.round((j * o)) / o);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! isFinite(m))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      m = j;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    j = m;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = j.toString(), a = "", c, e = b.split(/e/i);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = e[0];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = ((e.length > 1)? parseInt(e[1]): 0);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = b.split(".");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = e[0];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = ((e.length > 1)? e[1]: "");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var q;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((c > 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = g(a, c, false);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b += a.slice(0, c);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = a.substr(c);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((c < 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c = (- c);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = g(b, (c + 1), true);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a = (b.slice((- c), b.length) + a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = b.slice(0, (- c));
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((i > 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((a.length > i)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a = a.slice(0, i);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a = g(a, i, false);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = (p + a);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = "";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = (b.length - 1), f = "";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    while ((d >= 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((h === 0) || (h > d))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((f.length > 0)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return (b.slice(0, (d + 1)) + n + f + a);
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          return (b.slice(0, (d + 1)) + a);
        }
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((f.length > 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f = (b.slice(((d - h) + 1), (d + 1)) + n + f);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f = b.slice(((d - h) + 1), (d + 1));
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d -= h;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((k < l.length)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        h = l[k];
        _$jscoverage['MicrosoftAjax.js'][5]++;
        (k++);
      }
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return (b.slice(0, (d + 1)) + n + f + a);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = j.numberFormat, e = Math.abs(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! d)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = "D";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = -1;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((d.length > 1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = parseInt(d.slice(1), 10);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  switch (d.charAt(0)) {
  case "d":
  case "D":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = "n";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((b !== -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e = g(("" + e), b, true);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this < 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e = (- e);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "c":
  case "C":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this < 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = l[a.CurrencyNegativePattern];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = m[a.CurrencyPositivePattern];
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((b === -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = a.CurrencyDecimalDigits;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = i(Math.abs(this), b, a.CurrencyGroupSizes, a.CurrencyGroupSeparator, a.CurrencyDecimalSeparator);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "n":
  case "N":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this < 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = p[a.NumberNegativePattern];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = "n";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((b === -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = a.NumberDecimalDigits;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = i(Math.abs(this), b, a.NumberGroupSizes, a.NumberGroupSeparator, a.NumberDecimalSeparator);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "p":
  case "P":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this < 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = n[a.PercentNegativePattern];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = o[a.PercentPositivePattern];
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((b === -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = a.PercentDecimalDigits;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = i((Math.abs(this) * 100), b, a.PercentGroupSizes, a.PercentGroupSeparator, a.PercentDecimalSeparator);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  default:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.format(Sys.Res.formatBadFormatSpecifier);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var k = /n|\$|-|%/g, f = "";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (;;) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var q = k.lastIndex, h = k.exec(c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f += c.slice(q, (h? h.index: c.length));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! h)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    switch (h[0]) {
    case "n":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += e;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "$":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += a.CurrencySymbol;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "-":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += a.NegativeSign;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    case "%":
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += a.PercentSymbol;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return f;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
RegExp.__typeName = "RegExp";
_$jscoverage['MicrosoftAjax.js'][5]++;
RegExp.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.__typeName = "Array";
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.__class = true;
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.add = (Array.enqueue = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a[a.length] = b;
}));
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.addRange = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.push.apply(a, b);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.clear = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.length = 0;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.clone = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.length === 1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return [a[0]];
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return Array.apply(null, a);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.contains = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (Array.indexOf(a, b) >= 0);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.dequeue = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a.shift();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.forEach = (function (b, e, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0, f = b.length; (a < f); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = b[a];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof c) !== "undefined")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e.call(d, c, a, b);
    }
}
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.indexOf = (function (d, e, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof e) === "undefined")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return -1;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = d.length;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c !== 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = (a - 0);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (isNaN(a)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = 0;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (isFinite(a)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a = (a - (a % 1));
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((a < 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a = Math.max(0, (c + a));
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b = a; (b < c); (b++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((((typeof d[b]) !== "undefined") && (d[b] === e))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return b;
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return -1;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.insert = (function (a, b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.splice(b, 0, c);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.parse = (function (value) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! value)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return eval(value);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.remove = (function (b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Array.indexOf(b, c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a >= 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.splice(a, 1);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (a >= 0);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Array.removeAt = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.splice(b, 1);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
if ((! window)) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.window = this;
}
_$jscoverage['MicrosoftAjax.js'][5]++;
window.Type = Function;
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.callBaseMethod = (function (a, d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this.getBaseMethod(a, d);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return c.apply(a);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return c.apply(a, b);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.getBaseMethod = (function (d, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this.getBaseType();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = b.prototype[c];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return ((a instanceof Function)? a: null);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.getBaseType = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (((typeof this.__baseType) === "undefined")? null: this.__baseType);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.getInterfaces = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = [], b = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = b.__interfaces;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var d = 0, f = c.length; (d < f); (d++)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var e = c[d];
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((! Array.contains(a, e))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          a[a.length] = e;
        }
}
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = b.__baseType;
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.getName = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (((typeof this.__typeName) === "undefined")? "": this.__typeName);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.implementsInterface = (function (d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.resolveInheritance();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = d.getName(), a = this.__interfaceCache;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = a[c];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof e) !== "undefined")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return e;
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = (this.__interfaceCache = {});
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = b.__interfaces;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (f) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((Array.indexOf(f, d) !== -1)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return (a[c] = true);
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = b.__baseType;
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (a[c] = false);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.inheritsFrom = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.resolveInheritance();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.__baseType;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a === b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return true;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.__baseType;
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return false;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.initializeBase = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.resolveInheritance();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this.__baseType) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.__baseType.apply(a);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.__baseType.apply(a, b);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.isImplementedBy = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = Object.getType(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! (b.implementsInterface && b.implementsInterface(this))));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.isInstanceOfType = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof b) === "undefined") || (b === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b instanceof this)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return true;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Object.getType(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ((! (! (a === this))) || (a.inheritsFrom && a.inheritsFrom(this)) || (a.implementsInterface && a.implementsInterface(this)));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.registerClass = (function (c, b, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.prototype.constructor = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__typeName = c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__class = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.__baseType = b;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.__basePrototypePending = true;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.__upperCaseTypes[c.toUpperCase()] = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.__interfaces = [];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = 2, f = arguments.length; (a < f); (a++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var e = arguments[a];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.__interfaces.push(e);
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.registerInterface = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.__upperCaseTypes[a.toUpperCase()] = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.prototype.constructor = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__typeName = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__interface = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.resolveInheritance = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this.__basePrototypePending) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = this.__baseType;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.resolveInheritance();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a in b.prototype) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var c = b.prototype[a];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((! this.prototype[a])) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this.prototype[a] = c;
      }
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this.__basePrototypePending);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.getRootNamespaces = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.clone(Sys.__rootNamespaces);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.isClass = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! a.__class));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.isInterface = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! a.__interface));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.isNamespace = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! a.__namespace));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.parse = (function (typeName, ns) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var fn;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (ns) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    fn = Sys.__upperCaseTypes[(ns.getName().toUpperCase() + "." + typeName.toUpperCase())];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return (fn || null);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! typeName)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! Type.__htClasses)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Type.__htClasses = {};
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  fn = Type.__htClasses[typeName];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! fn)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    fn = eval(typeName);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Type.__htClasses[typeName] = fn;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return fn;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.registerNamespace = (function (f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = window, c = f.split(".");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0; (b < c.length); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = c[b], a = d[e];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! a)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = (d[e] = {__namespace: true, __typeName: c.slice(0, (b + 1)).join(".")});
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((b === 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        Sys.__rootNamespaces[Sys.__rootNamespaces.length] = a;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.getName = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this.__typeName;
});
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = a;
}
});
_$jscoverage['MicrosoftAjax.js'][5]++;
window.Sys = {__namespace: true, __typeName: "Sys", getName: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return "Sys";
}), __upperCaseTypes: {}};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.__rootNamespaces = [Sys];
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IDisposable = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IDisposable.prototype = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IDisposable.registerInterface("Sys.IDisposable");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.StringBuilder = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._parts = ((((typeof a) !== "undefined") && (a !== null) && (a !== ""))? [a.toString()]: []);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._value = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._len = 0;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.StringBuilder.prototype = {append: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._parts[this._parts.length] = a;
}), appendLine: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._parts[this._parts.length] = ((((typeof a) === "undefined") || (a === null) || (a === ""))? "\r\n": (a + "\r\n"));
}), clear: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._parts = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._value = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._len = 0;
}), isEmpty: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._parts.length === 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return true;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this.toString() === "");
}), toString: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = (a || "");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._parts;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._len !== b.length)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._value = {};
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._len = b.length;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = this._value;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof d[a]) === "undefined")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a !== "")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var c = 0; (c < b.length);) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((((typeof b[c]) === "undefined") || (b[c] === "") || (b[c] === null))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          b.splice(c, 1);
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          (c++);
        }
}
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d[a] = this._parts.join(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return d[a];
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.StringBuilder.registerClass("Sys.StringBuilder");
_$jscoverage['MicrosoftAjax.js'][5]++;
if ((! window.XMLHttpRequest)) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  window.XMLHttpRequest = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ["Msxml2.XMLHTTP.3.0", "Msxml2.XMLHTTP"];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0, c = b.length; (a < c); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return new ActiveXObject(b[a]);
    }
    catch (d) {
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
}
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.InternetExplorer = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.Firefox = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.Safari = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.Opera = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.agent = null;
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.hasDebuggerStatement = false;
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.name = navigator.appName;
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.version = parseFloat(navigator.appVersion);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Browser.documentMode = 0;
_$jscoverage['MicrosoftAjax.js'][5]++;
if ((navigator.userAgent.indexOf(" MSIE ") > -1)) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Browser.agent = Sys.Browser.InternetExplorer;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Browser.version = parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((Sys.Browser.version >= 8)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((document.documentMode >= 7)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.Browser.documentMode = document.documentMode;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Browser.hasDebuggerStatement = true;
}
else {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((navigator.userAgent.indexOf(" Firefox/") > -1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Browser.agent = Sys.Browser.Firefox;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/Firefox\/(\d+\.\d+)/)[1]);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Browser.name = "Firefox";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Browser.hasDebuggerStatement = true;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((navigator.userAgent.indexOf(" AppleWebKit/") > -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.Browser.agent = Sys.Browser.Safari;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.Browser.version = parseFloat(navigator.userAgent.match(/AppleWebKit\/(\d+(\.\d+)?)/)[1]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.Browser.name = "Safari";
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((navigator.userAgent.indexOf("Opera/") > -1)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        Sys.Browser.agent = Sys.Browser.Opera;
      }
    }
  }
}
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.registerNamespace("Sys.UI");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Debug = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Debug.prototype = {_appendConsole: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof Debug) !== "undefined") && Debug.writeln)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Debug.writeln(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((window.console && window.console.log)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.console.log(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (window.opera) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.opera.postError(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (window.debugService) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.debugService.trace(a);
  }
}), _appendTrace: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.getElementById("TraceConsole");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a && (a.tagName.toUpperCase() === "TEXTAREA"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.value += (b + "\n");
  }
}), assert: (function (c, a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! c)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = ((b && this.assert.caller)? String.format(Sys.Res.assertFailedCaller, a, this.assert.caller): String.format(Sys.Res.assertFailed, a));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (confirm(String.format(Sys.Res.breakIntoDebugger, a))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.fail(a);
    }
  }
}), clearTrace: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.getElementById("TraceConsole");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a && (a.tagName.toUpperCase() === "TEXTAREA"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.value = "";
  }
}), fail: (function (message) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._appendConsole(message);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (Sys.Browser.hasDebuggerStatement) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    eval("debugger");
  }
}), trace: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._appendConsole(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._appendTrace(a);
}), traceDump: (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this._traceDump(a, b, true);
}), _traceDump: (function (a, c, f, b, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c = (c? c: "traceDump");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b = (b? b: "");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.trace((b + c + ": null"));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  switch ((typeof a)) {
  case "undefined":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.trace((b + c + ": Undefined"));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "number":
  case "string":
  case "boolean":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.trace((b + c + ": " + a));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  default:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((Date.isInstanceOfType(a) || RegExp.isInstanceOfType(a))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.trace((b + c + ": " + a.toString()));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! d)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d = [];
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (Array.contains(d, a)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this.trace((b + c + ": ..."));
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return;
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.add(d, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a == window) || (a === document) || (window.HTMLElement && (a instanceof HTMLElement)) || ((typeof a.nodeName) === "string"))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var k = (a.tagName? a.tagName: "DomElement");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a.id) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        k += (" - " + a.id);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.trace((b + c + " {" + k + "}"));
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var i = Object.getTypeName(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.trace((b + c + (((typeof i) === "string")? (" {" + i + "}"): "")));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((b === "") || f)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b += "    ";
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var e, j, l, g, h;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (Array.isInstanceOfType(a)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          j = a.length;
          _$jscoverage['MicrosoftAjax.js'][5]++;
          for (e = 0; (e < j); (e++)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            this._traceDump(a[e], ("[" + e + "]"), f, b, d);
}
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          for (g in a) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            h = a[g];
            _$jscoverage['MicrosoftAjax.js'][5]++;
            if ((! Function.isInstanceOfType(h))) {
              _$jscoverage['MicrosoftAjax.js'][5]++;
              this._traceDump(h, g, f, b, d);
            }
}
        }
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.remove(d, a);
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Debug.registerClass("Sys._Debug");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Debug = new (Sys._Debug)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Debug.isDebug = false;
_$jscoverage['MicrosoftAjax.js'][5]++;
function Sys$Enum$parse(c, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a, b, i;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (e) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this.__lowerCaseValues;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! a)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.__lowerCaseValues = (a = {});
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var g = this.prototype;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var f in g) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a[f.toLowerCase()] = g[f];
}
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this.prototype;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this.__flags)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    i = (e? c.toLowerCase(): c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = a[i.trim()];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof b) !== "number")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      throw Error.argument("value", String.format(Sys.Res.enumInvalidValue, c, this.__typeName));
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h = (e? c.toLowerCase(): c).split(","), j = 0;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var d = (h.length - 1); (d >= 0); (d--)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var k = h[d].trim();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = a[k];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof b) !== "number")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        throw Error.argument("value", String.format(Sys.Res.enumInvalidValue, c.split(",")[d].trim(), this.__typeName));
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      j |= b;
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return j;
  }
}
_$jscoverage['MicrosoftAjax.js'][5]++;
function Sys$Enum$toString(c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof c) === "undefined") || (c === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return this.__string;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = this.prototype, a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! this.__flags) || (c === 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (a in d) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((d[a] === c)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return a;
      }
}
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = this.__sortedValues;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = [];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (a in d) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b[b.length] = {key: a, value: d[a]};
}
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b.sort((function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (a.value - b.value);
}));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.__sortedValues = b;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = [], g = c;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (a = (b.length - 1); (a >= 0); (a--)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var h = b[a], f = h.value;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((f === 0)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        continue;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((f & c) === f)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e[e.length] = h.key;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        g -= f;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((g === 0)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          break;
        }
      }
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((e.length && (g === 0))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return e.reverse().join(", ");
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return "";
}
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.prototype.registerEnum = (function (b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.__upperCaseTypes[b.toUpperCase()] = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in this.prototype) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this[a] = this.prototype[a];
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__typeName = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.parse = Sys$Enum$parse;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__string = this.toString();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.toString = Sys$Enum$toString;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__flags = c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__enum = true;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.isEnum = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! a.__enum));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.isFlags = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((((typeof a) === "undefined") || (a === null))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! a.__flags));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventHandlerList = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._list = {};
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventHandlerList.prototype = {addHandler: (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Array.add(this._getEvent(b, true), a);
}), removeHandler: (function (c, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._getEvent(c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Array.remove(a, b);
}), getHandler: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._getEvent(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (a.length === 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = Array.clone(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (function (c, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0, e = a.length; (b < e); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (a[b])(c, d);
}
});
}), _getEvent: (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._list[a])) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return null;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._list[a] = [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._list[a];
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventHandlerList.registerClass("Sys.EventHandlerList");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventArgs = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventArgs.registerClass("Sys.EventArgs");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.EventArgs.Empty = new (Sys.EventArgs)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CancelEventArgs = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.CancelEventArgs.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._cancel = false;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CancelEventArgs.prototype = {get_cancel: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._cancel;
}), set_cancel: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._cancel = a;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CancelEventArgs.registerClass("Sys.CancelEventArgs", Sys.EventArgs);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyPropertyChange = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyPropertyChange.prototype = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyPropertyChange.registerInterface("Sys.INotifyPropertyChange");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.PropertyChangedEventArgs = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.PropertyChangedEventArgs.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._propertyName = a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.PropertyChangedEventArgs.prototype = {get_propertyName: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._propertyName;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.PropertyChangedEventArgs.registerClass("Sys.PropertyChangedEventArgs", Sys.EventArgs);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyDisposing = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyDisposing.prototype = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Component = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (Sys.Application) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Application.registerDisposableObject(this);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Component.prototype = {_id: null, _initialized: false, _updating: false, get_events: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._events)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._events = new (Sys.EventHandlerList)();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._events;
}), get_id: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._id;
}), set_id: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._id = a;
}), get_isInitialized: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._initialized;
}), get_isUpdating: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._updating;
}), add_disposing: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().addHandler("disposing", a);
}), remove_disposing: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("disposing", a);
}), add_propertyChanged: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().addHandler("propertyChanged", a);
}), remove_propertyChanged: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("propertyChanged", a);
}), beginUpdate: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._updating = true;
}), dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._events) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = this._events.getHandler("disposing");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a(this, Sys.EventArgs.Empty);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  (delete this._events);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Application.unregisterDisposableObject(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Application.removeComponent(this);
}), endUpdate: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._updating = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._initialized)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.initialize();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.updated();
}), initialize: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._initialized = true;
}), raisePropertyChanged: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._events)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._events.getHandler("propertyChanged");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(this, new (Sys.PropertyChangedEventArgs)(b));
  }
}), updated: (function () {
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Component.registerClass("Sys.Component", null, Sys.IDisposable, Sys.INotifyPropertyChange, Sys.INotifyDisposing);
_$jscoverage['MicrosoftAjax.js'][5]++;
function Sys$Component$_setProperties(a, i) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d, j = Object.getType(a), e = ((j === Object) || (j === Sys.UI.DomElement)), h = (Sys.Component.isInstanceOfType(a) && (! a.get_isUpdating()));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (h) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.beginUpdate();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var c in i) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = i[c], f = (e? null: a[("get_" + c)]);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((e || ((typeof f) !== "function"))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var k = a[c];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((! b) || ((typeof b) !== "object") || (e && (! k)))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a[c] = b;
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        Sys$Component$_setProperties(k, b);
      }
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var l = a[("set_" + c)];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof l) === "function")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        l.apply(a, [b]);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((b instanceof Array)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          d = f.apply(a);
          _$jscoverage['MicrosoftAjax.js'][5]++;
          for (var g = 0, m = d.length, n = b.length; (g < n); ((g++), (m++))) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            d[m] = b[g];
}
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if ((((typeof b) === "object") && (Object.getType(b) === Object))) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            d = f.apply(a);
            _$jscoverage['MicrosoftAjax.js'][5]++;
            Sys$Component$_setProperties(d, b);
          }
        }
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (h) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.endUpdate();
  }
}
_$jscoverage['MicrosoftAjax.js'][5]++;
function Sys$Component$_setReferences(c, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = c[("set_" + a)], d = $find(b[a]);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e.apply(c, [d]);
}
}
_$jscoverage['MicrosoftAjax.js'][5]++;
var $create = (Sys.Component.create = (function (h, f, d, c, g) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (g? new h(g): new h()), b = Sys.Application, i = b.get_isCreatingComponents();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.beginUpdate();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (f) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys$Component$_setProperties(a, f);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var e in d) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (a[("add_" + e)])(d[e]);
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a.get_id()) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.addComponent(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (i) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b._createdComponents[b._createdComponents.length] = a;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b._addComponentToSecondPass(a, c);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.endUpdate();
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys$Component$_setReferences(a, c);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.endUpdate();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}));
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.MouseButton = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.MouseButton.prototype = {leftButton: 0, middleButton: 1, rightButton: 2};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Key = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Key.prototype = {backspace: 8, tab: 9, enter: 13, esc: 27, space: 32, pageUp: 33, pageDown: 34, end: 35, home: 36, left: 37, up: 38, right: 39, down: 40, del: 127};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Key.registerEnum("Sys.UI.Key");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Point = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.x = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.y = b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Point.registerClass("Sys.UI.Point");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Bounds = (function (c, d, b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.x = c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.y = d;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.height = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.width = b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Bounds.registerClass("Sys.UI.Bounds");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomEvent = (function (e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = e, b = (this.type = a.type.toLowerCase());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.rawEvent = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.altKey = a.altKey;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof a.button) !== "undefined")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.button = (((typeof a.which) !== "undefined")? a.button: ((a.button === 4)? Sys.UI.MouseButton.middleButton: ((a.button === 2)? Sys.UI.MouseButton.rightButton: Sys.UI.MouseButton.leftButton)));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b === "keypress")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.charCode = (a.charCode || a.keyCode);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.keyCode && (a.keyCode === 46))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.keyCode = 127;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.keyCode = a.keyCode;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.clientX = a.clientX;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.clientY = a.clientY;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.ctrlKey = a.ctrlKey;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.target = (a.target? a.target: a.srcElement);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b.startsWith("key"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((((typeof a.offsetX) !== "undefined") && ((typeof a.offsetY) !== "undefined"))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.offsetX = a.offsetX;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.offsetY = a.offsetY;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((this.target && (this.target.nodeType !== 3) && ((typeof a.clientX) === "number"))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var c = Sys.UI.DomElement.getLocation(this.target), d = Sys.UI.DomElement._getWindow(this.target);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this.offsetX = (((d.pageXOffset || 0) + a.clientX) - c.x);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this.offsetY = (((d.pageYOffset || 0) + a.clientY) - c.y);
      }
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.screenX = a.screenX;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.screenY = a.screenY;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.shiftKey = a.shiftKey;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomEvent.prototype = {preventDefault: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this.rawEvent.preventDefault) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.rawEvent.preventDefault();
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (window.event) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.rawEvent.returnValue = false;
    }
  }
}), stopPropagation: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this.rawEvent.stopPropagation) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.rawEvent.stopPropagation();
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (window.event) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this.rawEvent.cancelBubble = true;
    }
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomEvent.registerClass("Sys.UI.DomEvent");
_$jscoverage['MicrosoftAjax.js'][5]++;
var $addHandler = (Sys.UI.DomEvent.addHandler = (function (a, d, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a._events)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._events = {};
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = a._events[d];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! c)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._events[d] = (c = []);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a.addEventListener) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return e.call(a, new (Sys.UI.DomEvent)(b));
});
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.addEventListener(d, b, false);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.attachEvent) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  try {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = Sys.UI.DomElement._getWindow(a).event;
  }
  catch (c) {
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return e.call(a, new (Sys.UI.DomEvent)(b));
});
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.attachEvent(("on" + d), b);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c[c.length] = {handler: e, browserHandler: b};
})), $addHandlers = (Sys.UI.DomEvent.addHandlers = (function (e, d, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b in d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = d[b];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = Function.createDelegate(c, a);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    $addHandler(e, b, a);
}
})), $clearHandlers = (Sys.UI.DomEvent.clearHandlers = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a._events) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = a._events;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b in e) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var d = e[b];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var c = (d.length - 1); (c >= 0); (c--)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        $removeHandler(a, b, d[c].handler);
}
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._events = null;
  }
})), $removeHandler = (Sys.UI.DomEvent.removeHandler = (function (a, e, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = null, c = a._events[e];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0, g = c.length; (b < g); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((c[b].handler === f)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d = c[b].browserHandler;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      break;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a.removeEventListener) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.removeEventListener(e, d, false);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.detachEvent) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.detachEvent(("on" + e), d);
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c.splice(b, 1);
}));
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.registerClass("Sys.UI.DomElement");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.addCssClass = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! Sys.UI.DomElement.containsCssClass(a, b))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.className === "")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.className = b;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.className += (" " + b);
    }
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.containsCssClass = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.contains(b.className.split(" "), a);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.getBounds = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = Sys.UI.DomElement.getLocation(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.UI.Bounds)(b.x, b.y, (a.offsetWidth || 0), (a.offsetHeight || 0));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
var $get = (Sys.UI.DomElement.getElementById = (function (f, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! e)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return document.getElementById(f);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (e.getElementById) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return e.getElementById(f);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = [], d = e.childNodes;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0; (b < d.length); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = d[b];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.nodeType == 1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c[c.length] = a;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (c.length) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = c.shift();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.id == f)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = a.childNodes;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (b = 0; (b < d.length); (b++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = d[b];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((a.nodeType == 1)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c[c.length] = a;
      }
}
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
}));
_$jscoverage['MicrosoftAjax.js'][5]++;
switch (Sys.Browser.agent) {
case Sys.Browser.InternetExplorer:
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.getLocation = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.self || (a.nodeType === 9))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return new (Sys.UI.Point)(0, 0);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = a.getBoundingClientRect();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return new (Sys.UI.Point)(0, 0);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = a.ownerDocument.documentElement, e = ((b.left - 2) + d.scrollLeft), f = ((b.top - 2) + d.scrollTop);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  try {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (a.ownerDocument.parentWindow.frameElement || null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var g = (((c.frameBorder === "0") || (c.frameBorder === "no"))? 2: 0);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e += g;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += g;
    }
  }
  catch (h) {
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.UI.Point)(e, f);
});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  break;
case Sys.Browser.Safari:
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.getLocation = (function (c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((c.window && (c.window === c)) || (c.nodeType === 9))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return new (Sys.UI.Point)(0, 0);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var f = 0, g = 0, j = null, e = null, b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = c; a; ((j = a), ((e = b), (a = a.offsetParent)))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = Sys.UI.DomElement._getCurrentStyle(a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = (a.tagName? a.tagName.toUpperCase(): null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a.offsetLeft || a.offsetTop) && ((d !== "BODY") || ((! e) || (e.position !== "absolute"))))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += a.offsetLeft;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      g += a.offsetTop;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b = Sys.UI.DomElement._getCurrentStyle(c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var h = (b? b.position: null);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! h) || (h !== "absolute"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = c.parentNode; a; (a = a.parentNode)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d = (a.tagName? a.tagName.toUpperCase(): null);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((d !== "BODY") && (d !== "HTML") && (a.scrollLeft || a.scrollTop))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f -= (a.scrollLeft || 0);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        g -= (a.scrollTop || 0);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b = Sys.UI.DomElement._getCurrentStyle(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var i = (b? b.position: null);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((i && (i === "absolute"))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.UI.Point)(f, g);
});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  break;
case Sys.Browser.Opera:
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.getLocation = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((b.window && (b.window === b)) || (b.nodeType === 9))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return new (Sys.UI.Point)(0, 0);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = 0, e = 0, i = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = b; a; ((i = a), (a = a.offsetParent))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = a.tagName;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d += (a.offsetLeft || 0);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e += (a.offsetTop || 0);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var g = b.style.position, c = (g && (g !== "static"));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = b.parentNode; a; (a = a.parentNode)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f = (a.tagName? a.tagName.toUpperCase(): null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((f !== "BODY") && (f !== "HTML") && (a.scrollLeft || a.scrollTop) && (c && ((a.style.overflow === "scroll") || (a.style.overflow === "auto"))))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d -= (a.scrollLeft || 0);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e -= (a.scrollTop || 0);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h = ((a && a.style)? a.style.position: null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = (c || (h && (h !== "static")));
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.UI.Point)(d, e);
});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  break;
default:
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.getLocation = (function (d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((d.window && (d.window === d)) || (d.nodeType === 9))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return new (Sys.UI.Point)(0, 0);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = 0, f = 0, i = null, g = null, b = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = d; a; ((i = a), ((g = b), (a = a.offsetParent)))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (a.tagName? a.tagName.toUpperCase(): null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = Sys.UI.DomElement._getCurrentStyle(a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a.offsetLeft || a.offsetTop) && (! ((c === "BODY") && ((! g) || (g.position !== "absolute")))))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e += a.offsetLeft;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      f += a.offsetTop;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((i !== null) && b)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((c !== "TABLE") && (c !== "TD") && (c !== "HTML"))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e += (parseInt(b.borderLeftWidth) || 0);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f += (parseInt(b.borderTopWidth) || 0);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((c === "TABLE") && ((b.position === "relative") || (b.position === "absolute")))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e += (parseInt(b.marginLeft) || 0);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f += (parseInt(b.marginTop) || 0);
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b = Sys.UI.DomElement._getCurrentStyle(d);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var h = (b? b.position: null);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! h) || (h !== "absolute"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = d.parentNode; a; (a = a.parentNode)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = (a.tagName? a.tagName.toUpperCase(): null);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((c !== "BODY") && (c !== "HTML") && (a.scrollLeft || a.scrollTop))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        e -= (a.scrollLeft || 0);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        f -= (a.scrollTop || 0);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = Sys.UI.DomElement._getCurrentStyle(a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (b) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          e += (parseInt(b.borderLeftWidth) || 0);
          _$jscoverage['MicrosoftAjax.js'][5]++;
          f += (parseInt(b.borderTopWidth) || 0);
        }
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.UI.Point)(e, f);
});
}
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.removeCssClass = (function (d, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (" " + d.className + " "), b = a.indexOf((" " + c + " "));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b >= 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d.className = (a.substr(0, b) + " " + a.substring((b + c.length + 1), a.length)).trim();
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.setLocation = (function (b, c, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b.style;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.position = "absolute";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.left = (c + "px");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.top = (d + "px");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.toggleCssClass = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (Sys.UI.DomElement.containsCssClass(b, a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.UI.DomElement.removeCssClass(b, a);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.UI.DomElement.addCssClass(b, a);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.getVisibilityMode = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ((a._visibilityMode === Sys.UI.VisibilityMode.hide)? Sys.UI.VisibilityMode.hide: Sys.UI.VisibilityMode.collapse);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.setVisibilityMode = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement._ensureOldDisplayMode(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a._visibilityMode !== b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._visibilityMode = b;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((Sys.UI.DomElement.getVisible(a) === false)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((a._visibilityMode === Sys.UI.VisibilityMode.hide)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a.style.display = a._oldDisplayMode;
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a.style.display = "none";
      }
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._visibilityMode = b;
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.getVisible = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b.currentStyle || Sys.UI.DomElement._getCurrentStyle(b));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return true;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ((a.visibility !== "hidden") && (a.display !== "none"));
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement.setVisible = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b !== Sys.UI.DomElement.getVisible(a))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.UI.DomElement._ensureOldDisplayMode(a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.style.visibility = (b? "visible": "hidden");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((b || (a._visibilityMode === Sys.UI.VisibilityMode.hide))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.style.display = a._oldDisplayMode;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.style.display = "none";
    }
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement._ensureOldDisplayMode = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a._oldDisplayMode)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = (a.currentStyle || Sys.UI.DomElement._getCurrentStyle(a));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._oldDisplayMode = (b? b.display: null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((! a._oldDisplayMode) || (a._oldDisplayMode === "none"))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      switch (a.tagName.toUpperCase()) {
      case "DIV":
      case "P":
      case "ADDRESS":
      case "BLOCKQUOTE":
      case "BODY":
      case "COL":
      case "COLGROUP":
      case "DD":
      case "DL":
      case "DT":
      case "FIELDSET":
      case "FORM":
      case "H1":
      case "H2":
      case "H3":
      case "H4":
      case "H5":
      case "H6":
      case "HR":
      case "IFRAME":
      case "LEGEND":
      case "OL":
      case "PRE":
      case "TABLE":
      case "TD":
      case "TH":
      case "TR":
      case "UL":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a._oldDisplayMode = "block";
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      case "LI":
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a._oldDisplayMode = "list-item";
        _$jscoverage['MicrosoftAjax.js'][5]++;
        break;
      default:
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a._oldDisplayMode = "inline";
      }
    }
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement._getWindow = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = (a.ownerDocument || a.document || a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (b.defaultView || b.parentWindow);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.DomElement._getCurrentStyle = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.nodeType === 3)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = Sys.UI.DomElement._getWindow(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a.documentElement) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.documentElement;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = ((c && (a !== c) && c.getComputedStyle)? c.getComputedStyle(a, null): (a.currentStyle || a.style));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! b) && (Sys.Browser.agent === Sys.Browser.Safari) && a.style)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var g = a.style.display, f = a.style.position;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.style.position = "absolute";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.style.display = "block";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = c.getComputedStyle(a, null);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.style.display = g;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.style.position = f;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = {};
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var d in e) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[d] = e[d];
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.display = "none";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IContainer = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IContainer.prototype = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.IContainer.registerInterface("Sys.IContainer");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptsToLoad = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._sessions = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptLoadedDelegate = Function.createDelegate(this, this._scriptLoadedHandler);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader.prototype = {dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._stopSession();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._loading = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._events) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this._events);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._sessions = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._currentSession = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptLoadedDelegate = null;
}), loadScripts: (function (d, b, c, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = {allScriptsLoadedCallback: b, scriptLoadFailedCallback: c, scriptLoadTimeoutCallback: a, scriptsToLoad: this._scriptsToLoad, scriptTimeout: d};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptsToLoad = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._sessions[this._sessions.length] = e;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._loading)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._nextSession();
  }
}), notifyScriptLoaded: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._loading)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  (this._currentTask._notified++);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((Sys.Browser.agent === Sys.Browser.Safari)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this._currentTask._notified === 1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      window.setTimeout(Function.createDelegate(this, (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptLoadedHandler(this._currentTask.get_scriptElement(), true);
})), 0);
    }
  }
}), queueCustomScriptTag: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._scriptsToLoad)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptsToLoad = [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Array.add(this._scriptsToLoad, a);
}), queueScriptBlock: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._scriptsToLoad)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptsToLoad = [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Array.add(this._scriptsToLoad, {text: a});
}), queueScriptReference: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._scriptsToLoad)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptsToLoad = [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Array.add(this._scriptsToLoad, {src: a});
}), _createScriptElement: (function (c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.createElement("script");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.type = "text/javascript";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b in c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a[b] = c[b];
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), _loadScriptsInternal: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._currentSession;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b.scriptsToLoad && (b.scriptsToLoad.length > 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = Array.dequeue(b.scriptsToLoad), a = this._createScriptElement(c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.text && (Sys.Browser.agent === Sys.Browser.Safari))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.innerHTML = a.text;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (delete a.text);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof c.src) === "string")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._currentTask = new (Sys._ScriptLoaderTask)(a, this._scriptLoadedDelegate);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._currentTask.execute();
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      document.getElementsByTagName("head")[0].appendChild(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys._ScriptLoader._clearScript(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._loadScriptsInternal();
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._stopSession();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = b.allScriptsLoadedCallback;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (d) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d(this);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._nextSession();
  }
}), _nextSession: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._sessions.length === 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._loading = false;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._currentSession = null;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._loading = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Array.dequeue(this._sessions);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._currentSession = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.scriptTimeout > 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._timeoutCookie = window.setTimeout(Function.createDelegate(this, this._scriptLoadTimeoutHandler), (a.scriptTimeout * 1000));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._loadScriptsInternal();
}), _raiseError: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this._currentSession.scriptLoadFailedCallback, b = this._currentTask.get_scriptElement();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._stopSession();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c(this, b, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._nextSession();
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._loading = false;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Sys._ScriptLoader._errorScriptLoadFailed(b.src, a);
  }
}), _scriptLoadedHandler: (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b && this._currentTask._notified)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this._currentTask._notified > 1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._raiseError(true);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Array.add(Sys._ScriptLoader._getLoadedScripts(), a.src);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._currentTask.dispose();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._currentTask = null;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._loadScriptsInternal();
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._raiseError(false);
  }
}), _scriptLoadTimeoutHandler: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._currentSession.scriptLoadTimeoutCallback;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._stopSession();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(this);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._nextSession();
}), _stopSession: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._timeoutCookie) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.clearTimeout(this._timeoutCookie);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._timeoutCookie = null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._currentTask) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._currentTask.dispose();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._currentTask = null;
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader.registerClass("Sys._ScriptLoader", null, Sys.IDisposable);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader.getInstance = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Sys._ScriptLoader._activeInstance;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = (Sys._ScriptLoader._activeInstance = new (Sys._ScriptLoader)());
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader.isScriptLoaded = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.createElement("script");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.src = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.contains(Sys._ScriptLoader._getLoadedScripts(), a.src);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader.readLoadedScripts = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! Sys._ScriptLoader._referencedScripts)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = (Sys._ScriptLoader._referencedScripts = []), c = document.getElementsByTagName("script");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (i = (c.length - 1); (i >= 0); (i--)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var d = c[i], a = d.src;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (a.length) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((! Array.contains(b, a))) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          Array.add(b, a);
        }
      }
}
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader._clearScript = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! Sys.Debug.isDebug)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.parentNode.removeChild(a);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader._errorScriptLoadFailed = (function (b, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Res.scriptLoadMultipleCallbacks;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Res.scriptLoadFailed;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = ("Sys.ScriptLoadFailedException: " + String.format(a, b)), c = Error.create(e, {name: "Sys.ScriptLoadFailedException", "scriptUrl": b});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c.popStackFrame();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return c;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoader._getLoadedScripts = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! Sys._ScriptLoader._referencedScripts)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys._ScriptLoader._referencedScripts = [];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys._ScriptLoader.readLoadedScripts();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys._ScriptLoader._referencedScripts;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoaderTask = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptElement = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._completedCallback = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._notified = 0;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoaderTask.prototype = {get_scriptElement: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._scriptElement;
}), dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._disposed) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._disposed = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._removeScriptElementHandlers();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys._ScriptLoader._clearScript(this._scriptElement);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptElement = null;
}), execute: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._addScriptElementHandlers();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  document.getElementsByTagName("head")[0].appendChild(this._scriptElement);
}), _addScriptElementHandlers: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._scriptLoadDelegate = Function.createDelegate(this, this._scriptLoadHandler);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((Sys.Browser.agent !== Sys.Browser.InternetExplorer)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptElement.readyState = "loaded";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    $addHandler(this._scriptElement, "load", this._scriptLoadDelegate);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    $addHandler(this._scriptElement, "readystatechange", this._scriptLoadDelegate);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._scriptElement.addEventListener) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptErrorDelegate = Function.createDelegate(this, this._scriptErrorHandler);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptElement.addEventListener("error", this._scriptErrorDelegate, false);
  }
}), _removeScriptElementHandlers: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._scriptLoadDelegate) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = this.get_scriptElement();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((Sys.Browser.agent !== Sys.Browser.InternetExplorer)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      $removeHandler(a, "load", this._scriptLoadDelegate);
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      $removeHandler(a, "readystatechange", this._scriptLoadDelegate);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._scriptErrorDelegate) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._scriptElement.removeEventListener("error", this._scriptErrorDelegate, false);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._scriptErrorDelegate = null;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._scriptLoadDelegate = null;
  }
}), _scriptErrorHandler: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._disposed) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._completedCallback(this.get_scriptElement(), false);
}), _scriptLoadHandler: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._disposed) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_scriptElement();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((a.readyState !== "loaded") && (a.readyState !== "complete"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  window.setTimeout((function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b._completedCallback(a, true);
}), 0);
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask", null, Sys.IDisposable);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.ApplicationLoadEventArgs = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.ApplicationLoadEventArgs.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._components = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._isPartialLoad = a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.ApplicationLoadEventArgs.prototype = {get_components: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._components;
}), get_isPartialLoad: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._isPartialLoad;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.ApplicationLoadEventArgs.registerClass("Sys.ApplicationLoadEventArgs", Sys.EventArgs);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.HistoryEventArgs = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.HistoryEventArgs.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._state = a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.HistoryEventArgs.prototype = {get_state: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._state;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.HistoryEventArgs.registerClass("Sys.HistoryEventArgs", Sys.EventArgs);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Application = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys._Application.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._disposableObjects = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._components = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._createdComponents = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._secondPassComponents = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._appLoadHandler = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._beginRequestHandler = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._clientId = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._currentEntry = "";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._endRequestHandler = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._history = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._enableHistory = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyFrame = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyInitialized = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyInitialLength = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyLength = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyPointIsNew = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ignoreTimer = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._initialState = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._state = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timerCookie = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timerHandler = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._uniqueId = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._unloadHandlerDelegate = Function.createDelegate(this, this._unloadHandler);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._loadHandlerDelegate = Function.createDelegate(this, this._loadHandler);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomEvent.addHandler(window, "unload", this._unloadHandlerDelegate);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomEvent.addHandler(window, "load", this._loadHandlerDelegate);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Application.prototype = {_creatingComponents: false, _disposing: false, get_isCreatingComponents: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._creatingComponents;
}), get_stateString: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = window.location.hash;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._isSafari2()) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = this._getHistory();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (b) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = b[(window.history.length - this._historyInitialLength)];
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((a.length > 0) && (a.charAt(0) === "#"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.substring(1);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((Sys.Browser.agent === Sys.Browser.Firefox)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this._serializeState(this._deserializeState(a, true));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), get_enableHistory: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._enableHistory;
}), set_enableHistory: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._enableHistory = a;
}), add_init: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._initialized) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(this, Sys.EventArgs.Empty);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.get_events().addHandler("init", a);
  }
}), remove_init: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("init", a);
}), add_load: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().addHandler("load", a);
}), remove_load: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("load", a);
}), add_navigate: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().addHandler("navigate", a);
}), remove_navigate: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("navigate", a);
}), add_unload: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().addHandler("unload", a);
}), remove_unload: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.get_events().removeHandler("unload", a);
}), addComponent: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._components[a.get_id()] = a;
}), addHistoryPoint: (function (c, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ensureHistory();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._state;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = c[a];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((d === null)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof b[a]) !== "undefined")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        (delete b[a]);
      }
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[a] = d;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = this._serializeState(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._historyPointIsNew = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._setState(e, f);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._raiseNavigate();
}), beginCreateComponents: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._creatingComponents = true;
}), dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._disposing)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._disposing = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._timerCookie) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      window.clearTimeout(this._timerCookie);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (delete this._timerCookie);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._endRequestHandler) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (delete this._endRequestHandler);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._beginRequestHandler) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      (delete this._beginRequestHandler);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (window.pageUnload) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      window.pageUnload(this, Sys.EventArgs.Empty);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = this.get_events().getHandler("unload");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (c) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c(this, Sys.EventArgs.Empty);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = Array.clone(this._disposableObjects);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = 0, e = b.length; (a < e); (a++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[a].dispose();
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.clear(this._disposableObjects);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.UI.DomEvent.removeHandler(window, "unload", this._unloadHandlerDelegate);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._loadHandlerDelegate) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._loadHandlerDelegate = null;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = Sys._ScriptLoader.getInstance();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (d) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d.dispose();
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys._Application.callBaseMethod(this, "dispose");
  }
}), endCreateComponents: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._secondPassComponents;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0, d = b.length; (a < d); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = b[a].component;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys$Component$_setReferences(c, b[a].references);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c.endUpdate();
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._secondPassComponents = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._creatingComponents = false;
}), findComponent: (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (a? (Sys.IContainer.isInstanceOfType(a)? a.findComponent(b): (a[b] || null)): (Sys.Application._components[b] || null));
}), getComponents: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = [], b = this._components;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var c in b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a[a.length] = b[c];
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), initialize: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! this._initialized) && (! this._initializing))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._initializing = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.setTimeout(Function.createDelegate(this, this._doInitialize), 0);
  }
}), notifyScriptLoaded: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Sys._ScriptLoader.getInstance();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.notifyScriptLoaded();
  }
}), registerDisposableObject: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._disposing)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._disposableObjects[this._disposableObjects.length] = a;
  }
}), raiseLoad: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this.get_events().getHandler("load"), a = new (Sys.ApplicationLoadEventArgs)(Array.clone(this._createdComponents), (! this._initializing));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b(this, a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (window.pageLoad) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.pageLoad(this, a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._createdComponents = [];
}), removeComponent: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b.get_id();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this._components[a]);
  }
}), setServerId: (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._clientId = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._uniqueId = b;
}), setServerState: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ensureHistory();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._state.__s = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._updateHiddenField(a);
}), unregisterDisposableObject: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._disposing)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.remove(this._disposableObjects, a);
  }
}), _addComponentToSecondPass: (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._secondPassComponents[this._secondPassComponents.length] = {component: b, references: a};
}), _deserializeState: (function (a, i) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = (a || "");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = a.indexOf("&&");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((b !== -1) && ((b + 2) < a.length))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e.__s = a.substr((b + 2));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.substr(0, b);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var g = a.split("&");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var f = 0, k = g.length; (f < k); (f++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = g[f], c = d.indexOf("=");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((c !== -1) && ((c + 1) < d.length))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var j = d.substr(0, c), h = d.substr((c + 1));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e[j] = (i? h: decodeURIComponent(h));
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return e;
}), _doInitialize: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys._Application.callBaseMethod(this, "initialize");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this.get_events().getHandler("init");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.beginCreateComponents();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b(this, Sys.EventArgs.Empty);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.endCreateComponents();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (Sys.WebForms) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._beginRequestHandler = Function.createDelegate(this, this._onPageRequestManagerBeginRequest);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._endRequestHandler = Function.createDelegate(this, this._onPageRequestManagerEndRequest);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_stateString();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a !== this._currentEntry)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._navigate(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.raiseLoad();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._initializing = false;
}), _enableHistoryInScriptManager: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._enableHistory = true;
}), _ensureHistory: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! this._historyInitialized) && this._enableHistory)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((Sys.Browser.agent === Sys.Browser.InternetExplorer) && (Sys.Browser.documentMode < 8))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._historyFrame = document.getElementById("__historyFrame");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._ignoreIFrame = true;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (this._isSafari2()) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var a = document.getElementById("__history");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._setHistory([window.location.hash]);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._historyInitialLength = window.history.length;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._timerHandler = Function.createDelegate(this, this._onIdle);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._timerCookie = window.setTimeout(this._timerHandler, 100);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._initialState = this._deserializeState(this.get_stateString());
    }
    catch (b) {
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._historyInitialized = true;
  }
}), _getHistory: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.getElementById("__history");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return "";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = a.value;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (b? Sys.Serialization.JavaScriptSerializer.deserialize(b, true): "");
}), _isSafari2: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ((Sys.Browser.agent === Sys.Browser.Safari) && (Sys.Browser.version <= 419.30000000000001));
}), _loadHandler: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._loadHandlerDelegate) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._loadHandlerDelegate = null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.initialize();
}), _navigate: (function (c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ensureHistory();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._deserializeState(c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._uniqueId) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = (this._state.__s || ""), a = (b.__s || "");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a !== d)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._updateHiddenField(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      __doPostBack(this._uniqueId, a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._state = b;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._setState(c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._state = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._raiseNavigate();
}), _onIdle: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  (delete this._timerCookie);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_stateString();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a !== this._currentEntry)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! this._ignoreTimer)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._historyPointIsNew = false;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._navigate(a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._historyLength = window.history.length;
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._ignoreTimer = false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timerCookie = window.setTimeout(this._timerHandler, 100);
}), _onIFrameLoad: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ensureHistory();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._ignoreIFrame)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._historyPointIsNew = false;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._navigate(a);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ignoreIFrame = false;
}), _onPageRequestManagerBeginRequest: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._ignoreTimer = true;
}), _onPageRequestManagerEndRequest: (function (e, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = d.get_dataItems()[this._clientId], a = document.getElementById("__EVENTTARGET");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a && (a.value === this._uniqueId))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.value = "";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof b) !== "undefined")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.setServerState(b);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._historyPointIsNew = true;
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._ignoreTimer = false;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this._serializeState(this._state);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c !== this._currentEntry)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._ignoreTimer = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._setState(c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._raiseNavigate();
  }
}), _raiseNavigate: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this.get_events().getHandler("navigate"), b = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in this._state) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a !== "__s")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[a] = this._state[a];
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = new (Sys.HistoryEventArgs)(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c(this, d);
  }
}), _serializeState: (function (d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = d[a];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a === "__s")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var c = e;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[b.length] = (a + "=" + encodeURIComponent(e));
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (b.join("&") + (c? ("&&" + c): ""));
}), _setHistory: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = document.getElementById("__history");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.value = Sys.Serialization.JavaScriptSerializer.serialize(b);
  }
}), _setState: (function (a, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = (a || "");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a !== this._currentEntry)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (window.theForm) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var e = window.theForm.action, f = e.indexOf("#");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      window.theForm.action = (((f !== -1)? e.substring(0, f): e) + "#" + a);
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this._historyFrame && this._historyPointIsNew)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._ignoreIFrame = true;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._historyPointIsNew = false;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var d = this._historyFrame.contentWindow.document;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d.open("javascript:'<html></html>'");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d.write(("<html><head><title>" + (c || document.title) + "</title><scri" + "pt type=\"text/javascript\">parent.Sys.Application._onIFrameLoad('" + a + "');</scri" + "pt></head><body></body></html>"));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d.close();
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._ignoreTimer = false;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var h = this.get_stateString();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._currentEntry = a;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a !== h)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (this._isSafari2()) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var g = this._getHistory();
        _$jscoverage['MicrosoftAjax.js'][5]++;
        g[((window.history.length - this._historyInitialLength) + 1)] = a;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this._setHistory(g);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this._historyLength = (window.history.length + 1);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var b = document.createElement("form");
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.method = "get";
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.action = ("#" + a);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        document.appendChild(b);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b.submit();
        _$jscoverage['MicrosoftAjax.js'][5]++;
        document.removeChild(b);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        window.location.hash = a;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((((typeof c) !== "undefined") && (c !== null))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        document.title = c;
      }
    }
  }
}), _unloadHandler: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.dispose();
}), _updateHiddenField: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._clientId) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = document.getElementById(this._clientId);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.value = b;
    }
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys._Application.registerClass("Sys._Application", Sys.Component, Sys.IContainer);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Application = new (Sys._Application)();
_$jscoverage['MicrosoftAjax.js'][5]++;
var $find = Sys.Application.findComponent;
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.registerNamespace("Sys.Net");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequestExecutor = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._webRequest = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._resultObject = null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequestExecutor.prototype = {get_webRequest: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._webRequest;
}), _set_webRequest: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._webRequest = a;
}), get_started: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_responseAvailable: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_timedOut: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_aborted: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_responseData: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_statusCode: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_statusText: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_xml: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), get_object: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._resultObject)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._resultObject = Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData());
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._resultObject;
}), executeRequest: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), abort: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), getResponseHeader: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
}), getAllResponseHeaders: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequestExecutor.registerClass("Sys.Net.WebRequestExecutor");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.XMLDOM = (function (d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! window.DOMParser)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = ["Msxml2.DOMDocument.3.0", "Msxml2.DOMDocument"];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b = 0, f = c.length; (b < f); (b++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      try {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var a = new ActiveXObject(c[b]);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a.async = false;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a.loadXML(d);
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a.setProperty("SelectionLanguage", "XPath");
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return a;
      }
      catch (g) {
      }
}
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var e = new (window.DOMParser)();
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return e.parseFromString(d, "text/xml");
    }
    catch (g) {
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.XMLHttpExecutor = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Net.XMLHttpExecutor.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._xmlHttpRequest = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._webRequest = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._responseAvailable = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timedOut = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timer = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._aborted = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._started = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._onReadyStateChange = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a._xmlHttpRequest.readyState === 4)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof a._xmlHttpRequest.status) === "undefined")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        return;
      }
    }
    catch (b) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._clearTimer();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._responseAvailable = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a._webRequest.completed(Sys.EventArgs.Empty);
    }
    finally {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if ((a._xmlHttpRequest != null)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        a._xmlHttpRequest = null;
      }
    }
  }
});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._clearTimer = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a._timer != null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.clearTimeout(a._timer);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._timer = null;
  }
});
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._onTimeout = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a._responseAvailable)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._clearTimer();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._timedOut = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._xmlHttpRequest.abort();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._webRequest.completed(Sys.EventArgs.Empty);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a._xmlHttpRequest = null;
  }
});
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.XMLHttpExecutor.prototype = {get_timedOut: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._timedOut;
}), get_started: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._started;
}), get_responseAvailable: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._responseAvailable;
}), get_aborted: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._aborted;
}), executeRequest: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._webRequest = this.get_webRequest();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this._webRequest.get_body(), a = this._webRequest.get_headers();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._xmlHttpRequest = new XMLHttpRequest();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._xmlHttpRequest.onreadystatechange = this._onReadyStateChange;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = this._webRequest.get_httpVerb();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._xmlHttpRequest.open(e, this._webRequest.getResolvedUrl(), true);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b in a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var f = a[b];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof f) !== "function")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        this._xmlHttpRequest.setRequestHeader(b, f);
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((e.toLowerCase() === "post")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((a === null) || (! a["Content-Type"]))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._xmlHttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! c)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = "";
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = this._webRequest.get_timeout();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((d > 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._timer = window.setTimeout(Function.createDelegate(this, this._onTimeout), d);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._xmlHttpRequest.send(c);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._started = true;
}), getResponseHeader: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  try {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this._xmlHttpRequest.getResponseHeader(b);
  }
  catch (c) {
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = "";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), getAllResponseHeaders: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._xmlHttpRequest.getAllResponseHeaders();
}), get_responseData: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._xmlHttpRequest.responseText;
}), get_statusCode: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  try {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this._xmlHttpRequest.status;
  }
  catch (b) {
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), get_statusText: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._xmlHttpRequest.statusText;
}), get_xml: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._xmlHttpRequest.responseXML;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (! a.documentElement))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Net.XMLDOM(this._xmlHttpRequest.responseText);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((! a) || (! a.documentElement))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return null;
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((navigator.userAgent.indexOf("MSIE") !== -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.setProperty("SelectionLanguage", "XPath");
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((a.documentElement.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml") && (a.documentElement.tagName === "parsererror"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a.documentElement.firstChild && (a.documentElement.firstChild.tagName === "parsererror"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), abort: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._aborted || this._responseAvailable || this._timedOut)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._aborted = true;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._clearTimer();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._xmlHttpRequest && (! this._responseAvailable))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._xmlHttpRequest.abort();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._xmlHttpRequest = null;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._webRequest.completed(Sys.EventArgs.Empty);
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.XMLHttpExecutor.registerClass("Sys.Net.XMLHttpExecutor", Sys.Net.WebRequestExecutor);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net._WebRequestManager = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultTimeout = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultExecutorType = "Sys.Net.XMLHttpExecutor";
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net._WebRequestManager.prototype = {add_invokingRequest: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().addHandler("invokingRequest", a);
}), remove_invokingRequest: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().removeHandler("invokingRequest", a);
}), add_completedRequest: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().addHandler("completedRequest", a);
}), remove_completedRequest: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().removeHandler("completedRequest", a);
}), _get_eventHandlerList: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._events)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._events = new (Sys.EventHandlerList)();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._events;
}), get_defaultTimeout: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultTimeout;
}), set_defaultTimeout: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultTimeout = a;
}), get_defaultExecutorType: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultExecutorType;
}), set_defaultExecutorType: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultExecutorType = a;
}), executeRequest: (function (webRequest) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var executor = webRequest.get_executor();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! executor)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var failed = false;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    try {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var executorType = eval(this._defaultExecutorType);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      executor = new executorType();
    }
    catch (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      failed = true;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    webRequest.set_executor(executor);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (executor.get_aborted()) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var evArgs = new (Sys.Net.NetworkRequestEventArgs)(webRequest), handler = this._get_eventHandlerList().getHandler("invokingRequest");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (handler) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    handler(this, evArgs);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! evArgs.get_cancel())) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    executor.executeRequest();
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net._WebRequestManager.registerClass("Sys.Net._WebRequestManager");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequestManager = new (Sys.Net._WebRequestManager)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.NetworkRequestEventArgs = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Net.NetworkRequestEventArgs.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._webRequest = a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.NetworkRequestEventArgs.prototype = {get_webRequest: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._webRequest;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.NetworkRequestEventArgs.registerClass("Sys.Net.NetworkRequestEventArgs", Sys.CancelEventArgs);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._url = "";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._headers = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._body = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._userContext = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._httpVerb = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._executor = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invokeCalled = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timeout = 0;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest.prototype = {add_completed: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().addHandler("completed", a);
}), remove_completed: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._get_eventHandlerList().removeHandler("completed", a);
}), completed: (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(this._executor, b);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = this._get_eventHandlerList().getHandler("completed");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(this._executor, b);
  }
}), _get_eventHandlerList: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._events)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._events = new (Sys.EventHandlerList)();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._events;
}), get_url: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._url;
}), set_url: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._url = a;
}), get_headers: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._headers;
}), get_httpVerb: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._httpVerb === null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((this._body === null)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return "GET";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return "POST";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._httpVerb;
}), set_httpVerb: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._httpVerb = a;
}), get_body: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._body;
}), set_body: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._body = a;
}), get_userContext: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._userContext;
}), set_userContext: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._userContext = a;
}), get_executor: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._executor;
}), set_executor: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._executor = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._executor._set_webRequest(this);
}), get_timeout: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((this._timeout === 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return Sys.Net.WebRequestManager.get_defaultTimeout();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._timeout;
}), set_timeout: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timeout = a;
}), getResolvedUrl: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys.Net.WebRequest._resolveUrl(this._url);
}), invoke: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Net.WebRequestManager.executeRequest(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invokeCalled = true;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest._resolveUrl = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b && (b.indexOf("://") !== -1))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return b;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (a.length === 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var d = document.getElementsByTagName("base")[0];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((d && d.href && (d.href.length > 0))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = d.href;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = document.URL;
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = a.indexOf("?");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c !== -1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.substr(0, c);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c = a.indexOf("#");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((c !== -1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.substr(0, c);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a = a.substr(0, (a.lastIndexOf("/") + 1));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! b) || (b.length === 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b.charAt(0) === "/")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = a.indexOf("://"), g = a.indexOf("/", (e + 3));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return (a.substr(0, g) + b);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = a.lastIndexOf("/");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return (a.substr(0, (f + 1)) + b);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest._createQueryString = (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = encodeURIComponent;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = new (Sys.StringBuilder)(), f = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var c in d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = d[c];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (((typeof e) === "function")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      continue;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var g = Sys.Serialization.JavaScriptSerializer.serialize(e);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((f !== 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("&");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.append(c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.append("=");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.append(b(g));
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (f++);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a.toString();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest._createUrl = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = Sys.Net.WebRequest._createQueryString(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((d.length > 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = "?";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a && (a.indexOf("?") !== -1))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c = "&";
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return (a + c + d);
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebRequest.registerClass("Sys.Net.WebRequest");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceProxy = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceProxy.prototype = {get_timeout: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._timeout;
}), set_timeout: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a < 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.argumentOutOfRange("value", a, Sys.Res.invalidTimeout);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timeout = a;
}), get_defaultUserContext: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._userContext;
}), set_defaultUserContext: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._userContext = a;
}), get_defaultSucceededCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._succeeded;
}), set_defaultSucceededCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._succeeded = a;
}), get_defaultFailedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._failed;
}), set_defaultFailedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._failed = a;
}), get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._path;
}), set_path: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._path = a;
}), _invoke: (function (d, e, g, f, c, b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((c === null) || ((typeof c) === "undefined"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c = this.get_defaultSucceededCallback();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((b === null) || ((typeof b) === "undefined"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = this.get_defaultFailedCallback();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((a === null) || ((typeof a) === "undefined"))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = this.get_defaultUserContext();
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys.Net.WebServiceProxy.invoke(d, e, g, f, c, b, a, this.get_timeout());
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceProxy.registerClass("Sys.Net.WebServiceProxy");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceProxy.invoke = (function (k, a, j, d, i, c, f, h) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = new (Sys.Net.WebRequest)();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.get_headers()["Content-Type"] = "application/json; charset=utf-8";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! d)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = {};
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var g = d;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! j) || (! g))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    g = {};
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.set_url(Sys.Net.WebRequest._createUrl((k + "/" + encodeURIComponent(a)), g));
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var e = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! j)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = Sys.Serialization.JavaScriptSerializer.serialize(d);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((e === "{}")) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      e = "";
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.set_body(e);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.add_completed(l);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((h && (h > 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.set_timeout(h);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  b.invoke();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  function l(d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (d.get_responseAvailable()) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var g = d.get_statusCode(), b = null;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      try {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var e = d.getResponseHeader("Content-Type");
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (e.startsWith("application/json")) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          b = d.get_object();
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if (e.startsWith("text/xml")) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            b = d.get_xml();
          }
          else {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            b = d.get_responseData();
          }
        }
      }
      catch (m) {
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var k = d.getResponseHeader("jsonerror"), h = (k === "true");
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (h) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (b) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          b = new (Sys.Net.WebServiceError)(false, b.Message, b.StackTrace, b.ExceptionType);
        }
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (e.startsWith("application/json")) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          b = b.d;
        }
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((g < 200) || (g >= 300) || h)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (c) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if (((! b) || (! h))) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            b = new (Sys.Net.WebServiceError)(false, String.format(Sys.Res.webServiceFailedNoMsg, a), "", "");
          }
          _$jscoverage['MicrosoftAjax.js'][5]++;
          b._statusCode = g;
          _$jscoverage['MicrosoftAjax.js'][5]++;
          c(b, f, a);
        }
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (i) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          i(b, f, a);
        }
      }
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var j;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (d.get_timedOut()) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        j = String.format(Sys.Res.webServiceTimedOut, a);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        j = String.format(Sys.Res.webServiceFailedNoMsg, a);
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (c) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c(new (Sys.Net.WebServiceError)(d.get_timedOut(), j, "", ""), f, a);
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceProxy._generateTypedConstructor = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var c in b) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this[c] = b[c];
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.__type = a;
});
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceError = (function (c, d, b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._timedOut = c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._message = d;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._stackTrace = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._exceptionType = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._statusCode = -1;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceError.prototype = {get_timedOut: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._timedOut;
}), get_statusCode: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._statusCode;
}), get_message: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._message;
}), get_stackTrace: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._stackTrace;
}), get_exceptionType: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._exceptionType;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Net.WebServiceError.registerClass("Sys.Net.WebServiceError");
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.registerNamespace("Sys.Services");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._ProfileService = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Services._ProfileService.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.properties = {};
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._ProfileService.DefaultWebServicePath = "";
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._ProfileService.prototype = {_defaultLoadCompletedCallback: null, _defaultSaveCompletedCallback: null, _path: "", _timeout: 0, get_defaultLoadCompletedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultLoadCompletedCallback;
}), set_defaultLoadCompletedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultLoadCompletedCallback = a;
}), get_defaultSaveCompletedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultSaveCompletedCallback;
}), set_defaultSaveCompletedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultSaveCompletedCallback = a;
}), get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this._path || "");
}), load: (function (c, d, e, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b, a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! c)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = "GetAllPropertiesForCurrentUser";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = {authenticatedUserOnly: false};
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = "GetPropertiesForCurrentUser";
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b = {properties: this._clonePropertyNames(c), authenticatedUserOnly: false};
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invoke(this._get_path(), a, false, b, Function.createDelegate(this, this._onLoadComplete), Function.createDelegate(this, this._onLoadFailed), [d, e, f]);
}), save: (function (d, b, c, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._flattenProperties(d, this.properties);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invoke(this._get_path(), "SetPropertiesForCurrentUser", false, {values: a.value, authenticatedUserOnly: false}, Function.createDelegate(this, this._onSaveComplete), Function.createDelegate(this, this._onSaveFailed), [b, c, e, a.count]);
}), _clonePropertyNames: (function (e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = [], d = {};
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b = 0; (b < e.length); (b++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = e[b];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((! d[a])) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Array.add(c, a);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      d[a] = true;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return c;
}), _flattenProperties: (function (a, i, j) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = {}, e, d, g = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a && (a.length === 0))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return ({value: b, count: 0});
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var c in i) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    e = i[c];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = (j? (j + "." + c): c);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (Sys.Services.ProfileGroup.isInstanceOfType(e)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var k = this._flattenProperties(a, e, d), h = k.value;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      g += k.count;
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var f in h) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var l = h[f];
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b[f] = l;
}
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((! a) || (Array.indexOf(a, d) !== -1))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b[d] = e;
        _$jscoverage['MicrosoftAjax.js'][5]++;
        (g++);
      }
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ({value: b, count: g});
}), _get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_path();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a.length)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Services._ProfileService.DefaultWebServicePath;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (! a.length))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(Sys.Res.servicePathNotSet);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), _onLoadComplete: (function (a, e, g) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof a) !== "object")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, g, "Object"));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = this._unflattenProperties(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var b in c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this.properties[b] = c[b];
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = (e[0] || this.get_defaultLoadCompletedCallback() || this.get_defaultSucceededCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var f = (e[2] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d(a.length, f, "Sys.Services.ProfileService.load");
  }
}), _onLoadFailed: (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b[1] || this.get_defaultFailedCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (b[2] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(d, c, "Sys.Services.ProfileService.load");
  }
}), _onSaveComplete: (function (a, b, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = b[3];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a instanceof Array)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c -= a.length;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((typeof a) === "number")) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c = a;
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, f, "Array"));
      }
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var d = (b[0] || this.get_defaultSaveCompletedCallback() || this.get_defaultSucceededCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (d) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = (b[2] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d(c, e, "Sys.Services.ProfileService.save");
  }
}), _onSaveFailed: (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b[1] || this.get_defaultFailedCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (b[2] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(d, c, "Sys.Services.ProfileService.save");
  }
}), _unflattenProperties: (function (e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = {}, d, f, h = 0;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a in e) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (h++);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    f = e[a];
    _$jscoverage['MicrosoftAjax.js'][5]++;
    d = a.indexOf(".");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((d !== -1)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var g = a.substr(0, d);
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = a.substr((d + 1));
      _$jscoverage['MicrosoftAjax.js'][5]++;
      var b = c[g];
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (((! b) || (! Sys.Services.ProfileGroup.isInstanceOfType(b)))) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        b = new (Sys.Services.ProfileGroup)();
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c[g] = b;
      }
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[a] = f;
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      c[a] = f;
    }
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  e.length = h;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return c;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._ProfileService.registerClass("Sys.Services._ProfileService", Sys.Net.WebServiceProxy);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services.ProfileService = new (Sys.Services._ProfileService)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services.ProfileGroup = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b in a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this[b] = a[b];
}
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services.ProfileGroup.registerClass("Sys.Services.ProfileGroup");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._AuthenticationService = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Services._AuthenticationService.initializeBase(this);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._AuthenticationService.DefaultWebServicePath = "";
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._AuthenticationService.prototype = {_defaultLoginCompletedCallback: null, _defaultLogoutCompletedCallback: null, _path: "", _timeout: 0, _authenticated: false, get_defaultLoginCompletedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultLoginCompletedCallback;
}), set_defaultLoginCompletedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultLoginCompletedCallback = a;
}), get_defaultLogoutCompletedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultLogoutCompletedCallback;
}), set_defaultLogoutCompletedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultLogoutCompletedCallback = a;
}), get_isLoggedIn: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._authenticated;
}), get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this._path || "");
}), login: (function (c, b, a, h, f, d, e, g) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invoke(this._get_path(), "Login", false, {userName: c, password: b, createPersistentCookie: a}, Function.createDelegate(this, this._onLoginComplete), Function.createDelegate(this, this._onLoginFailed), [c, b, a, h, f, d, e, g]);
}), logout: (function (c, a, b, d) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._invoke(this._get_path(), "Logout", false, {}, Function.createDelegate(this, this._onLogoutComplete), Function.createDelegate(this, this._onLogoutFailed), [c, a, b, d]);
}), _get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_path();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a.length)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Services._AuthenticationService.DefaultWebServicePath;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (! a.length))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(Sys.Res.servicePathNotSet);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), _onLoginComplete: (function (e, c, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((typeof e) !== "boolean")) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, f, "Boolean"));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = c[4], d = (c[7] || this.get_defaultUserContext()), a = (c[5] || this.get_defaultLoginCompletedCallback() || this.get_defaultSucceededCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (e) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._authenticated = true;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a(true, d, "Sys.Services.AuthenticationService.login");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((((typeof b) !== "undefined") && (b !== null))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      window.location.href = b;
    }
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a(false, d, "Sys.Services.AuthenticationService.login");
    }
  }
}), _onLoginFailed: (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b[6] || this.get_defaultFailedCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (b[7] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(d, c, "Sys.Services.AuthenticationService.login");
  }
}), _onLogoutComplete: (function (f, a, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((f !== null)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, e, "null"));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = a[0], d = (a[3] || this.get_defaultUserContext()), c = (a[1] || this.get_defaultLogoutCompletedCallback() || this.get_defaultSucceededCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._authenticated = false;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (c) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    c(null, d, "Sys.Services.AuthenticationService.logout");
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! b)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.location.reload();
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    window.location.href = b;
  }
}), _onLogoutFailed: (function (c, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b[2] || this.get_defaultFailedCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(c, b[3], "Sys.Services.AuthenticationService.logout");
  }
}), _setAuthenticated: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._authenticated = a;
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._AuthenticationService.registerClass("Sys.Services._AuthenticationService", Sys.Net.WebServiceProxy);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services.AuthenticationService = new (Sys.Services._AuthenticationService)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._RoleService = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Services._RoleService.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._roles = [];
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._RoleService.DefaultWebServicePath = "";
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._RoleService.prototype = {_defaultLoadCompletedCallback: null, _rolesIndex: null, _timeout: 0, _path: "", get_defaultLoadCompletedCallback: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._defaultLoadCompletedCallback;
}), set_defaultLoadCompletedCallback: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._defaultLoadCompletedCallback = a;
}), get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this._path || "");
}), get_roles: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.clone(this._roles);
}), isUserInRole: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = this._get_rolesIndex()[a.trim().toLowerCase()];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (! (! b));
}), load: (function (a, b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Net.WebServiceProxy.invoke(this._get_path(), "GetRolesForCurrentUser", false, {}, Function.createDelegate(this, this._onLoadComplete), Function.createDelegate(this, this._onLoadFailed), [a, b, c], this.get_timeout());
}), _get_path: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_path();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (! a.length))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = Sys.Services._RoleService.DefaultWebServicePath;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! a) || (! a.length))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(Sys.Res.servicePathNotSet);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), _get_rolesIndex: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._rolesIndex)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = {};
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var a = 0; (a < this._roles.length); (a++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      b[this._roles[a].toLowerCase()] = true;
}
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._rolesIndex = b;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._rolesIndex;
}), _onLoadComplete: (function (a, c, f) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((a && (! (a instanceof Array)))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, f, "Array"));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._roles = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._rolesIndex = null;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = (c[0] || this.get_defaultLoadCompletedCallback() || this.get_defaultSucceededCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (b) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var e = (c[2] || this.get_defaultUserContext()), d = Array.clone(a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b(d, e, "Sys.Services.RoleService.load");
  }
}), _onLoadFailed: (function (d, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = (b[1] || this.get_defaultFailedCallback());
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var c = (b[2] || this.get_defaultUserContext());
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a(d, c, "Sys.Services.RoleService.load");
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services._RoleService.registerClass("Sys.Services._RoleService", Sys.Net.WebServiceProxy);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Services.RoleService = new (Sys.Services._RoleService)();
_$jscoverage['MicrosoftAjax.js'][5]++;
Type.registerNamespace("Sys.Serialization");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer = (function () {
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer.registerClass("Sys.Serialization.JavaScriptSerializer");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs = [];
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._charsToEscape = [];
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._dateRegEx = new RegExp("(^|[^\\\\])\\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\\"", "g");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._escapeChars = {};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._escapeRegEx = new RegExp("[\"\\\\\\x00-\\x1F]", "i");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal = new RegExp("[\"\\\\\\x00-\\x1F]", "g");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._jsonRegEx = new RegExp("[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]", "g");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._jsonStringRegEx = new RegExp("\"(\\\\.|[^\"\\\\])*\"", "g");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._serverTypeFieldName = "__type";
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._init = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c = ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", "\\b", "\\t", "\\n", "\\u000b", "\\f", "\\r", "\\u000e", "\\u000f", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001a", "\\u001b", "\\u001c", "\\u001d", "\\u001e", "\\u001f"];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._charsToEscape[0] = "\\";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs["\\"] = new RegExp("\\\\", "g");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._escapeChars["\\"] = "\\\\";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._charsToEscape[1] = "\"";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs["\""] = new RegExp("\"", "g");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._escapeChars["\""] = "\\\"";
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0; (a < 32); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var b = String.fromCharCode(a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._charsToEscape[(a + 2)] = b;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[b] = new RegExp(b, "g");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._escapeChars[b] = c[a];
}
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder = (function (b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.append(b.toString());
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder = (function (a, b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (isFinite(a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b.append(String(a));
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder = (function (a, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c.append("\"");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((Sys.Serialization.JavaScriptSerializer._charsToEscape.length === 0)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      Sys.Serialization.JavaScriptSerializer._init();
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((a.length < 128)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a = a.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal, (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys.Serialization.JavaScriptSerializer._escapeChars[a];
}));
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      for (var d = 0; (d < 34); (d++)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        var b = Sys.Serialization.JavaScriptSerializer._charsToEscape[d];
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if ((a.indexOf(b) !== -1)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if (((Sys.Browser.agent === Sys.Browser.Opera) || (Sys.Browser.agent === Sys.Browser.FireFox))) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            a = a.split(b).join(Sys.Serialization.JavaScriptSerializer._escapeChars[b]);
          }
          else {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            a = a.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[b], Sys.Serialization.JavaScriptSerializer._escapeChars[b]);
          }
        }
}
    }
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c.append(a);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  c.append("\"");
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer._serializeWithBuilder = (function (b, a, i, g) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  switch ((typeof b)) {
  case "object":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (b) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (Number.isInstanceOfType(b)) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(b, a);
      }
      else {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        if (Boolean.isInstanceOfType(b)) {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(b, a);
        }
        else {
          _$jscoverage['MicrosoftAjax.js'][5]++;
          if (String.isInstanceOfType(b)) {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(b, a);
          }
          else {
            _$jscoverage['MicrosoftAjax.js'][5]++;
            if (Array.isInstanceOfType(b)) {
              _$jscoverage['MicrosoftAjax.js'][5]++;
              a.append("[");
              _$jscoverage['MicrosoftAjax.js'][5]++;
              for (c = 0; (c < b.length); (++c)) {
                _$jscoverage['MicrosoftAjax.js'][5]++;
                if ((c > 0)) {
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  a.append(",");
                }
                _$jscoverage['MicrosoftAjax.js'][5]++;
                Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(b[c], a, false, g);
}
              _$jscoverage['MicrosoftAjax.js'][5]++;
              a.append("]");
            }
            else {
              _$jscoverage['MicrosoftAjax.js'][5]++;
              if (Date.isInstanceOfType(b)) {
                _$jscoverage['MicrosoftAjax.js'][5]++;
                a.append("\"\\/Date(");
                _$jscoverage['MicrosoftAjax.js'][5]++;
                a.append(b.getTime());
                _$jscoverage['MicrosoftAjax.js'][5]++;
                a.append(")\\/\"");
                _$jscoverage['MicrosoftAjax.js'][5]++;
                break;
              }
              _$jscoverage['MicrosoftAjax.js'][5]++;
              var d = [], f = 0;
              _$jscoverage['MicrosoftAjax.js'][5]++;
              for (var e in b) {
                _$jscoverage['MicrosoftAjax.js'][5]++;
                if (e.startsWith("$")) {
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  continue;
                }
                _$jscoverage['MicrosoftAjax.js'][5]++;
                if (((e === Sys.Serialization.JavaScriptSerializer._serverTypeFieldName) && (f !== 0))) {
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  d[(f++)] = d[0];
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  d[0] = e;
                }
                else {
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  d[(f++)] = e;
                }
}
              _$jscoverage['MicrosoftAjax.js'][5]++;
              if (i) {
                _$jscoverage['MicrosoftAjax.js'][5]++;
                d.sort();
              }
              _$jscoverage['MicrosoftAjax.js'][5]++;
              a.append("{");
              _$jscoverage['MicrosoftAjax.js'][5]++;
              var j = false;
              _$jscoverage['MicrosoftAjax.js'][5]++;
              for (c = 0; (c < f); (c++)) {
                _$jscoverage['MicrosoftAjax.js'][5]++;
                var h = b[d[c]];
                _$jscoverage['MicrosoftAjax.js'][5]++;
                if ((((typeof h) !== "undefined") && ((typeof h) !== "function"))) {
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  if (j) {
                    _$jscoverage['MicrosoftAjax.js'][5]++;
                    a.append(",");
                  }
                  else {
                    _$jscoverage['MicrosoftAjax.js'][5]++;
                    j = true;
                  }
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(d[c], a, i, g);
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  a.append(":");
                  _$jscoverage['MicrosoftAjax.js'][5]++;
                  Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(h, a, i, g);
                }
}
              _$jscoverage['MicrosoftAjax.js'][5]++;
              a.append("}");
            }
          }
        }
      }
    }
    else {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      a.append("null");
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "number":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(b, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "string":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(b, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  case "boolean":
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(b, a);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    break;
  default:
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a.append("null");
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer.serialize = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = new (Sys.StringBuilder)();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(b, a, false);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a.toString();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.Serialization.JavaScriptSerializer.deserialize = (function (data, secure) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((data.length === 0)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.argument("data", Sys.Res.cannotDeserializeEmptyString);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  try {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var exp = data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx, "$1new Date($2)");
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if ((secure && Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx, "")))) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      throw null;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return eval(("(" + exp + ")"));
  }
  catch (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    throw Error.argument("data", Sys.Res.cannotDeserializeInvalidJson);
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo = (function (c, b, a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.name = c;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.numberFormat = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this.dateTimeFormat = a;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo.prototype = {_getDateTimeFormats: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._dateTimeFormats)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = this.dateTimeFormat;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._dateTimeFormats = [a.MonthDayPattern, a.YearMonthPattern, a.ShortDatePattern, a.ShortTimePattern, a.LongDatePattern, a.LongTimePattern, a.FullDateTimePattern, a.RFC1123Pattern, a.SortableDateTimePattern, a.UniversalSortableDateTimePattern];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._dateTimeFormats;
}), _getMonthIndex: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._upperMonths)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._upperMonths = this._toUpperArray(this.dateTimeFormat.MonthNames);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.indexOf(this._upperMonths, this._toUpper(a));
}), _getAbbrMonthIndex: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._upperAbbrMonths)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._upperAbbrMonths = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.indexOf(this._upperAbbrMonths, this._toUpper(a));
}), _getDayIndex: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._upperDays)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._upperDays = this._toUpperArray(this.dateTimeFormat.DayNames);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.indexOf(this._upperDays, this._toUpper(a));
}), _getAbbrDayIndex: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._upperAbbrDays)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._upperAbbrDays = this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.indexOf(this._upperAbbrDays, this._toUpper(a));
}), _toUpperArray: (function (c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var b = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  for (var a = 0, d = c.length; (a < d); (a++)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b[a] = this._toUpper(c[a]);
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return b;
}), _toUpper: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a.split("\u00a0").join(" ").toUpperCase();
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo._parse = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Sys.Serialization.JavaScriptSerializer.deserialize(b);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return new (Sys.CultureInfo)(a.name, a.numberFormat, a.dateTimeFormat);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo.registerClass("Sys.CultureInfo");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo.InvariantCulture = Sys.CultureInfo._parse("{\"name\":\"\",\"numberFormat\":{\"CurrencyDecimalDigits\":2,\"CurrencyDecimalSeparator\":\".\",\"IsReadOnly\":true,\"CurrencyGroupSizes\":[3],\"NumberGroupSizes\":[3],\"PercentGroupSizes\":[3],\"CurrencyGroupSeparator\":\",\",\"CurrencySymbol\":\"\u00a4\",\"NaNSymbol\":\"NaN\",\"CurrencyNegativePattern\":0,\"NumberNegativePattern\":1,\"PercentPositivePattern\":0,\"PercentNegativePattern\":0,\"NegativeInfinitySymbol\":\"-Infinity\",\"NegativeSign\":\"-\",\"NumberDecimalDigits\":2,\"NumberDecimalSeparator\":\".\",\"NumberGroupSeparator\":\",\",\"CurrencyPositivePattern\":0,\"PositiveInfinitySymbol\":\"Infinity\",\"PositiveSign\":\"+\",\"PercentDecimalDigits\":2,\"PercentDecimalSeparator\":\".\",\"PercentGroupSeparator\":\",\",\"PercentSymbol\":\"%\",\"PerMilleSymbol\":\"\u2030\",\"NativeDigits\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\"DigitSubstitution\":1},\"dateTimeFormat\":{\"AMDesignator\":\"AM\",\"Calendar\":{\"MinSupportedDateTime\":\"@-62135568000000@\",\"MaxSupportedDateTime\":\"@253402300799999@\",\"AlgorithmType\":1,\"CalendarType\":1,\"Eras\":[1],\"TwoDigitYearMax\":2029,\"IsReadOnly\":true},\"DateSeparator\":\"/\",\"FirstDayOfWeek\":0,\"CalendarWeekRule\":0,\"FullDateTimePattern\":\"dddd, dd MMMM yyyy HH:mm:ss\",\"LongDatePattern\":\"dddd, dd MMMM yyyy\",\"LongTimePattern\":\"HH:mm:ss\",\"MonthDayPattern\":\"MMMM dd\",\"PMDesignator\":\"PM\",\"RFC1123Pattern\":\"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\",\"ShortDatePattern\":\"MM/dd/yyyy\",\"ShortTimePattern\":\"HH:mm\",\"SortableDateTimePattern\":\"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\"TimeSeparator\":\":\",\"UniversalSortableDateTimePattern\":\"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\",\"YearMonthPattern\":\"yyyy MMMM\",\"AbbreviatedDayNames\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"ShortestDayNames\":[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\"DayNames\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\"AbbreviatedMonthNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],\"IsReadOnly\":true,\"NativeCalendarName\":\"Gregorian Calendar\",\"AbbreviatedMonthGenitiveNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthGenitiveNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"]}}");
_$jscoverage['MicrosoftAjax.js'][5]++;
if (((typeof __cultureInfo) === "undefined")) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var __cultureInfo = "{\"name\":\"en-US\",\"numberFormat\":{\"CurrencyDecimalDigits\":2,\"CurrencyDecimalSeparator\":\".\",\"IsReadOnly\":false,\"CurrencyGroupSizes\":[3],\"NumberGroupSizes\":[3],\"PercentGroupSizes\":[3],\"CurrencyGroupSeparator\":\",\",\"CurrencySymbol\":\"$\",\"NaNSymbol\":\"NaN\",\"CurrencyNegativePattern\":0,\"NumberNegativePattern\":1,\"PercentPositivePattern\":0,\"PercentNegativePattern\":0,\"NegativeInfinitySymbol\":\"-Infinity\",\"NegativeSign\":\"-\",\"NumberDecimalDigits\":2,\"NumberDecimalSeparator\":\".\",\"NumberGroupSeparator\":\",\",\"CurrencyPositivePattern\":0,\"PositiveInfinitySymbol\":\"Infinity\",\"PositiveSign\":\"+\",\"PercentDecimalDigits\":2,\"PercentDecimalSeparator\":\".\",\"PercentGroupSeparator\":\",\",\"PercentSymbol\":\"%\",\"PerMilleSymbol\":\"\u2030\",\"NativeDigits\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\"DigitSubstitution\":1},\"dateTimeFormat\":{\"AMDesignator\":\"AM\",\"Calendar\":{\"MinSupportedDateTime\":\"@-62135568000000@\",\"MaxSupportedDateTime\":\"@253402300799999@\",\"AlgorithmType\":1,\"CalendarType\":1,\"Eras\":[1],\"TwoDigitYearMax\":2029,\"IsReadOnly\":false},\"DateSeparator\":\"/\",\"FirstDayOfWeek\":0,\"CalendarWeekRule\":0,\"FullDateTimePattern\":\"dddd, MMMM dd, yyyy h:mm:ss tt\",\"LongDatePattern\":\"dddd, MMMM dd, yyyy\",\"LongTimePattern\":\"h:mm:ss tt\",\"MonthDayPattern\":\"MMMM dd\",\"PMDesignator\":\"PM\",\"RFC1123Pattern\":\"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\",\"ShortDatePattern\":\"M/d/yyyy\",\"ShortTimePattern\":\"h:mm tt\",\"SortableDateTimePattern\":\"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\"TimeSeparator\":\":\",\"UniversalSortableDateTimePattern\":\"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\",\"YearMonthPattern\":\"MMMM, yyyy\",\"AbbreviatedDayNames\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"ShortestDayNames\":[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\"DayNames\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\"AbbreviatedMonthNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],\"IsReadOnly\":false,\"NativeCalendarName\":\"Gregorian Calendar\",\"AbbreviatedMonthGenitiveNames\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"],\"MonthGenitiveNames\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"]}}";
}
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse(__cultureInfo);
_$jscoverage['MicrosoftAjax.js'][5]++;
(delete __cultureInfo);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior = (function (b) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.Behavior.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._element = b;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b._behaviors;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    b._behaviors = [this];
  }
  else {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a[a.length] = this;
  }
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior.prototype = {_name: null, get_element: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._element;
}), get_id: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Sys.UI.Behavior.callBaseMethod(this, "get_id");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return a;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (((! this._element) || (! this._element.id))) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return "";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return (this._element.id + "$" + this.get_name());
}), get_name: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._name) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return this._name;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = Object.getTypeName(this), b = a.lastIndexOf(".");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((b != -1)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.substr((b + 1));
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this.get_isInitialized())) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._name = a;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return a;
}), set_name: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._name = a;
}), initialize: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.Behavior.callBaseMethod(this, "initialize");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_name();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._element[a] = this;
  }
}), dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.Behavior.callBaseMethod(this, "dispose");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._element) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    var a = this.get_name();
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      this._element[a] = null;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    Array.remove(this._element._behaviors, this);
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this._element);
  }
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior.registerClass("Sys.UI.Behavior", Sys.Component);
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior.getBehaviorByName = (function (b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = b[c];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return ((a && Sys.UI.Behavior.isInstanceOfType(a))? a: null);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior.getBehaviors = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! a._behaviors)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return [];
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Array.clone(a._behaviors);
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Behavior.getBehaviorsByType = (function (d, e) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = d._behaviors, c = [];
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    for (var b = 0, f = a.length; (b < f); (b++)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      if (e.isInstanceOfType(a[b])) {
        _$jscoverage['MicrosoftAjax.js'][5]++;
        c[c.length] = a[b];
      }
}
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return c;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.VisibilityMode = (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.notImplemented();
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.VisibilityMode.prototype = {hide: 0, collapse: 1};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode");
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Control = (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.Control.initializeBase(this);
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._element = a;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  a.control = this;
});
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Control.prototype = {_parent: null, _visibilityMode: Sys.UI.VisibilityMode.hide, get_element: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._element;
}), get_id: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._element)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return "";
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return this._element.id;
}), set_id: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  throw Error.invalidOperation(Sys.Res.cantSetId);
}), get_parent: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._parent) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return this._parent;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if ((! this._element)) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    return null;
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this._element.parentNode;
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.control) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return a.control;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.parentNode;
}
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return null;
}), set_parent: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  this._parent = a;
}), get_visibilityMode: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys.UI.DomElement.getVisibilityMode(this._element);
}), set_visibilityMode: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.setVisibilityMode(this._element, a);
}), get_visible: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return Sys.UI.DomElement.getVisible(this._element);
}), set_visible: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.setVisible(this._element, a);
}), addCssClass: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.addCssClass(this._element, a);
}), dispose: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.Control.callBaseMethod(this, "dispose");
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._element) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    this._element.control = undefined;
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this._element);
  }
  _$jscoverage['MicrosoftAjax.js'][5]++;
  if (this._parent) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    (delete this._parent);
  }
}), onBubbleEvent: (function () {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  return false;
}), raiseBubbleEvent: (function (b, c) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  var a = this.get_parent();
  _$jscoverage['MicrosoftAjax.js'][5]++;
  while (a) {
    _$jscoverage['MicrosoftAjax.js'][5]++;
    if (a.onBubbleEvent(b, c)) {
      _$jscoverage['MicrosoftAjax.js'][5]++;
      return;
    }
    _$jscoverage['MicrosoftAjax.js'][5]++;
    a = a.get_parent();
}
}), removeCssClass: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.removeCssClass(this._element, a);
}), toggleCssClass: (function (a) {
  _$jscoverage['MicrosoftAjax.js'][5]++;
  Sys.UI.DomElement.toggleCssClass(this._element, a);
})};
_$jscoverage['MicrosoftAjax.js'][5]++;
Sys.UI.Control.registerClass("Sys.UI.Control", Sys.Component);
_$jscoverage['MicrosoftAjax.js'][6]++;
Type.registerNamespace("Sys");
_$jscoverage['MicrosoftAjax.js'][6]++;
Sys.Res = {"argumentInteger": "Value must be an integer.", "scriptLoadMultipleCallbacks": "The script '{0}' contains multiple calls to Sys.Application.notifyScriptLoaded(). Only one is allowed.", "invokeCalledTwice": "Cannot call invoke more than once.", "webServiceFailed": "The server method '{0}' failed with the following error: {1}", "webServiceInvalidJsonWrapper": "The server method '{0}' returned invalid data. The 'd' property is missing from the JSON wrapper.", "argumentType": "Object cannot be converted to the required type.", "argumentNull": "Value cannot be null.", "controlCantSetId": "The id property can't be set on a control.", "formatBadFormatSpecifier": "Format specifier was invalid.", "webServiceFailedNoMsg": "The server method '{0}' failed.", "argumentDomElement": "Value must be a DOM element.", "invalidExecutorType": "Could not create a valid Sys.Net.WebRequestExecutor from: {0}.", "cannotCallBeforeResponse": "Cannot call {0} when responseAvailable is false.", "actualValue": "Actual value was {0}.", "enumInvalidValue": "'{0}' is not a valid value for enum {1}.", "scriptLoadFailed": "The script '{0}' could not be loaded.", "parameterCount": "Parameter count mismatch.", "cannotDeserializeEmptyString": "Cannot deserialize empty string.", "formatInvalidString": "Input string was not in a correct format.", "invalidTimeout": "Value must be greater than or equal to zero.", "cannotAbortBeforeStart": "Cannot abort when executor has not started.", "argument": "Value does not fall within the expected range.", "cannotDeserializeInvalidJson": "Cannot deserialize. The data does not correspond to valid JSON.", "invalidHttpVerb": "httpVerb cannot be set to an empty or null string.", "nullWebRequest": "Cannot call executeRequest with a null webRequest.", "eventHandlerInvalid": "Handler was not added through the Sys.UI.DomEvent.addHandler method.", "cannotSerializeNonFiniteNumbers": "Cannot serialize non finite numbers.", "argumentUndefined": "Value cannot be undefined.", "webServiceInvalidReturnType": "The server method '{0}' returned an invalid type. Expected type: {1}", "servicePathNotSet": "The path to the web service has not been set.", "argumentTypeWithTypes": "Object of type '{0}' cannot be converted to type '{1}'.", "cannotCallOnceStarted": "Cannot call {0} once started.", "badBaseUrl1": "Base URL does not contain ://.", "badBaseUrl2": "Base URL does not contain another /.", "badBaseUrl3": "Cannot find last / in base URL.", "setExecutorAfterActive": "Cannot set executor after it has become active.", "paramName": "Parameter name: {0}", "cannotCallOutsideHandler": "Cannot call {0} outside of a completed event handler.", "cannotSerializeObjectWithCycle": "Cannot serialize object with cyclic reference within child properties.", "format": "One of the identified items was in an invalid format.", "assertFailedCaller": "Assertion Failed: {0}\r\nat {1}", "argumentOutOfRange": "Specified argument was out of the range of valid values.", "webServiceTimedOut": "The server method '{0}' timed out.", "notImplemented": "The method or operation is not implemented.", "assertFailed": "Assertion Failed: {0}", "invalidOperation": "Operation is not valid due to the current state of the object.", "breakIntoDebugger": "{0}\r\n\r\nBreak into debugger?"};
_$jscoverage['MicrosoftAjax.js'][7]++;
if (((typeof Sys) !== "undefined")) {
  _$jscoverage['MicrosoftAjax.js'][7]++;
  Sys.Application.notifyScriptLoaded();
}
