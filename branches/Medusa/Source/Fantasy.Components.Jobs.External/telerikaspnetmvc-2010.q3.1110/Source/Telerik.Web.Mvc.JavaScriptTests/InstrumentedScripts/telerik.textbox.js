/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['telerik.textbox.js']) {
  _$jscoverage['telerik.textbox.js'] = [];
  _$jscoverage['telerik.textbox.js'][1] = 0;
  _$jscoverage['telerik.textbox.js'][3] = 0;
  _$jscoverage['telerik.textbox.js'][15] = 0;
  _$jscoverage['telerik.textbox.js'][16] = 0;
  _$jscoverage['telerik.textbox.js'][17] = 0;
  _$jscoverage['telerik.textbox.js'][19] = 0;
  _$jscoverage['telerik.textbox.js'][21] = 0;
  _$jscoverage['telerik.textbox.js'][23] = 0;
  _$jscoverage['telerik.textbox.js'][24] = 0;
  _$jscoverage['telerik.textbox.js'][28] = 0;
  _$jscoverage['telerik.textbox.js'][30] = 0;
  _$jscoverage['telerik.textbox.js'][32] = 0;
  _$jscoverage['telerik.textbox.js'][33] = 0;
  _$jscoverage['telerik.textbox.js'][41] = 0;
  _$jscoverage['telerik.textbox.js'][42] = 0;
  _$jscoverage['telerik.textbox.js'][44] = 0;
  _$jscoverage['telerik.textbox.js'][50] = 0;
  _$jscoverage['telerik.textbox.js'][55] = 0;
  _$jscoverage['telerik.textbox.js'][57] = 0;
  _$jscoverage['telerik.textbox.js'][64] = 0;
  _$jscoverage['telerik.textbox.js'][66] = 0;
  _$jscoverage['telerik.textbox.js'][67] = 0;
  _$jscoverage['telerik.textbox.js'][68] = 0;
  _$jscoverage['telerik.textbox.js'][69] = 0;
  _$jscoverage['telerik.textbox.js'][70] = 0;
  _$jscoverage['telerik.textbox.js'][71] = 0;
  _$jscoverage['telerik.textbox.js'][72] = 0;
  _$jscoverage['telerik.textbox.js'][74] = 0;
  _$jscoverage['telerik.textbox.js'][75] = 0;
  _$jscoverage['telerik.textbox.js'][77] = 0;
  _$jscoverage['telerik.textbox.js'][83] = 0;
  _$jscoverage['telerik.textbox.js'][85] = 0;
  _$jscoverage['telerik.textbox.js'][90] = 0;
  _$jscoverage['telerik.textbox.js'][92] = 0;
  _$jscoverage['telerik.textbox.js'][93] = 0;
  _$jscoverage['telerik.textbox.js'][95] = 0;
  _$jscoverage['telerik.textbox.js'][96] = 0;
  _$jscoverage['telerik.textbox.js'][98] = 0;
  _$jscoverage['telerik.textbox.js'][105] = 0;
  _$jscoverage['telerik.textbox.js'][106] = 0;
  _$jscoverage['telerik.textbox.js'][107] = 0;
  _$jscoverage['telerik.textbox.js'][110] = 0;
  _$jscoverage['telerik.textbox.js'][111] = 0;
  _$jscoverage['telerik.textbox.js'][112] = 0;
  _$jscoverage['telerik.textbox.js'][117] = 0;
  _$jscoverage['telerik.textbox.js'][119] = 0;
  _$jscoverage['telerik.textbox.js'][121] = 0;
  _$jscoverage['telerik.textbox.js'][130] = 0;
  _$jscoverage['telerik.textbox.js'][131] = 0;
  _$jscoverage['telerik.textbox.js'][135] = 0;
  _$jscoverage['telerik.textbox.js'][137] = 0;
  _$jscoverage['telerik.textbox.js'][138] = 0;
  _$jscoverage['telerik.textbox.js'][143] = 0;
  _$jscoverage['telerik.textbox.js'][145] = 0;
  _$jscoverage['telerik.textbox.js'][147] = 0;
  _$jscoverage['telerik.textbox.js'][149] = 0;
  _$jscoverage['telerik.textbox.js'][150] = 0;
  _$jscoverage['telerik.textbox.js'][155] = 0;
  _$jscoverage['telerik.textbox.js'][156] = 0;
  _$jscoverage['telerik.textbox.js'][158] = 0;
  _$jscoverage['telerik.textbox.js'][159] = 0;
  _$jscoverage['telerik.textbox.js'][161] = 0;
  _$jscoverage['telerik.textbox.js'][162] = 0;
  _$jscoverage['telerik.textbox.js'][165] = 0;
  _$jscoverage['telerik.textbox.js'][166] = 0;
  _$jscoverage['telerik.textbox.js'][167] = 0;
  _$jscoverage['telerik.textbox.js'][171] = 0;
  _$jscoverage['telerik.textbox.js'][172] = 0;
  _$jscoverage['telerik.textbox.js'][174] = 0;
  _$jscoverage['telerik.textbox.js'][175] = 0;
  _$jscoverage['telerik.textbox.js'][177] = 0;
  _$jscoverage['telerik.textbox.js'][181] = 0;
  _$jscoverage['telerik.textbox.js'][183] = 0;
  _$jscoverage['telerik.textbox.js'][184] = 0;
  _$jscoverage['telerik.textbox.js'][185] = 0;
  _$jscoverage['telerik.textbox.js'][186] = 0;
  _$jscoverage['telerik.textbox.js'][188] = 0;
  _$jscoverage['telerik.textbox.js'][189] = 0;
  _$jscoverage['telerik.textbox.js'][190] = 0;
  _$jscoverage['telerik.textbox.js'][191] = 0;
  _$jscoverage['telerik.textbox.js'][192] = 0;
  _$jscoverage['telerik.textbox.js'][195] = 0;
  _$jscoverage['telerik.textbox.js'][196] = 0;
  _$jscoverage['telerik.textbox.js'][197] = 0;
  _$jscoverage['telerik.textbox.js'][201] = 0;
  _$jscoverage['telerik.textbox.js'][205] = 0;
  _$jscoverage['telerik.textbox.js'][206] = 0;
  _$jscoverage['telerik.textbox.js'][210] = 0;
  _$jscoverage['telerik.textbox.js'][211] = 0;
  _$jscoverage['telerik.textbox.js'][212] = 0;
  _$jscoverage['telerik.textbox.js'][214] = 0;
  _$jscoverage['telerik.textbox.js'][216] = 0;
  _$jscoverage['telerik.textbox.js'][220] = 0;
  _$jscoverage['telerik.textbox.js'][221] = 0;
  _$jscoverage['telerik.textbox.js'][222] = 0;
  _$jscoverage['telerik.textbox.js'][224] = 0;
  _$jscoverage['telerik.textbox.js'][227] = 0;
  _$jscoverage['telerik.textbox.js'][228] = 0;
  _$jscoverage['telerik.textbox.js'][229] = 0;
  _$jscoverage['telerik.textbox.js'][232] = 0;
  _$jscoverage['telerik.textbox.js'][236] = 0;
  _$jscoverage['telerik.textbox.js'][239] = 0;
  _$jscoverage['telerik.textbox.js'][240] = 0;
  _$jscoverage['telerik.textbox.js'][242] = 0;
  _$jscoverage['telerik.textbox.js'][247] = 0;
  _$jscoverage['telerik.textbox.js'][248] = 0;
  _$jscoverage['telerik.textbox.js'][250] = 0;
  _$jscoverage['telerik.textbox.js'][253] = 0;
  _$jscoverage['telerik.textbox.js'][257] = 0;
  _$jscoverage['telerik.textbox.js'][258] = 0;
  _$jscoverage['telerik.textbox.js'][259] = 0;
  _$jscoverage['telerik.textbox.js'][263] = 0;
  _$jscoverage['telerik.textbox.js'][265] = 0;
  _$jscoverage['telerik.textbox.js'][268] = 0;
  _$jscoverage['telerik.textbox.js'][270] = 0;
  _$jscoverage['telerik.textbox.js'][271] = 0;
  _$jscoverage['telerik.textbox.js'][272] = 0;
  _$jscoverage['telerik.textbox.js'][275] = 0;
  _$jscoverage['telerik.textbox.js'][281] = 0;
  _$jscoverage['telerik.textbox.js'][283] = 0;
  _$jscoverage['telerik.textbox.js'][284] = 0;
  _$jscoverage['telerik.textbox.js'][285] = 0;
  _$jscoverage['telerik.textbox.js'][287] = 0;
  _$jscoverage['telerik.textbox.js'][289] = 0;
  _$jscoverage['telerik.textbox.js'][290] = 0;
  _$jscoverage['telerik.textbox.js'][291] = 0;
  _$jscoverage['telerik.textbox.js'][294] = 0;
  _$jscoverage['telerik.textbox.js'][298] = 0;
  _$jscoverage['telerik.textbox.js'][302] = 0;
  _$jscoverage['telerik.textbox.js'][303] = 0;
  _$jscoverage['telerik.textbox.js'][305] = 0;
  _$jscoverage['telerik.textbox.js'][307] = 0;
  _$jscoverage['telerik.textbox.js'][309] = 0;
  _$jscoverage['telerik.textbox.js'][311] = 0;
  _$jscoverage['telerik.textbox.js'][315] = 0;
  _$jscoverage['telerik.textbox.js'][316] = 0;
  _$jscoverage['telerik.textbox.js'][317] = 0;
  _$jscoverage['telerik.textbox.js'][318] = 0;
  _$jscoverage['telerik.textbox.js'][322] = 0;
  _$jscoverage['telerik.textbox.js'][335] = 0;
  _$jscoverage['telerik.textbox.js'][336] = 0;
  _$jscoverage['telerik.textbox.js'][337] = 0;
  _$jscoverage['telerik.textbox.js'][338] = 0;
  _$jscoverage['telerik.textbox.js'][343] = 0;
  _$jscoverage['telerik.textbox.js'][347] = 0;
  _$jscoverage['telerik.textbox.js'][351] = 0;
  _$jscoverage['telerik.textbox.js'][352] = 0;
  _$jscoverage['telerik.textbox.js'][353] = 0;
  _$jscoverage['telerik.textbox.js'][355] = 0;
  _$jscoverage['telerik.textbox.js'][356] = 0;
  _$jscoverage['telerik.textbox.js'][357] = 0;
  _$jscoverage['telerik.textbox.js'][359] = 0;
  _$jscoverage['telerik.textbox.js'][363] = 0;
  _$jscoverage['telerik.textbox.js'][364] = 0;
  _$jscoverage['telerik.textbox.js'][366] = 0;
  _$jscoverage['telerik.textbox.js'][368] = 0;
  _$jscoverage['telerik.textbox.js'][372] = 0;
  _$jscoverage['telerik.textbox.js'][373] = 0;
  _$jscoverage['telerik.textbox.js'][374] = 0;
  _$jscoverage['telerik.textbox.js'][378] = 0;
  _$jscoverage['telerik.textbox.js'][379] = 0;
  _$jscoverage['telerik.textbox.js'][382] = 0;
  _$jscoverage['telerik.textbox.js'][383] = 0;
  _$jscoverage['telerik.textbox.js'][384] = 0;
  _$jscoverage['telerik.textbox.js'][385] = 0;
  _$jscoverage['telerik.textbox.js'][386] = 0;
  _$jscoverage['telerik.textbox.js'][387] = 0;
  _$jscoverage['telerik.textbox.js'][388] = 0;
  _$jscoverage['telerik.textbox.js'][390] = 0;
  _$jscoverage['telerik.textbox.js'][392] = 0;
  _$jscoverage['telerik.textbox.js'][393] = 0;
  _$jscoverage['telerik.textbox.js'][394] = 0;
  _$jscoverage['telerik.textbox.js'][396] = 0;
  _$jscoverage['telerik.textbox.js'][397] = 0;
  _$jscoverage['telerik.textbox.js'][398] = 0;
  _$jscoverage['telerik.textbox.js'][403] = 0;
  _$jscoverage['telerik.textbox.js'][410] = 0;
  _$jscoverage['telerik.textbox.js'][427] = 0;
  _$jscoverage['telerik.textbox.js'][441] = 0;
  _$jscoverage['telerik.textbox.js'][442] = 0;
  _$jscoverage['telerik.textbox.js'][464] = 0;
  _$jscoverage['telerik.textbox.js'][466] = 0;
  _$jscoverage['telerik.textbox.js'][467] = 0;
  _$jscoverage['telerik.textbox.js'][470] = 0;
  _$jscoverage['telerik.textbox.js'][471] = 0;
  _$jscoverage['telerik.textbox.js'][476] = 0;
  _$jscoverage['telerik.textbox.js'][478] = 0;
  _$jscoverage['telerik.textbox.js'][479] = 0;
  _$jscoverage['telerik.textbox.js'][481] = 0;
  _$jscoverage['telerik.textbox.js'][483] = 0;
  _$jscoverage['telerik.textbox.js'][486] = 0;
  _$jscoverage['telerik.textbox.js'][489] = 0;
  _$jscoverage['telerik.textbox.js'][492] = 0;
  _$jscoverage['telerik.textbox.js'][493] = 0;
  _$jscoverage['telerik.textbox.js'][495] = 0;
  _$jscoverage['telerik.textbox.js'][496] = 0;
  _$jscoverage['telerik.textbox.js'][498] = 0;
  _$jscoverage['telerik.textbox.js'][500] = 0;
  _$jscoverage['telerik.textbox.js'][503] = 0;
  _$jscoverage['telerik.textbox.js'][504] = 0;
  _$jscoverage['telerik.textbox.js'][506] = 0;
  _$jscoverage['telerik.textbox.js'][509] = 0;
  _$jscoverage['telerik.textbox.js'][520] = 0;
  _$jscoverage['telerik.textbox.js'][522] = 0;
  _$jscoverage['telerik.textbox.js'][524] = 0;
  _$jscoverage['telerik.textbox.js'][525] = 0;
  _$jscoverage['telerik.textbox.js'][527] = 0;
  _$jscoverage['telerik.textbox.js'][529] = 0;
  _$jscoverage['telerik.textbox.js'][530] = 0;
  _$jscoverage['telerik.textbox.js'][531] = 0;
  _$jscoverage['telerik.textbox.js'][532] = 0;
  _$jscoverage['telerik.textbox.js'][533] = 0;
  _$jscoverage['telerik.textbox.js'][534] = 0;
  _$jscoverage['telerik.textbox.js'][537] = 0;
  _$jscoverage['telerik.textbox.js'][539] = 0;
  _$jscoverage['telerik.textbox.js'][541] = 0;
  _$jscoverage['telerik.textbox.js'][543] = 0;
  _$jscoverage['telerik.textbox.js'][545] = 0;
  _$jscoverage['telerik.textbox.js'][546] = 0;
  _$jscoverage['telerik.textbox.js'][547] = 0;
  _$jscoverage['telerik.textbox.js'][549] = 0;
  _$jscoverage['telerik.textbox.js'][552] = 0;
  _$jscoverage['telerik.textbox.js'][553] = 0;
  _$jscoverage['telerik.textbox.js'][554] = 0;
  _$jscoverage['telerik.textbox.js'][556] = 0;
  _$jscoverage['telerik.textbox.js'][559] = 0;
  _$jscoverage['telerik.textbox.js'][560] = 0;
  _$jscoverage['telerik.textbox.js'][561] = 0;
  _$jscoverage['telerik.textbox.js'][562] = 0;
  _$jscoverage['telerik.textbox.js'][563] = 0;
  _$jscoverage['telerik.textbox.js'][566] = 0;
  _$jscoverage['telerik.textbox.js'][569] = 0;
  _$jscoverage['telerik.textbox.js'][574] = 0;
  _$jscoverage['telerik.textbox.js'][575] = 0;
  _$jscoverage['telerik.textbox.js'][576] = 0;
  _$jscoverage['telerik.textbox.js'][577] = 0;
  _$jscoverage['telerik.textbox.js'][578] = 0;
  _$jscoverage['telerik.textbox.js'][579] = 0;
  _$jscoverage['telerik.textbox.js'][580] = 0;
  _$jscoverage['telerik.textbox.js'][582] = 0;
  _$jscoverage['telerik.textbox.js'][584] = 0;
  _$jscoverage['telerik.textbox.js'][585] = 0;
  _$jscoverage['telerik.textbox.js'][586] = 0;
  _$jscoverage['telerik.textbox.js'][587] = 0;
  _$jscoverage['telerik.textbox.js'][588] = 0;
  _$jscoverage['telerik.textbox.js'][589] = 0;
  _$jscoverage['telerik.textbox.js'][590] = 0;
  _$jscoverage['telerik.textbox.js'][593] = 0;
  _$jscoverage['telerik.textbox.js'][594] = 0;
  _$jscoverage['telerik.textbox.js'][595] = 0;
  _$jscoverage['telerik.textbox.js'][597] = 0;
  _$jscoverage['telerik.textbox.js'][598] = 0;
  _$jscoverage['telerik.textbox.js'][599] = 0;
  _$jscoverage['telerik.textbox.js'][601] = 0;
  _$jscoverage['telerik.textbox.js'][602] = 0;
  _$jscoverage['telerik.textbox.js'][604] = 0;
  _$jscoverage['telerik.textbox.js'][606] = 0;
  _$jscoverage['telerik.textbox.js'][607] = 0;
  _$jscoverage['telerik.textbox.js'][608] = 0;
  _$jscoverage['telerik.textbox.js'][609] = 0;
  _$jscoverage['telerik.textbox.js'][610] = 0;
  _$jscoverage['telerik.textbox.js'][612] = 0;
  _$jscoverage['telerik.textbox.js'][613] = 0;
  _$jscoverage['telerik.textbox.js'][614] = 0;
  _$jscoverage['telerik.textbox.js'][618] = 0;
  _$jscoverage['telerik.textbox.js'][619] = 0;
  _$jscoverage['telerik.textbox.js'][620] = 0;
  _$jscoverage['telerik.textbox.js'][622] = 0;
  _$jscoverage['telerik.textbox.js'][624] = 0;
  _$jscoverage['telerik.textbox.js'][625] = 0;
  _$jscoverage['telerik.textbox.js'][626] = 0;
  _$jscoverage['telerik.textbox.js'][628] = 0;
  _$jscoverage['telerik.textbox.js'][629] = 0;
  _$jscoverage['telerik.textbox.js'][631] = 0;
  _$jscoverage['telerik.textbox.js'][633] = 0;
  _$jscoverage['telerik.textbox.js'][638] = 0;
  _$jscoverage['telerik.textbox.js'][639] = 0;
  _$jscoverage['telerik.textbox.js'][640] = 0;
  _$jscoverage['telerik.textbox.js'][644] = 0;
  _$jscoverage['telerik.textbox.js'][646] = 0;
  _$jscoverage['telerik.textbox.js'][648] = 0;
  _$jscoverage['telerik.textbox.js'][651] = 0;
}
_$jscoverage['telerik.textbox.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"k\">var</span> $t <span class=\"k\">=</span> $<span class=\"k\">.</span>telerik<span class=\"k\">,</span>","        keycodes <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">8</span><span class=\"k\">,</span> <span class=\"c\">// backspace</span>","                    <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"c\">// tab</span>","                    <span class=\"s\">37</span><span class=\"k\">,</span> <span class=\"c\">// left arrow</span>","                    <span class=\"s\">38</span><span class=\"k\">,</span> <span class=\"c\">// up arrow</span>","                    <span class=\"s\">39</span><span class=\"k\">,</span> <span class=\"c\">// right arrow</span>","                    <span class=\"s\">40</span><span class=\"k\">,</span> <span class=\"c\">// down arrow</span>","                    <span class=\"s\">46</span><span class=\"k\">,</span> <span class=\"c\">// delete</span>","                    <span class=\"s\">35</span><span class=\"k\">,</span> <span class=\"c\">// end</span>","                    <span class=\"s\">36</span><span class=\"k\">,</span> <span class=\"c\">// home</span>","                    <span class=\"s\">44</span><span class=\"k\">];</span> <span class=\"c\">//\",\"</span>","","    $t<span class=\"k\">.</span>textbox <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">;</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","        <span class=\"k\">var</span> input <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'.t-input'</span><span class=\"k\">,</span> element<span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">=</span> <span class=\"k\">!</span>input<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">'[disabled]'</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> builder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","        builder<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'[ |'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>groupSeparator<span class=\"k\">)</span>","               <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'|'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>symbol<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>symbol<span class=\"k\">)</span>","               <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">']'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>replaceRegExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>builder<span class=\"k\">.</span>string<span class=\"k\">(),</span> <span class=\"s\">'g'</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> pasteMethod <span class=\"k\">=</span> $<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">?</span> <span class=\"s\">'paste'</span> <span class=\"k\">:</span> <span class=\"s\">'input'</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> inputValue <span class=\"k\">=</span> input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'value'</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> inputText <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;input /&gt;'</span><span class=\"k\">,</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","            id<span class=\"k\">:</span> input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'id'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"-text\"</span><span class=\"k\">,</span>","            name<span class=\"k\">:</span> input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'name'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"-text\"</span><span class=\"k\">,</span>","            value<span class=\"k\">:</span> <span class=\"k\">(</span>inputValue <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>text <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">),</span>","            <span class=\"s\">'class'</span><span class=\"k\">:</span> input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">),</span>","            style<span class=\"k\">:</span> input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'style'</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>inputAttributes<span class=\"k\">));</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>enabled<span class=\"k\">)</span>","            inputText<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'disabled'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","        inputText","            <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">{</span>","                blur<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>blur<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","                focus<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>focus<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","                keydown<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>keydown<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","                keypress<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>keypress<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","                change<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span> <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>bind<span class=\"k\">(</span>pasteMethod<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">[</span>pasteMethod<span class=\"k\">],</span> <span class=\"k\">this</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>input<span class=\"k\">);</span>","","        input<span class=\"k\">.</span>hide<span class=\"k\">().</span>appendTo<span class=\"k\">(</span>element<span class=\"k\">);</span>","","        <span class=\"k\">var</span> buttons <span class=\"k\">=</span>","                $<span class=\"k\">(</span><span class=\"s\">'.t-arrow-up, .t-arrow-down'</span><span class=\"k\">,</span> element<span class=\"k\">)</span>","                    <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">{</span>","                        click<span class=\"k\">:</span> $t<span class=\"k\">.</span>preventDefault<span class=\"k\">,</span>","                        dragstart<span class=\"k\">:</span> $t<span class=\"k\">.</span>preventDefault","                    <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">?</span> <span class=\"s\">'enable'</span> <span class=\"k\">:</span> <span class=\"s\">'disable'</span><span class=\"k\">]();</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>numFormat <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>numFormat <span class=\"k\">===</span> undefined <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>numFormat<span class=\"k\">;</span>","        <span class=\"k\">var</span> separator <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>step <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>step<span class=\"k\">,</span> separator<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">,</span> separator<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>minValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>minValue<span class=\"k\">,</span> separator<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>maxValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>maxValue<span class=\"k\">,</span> separator<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>decimals <span class=\"k\">=</span> <span class=\"k\">{</span> <span class=\"s\">'190'</span><span class=\"k\">:</span> <span class=\"s\">'.'</span><span class=\"k\">,</span> <span class=\"s\">'188'</span><span class=\"k\">:</span> <span class=\"s\">','</span><span class=\"k\">,</span> <span class=\"s\">'110'</span><span class=\"k\">:</span> separator <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>inputValue <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"c\">//format the input value if it exists.</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">(</span>inputValue<span class=\"k\">);</span>","","        $t<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">{</span>","            change<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onChange<span class=\"k\">,</span>","            load<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>onLoad","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>textbox<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        enable<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">),</span>","                $input <span class=\"k\">=</span> $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input'</span><span class=\"k\">),</span>","                buttons <span class=\"k\">=</span> $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-arrow-up, .t-arrow-down'</span><span class=\"k\">),</span>","                clearTimerProxy <span class=\"k\">=</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>clearTimer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            $element<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">);</span>","            $input<span class=\"k\">.</span>removeAttr<span class=\"k\">(</span><span class=\"s\">\"disabled\"</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">!=</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                $input<span class=\"k\">.</span>eq<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">).</span>val<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>text<span class=\"k\">);</span>","","            buttons<span class=\"k\">.</span>unbind<span class=\"k\">(</span><span class=\"s\">'mouseup'</span><span class=\"k\">).</span>unbind<span class=\"k\">(</span><span class=\"s\">'mouseout'</span><span class=\"k\">).</span>unbind<span class=\"k\">(</span><span class=\"s\">'dblclick'</span><span class=\"k\">)</span>","                   <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">{</span>","                       mouseup<span class=\"k\">:</span> clearTimerProxy<span class=\"k\">,</span>","                       mouseout<span class=\"k\">:</span> clearTimerProxy<span class=\"k\">,</span>","                       dblclick<span class=\"k\">:</span> clearTimerProxy","                   <span class=\"k\">}</span><span class=\"k\">);</span>","","            $<span class=\"k\">(</span>buttons<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>unbind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">).</span>mousedown<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>updateState<span class=\"k\">();</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>stepper<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","            $<span class=\"k\">(</span>buttons<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]).</span>unbind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">).</span>mousedown<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>updateState<span class=\"k\">();</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>stepper<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        disable<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","            $element","                <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-disabled'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'disabled'</span><span class=\"k\">,</span> <span class=\"s\">'disabled'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>end<span class=\"k\">()</span>","                <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-icon'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>unbind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'mousedown'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>preventDefault<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">!=</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input:first'</span><span class=\"k\">).</span>val<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        updateState<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&gt; .t-input:first'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">!=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>value<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">))</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>parseTrigger<span class=\"k\">(</span>value<span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        input<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> val <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">).</span>val<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">==</span> <span class=\"s\">'-'</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> parsedValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>val<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>parsedValue <span class=\"k\">||</span> parsedValue <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>round<span class=\"k\">(</span>parsedValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>digits<span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        paste<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> $input <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">);</span>","            <span class=\"k\">var</span> val <span class=\"k\">=</span> $input<span class=\"k\">.</span>val<span class=\"k\">();</span>","","            <span class=\"k\">var</span> selectedText <span class=\"k\">=</span> element<span class=\"k\">.</span>document<span class=\"k\">.</span>selection<span class=\"k\">.</span>createRange<span class=\"k\">().</span>text<span class=\"k\">;</span>","            <span class=\"k\">var</span> text <span class=\"k\">=</span> window<span class=\"k\">.</span>clipboardData<span class=\"k\">.</span>getData<span class=\"k\">(</span><span class=\"s\">\"Text\"</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>selectedText <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> val <span class=\"k\">=</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span>selectedText<span class=\"k\">,</span> text<span class=\"k\">);</span>","            <span class=\"k\">else</span> val <span class=\"k\">+=</span> text<span class=\"k\">;</span>","","","            <span class=\"k\">var</span> parsedValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>val<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>parsedValue <span class=\"k\">||</span> parsedValue <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>round<span class=\"k\">(</span>parsedValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>digits<span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        focus<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>focused <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>updateState<span class=\"k\">();</span>","","            <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>formatEdit<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">);</span>","            $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">).</span>val<span class=\"k\">(</span>value <span class=\"k\">||</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">));</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>safari<span class=\"k\">)</span> e<span class=\"k\">.</span>target<span class=\"k\">.</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        blur<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>focused <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> min <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>minValue<span class=\"k\">;</span>","            <span class=\"k\">var</span> max <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxValue<span class=\"k\">;</span>","            <span class=\"k\">var</span> $input <span class=\"k\">=</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">);</span>","            <span class=\"k\">var</span> inputValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>$input<span class=\"k\">.</span>val<span class=\"k\">(),</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>inputValue <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>min <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> inputValue <span class=\"k\">&lt;</span> min<span class=\"k\">)</span>","                    inputValue <span class=\"k\">=</span> min","                <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>max <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> inputValue <span class=\"k\">&gt;</span> max<span class=\"k\">)</span>","                    inputValue <span class=\"k\">=</span> max","            <span class=\"k\">}</span>","","            $input<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-error'</span><span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>parseTrigger<span class=\"k\">(</span>inputValue<span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">(</span>inputValue<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        keydown<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> key <span class=\"k\">=</span> e<span class=\"k\">.</span>keyCode<span class=\"k\">,</span>","                $input <span class=\"k\">=</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">),</span>","                separator <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">;</span>","","            setTimeout<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                $input<span class=\"k\">.</span>toggleClass<span class=\"k\">(</span><span class=\"s\">'t-state-error'</span><span class=\"k\">,</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>inRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>$input<span class=\"k\">.</span>val<span class=\"k\">(),</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>minValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxValue<span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","            <span class=\"c\">// Allow decimal</span>","            <span class=\"k\">var</span> decimalSeparator <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>decimals<span class=\"k\">[</span>key<span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>decimalSeparator<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>decimalSeparator <span class=\"k\">==</span> separator <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>digits <span class=\"k\">&gt;</span> <span class=\"s\">0</span>","                    <span class=\"k\">&amp;&amp;</span> $t<span class=\"k\">.</span>caretPos<span class=\"k\">(</span>$input<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">!=</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> $input<span class=\"k\">.</span>val<span class=\"k\">().</span>indexOf<span class=\"k\">(</span>separator<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">8</span> <span class=\"k\">||</span> key <span class=\"k\">==</span> <span class=\"s\">46</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">//backspace and delete</span>","                setTimeout<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>parseTrigger<span class=\"k\">(</span>$input<span class=\"k\">.</span>val<span class=\"k\">())</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">38</span> <span class=\"k\">||</span> key <span class=\"k\">==</span> <span class=\"s\">40</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>modifyInput<span class=\"k\">(</span>$input<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>step <span class=\"k\">*</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">38</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">));</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">222</span><span class=\"k\">)</span> e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        keypress<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $input <span class=\"k\">=</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">),</span>","                key <span class=\"k\">=</span> e<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> e<span class=\"k\">.</span>which<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>key <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">||</span> $<span class=\"k\">.</span>inArray<span class=\"k\">(</span>key<span class=\"k\">,</span> keycodes<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">||</span> e<span class=\"k\">.</span>ctrlKey <span class=\"k\">||</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> key <span class=\"k\">==</span> <span class=\"s\">45</span><span class=\"k\">))</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(((</span><span class=\"k\">this</span><span class=\"k\">.</span>minValue <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>minValue <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">&amp;&amp;</span> String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"-\"</span>","                    <span class=\"k\">&amp;&amp;</span> $t<span class=\"k\">.</span>caretPos<span class=\"k\">(</span>$input<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">==</span> <span class=\"s\">0</span>","                    <span class=\"k\">&amp;&amp;</span> $input<span class=\"k\">.</span>val<span class=\"k\">().</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"-\"</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span>","                <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>inRange<span class=\"k\">(</span>key<span class=\"k\">,</span> <span class=\"s\">48</span><span class=\"k\">,</span> <span class=\"s\">57</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                setTimeout<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>parseTrigger<span class=\"k\">(</span>$input<span class=\"k\">.</span>val<span class=\"k\">());</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        clearTimer<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            clearTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>timeout<span class=\"k\">);</span>","            clearInterval<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>timer<span class=\"k\">);</span>","            clearInterval<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>acceleration<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        stepper<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">,</span> stepMod<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>which <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> input <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'.t-input:first'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">),</span>","                    step <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>step<span class=\"k\">;</span>","","                <span class=\"k\">this</span><span class=\"k\">.</span>modifyInput<span class=\"k\">(</span>input<span class=\"k\">,</span> stepMod <span class=\"k\">*</span> step<span class=\"k\">);</span>","","                <span class=\"k\">this</span><span class=\"k\">.</span>timeout <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>timer <span class=\"k\">=</span> setInterval<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>modifyInput<span class=\"k\">(</span>input<span class=\"k\">,</span> stepMod <span class=\"k\">*</span> step<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span> <span class=\"s\">80</span><span class=\"k\">);</span>","","                    <span class=\"k\">this</span><span class=\"k\">.</span>acceleration <span class=\"k\">=</span> setInterval<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> step <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span> <span class=\"s\">200</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        value<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">;</span>","","            <span class=\"k\">var</span> parsedValue <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"k\">typeof</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">?</span> value <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>value<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>inRange<span class=\"k\">(</span>parsedValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>minValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxValue<span class=\"k\">))</span>","                parsedValue <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> isNull <span class=\"k\">=</span> parsedValue <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> text <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>enabled <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>text <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">=</span> parsedValue<span class=\"k\">;</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">)</span>","                <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input:last'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>isNull <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>formatEdit<span class=\"k\">(</span>parsedValue<span class=\"k\">)).</span>end<span class=\"k\">()</span>","                <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-input:first'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>isNull <span class=\"k\">?</span> text <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>format<span class=\"k\">(</span>parsedValue<span class=\"k\">));</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        modifyInput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$input<span class=\"k\">,</span> step<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">,</span>","                min <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>minValue<span class=\"k\">,</span>","                max <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxValue<span class=\"k\">;</span>","","            value <span class=\"k\">=</span> value <span class=\"k\">?</span> value <span class=\"k\">+</span> step <span class=\"k\">:</span> step<span class=\"k\">;</span>","            value <span class=\"k\">=</span> <span class=\"k\">(</span>min <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">&lt;</span> min<span class=\"k\">)</span> <span class=\"k\">?</span> min <span class=\"k\">:</span> <span class=\"k\">(</span>max <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">&gt;</span> max<span class=\"k\">)</span> <span class=\"k\">?</span> max <span class=\"k\">:</span> value<span class=\"k\">;</span>","","            <span class=\"k\">var</span> fixedValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>round<span class=\"k\">(</span>value<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>digits<span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span>fixedValue<span class=\"k\">);</span>","","            <span class=\"k\">var</span> formatedValue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>focused <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>formatEdit<span class=\"k\">(</span>fixedValue<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>format<span class=\"k\">(</span>fixedValue<span class=\"k\">);</span>","","            $input<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-error'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>formatedValue<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        formatEdit<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> separator <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">&amp;&amp;</span> separator <span class=\"k\">!=</span> <span class=\"s\">'.'</span><span class=\"k\">)</span>","                value <span class=\"k\">=</span> value<span class=\"k\">.</span>toString<span class=\"k\">().</span>replace<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">,</span> separator<span class=\"k\">);</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        format<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $t<span class=\"k\">.</span>textbox<span class=\"k\">.</span>formatNumber<span class=\"k\">(</span>value<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>numFormat<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>digits<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>groupSeparator<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>groupSize<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>positive<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>negative<span class=\"k\">,</span>","                                           <span class=\"k\">this</span><span class=\"k\">.</span>symbol<span class=\"k\">,</span>","                                           <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        trigger<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>newValue<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">!=</span> newValue<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>$t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'change'</span><span class=\"k\">,</span> <span class=\"k\">{</span> oldValue<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">,</span> newValue<span class=\"k\">:</span> newValue <span class=\"k\">}</span><span class=\"k\">))</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                $<span class=\"k\">(</span><span class=\"s\">'.t-input:last'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">).</span>val<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>formatEdit<span class=\"k\">(</span>newValue<span class=\"k\">));</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>val <span class=\"k\">=</span> newValue<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        parseTrigger<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>round<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>parse<span class=\"k\">(</span>value<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>separator<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>digits<span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        inRange<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> min<span class=\"k\">,</span> max<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> key <span class=\"k\">===</span> <span class=\"k\">null</span> <span class=\"k\">||</span> <span class=\"k\">((</span>min <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> key <span class=\"k\">&gt;=</span> min <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>max <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> key <span class=\"k\">&lt;=</span> max <span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        parse<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> separator<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">||</span> value <span class=\"k\">==</span> <span class=\"s\">\"0\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">==</span> <span class=\"k\">typeof</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">return</span> value<span class=\"k\">;</span>","","                value <span class=\"k\">=</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>replaceRegExp<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>separator <span class=\"k\">&amp;&amp;</span> separator <span class=\"k\">!=</span> <span class=\"s\">'.'</span><span class=\"k\">)</span>","                    value <span class=\"k\">=</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span>separator<span class=\"k\">,</span> <span class=\"s\">'.'</span><span class=\"k\">);</span>","","                <span class=\"k\">var</span> negativeFormatPattern <span class=\"k\">=</span> $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox<span class=\"k\">.</span>patterns<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">].</span>negative<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>negative<span class=\"k\">]</span>","                        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(\\(|\\))/g</span><span class=\"k\">,</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">$1'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">'n'</span><span class=\"k\">,</span> <span class=\"s\">'([</span><span class=\"t\">\\\\</span><span class=\"s\">d|</span><span class=\"t\">\\\\</span><span class=\"s\">.]*)'</span><span class=\"k\">),</span>","                    negativeFormatRegEx <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>negativeFormatPattern<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>negativeFormatRegEx<span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">))</span>","                    result <span class=\"k\">=</span> <span class=\"k\">-</span>parseFloat<span class=\"k\">(</span>negativeFormatRegEx<span class=\"k\">.</span>exec<span class=\"k\">(</span>value<span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]);</span>","                <span class=\"k\">else</span>","                    result <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> isNaN<span class=\"k\">(</span>result<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> result<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        round<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> digits<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">||</span> value <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> parseFloat<span class=\"k\">(</span>value<span class=\"k\">.</span>toFixed<span class=\"k\">(</span>digits <span class=\"k\">||</span> <span class=\"s\">2</span><span class=\"k\">));</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> type <span class=\"k\">=</span> options<span class=\"k\">.</span>type<span class=\"k\">,</span>","            defaults <span class=\"k\">=</span> $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox<span class=\"k\">.</span>defaults<span class=\"k\">[</span>type<span class=\"k\">];</span>","","        defaults<span class=\"k\">.</span>digits <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'decimaldigits'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>separator <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'decimalseparator'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>groupSeparator <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'groupseparator'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>groupSize <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'groupsize'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>positive <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'positive'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>negative <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'negative'</span><span class=\"k\">];</span>","        defaults<span class=\"k\">.</span>symbol <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'symbol'</span><span class=\"k\">];</span>","","        options <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> defaults<span class=\"k\">,</span> options<span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            options <span class=\"k\">=</span> $<span class=\"k\">.</span>meta <span class=\"k\">?</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> options<span class=\"k\">,</span> $element<span class=\"k\">.</span>data<span class=\"k\">())</span> <span class=\"k\">:</span> options<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$element<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tTextBox'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                $element<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tTextBox'</span><span class=\"k\">,</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>textbox<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">));</span>","                $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">'load'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> commonDefaults <span class=\"k\">=</span> <span class=\"k\">{</span>","        val<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        text<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        step<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","        inputAttributes<span class=\"k\">:</span> <span class=\"s\">''</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">{</span>","        numeric<span class=\"k\">:</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>commonDefaults<span class=\"k\">,</span> <span class=\"k\">{</span>","            minValue<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">100</span><span class=\"k\">,</span>","            maxValue<span class=\"k\">:</span> <span class=\"s\">100</span>","        <span class=\"k\">}</span><span class=\"k\">),</span>","        currency<span class=\"k\">:</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>commonDefaults<span class=\"k\">,</span> <span class=\"k\">{</span>","            minValue<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            maxValue<span class=\"k\">:</span> <span class=\"s\">1000</span>","        <span class=\"k\">}</span><span class=\"k\">),</span>","        percent<span class=\"k\">:</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>commonDefaults<span class=\"k\">,</span> <span class=\"k\">{</span>","            minValue<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            maxValue<span class=\"k\">:</span> <span class=\"s\">100</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// * - placeholder for the symbol</span>","    <span class=\"c\">// n - placeholder for the number</span>","    $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox<span class=\"k\">.</span>patterns <span class=\"k\">=</span> <span class=\"k\">{</span>","        numeric<span class=\"k\">:</span> <span class=\"k\">{</span>","            negative<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'(n)'</span><span class=\"k\">,</span> <span class=\"s\">'-n'</span><span class=\"k\">,</span> <span class=\"s\">'- n'</span><span class=\"k\">,</span> <span class=\"s\">'n-'</span><span class=\"k\">,</span> <span class=\"s\">'n -'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        currency<span class=\"k\">:</span> <span class=\"k\">{</span>","            positive<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'*n'</span><span class=\"k\">,</span> <span class=\"s\">'n*'</span><span class=\"k\">,</span> <span class=\"s\">'* n'</span><span class=\"k\">,</span> <span class=\"s\">'n *'</span><span class=\"k\">],</span>","            negative<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'(*n)'</span><span class=\"k\">,</span> <span class=\"s\">'-*n'</span><span class=\"k\">,</span> <span class=\"s\">'*-n'</span><span class=\"k\">,</span> <span class=\"s\">'*n-'</span><span class=\"k\">,</span> <span class=\"s\">'(n*)'</span><span class=\"k\">,</span> <span class=\"s\">'-n*'</span><span class=\"k\">,</span> <span class=\"s\">'n-*'</span><span class=\"k\">,</span> <span class=\"s\">'n*-'</span><span class=\"k\">,</span> <span class=\"s\">'-n *'</span><span class=\"k\">,</span> <span class=\"s\">'-* n'</span><span class=\"k\">,</span> <span class=\"s\">'n *-'</span><span class=\"k\">,</span> <span class=\"s\">'* n-'</span><span class=\"k\">,</span> <span class=\"s\">'* -n'</span><span class=\"k\">,</span> <span class=\"s\">'n- *'</span><span class=\"k\">,</span> <span class=\"s\">'(* n)'</span><span class=\"k\">,</span> <span class=\"s\">'(n *)'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        percent<span class=\"k\">:</span> <span class=\"k\">{</span>","            positive<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'n *'</span><span class=\"k\">,</span> <span class=\"s\">'n*'</span><span class=\"k\">,</span> <span class=\"s\">'*n'</span><span class=\"k\">],</span>","            negative<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'-n *'</span><span class=\"k\">,</span> <span class=\"s\">'-n*'</span><span class=\"k\">,</span> <span class=\"s\">'-*n'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericnegative<span class=\"k\">)</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">,</span> <span class=\"k\">{</span> <span class=\"c\">//default en-US settings</span>","            currencydecimaldigits<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span>","            currencydecimalseparator<span class=\"k\">:</span> <span class=\"s\">'.'</span><span class=\"k\">,</span>","            currencygroupseparator<span class=\"k\">:</span> <span class=\"s\">','</span><span class=\"k\">,</span>","            currencygroupsize<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span>","            currencynegative<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            currencypositive<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            currencysymbol<span class=\"k\">:</span> <span class=\"s\">'$'</span><span class=\"k\">,</span>","            numericdecimaldigits<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span>","            numericdecimalseparator<span class=\"k\">:</span> <span class=\"s\">'.'</span><span class=\"k\">,</span>","            numericgroupseparator<span class=\"k\">:</span> <span class=\"s\">','</span><span class=\"k\">,</span>","            numericgroupsize<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span>","            numericnegative<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","            percentdecimaldigits<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span>","            percentdecimalseparator<span class=\"k\">:</span> <span class=\"s\">'.'</span><span class=\"k\">,</span>","            percentgroupseparator<span class=\"k\">:</span> <span class=\"s\">','</span><span class=\"k\">,</span>","            percentgroupsize<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span>","            percentnegative<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            percentpositive<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            percentsymbol<span class=\"k\">:</span> <span class=\"s\">'%'</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> customFormatRegEx <span class=\"k\">=</span> <span class=\"s\">/[0#?]/</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> reverse<span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">).</span>reverse<span class=\"k\">().</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> injectInFormat<span class=\"k\">(</span>val<span class=\"k\">,</span> format<span class=\"k\">,</span> appendExtras<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            fLength <span class=\"k\">=</span> format<span class=\"k\">.</span>length<span class=\"k\">,</span>","            vLength <span class=\"k\">=</span> val<span class=\"k\">.</span>length<span class=\"k\">,</span>","            builder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span>i <span class=\"k\">&lt;</span> fLength <span class=\"k\">&amp;&amp;</span> j <span class=\"k\">&lt;</span> vLength <span class=\"k\">&amp;&amp;</span> format<span class=\"k\">.</span>substring<span class=\"k\">(</span>i<span class=\"k\">).</span>search<span class=\"k\">(</span>customFormatRegEx<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>i<span class=\"k\">).</span>match<span class=\"k\">(</span>customFormatRegEx<span class=\"k\">))</span>","                builder<span class=\"k\">.</span>cat<span class=\"k\">(</span>val<span class=\"k\">.</span>charAt<span class=\"k\">(</span>j<span class=\"k\">++));</span>","            <span class=\"k\">else</span>","                builder<span class=\"k\">.</span>cat<span class=\"k\">(</span>format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>i<span class=\"k\">));</span>","","            i<span class=\"k\">++;</span>","        <span class=\"k\">}</span>","","        builder<span class=\"k\">.</span>catIf<span class=\"k\">(</span>val<span class=\"k\">.</span>substring<span class=\"k\">(</span>j<span class=\"k\">),</span> j <span class=\"k\">&lt;</span> vLength <span class=\"k\">&amp;&amp;</span> appendExtras<span class=\"k\">)</span>","               <span class=\"k\">.</span>catIf<span class=\"k\">(</span>format<span class=\"k\">.</span>substring<span class=\"k\">(</span>i<span class=\"k\">),</span> i <span class=\"k\">&lt;</span> fLength<span class=\"k\">);</span>","","        <span class=\"k\">var</span> result <span class=\"k\">=</span> reverse<span class=\"k\">(</span>builder<span class=\"k\">.</span>string<span class=\"k\">()),</span>","            zeroIndex<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span>","            zeroIndex <span class=\"k\">=</span> result<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">'0'</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>zeroIndex <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> first <span class=\"k\">=</span> result<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> zeroIndex<span class=\"k\">),</span>","                second <span class=\"k\">=</span> result<span class=\"k\">.</span>slice<span class=\"k\">(</span>zeroIndex<span class=\"k\">,</span> result<span class=\"k\">.</span>length<span class=\"k\">);</span>","            result <span class=\"k\">=</span> first<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/#/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span> second<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/#/g</span><span class=\"k\">,</span> <span class=\"s\">'0'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            result <span class=\"k\">=</span> result<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/#/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>result<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            result <span class=\"k\">=</span> result<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/,/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> appendExtras <span class=\"k\">?</span> result <span class=\"k\">:</span> reverse<span class=\"k\">(</span>result<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>textbox<span class=\"k\">.</span>formatNumber <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>number<span class=\"k\">,</span>","                                        format<span class=\"k\">,</span>","                                        digits<span class=\"k\">,</span>","                                        separator<span class=\"k\">,</span>","                                        groupSeparator<span class=\"k\">,</span>","                                        groupSize<span class=\"k\">,</span>","                                        positive<span class=\"k\">,</span>","                                        negative<span class=\"k\">,</span>","                                        symbol<span class=\"k\">,</span>","                                        isTextBox<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>format<span class=\"k\">)</span> <span class=\"k\">return</span> number<span class=\"k\">;</span>","","        <span class=\"k\">var</span> type<span class=\"k\">,</span> customFormat<span class=\"k\">,</span> negativeFormat<span class=\"k\">,</span> zeroFormat<span class=\"k\">,</span> sign <span class=\"k\">=</span> number <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        format <span class=\"k\">=</span> format<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">':'</span><span class=\"k\">);</span>","        format <span class=\"k\">=</span> format<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> format<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"s\">'}'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">:</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","        <span class=\"k\">var</span> isCustomFormat <span class=\"k\">=</span> format<span class=\"k\">.</span>search<span class=\"k\">(</span>customFormatRegEx<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isCustomFormat<span class=\"k\">)</span> <span class=\"k\">{</span>","            format <span class=\"k\">=</span> format<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","            customFormat <span class=\"k\">=</span> format<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            negativeFormat <span class=\"k\">=</span> format<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","            zeroFormat <span class=\"k\">=</span> format<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","            format <span class=\"k\">=</span> <span class=\"k\">(</span>sign <span class=\"k\">&amp;&amp;</span> negativeFormat <span class=\"k\">?</span> negativeFormat <span class=\"k\">:</span> customFormat<span class=\"k\">).</span>indexOf<span class=\"k\">(</span><span class=\"s\">'%'</span><span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">'p'</span> <span class=\"k\">:</span> <span class=\"s\">'n'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">switch</span> <span class=\"k\">(</span>format<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">'d'</span><span class=\"k\">:</span>","                <span class=\"k\">return</span> Math<span class=\"k\">.</span>round<span class=\"k\">(</span>number<span class=\"k\">).</span>toString<span class=\"k\">();</span>","            <span class=\"k\">case</span> <span class=\"s\">'c'</span><span class=\"k\">:</span>","                type <span class=\"k\">=</span> <span class=\"s\">'currency'</span><span class=\"k\">;</span> <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'n'</span><span class=\"k\">:</span>","                type <span class=\"k\">=</span> <span class=\"s\">'numeric'</span><span class=\"k\">;</span> <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'p'</span><span class=\"k\">:</span>","                type <span class=\"k\">=</span> <span class=\"s\">'percent'</span><span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>isTextBox<span class=\"k\">)</span> number <span class=\"k\">=</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>number<span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">100</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">default</span><span class=\"k\">:</span>","                <span class=\"k\">return</span> number<span class=\"k\">.</span>toString<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> zeroPad <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> count<span class=\"k\">,</span> left<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> l <span class=\"k\">=</span> str<span class=\"k\">.</span>length<span class=\"k\">;</span> l <span class=\"k\">&lt;</span> count<span class=\"k\">;</span> l<span class=\"k\">++)</span>","                str <span class=\"k\">=</span> left <span class=\"k\">?</span> <span class=\"k\">(</span><span class=\"s\">'0'</span> <span class=\"k\">+</span> str<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>str <span class=\"k\">+</span> <span class=\"s\">'0'</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> str<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> addGroupSeparator <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>number<span class=\"k\">,</span> groupSeperator<span class=\"k\">,</span> groupSize<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>groupSeparator<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> regExp <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'(-?[0-9]+)([0-9]{'</span> <span class=\"k\">+</span> groupSize <span class=\"k\">+</span> <span class=\"s\">'})'</span><span class=\"k\">);</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span>regExp<span class=\"k\">.</span>test<span class=\"k\">(</span>number<span class=\"k\">))</span> <span class=\"k\">{</span>","                    number <span class=\"k\">=</span> number<span class=\"k\">.</span>replace<span class=\"k\">(</span>regExp<span class=\"k\">,</span> <span class=\"s\">'$1'</span> <span class=\"k\">+</span> groupSeperator <span class=\"k\">+</span> <span class=\"s\">'$2'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> number<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> cultureInfo <span class=\"k\">=</span> cultureInfo <span class=\"k\">||</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">,</span>","            patterns <span class=\"k\">=</span> $<span class=\"k\">.</span>fn<span class=\"k\">.</span>tTextBox<span class=\"k\">.</span>patterns<span class=\"k\">,</span>","            undefined<span class=\"k\">;</span>","","        <span class=\"c\">//define Number Formating info.</span>","        digits <span class=\"k\">=</span> digits <span class=\"k\">||</span> digits <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span> digits <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'decimaldigits'</span><span class=\"k\">];</span>","        separator <span class=\"k\">=</span> separator <span class=\"k\">!==</span> undefined <span class=\"k\">?</span> separator <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'decimalseparator'</span><span class=\"k\">];</span>","        groupSeparator <span class=\"k\">=</span> groupSeparator <span class=\"k\">!==</span> undefined <span class=\"k\">?</span> groupSeparator <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'groupseparator'</span><span class=\"k\">];</span>","        groupSize <span class=\"k\">=</span> groupSize <span class=\"k\">||</span> groupSize <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> groupSize <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'groupsize'</span><span class=\"k\">];</span>","        negative <span class=\"k\">=</span> negative <span class=\"k\">||</span> negative <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span> negative <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'negative'</span><span class=\"k\">];</span>","        positive <span class=\"k\">=</span> positive <span class=\"k\">||</span> positive <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span> positive <span class=\"k\">:</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'positive'</span><span class=\"k\">];</span>","        symbol <span class=\"k\">=</span> symbol <span class=\"k\">||</span> cultureInfo<span class=\"k\">[</span>type <span class=\"k\">+</span> <span class=\"s\">'symbol'</span><span class=\"k\">];</span>","","        <span class=\"k\">var</span> exponent<span class=\"k\">,</span> left<span class=\"k\">,</span> right<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>isCustomFormat<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> splits <span class=\"k\">=</span> <span class=\"k\">(</span>sign <span class=\"k\">&amp;&amp;</span> negativeFormat <span class=\"k\">?</span> negativeFormat <span class=\"k\">:</span> customFormat<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> leftF <span class=\"k\">=</span> splits<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">var</span> rightF <span class=\"k\">=</span> splits<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> splits<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> lastIndexZero <span class=\"k\">=</span> $t<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span>rightF<span class=\"k\">,</span> <span class=\"s\">'0'</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> lastIndexSharp <span class=\"k\">=</span> $t<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span>rightF<span class=\"k\">,</span> <span class=\"s\">'#'</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> digits <span class=\"k\">=</span> <span class=\"k\">(</span>lastIndexSharp <span class=\"k\">&gt;</span> lastIndexZero <span class=\"k\">?</span> lastIndexSharp <span class=\"k\">:</span> lastIndexZero<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> factor <span class=\"k\">=</span> Math<span class=\"k\">.</span>pow<span class=\"k\">(</span><span class=\"s\">10</span><span class=\"k\">,</span> digits<span class=\"k\">);</span>","        <span class=\"k\">var</span> rounded <span class=\"k\">=</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>round<span class=\"k\">(</span>number <span class=\"k\">*</span> factor<span class=\"k\">)</span> <span class=\"k\">/</span> factor<span class=\"k\">);</span>","        number <span class=\"k\">=</span> isFinite<span class=\"k\">(</span>rounded<span class=\"k\">)</span> <span class=\"k\">?</span> rounded <span class=\"k\">:</span> number<span class=\"k\">;</span>","","        <span class=\"k\">var</span> split <span class=\"k\">=</span> number<span class=\"k\">.</span>toString<span class=\"k\">().</span>split<span class=\"k\">(</span><span class=\"s\">/e/i</span><span class=\"k\">);</span>","        exponent <span class=\"k\">=</span> split<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>split<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        split <span class=\"k\">=</span> split<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","","        left <span class=\"k\">=</span> split<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        left <span class=\"k\">=</span> sign <span class=\"k\">?</span> left<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">'-'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">:</span> left<span class=\"k\">;</span>","","        right <span class=\"k\">=</span> split<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> split<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>exponent<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>sign<span class=\"k\">)</span> <span class=\"k\">{</span>","                right <span class=\"k\">=</span> zeroPad<span class=\"k\">(</span>right<span class=\"k\">,</span> exponent<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                left <span class=\"k\">+=</span> right<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> exponent<span class=\"k\">);</span>","                right <span class=\"k\">=</span> right<span class=\"k\">.</span>substr<span class=\"k\">(</span>exponent<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                left <span class=\"k\">=</span> zeroPad<span class=\"k\">(</span>left<span class=\"k\">,</span> exponent <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                right <span class=\"k\">=</span> left<span class=\"k\">.</span>slice<span class=\"k\">(</span>exponent<span class=\"k\">,</span> left<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">+</span> right<span class=\"k\">;</span>","                left <span class=\"k\">=</span> left<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> exponent<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> rightLength <span class=\"k\">=</span> right<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>digits <span class=\"k\">&lt;</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">(</span>isCustomFormat <span class=\"k\">&amp;&amp;</span> lastIndexZero <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> rightLength <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">))</span>","            right <span class=\"k\">=</span> <span class=\"s\">''</span>","        <span class=\"k\">else</span>","            right <span class=\"k\">=</span> rightLength <span class=\"k\">&gt;</span> digits <span class=\"k\">?</span> right<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> digits<span class=\"k\">)</span> <span class=\"k\">:</span> zeroPad<span class=\"k\">(</span>right<span class=\"k\">,</span> digits<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> result<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>isCustomFormat<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>left <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> left <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","            left <span class=\"k\">=</span> injectInFormat<span class=\"k\">(</span>reverse<span class=\"k\">(</span>left<span class=\"k\">),</span> reverse<span class=\"k\">(</span>leftF<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            left <span class=\"k\">=</span> leftF<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> addGroupSeparator<span class=\"k\">(</span>left<span class=\"k\">,</span> groupSeparator<span class=\"k\">,</span> groupSize<span class=\"k\">)</span> <span class=\"k\">:</span> left<span class=\"k\">;</span>","","            right <span class=\"k\">=</span> right <span class=\"k\">&amp;&amp;</span> rightF <span class=\"k\">?</span> injectInFormat<span class=\"k\">(</span>right<span class=\"k\">,</span> rightF<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","            result <span class=\"k\">=</span> number <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> zeroFormat <span class=\"k\">?</span> zeroFormat","                <span class=\"k\">:</span> <span class=\"k\">(</span>sign <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>negativeFormat <span class=\"k\">?</span> <span class=\"s\">'-'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span> left <span class=\"k\">+</span> <span class=\"k\">(</span>right<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> separator <span class=\"k\">+</span> right <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","            left <span class=\"k\">=</span> addGroupSeparator<span class=\"k\">(</span>left<span class=\"k\">,</span> groupSeparator<span class=\"k\">,</span> groupSize<span class=\"k\">)</span>","            patterns <span class=\"k\">=</span> patterns<span class=\"k\">[</span>type<span class=\"k\">];</span>","            <span class=\"k\">var</span> pattern <span class=\"k\">=</span> sign <span class=\"k\">?</span> patterns<span class=\"k\">[</span><span class=\"s\">'negative'</span><span class=\"k\">][</span>negative<span class=\"k\">]</span>","                        <span class=\"k\">:</span> symbol <span class=\"k\">?</span> patterns<span class=\"k\">[</span><span class=\"s\">'positive'</span><span class=\"k\">][</span>positive<span class=\"k\">]</span>","                        <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> numberString <span class=\"k\">=</span> left <span class=\"k\">+</span> <span class=\"k\">(</span>right<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> separator <span class=\"k\">+</span> right <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","            result <span class=\"k\">=</span> pattern <span class=\"k\">?</span> pattern<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">'n'</span><span class=\"k\">,</span> numberString<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">,</span> symbol<span class=\"k\">)</span> <span class=\"k\">:</span> numberString<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>formatters<span class=\"k\">,</span> <span class=\"k\">{</span>","        number<span class=\"k\">:</span> $t<span class=\"k\">.</span>textbox<span class=\"k\">.</span>formatNumber","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">)(</span>jQuery<span class=\"k\">);</span>"];
_$jscoverage['telerik.textbox.js'][1]++;
(function ($) {
  _$jscoverage['telerik.textbox.js'][3]++;
  var $t = $.telerik, keycodes = [8, 9, 37, 38, 39, 40, 46, 35, 36, 44];
  _$jscoverage['telerik.textbox.js'][15]++;
  $t.textbox = (function (element, options) {
  _$jscoverage['telerik.textbox.js'][16]++;
  this.element = element;
  _$jscoverage['telerik.textbox.js'][17]++;
  $.extend(this, options);
  _$jscoverage['telerik.textbox.js'][19]++;
  var input = $(".t-input", element);
  _$jscoverage['telerik.textbox.js'][21]++;
  this.enabled = (! input.is("[disabled]"));
  _$jscoverage['telerik.textbox.js'][23]++;
  var builder = new ($t.stringBuilder)();
  _$jscoverage['telerik.textbox.js'][24]++;
  builder.cat("[ |").cat(this.groupSeparator).catIf(("|" + this.symbol), this.symbol).cat("]");
  _$jscoverage['telerik.textbox.js'][28]++;
  this.replaceRegExp = new RegExp(builder.string(), "g");
  _$jscoverage['telerik.textbox.js'][30]++;
  var pasteMethod = ($.browser.msie? "paste": "input");
  _$jscoverage['telerik.textbox.js'][32]++;
  var inputValue = input.attr("value");
  _$jscoverage['telerik.textbox.js'][33]++;
  var inputText = $("<input />", $.extend({id: (input.attr("id") + "-text"), name: (input.attr("name") + "-text"), value: ((inputValue || this.enabled)? this.text: ""), "class": input.attr("class"), style: input.attr("style")}, this.inputAttributes));
  _$jscoverage['telerik.textbox.js'][41]++;
  if (this.enabled) {
    _$jscoverage['telerik.textbox.js'][42]++;
    inputText.attr("disabled", true);
  }
  _$jscoverage['telerik.textbox.js'][44]++;
  inputText.bind({blur: $.proxy(this.blur, this), focus: $.proxy(this.focus, this), keydown: $.proxy(this.keydown, this), keypress: $.proxy(this.keypress, this), change: (function (e) {
  _$jscoverage['telerik.textbox.js'][50]++;
  e.stopPropagation();
})}).bind(pasteMethod, $.proxy(this[pasteMethod], this)).insertBefore(input);
  _$jscoverage['telerik.textbox.js'][55]++;
  input.hide().appendTo(element);
  _$jscoverage['telerik.textbox.js'][57]++;
  var buttons = $(".t-arrow-up, .t-arrow-down", element).bind({click: $t.preventDefault, dragstart: $t.preventDefault});
  _$jscoverage['telerik.textbox.js'][64]++;
  (this[(this.enabled? "enable": "disable")])();
  _$jscoverage['telerik.textbox.js'][66]++;
  this.numFormat = ((this.numFormat === undefined)? this.type.charAt(0): this.numFormat);
  _$jscoverage['telerik.textbox.js'][67]++;
  var separator = this.separator;
  _$jscoverage['telerik.textbox.js'][68]++;
  this.step = this.parse(this.step, separator);
  _$jscoverage['telerik.textbox.js'][69]++;
  this.val = this.parse(this.val, separator);
  _$jscoverage['telerik.textbox.js'][70]++;
  this.minValue = this.parse(this.minValue, separator);
  _$jscoverage['telerik.textbox.js'][71]++;
  this.maxValue = this.parse(this.maxValue, separator);
  _$jscoverage['telerik.textbox.js'][72]++;
  this.decimals = {"190": ".", "188": ",", "110": separator};
  _$jscoverage['telerik.textbox.js'][74]++;
  if ((inputValue != "")) {
    _$jscoverage['telerik.textbox.js'][75]++;
    this.value(inputValue);
  }
  _$jscoverage['telerik.textbox.js'][77]++;
  $t.bind(this, {change: this.onChange, load: this.onLoad});
});
  _$jscoverage['telerik.textbox.js'][83]++;
  $t.textbox.prototype = {enable: (function () {
  _$jscoverage['telerik.textbox.js'][85]++;
  var $element = $(this.element), $input = $element.find(".t-input"), buttons = $element.find(".t-arrow-up, .t-arrow-down"), clearTimerProxy = $.proxy(this.clearTimer, this);
  _$jscoverage['telerik.textbox.js'][90]++;
  this.enabled = true;
  _$jscoverage['telerik.textbox.js'][92]++;
  $element.removeClass("t-state-disabled");
  _$jscoverage['telerik.textbox.js'][93]++;
  $input.removeAttr("disabled");
  _$jscoverage['telerik.textbox.js'][95]++;
  if (((! this.val) && (this.val != 0))) {
    _$jscoverage['telerik.textbox.js'][96]++;
    $input.eq(0).val(this.text);
  }
  _$jscoverage['telerik.textbox.js'][98]++;
  buttons.unbind("mouseup").unbind("mouseout").unbind("dblclick").bind({mouseup: clearTimerProxy, mouseout: clearTimerProxy, dblclick: clearTimerProxy});
  _$jscoverage['telerik.textbox.js'][105]++;
  $(buttons[0]).unbind("mousedown").mousedown($.proxy((function (e) {
  _$jscoverage['telerik.textbox.js'][106]++;
  this.updateState();
  _$jscoverage['telerik.textbox.js'][107]++;
  this.stepper(e, 1);
}), this));
  _$jscoverage['telerik.textbox.js'][110]++;
  $(buttons[1]).unbind("mousedown").mousedown($.proxy((function (e) {
  _$jscoverage['telerik.textbox.js'][111]++;
  this.updateState();
  _$jscoverage['telerik.textbox.js'][112]++;
  this.stepper(e, -1);
}), this));
}), disable: (function () {
  _$jscoverage['telerik.textbox.js'][117]++;
  var $element = $(this.element);
  _$jscoverage['telerik.textbox.js'][119]++;
  this.enabled = false;
  _$jscoverage['telerik.textbox.js'][121]++;
  $element.addClass("t-state-disabled").find(".t-input").attr("disabled", "disabled").end().find(".t-icon").unbind("mousedown").bind("mousedown", $t.preventDefault);
  _$jscoverage['telerik.textbox.js'][130]++;
  if (((! this.val) && (this.val != 0))) {
    _$jscoverage['telerik.textbox.js'][131]++;
    $element.find(".t-input:first").val("");
  }
}), updateState: (function () {
  _$jscoverage['telerik.textbox.js'][135]++;
  var value = $("> .t-input:first", this.element).val();
  _$jscoverage['telerik.textbox.js'][137]++;
  if ((this.val != this.parse(value, this.separator))) {
    _$jscoverage['telerik.textbox.js'][138]++;
    this.parseTrigger(value);
  }
}), input: (function (e, element) {
  _$jscoverage['telerik.textbox.js'][143]++;
  var val = $(element).val();
  _$jscoverage['telerik.textbox.js'][145]++;
  if ((val == "-")) {
    _$jscoverage['telerik.textbox.js'][145]++;
    return true;
  }
  _$jscoverage['telerik.textbox.js'][147]++;
  var parsedValue = this.parse(val, this.separator);
  _$jscoverage['telerik.textbox.js'][149]++;
  if ((parsedValue || (parsedValue == 0))) {
    _$jscoverage['telerik.textbox.js'][150]++;
    this.trigger(this.round(parsedValue, this.digits));
  }
}), paste: (function (e, element) {
  _$jscoverage['telerik.textbox.js'][155]++;
  var $input = $(element);
  _$jscoverage['telerik.textbox.js'][156]++;
  var val = $input.val();
  _$jscoverage['telerik.textbox.js'][158]++;
  var selectedText = element.document.selection.createRange().text;
  _$jscoverage['telerik.textbox.js'][159]++;
  var text = window.clipboardData.getData("Text");
  _$jscoverage['telerik.textbox.js'][161]++;
  if ((selectedText > 0)) {
    _$jscoverage['telerik.textbox.js'][161]++;
    val = val.replace(selectedText, text);
  }
  else {
    _$jscoverage['telerik.textbox.js'][162]++;
    val += text;
  }
  _$jscoverage['telerik.textbox.js'][165]++;
  var parsedValue = this.parse(val, this.separator);
  _$jscoverage['telerik.textbox.js'][166]++;
  if ((parsedValue || (parsedValue == 0))) {
    _$jscoverage['telerik.textbox.js'][167]++;
    this.trigger(this.round(parsedValue, this.digits));
  }
}), focus: (function (e) {
  _$jscoverage['telerik.textbox.js'][171]++;
  this.focused = true;
  _$jscoverage['telerik.textbox.js'][172]++;
  this.updateState();
  _$jscoverage['telerik.textbox.js'][174]++;
  var value = this.formatEdit(this.val);
  _$jscoverage['telerik.textbox.js'][175]++;
  $(e.target).val((value || ((value == 0)? 0: "")));
  _$jscoverage['telerik.textbox.js'][177]++;
  if ((! $.browser.safari)) {
    _$jscoverage['telerik.textbox.js'][177]++;
    e.target.select();
  }
}), blur: (function (e) {
  _$jscoverage['telerik.textbox.js'][181]++;
  this.focused = false;
  _$jscoverage['telerik.textbox.js'][183]++;
  var min = this.minValue;
  _$jscoverage['telerik.textbox.js'][184]++;
  var max = this.maxValue;
  _$jscoverage['telerik.textbox.js'][185]++;
  var $input = $(e.target);
  _$jscoverage['telerik.textbox.js'][186]++;
  var inputValue = this.parse($input.val(), this.separator);
  _$jscoverage['telerik.textbox.js'][188]++;
  if ((inputValue != null)) {
    _$jscoverage['telerik.textbox.js'][189]++;
    if (((min != null) && (inputValue < min))) {
      _$jscoverage['telerik.textbox.js'][190]++;
      inputValue = min;
    }
    else {
      _$jscoverage['telerik.textbox.js'][191]++;
      if (((max != null) && (inputValue > max))) {
        _$jscoverage['telerik.textbox.js'][192]++;
        inputValue = max;
      }
    }
  }
  _$jscoverage['telerik.textbox.js'][195]++;
  $input.removeClass("t-state-error");
  _$jscoverage['telerik.textbox.js'][196]++;
  this.parseTrigger(inputValue);
  _$jscoverage['telerik.textbox.js'][197]++;
  this.value(inputValue);
}), keydown: (function (e) {
  _$jscoverage['telerik.textbox.js'][201]++;
  var key = e.keyCode, $input = $(e.target), separator = this.separator;
  _$jscoverage['telerik.textbox.js'][205]++;
  setTimeout($.proxy((function () {
  _$jscoverage['telerik.textbox.js'][206]++;
  $input.toggleClass("t-state-error", (! this.inRange(this.parse($input.val(), this.separator), this.minValue, this.maxValue)));
}), this));
  _$jscoverage['telerik.textbox.js'][210]++;
  var decimalSeparator = this.decimals[key];
  _$jscoverage['telerik.textbox.js'][211]++;
  if (decimalSeparator) {
    _$jscoverage['telerik.textbox.js'][212]++;
    if (((decimalSeparator == separator) && (this.digits > 0) && ($t.caretPos($input[0]) != 0) && ($input.val().indexOf(separator) == -1))) {
      _$jscoverage['telerik.textbox.js'][214]++;
      return true;
    }
    else {
      _$jscoverage['telerik.textbox.js'][216]++;
      e.preventDefault();
    }
  }
  _$jscoverage['telerik.textbox.js'][220]++;
  if (((key == 8) || (key == 46))) {
    _$jscoverage['telerik.textbox.js'][221]++;
    setTimeout($.proxy((function () {
  _$jscoverage['telerik.textbox.js'][222]++;
  this.parseTrigger($input.val());
}), this));
    _$jscoverage['telerik.textbox.js'][224]++;
    return true;
  }
  _$jscoverage['telerik.textbox.js'][227]++;
  if (((key == 38) || (key == 40))) {
    _$jscoverage['telerik.textbox.js'][228]++;
    this.modifyInput($input, (this.step * ((key == 38)? 1: -1)));
    _$jscoverage['telerik.textbox.js'][229]++;
    return true;
  }
  _$jscoverage['telerik.textbox.js'][232]++;
  if ((key == 222)) {
    _$jscoverage['telerik.textbox.js'][232]++;
    e.preventDefault();
  }
}), keypress: (function (e) {
  _$jscoverage['telerik.textbox.js'][236]++;
  var $input = $(e.target), key = (e.keyCode || e.which);
  _$jscoverage['telerik.textbox.js'][239]++;
  if (((key == 0) || ($.inArray(key, keycodes) != -1) || e.ctrlKey || (e.shiftKey && (key == 45)))) {
    _$jscoverage['telerik.textbox.js'][240]++;
    return true;
  }
  _$jscoverage['telerik.textbox.js'][242]++;
  if (((((this.minValue !== null)? (this.minValue < 0): true) && (String.fromCharCode(key) == "-") && ($t.caretPos($input[0]) == 0) && ($input.val().indexOf("-") == -1)) || this.inRange(key, 48, 57))) {
    _$jscoverage['telerik.textbox.js'][247]++;
    setTimeout($.proxy((function () {
  _$jscoverage['telerik.textbox.js'][248]++;
  this.parseTrigger($input.val());
}), this));
    _$jscoverage['telerik.textbox.js'][250]++;
    return true;
  }
  _$jscoverage['telerik.textbox.js'][253]++;
  e.preventDefault();
}), clearTimer: (function (e) {
  _$jscoverage['telerik.textbox.js'][257]++;
  clearTimeout(this.timeout);
  _$jscoverage['telerik.textbox.js'][258]++;
  clearInterval(this.timer);
  _$jscoverage['telerik.textbox.js'][259]++;
  clearInterval(this.acceleration);
}), stepper: (function (e, stepMod) {
  _$jscoverage['telerik.textbox.js'][263]++;
  if ((e.which == 1)) {
    _$jscoverage['telerik.textbox.js'][265]++;
    var input = $(".t-input:first", this.element), step = this.step;
    _$jscoverage['telerik.textbox.js'][268]++;
    this.modifyInput(input, (stepMod * step));
    _$jscoverage['telerik.textbox.js'][270]++;
    this.timeout = setTimeout($.proxy((function () {
  _$jscoverage['telerik.textbox.js'][271]++;
  this.timer = setInterval($.proxy((function () {
  _$jscoverage['telerik.textbox.js'][272]++;
  this.modifyInput(input, (stepMod * step));
}), this), 80);
  _$jscoverage['telerik.textbox.js'][275]++;
  this.acceleration = setInterval((function () {
  _$jscoverage['telerik.textbox.js'][275]++;
  step += 1;
}), 1000);
}), this), 200);
  }
}), value: (function (value) {
  _$jscoverage['telerik.textbox.js'][281]++;
  if ((arguments.length == 0)) {
    _$jscoverage['telerik.textbox.js'][281]++;
    return this.val;
  }
  _$jscoverage['telerik.textbox.js'][283]++;
  var parsedValue = (((typeof value) === (typeof 1))? value: this.parse(value, this.separator));
  _$jscoverage['telerik.textbox.js'][284]++;
  if ((! this.inRange(parsedValue, this.minValue, this.maxValue))) {
    _$jscoverage['telerik.textbox.js'][285]++;
    parsedValue = null;
  }
  _$jscoverage['telerik.textbox.js'][287]++;
  var isNull = (parsedValue === null);
  _$jscoverage['telerik.textbox.js'][289]++;
  var text = (this.enabled? this.text: "");
  _$jscoverage['telerik.textbox.js'][290]++;
  this.val = parsedValue;
  _$jscoverage['telerik.textbox.js'][291]++;
  $(this.element).find(".t-input:last").val((isNull? "": this.formatEdit(parsedValue))).end().find(".t-input:first").val((isNull? text: this.format(parsedValue)));
  _$jscoverage['telerik.textbox.js'][294]++;
  return this;
}), modifyInput: (function ($input, step) {
  _$jscoverage['telerik.textbox.js'][298]++;
  var value = this.val, min = this.minValue, max = this.maxValue;
  _$jscoverage['telerik.textbox.js'][302]++;
  value = (value? (value + step): step);
  _$jscoverage['telerik.textbox.js'][303]++;
  value = (((min !== null) && (value < min))? min: (((max !== null) && (value > max))? max: value));
  _$jscoverage['telerik.textbox.js'][305]++;
  var fixedValue = this.round(value, this.digits);
  _$jscoverage['telerik.textbox.js'][307]++;
  this.trigger(fixedValue);
  _$jscoverage['telerik.textbox.js'][309]++;
  var formatedValue = (this.focused? this.formatEdit(fixedValue): this.format(fixedValue));
  _$jscoverage['telerik.textbox.js'][311]++;
  $input.removeClass("t-state-error").val(formatedValue);
}), formatEdit: (function (value) {
  _$jscoverage['telerik.textbox.js'][315]++;
  var separator = this.separator;
  _$jscoverage['telerik.textbox.js'][316]++;
  if ((value && (separator != "."))) {
    _$jscoverage['telerik.textbox.js'][317]++;
    value = value.toString().replace(".", separator);
  }
  _$jscoverage['telerik.textbox.js'][318]++;
  return value;
}), format: (function (value) {
  _$jscoverage['telerik.textbox.js'][322]++;
  return $t.textbox.formatNumber(value, this.numFormat, this.digits, this.separator, this.groupSeparator, this.groupSize, this.positive, this.negative, this.symbol, true);
}), trigger: (function (newValue) {
  _$jscoverage['telerik.textbox.js'][335]++;
  if ((this.val != newValue)) {
    _$jscoverage['telerik.textbox.js'][336]++;
    if ($t.trigger(this.element, "change", {oldValue: this.val, newValue: newValue})) {
      _$jscoverage['telerik.textbox.js'][336]++;
      return;
    }
    _$jscoverage['telerik.textbox.js'][337]++;
    $(".t-input:last", this.element).val(this.formatEdit(newValue));
    _$jscoverage['telerik.textbox.js'][338]++;
    this.val = newValue;
  }
}), parseTrigger: (function (value) {
  _$jscoverage['telerik.textbox.js'][343]++;
  this.trigger(this.round(this.parse(value, this.separator), this.digits));
}), inRange: (function (key, min, max) {
  _$jscoverage['telerik.textbox.js'][347]++;
  return ((key === null) || (((min !== null)? (key >= min): true) && ((max !== null)? (key <= max): true)));
}), parse: (function (value, separator) {
  _$jscoverage['telerik.textbox.js'][351]++;
  var result = null;
  _$jscoverage['telerik.textbox.js'][352]++;
  if ((value || (value == "0"))) {
    _$jscoverage['telerik.textbox.js'][353]++;
    if (((typeof value) == (typeof 1))) {
      _$jscoverage['telerik.textbox.js'][353]++;
      return value;
    }
    _$jscoverage['telerik.textbox.js'][355]++;
    value = value.replace(this.replaceRegExp, "");
    _$jscoverage['telerik.textbox.js'][356]++;
    if ((separator && (separator != "."))) {
      _$jscoverage['telerik.textbox.js'][357]++;
      value = value.replace(separator, ".");
    }
    _$jscoverage['telerik.textbox.js'][359]++;
    var negativeFormatPattern = $.fn.tTextBox.patterns[this.type].negative[this.negative].replace(/(\(|\))/g, "\\$1").replace("*", "").replace("n", "([\\d|\\.]*)"), negativeFormatRegEx = new RegExp(negativeFormatPattern);
    _$jscoverage['telerik.textbox.js'][363]++;
    if (negativeFormatRegEx.test(value)) {
      _$jscoverage['telerik.textbox.js'][364]++;
      result = (- parseFloat(negativeFormatRegEx.exec(value)[1]));
    }
    else {
      _$jscoverage['telerik.textbox.js'][366]++;
      result = parseFloat(value);
    }
  }
  _$jscoverage['telerik.textbox.js'][368]++;
  return (isNaN(result)? null: result);
}), round: (function (value, digits) {
  _$jscoverage['telerik.textbox.js'][372]++;
  if ((value || (value == 0))) {
    _$jscoverage['telerik.textbox.js'][373]++;
    return parseFloat(value.toFixed((digits || 2)));
  }
  _$jscoverage['telerik.textbox.js'][374]++;
  return null;
})};
  _$jscoverage['telerik.textbox.js'][378]++;
  $.fn.tTextBox = (function (options) {
  _$jscoverage['telerik.textbox.js'][379]++;
  var type = options.type, defaults = $.fn.tTextBox.defaults[type];
  _$jscoverage['telerik.textbox.js'][382]++;
  defaults.digits = $t.cultureInfo[(type + "decimaldigits")];
  _$jscoverage['telerik.textbox.js'][383]++;
  defaults.separator = $t.cultureInfo[(type + "decimalseparator")];
  _$jscoverage['telerik.textbox.js'][384]++;
  defaults.groupSeparator = $t.cultureInfo[(type + "groupseparator")];
  _$jscoverage['telerik.textbox.js'][385]++;
  defaults.groupSize = $t.cultureInfo[(type + "groupsize")];
  _$jscoverage['telerik.textbox.js'][386]++;
  defaults.positive = $t.cultureInfo[(type + "positive")];
  _$jscoverage['telerik.textbox.js'][387]++;
  defaults.negative = $t.cultureInfo[(type + "negative")];
  _$jscoverage['telerik.textbox.js'][388]++;
  defaults.symbol = $t.cultureInfo[(type + "symbol")];
  _$jscoverage['telerik.textbox.js'][390]++;
  options = $.extend({}, defaults, options);
  _$jscoverage['telerik.textbox.js'][392]++;
  return this.each((function () {
  _$jscoverage['telerik.textbox.js'][393]++;
  var $element = $(this);
  _$jscoverage['telerik.textbox.js'][394]++;
  options = ($.meta? $.extend({}, options, $element.data()): options);
  _$jscoverage['telerik.textbox.js'][396]++;
  if ((! $element.data("tTextBox"))) {
    _$jscoverage['telerik.textbox.js'][397]++;
    $element.data("tTextBox", new ($t.textbox)(this, options));
    _$jscoverage['telerik.textbox.js'][398]++;
    $t.trigger(this, "load");
  }
}));
});
  _$jscoverage['telerik.textbox.js'][403]++;
  var commonDefaults = {val: null, text: "", step: 1, inputAttributes: ""};
  _$jscoverage['telerik.textbox.js'][410]++;
  $.fn.tTextBox.defaults = {numeric: $.extend(commonDefaults, {minValue: -100, maxValue: 100}), currency: $.extend(commonDefaults, {minValue: 0, maxValue: 1000}), percent: $.extend(commonDefaults, {minValue: 0, maxValue: 100})};
  _$jscoverage['telerik.textbox.js'][427]++;
  $.fn.tTextBox.patterns = {numeric: {negative: ["(n)", "-n", "- n", "n-", "n -"]}, currency: {positive: ["*n", "n*", "* n", "n *"], negative: ["(*n)", "-*n", "*-n", "*n-", "(n*)", "-n*", "n-*", "n*-", "-n *", "-* n", "n *-", "* n-", "* -n", "n- *", "(* n)", "(n *)"]}, percent: {positive: ["n *", "n*", "*n"], negative: ["-n *", "-n*", "-*n"]}};
  _$jscoverage['telerik.textbox.js'][441]++;
  if ((! $t.cultureInfo.numericnegative)) {
    _$jscoverage['telerik.textbox.js'][442]++;
    $.extend($t.cultureInfo, {currencydecimaldigits: 2, currencydecimalseparator: ".", currencygroupseparator: ",", currencygroupsize: 3, currencynegative: 0, currencypositive: 0, currencysymbol: "$", numericdecimaldigits: 2, numericdecimalseparator: ".", numericgroupseparator: ",", numericgroupsize: 3, numericnegative: 1, percentdecimaldigits: 2, percentdecimalseparator: ".", percentgroupseparator: ",", percentgroupsize: 3, percentnegative: 0, percentpositive: 0, percentsymbol: "%"});
  }
  _$jscoverage['telerik.textbox.js'][464]++;
  var customFormatRegEx = /[0#?]/;
  _$jscoverage['telerik.textbox.js'][466]++;
  function reverse(str) {
    _$jscoverage['telerik.textbox.js'][467]++;
    return str.split("").reverse().join("");
}
  _$jscoverage['telerik.textbox.js'][470]++;
  function injectInFormat(val, format, appendExtras) {
    _$jscoverage['telerik.textbox.js'][471]++;
    var i = 0, j = 0, fLength = format.length, vLength = val.length, builder = new ($t.stringBuilder)();
    _$jscoverage['telerik.textbox.js'][476]++;
    while (((i < fLength) && (j < vLength) && (format.substring(i).search(customFormatRegEx) >= 0))) {
      _$jscoverage['telerik.textbox.js'][478]++;
      if (format.charAt(i).match(customFormatRegEx)) {
        _$jscoverage['telerik.textbox.js'][479]++;
        builder.cat(val.charAt((j++)));
      }
      else {
        _$jscoverage['telerik.textbox.js'][481]++;
        builder.cat(format.charAt(i));
      }
      _$jscoverage['telerik.textbox.js'][483]++;
      (i++);
}
    _$jscoverage['telerik.textbox.js'][486]++;
    builder.catIf(val.substring(j), ((j < vLength) && appendExtras)).catIf(format.substring(i), (i < fLength));
    _$jscoverage['telerik.textbox.js'][489]++;
    var result = reverse(builder.string()), zeroIndex;
    _$jscoverage['telerik.textbox.js'][492]++;
    if ((result.indexOf("#") > -1)) {
      _$jscoverage['telerik.textbox.js'][493]++;
      zeroIndex = result.indexOf("0");
    }
    _$jscoverage['telerik.textbox.js'][495]++;
    if ((zeroIndex > -1)) {
      _$jscoverage['telerik.textbox.js'][496]++;
      var first = result.slice(0, zeroIndex), second = result.slice(zeroIndex, result.length);
      _$jscoverage['telerik.textbox.js'][498]++;
      result = (first.replace(/#/g, "") + second.replace(/#/g, "0"));
    }
    else {
      _$jscoverage['telerik.textbox.js'][500]++;
      result = result.replace(/#/g, "");
    }
    _$jscoverage['telerik.textbox.js'][503]++;
    if ((result.indexOf(",") == 0)) {
      _$jscoverage['telerik.textbox.js'][504]++;
      result = result.replace(/,/g, "");
    }
    _$jscoverage['telerik.textbox.js'][506]++;
    return (appendExtras? result: reverse(result));
}
  _$jscoverage['telerik.textbox.js'][509]++;
  $t.textbox.formatNumber = (function (number, format, digits, separator, groupSeparator, groupSize, positive, negative, symbol, isTextBox) {
  _$jscoverage['telerik.textbox.js'][520]++;
  if ((! format)) {
    _$jscoverage['telerik.textbox.js'][520]++;
    return number;
  }
  _$jscoverage['telerik.textbox.js'][522]++;
  var type, customFormat, negativeFormat, zeroFormat, sign = (number < 0);
  _$jscoverage['telerik.textbox.js'][524]++;
  format = format.split(":");
  _$jscoverage['telerik.textbox.js'][525]++;
  format = ((format.length > 1)? format[1].replace("}", ""): format[0]);
  _$jscoverage['telerik.textbox.js'][527]++;
  var isCustomFormat = (format.search(customFormatRegEx) != -1);
  _$jscoverage['telerik.textbox.js'][529]++;
  if (isCustomFormat) {
    _$jscoverage['telerik.textbox.js'][530]++;
    format = format.split(";");
    _$jscoverage['telerik.textbox.js'][531]++;
    customFormat = format[0];
    _$jscoverage['telerik.textbox.js'][532]++;
    negativeFormat = format[1];
    _$jscoverage['telerik.textbox.js'][533]++;
    zeroFormat = format[2];
    _$jscoverage['telerik.textbox.js'][534]++;
    format = ((((sign && negativeFormat)? negativeFormat: customFormat).indexOf("%") != -1)? "p": "n");
  }
  _$jscoverage['telerik.textbox.js'][537]++;
  switch (format.toLowerCase()) {
  case "d":
    _$jscoverage['telerik.textbox.js'][539]++;
    return Math.round(number).toString();
  case "c":
    _$jscoverage['telerik.textbox.js'][541]++;
    type = "currency";
    _$jscoverage['telerik.textbox.js'][541]++;
    break;
  case "n":
    _$jscoverage['telerik.textbox.js'][543]++;
    type = "numeric";
    _$jscoverage['telerik.textbox.js'][543]++;
    break;
  case "p":
    _$jscoverage['telerik.textbox.js'][545]++;
    type = "percent";
    _$jscoverage['telerik.textbox.js'][546]++;
    if ((! isTextBox)) {
      _$jscoverage['telerik.textbox.js'][546]++;
      number = (Math.abs(number) * 100);
    }
    _$jscoverage['telerik.textbox.js'][547]++;
    break;
  default:
    _$jscoverage['telerik.textbox.js'][549]++;
    return number.toString();
  }
  _$jscoverage['telerik.textbox.js'][552]++;
  var zeroPad = (function (str, count, left) {
  _$jscoverage['telerik.textbox.js'][553]++;
  for (var l = str.length; (l < count); (l++)) {
    _$jscoverage['telerik.textbox.js'][554]++;
    str = (left? ("0" + str): (str + "0"));
}
  _$jscoverage['telerik.textbox.js'][556]++;
  return str;
});
  _$jscoverage['telerik.textbox.js'][559]++;
  var addGroupSeparator = (function (number, groupSeperator, groupSize) {
  _$jscoverage['telerik.textbox.js'][560]++;
  if (groupSeparator) {
    _$jscoverage['telerik.textbox.js'][561]++;
    var regExp = new RegExp(("(-?[0-9]+)([0-9]{" + groupSize + "})"));
    _$jscoverage['telerik.textbox.js'][562]++;
    while (regExp.test(number)) {
      _$jscoverage['telerik.textbox.js'][563]++;
      number = number.replace(regExp, ("$1" + groupSeperator + "$2"));
}
  }
  _$jscoverage['telerik.textbox.js'][566]++;
  return number;
});
  _$jscoverage['telerik.textbox.js'][569]++;
  var cultureInfo = (cultureInfo || $t.cultureInfo), patterns = $.fn.tTextBox.patterns, undefined;
  _$jscoverage['telerik.textbox.js'][574]++;
  digits = ((digits || (digits === 0))? digits: cultureInfo[(type + "decimaldigits")]);
  _$jscoverage['telerik.textbox.js'][575]++;
  separator = ((separator !== undefined)? separator: cultureInfo[(type + "decimalseparator")]);
  _$jscoverage['telerik.textbox.js'][576]++;
  groupSeparator = ((groupSeparator !== undefined)? groupSeparator: cultureInfo[(type + "groupseparator")]);
  _$jscoverage['telerik.textbox.js'][577]++;
  groupSize = ((groupSize || (groupSize == 0))? groupSize: cultureInfo[(type + "groupsize")]);
  _$jscoverage['telerik.textbox.js'][578]++;
  negative = ((negative || (negative === 0))? negative: cultureInfo[(type + "negative")]);
  _$jscoverage['telerik.textbox.js'][579]++;
  positive = ((positive || (positive === 0))? positive: cultureInfo[(type + "positive")]);
  _$jscoverage['telerik.textbox.js'][580]++;
  symbol = (symbol || cultureInfo[(type + "symbol")]);
  _$jscoverage['telerik.textbox.js'][582]++;
  var exponent, left, right;
  _$jscoverage['telerik.textbox.js'][584]++;
  if (isCustomFormat) {
    _$jscoverage['telerik.textbox.js'][585]++;
    var splits = ((sign && negativeFormat)? negativeFormat: customFormat).split(".");
    _$jscoverage['telerik.textbox.js'][586]++;
    var leftF = splits[0];
    _$jscoverage['telerik.textbox.js'][587]++;
    var rightF = ((splits.length > 1)? splits[1]: "");
    _$jscoverage['telerik.textbox.js'][588]++;
    var lastIndexZero = $t.lastIndexOf(rightF, "0");
    _$jscoverage['telerik.textbox.js'][589]++;
    var lastIndexSharp = $t.lastIndexOf(rightF, "#");
    _$jscoverage['telerik.textbox.js'][590]++;
    var digits = (((lastIndexSharp > lastIndexZero)? lastIndexSharp: lastIndexZero) + 1);
  }
  _$jscoverage['telerik.textbox.js'][593]++;
  var factor = Math.pow(10, digits);
  _$jscoverage['telerik.textbox.js'][594]++;
  var rounded = (Math.round((number * factor)) / factor);
  _$jscoverage['telerik.textbox.js'][595]++;
  number = (isFinite(rounded)? rounded: number);
  _$jscoverage['telerik.textbox.js'][597]++;
  var split = number.toString().split(/e/i);
  _$jscoverage['telerik.textbox.js'][598]++;
  exponent = ((split.length > 1)? parseInt(split[1]): 0);
  _$jscoverage['telerik.textbox.js'][599]++;
  split = split[0].split(".");
  _$jscoverage['telerik.textbox.js'][601]++;
  left = split[0];
  _$jscoverage['telerik.textbox.js'][602]++;
  left = (sign? left.replace("-", ""): left);
  _$jscoverage['telerik.textbox.js'][604]++;
  right = ((split.length > 1)? split[1]: "");
  _$jscoverage['telerik.textbox.js'][606]++;
  if (exponent) {
    _$jscoverage['telerik.textbox.js'][607]++;
    if ((! sign)) {
      _$jscoverage['telerik.textbox.js'][608]++;
      right = zeroPad(right, exponent, false);
      _$jscoverage['telerik.textbox.js'][609]++;
      left += right.slice(0, exponent);
      _$jscoverage['telerik.textbox.js'][610]++;
      right = right.substr(exponent);
    }
    else {
      _$jscoverage['telerik.textbox.js'][612]++;
      left = zeroPad(left, (exponent + 1), true);
      _$jscoverage['telerik.textbox.js'][613]++;
      right = (left.slice(exponent, left.length) + right);
      _$jscoverage['telerik.textbox.js'][614]++;
      left = left.slice(0, exponent);
    }
  }
  _$jscoverage['telerik.textbox.js'][618]++;
  var rightLength = right.length;
  _$jscoverage['telerik.textbox.js'][619]++;
  if (((digits < 1) || (isCustomFormat && (lastIndexZero == -1) && (rightLength === 0)))) {
    _$jscoverage['telerik.textbox.js'][620]++;
    right = "";
  }
  else {
    _$jscoverage['telerik.textbox.js'][622]++;
    right = ((rightLength > digits)? right.slice(0, digits): zeroPad(right, digits, false));
  }
  _$jscoverage['telerik.textbox.js'][624]++;
  var result;
  _$jscoverage['telerik.textbox.js'][625]++;
  if (isCustomFormat) {
    _$jscoverage['telerik.textbox.js'][626]++;
    if ((left == 0)) {
      _$jscoverage['telerik.textbox.js'][626]++;
      left = "";
    }
    _$jscoverage['telerik.textbox.js'][628]++;
    left = injectInFormat(reverse(left), reverse(leftF), true);
    _$jscoverage['telerik.textbox.js'][629]++;
    left = ((leftF.indexOf(",") != -1)? addGroupSeparator(left, groupSeparator, groupSize): left);
    _$jscoverage['telerik.textbox.js'][631]++;
    right = ((right && rightF)? injectInFormat(right, rightF): "");
    _$jscoverage['telerik.textbox.js'][633]++;
    result = (((number === 0) && zeroFormat)? zeroFormat: (((sign && (! negativeFormat))? "-": "") + left + ((right.length > 0)? (separator + right): "")));
  }
  else {
    _$jscoverage['telerik.textbox.js'][638]++;
    left = addGroupSeparator(left, groupSeparator, groupSize);
    _$jscoverage['telerik.textbox.js'][639]++;
    patterns = patterns[type];
    _$jscoverage['telerik.textbox.js'][640]++;
    var pattern = (sign? patterns.negative[negative]: (symbol? patterns.positive[positive]: null));
    _$jscoverage['telerik.textbox.js'][644]++;
    var numberString = (left + ((right.length > 0)? (separator + right): ""));
    _$jscoverage['telerik.textbox.js'][646]++;
    result = (pattern? pattern.replace("n", numberString).replace("*", symbol): numberString);
  }
  _$jscoverage['telerik.textbox.js'][648]++;
  return result;
});
  _$jscoverage['telerik.textbox.js'][651]++;
  $.extend($t.formatters, {number: $t.textbox.formatNumber});
})(jQuery);
