/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['telerik.grid.editing.js']) {
  _$jscoverage['telerik.grid.editing.js'] = [];
  _$jscoverage['telerik.grid.editing.js'][1] = 0;
  _$jscoverage['telerik.grid.editing.js'][3] = 0;
  _$jscoverage['telerik.grid.editing.js'][5] = 0;
  _$jscoverage['telerik.grid.editing.js'][6] = 0;
  _$jscoverage['telerik.grid.editing.js'][7] = 0;
  _$jscoverage['telerik.grid.editing.js'][8] = 0;
  _$jscoverage['telerik.grid.editing.js'][9] = 0;
  _$jscoverage['telerik.grid.editing.js'][10] = 0;
  _$jscoverage['telerik.grid.editing.js'][13] = 0;
  _$jscoverage['telerik.grid.editing.js'][17] = 0;
  _$jscoverage['telerik.grid.editing.js'][18] = 0;
  _$jscoverage['telerik.grid.editing.js'][21] = 0;
  _$jscoverage['telerik.grid.editing.js'][22] = 0;
  _$jscoverage['telerik.grid.editing.js'][23] = 0;
  _$jscoverage['telerik.grid.editing.js'][25] = 0;
  _$jscoverage['telerik.grid.editing.js'][26] = 0;
  _$jscoverage['telerik.grid.editing.js'][30] = 0;
  _$jscoverage['telerik.grid.editing.js'][31] = 0;
  _$jscoverage['telerik.grid.editing.js'][33] = 0;
  _$jscoverage['telerik.grid.editing.js'][34] = 0;
  _$jscoverage['telerik.grid.editing.js'][37] = 0;
  _$jscoverage['telerik.grid.editing.js'][48] = 0;
  _$jscoverage['telerik.grid.editing.js'][49] = 0;
  _$jscoverage['telerik.grid.editing.js'][54] = 0;
  _$jscoverage['telerik.grid.editing.js'][55] = 0;
  _$jscoverage['telerik.grid.editing.js'][58] = 0;
  _$jscoverage['telerik.grid.editing.js'][59] = 0;
  _$jscoverage['telerik.grid.editing.js'][60] = 0;
  _$jscoverage['telerik.grid.editing.js'][61] = 0;
  _$jscoverage['telerik.grid.editing.js'][67] = 0;
  _$jscoverage['telerik.grid.editing.js'][70] = 0;
  _$jscoverage['telerik.grid.editing.js'][71] = 0;
  _$jscoverage['telerik.grid.editing.js'][73] = 0;
  _$jscoverage['telerik.grid.editing.js'][74] = 0;
  _$jscoverage['telerik.grid.editing.js'][75] = 0;
  _$jscoverage['telerik.grid.editing.js'][78] = 0;
  _$jscoverage['telerik.grid.editing.js'][83] = 0;
  _$jscoverage['telerik.grid.editing.js'][86] = 0;
  _$jscoverage['telerik.grid.editing.js'][87] = 0;
  _$jscoverage['telerik.grid.editing.js'][88] = 0;
  _$jscoverage['telerik.grid.editing.js'][90] = 0;
  _$jscoverage['telerik.grid.editing.js'][91] = 0;
  _$jscoverage['telerik.grid.editing.js'][97] = 0;
  _$jscoverage['telerik.grid.editing.js'][100] = 0;
  _$jscoverage['telerik.grid.editing.js'][101] = 0;
  _$jscoverage['telerik.grid.editing.js'][102] = 0;
  _$jscoverage['telerik.grid.editing.js'][104] = 0;
  _$jscoverage['telerik.grid.editing.js'][105] = 0;
  _$jscoverage['telerik.grid.editing.js'][111] = 0;
  _$jscoverage['telerik.grid.editing.js'][114] = 0;
  _$jscoverage['telerik.grid.editing.js'][115] = 0;
  _$jscoverage['telerik.grid.editing.js'][126] = 0;
  _$jscoverage['telerik.grid.editing.js'][129] = 0;
  _$jscoverage['telerik.grid.editing.js'][130] = 0;
  _$jscoverage['telerik.grid.editing.js'][133] = 0;
  _$jscoverage['telerik.grid.editing.js'][136] = 0;
  _$jscoverage['telerik.grid.editing.js'][141] = 0;
  _$jscoverage['telerik.grid.editing.js'][144] = 0;
  _$jscoverage['telerik.grid.editing.js'][145] = 0;
  _$jscoverage['telerik.grid.editing.js'][147] = 0;
  _$jscoverage['telerik.grid.editing.js'][149] = 0;
  _$jscoverage['telerik.grid.editing.js'][150] = 0;
  _$jscoverage['telerik.grid.editing.js'][151] = 0;
  _$jscoverage['telerik.grid.editing.js'][152] = 0;
  _$jscoverage['telerik.grid.editing.js'][153] = 0;
  _$jscoverage['telerik.grid.editing.js'][157] = 0;
  _$jscoverage['telerik.grid.editing.js'][158] = 0;
  _$jscoverage['telerik.grid.editing.js'][161] = 0;
  _$jscoverage['telerik.grid.editing.js'][162] = 0;
  _$jscoverage['telerik.grid.editing.js'][163] = 0;
  _$jscoverage['telerik.grid.editing.js'][164] = 0;
  _$jscoverage['telerik.grid.editing.js'][165] = 0;
  _$jscoverage['telerik.grid.editing.js'][167] = 0;
  _$jscoverage['telerik.grid.editing.js'][168] = 0;
  _$jscoverage['telerik.grid.editing.js'][171] = 0;
  _$jscoverage['telerik.grid.editing.js'][172] = 0;
  _$jscoverage['telerik.grid.editing.js'][173] = 0;
  _$jscoverage['telerik.grid.editing.js'][177] = 0;
  _$jscoverage['telerik.grid.editing.js'][178] = 0;
  _$jscoverage['telerik.grid.editing.js'][179] = 0;
  _$jscoverage['telerik.grid.editing.js'][182] = 0;
  _$jscoverage['telerik.grid.editing.js'][183] = 0;
  _$jscoverage['telerik.grid.editing.js'][185] = 0;
  _$jscoverage['telerik.grid.editing.js'][186] = 0;
  _$jscoverage['telerik.grid.editing.js'][188] = 0;
  _$jscoverage['telerik.grid.editing.js'][189] = 0;
  _$jscoverage['telerik.grid.editing.js'][194] = 0;
  _$jscoverage['telerik.grid.editing.js'][195] = 0;
  _$jscoverage['telerik.grid.editing.js'][196] = 0;
  _$jscoverage['telerik.grid.editing.js'][200] = 0;
  _$jscoverage['telerik.grid.editing.js'][201] = 0;
  _$jscoverage['telerik.grid.editing.js'][202] = 0;
  _$jscoverage['telerik.grid.editing.js'][203] = 0;
  _$jscoverage['telerik.grid.editing.js'][204] = 0;
  _$jscoverage['telerik.grid.editing.js'][205] = 0;
  _$jscoverage['telerik.grid.editing.js'][207] = 0;
  _$jscoverage['telerik.grid.editing.js'][208] = 0;
  _$jscoverage['telerik.grid.editing.js'][209] = 0;
  _$jscoverage['telerik.grid.editing.js'][212] = 0;
  _$jscoverage['telerik.grid.editing.js'][213] = 0;
  _$jscoverage['telerik.grid.editing.js'][218] = 0;
  _$jscoverage['telerik.grid.editing.js'][219] = 0;
  _$jscoverage['telerik.grid.editing.js'][220] = 0;
  _$jscoverage['telerik.grid.editing.js'][224] = 0;
  _$jscoverage['telerik.grid.editing.js'][227] = 0;
  _$jscoverage['telerik.grid.editing.js'][228] = 0;
  _$jscoverage['telerik.grid.editing.js'][230] = 0;
  _$jscoverage['telerik.grid.editing.js'][231] = 0;
  _$jscoverage['telerik.grid.editing.js'][232] = 0;
  _$jscoverage['telerik.grid.editing.js'][234] = 0;
  _$jscoverage['telerik.grid.editing.js'][235] = 0;
  _$jscoverage['telerik.grid.editing.js'][238] = 0;
  _$jscoverage['telerik.grid.editing.js'][239] = 0;
  _$jscoverage['telerik.grid.editing.js'][240] = 0;
  _$jscoverage['telerik.grid.editing.js'][242] = 0;
  _$jscoverage['telerik.grid.editing.js'][252] = 0;
  _$jscoverage['telerik.grid.editing.js'][257] = 0;
  _$jscoverage['telerik.grid.editing.js'][258] = 0;
  _$jscoverage['telerik.grid.editing.js'][262] = 0;
  _$jscoverage['telerik.grid.editing.js'][264] = 0;
  _$jscoverage['telerik.grid.editing.js'][267] = 0;
  _$jscoverage['telerik.grid.editing.js'][270] = 0;
  _$jscoverage['telerik.grid.editing.js'][271] = 0;
  _$jscoverage['telerik.grid.editing.js'][272] = 0;
  _$jscoverage['telerik.grid.editing.js'][274] = 0;
  _$jscoverage['telerik.grid.editing.js'][275] = 0;
  _$jscoverage['telerik.grid.editing.js'][278] = 0;
  _$jscoverage['telerik.grid.editing.js'][279] = 0;
  _$jscoverage['telerik.grid.editing.js'][280] = 0;
  _$jscoverage['telerik.grid.editing.js'][282] = 0;
  _$jscoverage['telerik.grid.editing.js'][292] = 0;
  _$jscoverage['telerik.grid.editing.js'][295] = 0;
  _$jscoverage['telerik.grid.editing.js'][296] = 0;
  _$jscoverage['telerik.grid.editing.js'][297] = 0;
  _$jscoverage['telerik.grid.editing.js'][299] = 0;
  _$jscoverage['telerik.grid.editing.js'][300] = 0;
  _$jscoverage['telerik.grid.editing.js'][301] = 0;
  _$jscoverage['telerik.grid.editing.js'][303] = 0;
  _$jscoverage['telerik.grid.editing.js'][304] = 0;
  _$jscoverage['telerik.grid.editing.js'][305] = 0;
  _$jscoverage['telerik.grid.editing.js'][307] = 0;
  _$jscoverage['telerik.grid.editing.js'][308] = 0;
  _$jscoverage['telerik.grid.editing.js'][309] = 0;
  _$jscoverage['telerik.grid.editing.js'][311] = 0;
  _$jscoverage['telerik.grid.editing.js'][312] = 0;
  _$jscoverage['telerik.grid.editing.js'][313] = 0;
  _$jscoverage['telerik.grid.editing.js'][315] = 0;
  _$jscoverage['telerik.grid.editing.js'][316] = 0;
  _$jscoverage['telerik.grid.editing.js'][318] = 0;
  _$jscoverage['telerik.grid.editing.js'][319] = 0;
  _$jscoverage['telerik.grid.editing.js'][320] = 0;
  _$jscoverage['telerik.grid.editing.js'][323] = 0;
  _$jscoverage['telerik.grid.editing.js'][324] = 0;
  _$jscoverage['telerik.grid.editing.js'][326] = 0;
  _$jscoverage['telerik.grid.editing.js'][327] = 0;
  _$jscoverage['telerik.grid.editing.js'][329] = 0;
  _$jscoverage['telerik.grid.editing.js'][330] = 0;
  _$jscoverage['telerik.grid.editing.js'][331] = 0;
  _$jscoverage['telerik.grid.editing.js'][332] = 0;
  _$jscoverage['telerik.grid.editing.js'][333] = 0;
  _$jscoverage['telerik.grid.editing.js'][335] = 0;
  _$jscoverage['telerik.grid.editing.js'][336] = 0;
  _$jscoverage['telerik.grid.editing.js'][337] = 0;
  _$jscoverage['telerik.grid.editing.js'][338] = 0;
  _$jscoverage['telerik.grid.editing.js'][339] = 0;
  _$jscoverage['telerik.grid.editing.js'][341] = 0;
  _$jscoverage['telerik.grid.editing.js'][342] = 0;
  _$jscoverage['telerik.grid.editing.js'][345] = 0;
  _$jscoverage['telerik.grid.editing.js'][346] = 0;
  _$jscoverage['telerik.grid.editing.js'][349] = 0;
  _$jscoverage['telerik.grid.editing.js'][354] = 0;
  _$jscoverage['telerik.grid.editing.js'][356] = 0;
  _$jscoverage['telerik.grid.editing.js'][357] = 0;
  _$jscoverage['telerik.grid.editing.js'][360] = 0;
  _$jscoverage['telerik.grid.editing.js'][361] = 0;
  _$jscoverage['telerik.grid.editing.js'][362] = 0;
  _$jscoverage['telerik.grid.editing.js'][363] = 0;
  _$jscoverage['telerik.grid.editing.js'][365] = 0;
  _$jscoverage['telerik.grid.editing.js'][366] = 0;
  _$jscoverage['telerik.grid.editing.js'][367] = 0;
  _$jscoverage['telerik.grid.editing.js'][369] = 0;
  _$jscoverage['telerik.grid.editing.js'][373] = 0;
  _$jscoverage['telerik.grid.editing.js'][375] = 0;
  _$jscoverage['telerik.grid.editing.js'][378] = 0;
  _$jscoverage['telerik.grid.editing.js'][379] = 0;
  _$jscoverage['telerik.grid.editing.js'][382] = 0;
  _$jscoverage['telerik.grid.editing.js'][384] = 0;
  _$jscoverage['telerik.grid.editing.js'][386] = 0;
  _$jscoverage['telerik.grid.editing.js'][388] = 0;
  _$jscoverage['telerik.grid.editing.js'][390] = 0;
  _$jscoverage['telerik.grid.editing.js'][392] = 0;
  _$jscoverage['telerik.grid.editing.js'][396] = 0;
  _$jscoverage['telerik.grid.editing.js'][399] = 0;
  _$jscoverage['telerik.grid.editing.js'][400] = 0;
  _$jscoverage['telerik.grid.editing.js'][401] = 0;
  _$jscoverage['telerik.grid.editing.js'][402] = 0;
  _$jscoverage['telerik.grid.editing.js'][403] = 0;
  _$jscoverage['telerik.grid.editing.js'][404] = 0;
  _$jscoverage['telerik.grid.editing.js'][407] = 0;
  _$jscoverage['telerik.grid.editing.js'][410] = 0;
  _$jscoverage['telerik.grid.editing.js'][412] = 0;
  _$jscoverage['telerik.grid.editing.js'][413] = 0;
  _$jscoverage['telerik.grid.editing.js'][414] = 0;
  _$jscoverage['telerik.grid.editing.js'][415] = 0;
  _$jscoverage['telerik.grid.editing.js'][417] = 0;
  _$jscoverage['telerik.grid.editing.js'][421] = 0;
  _$jscoverage['telerik.grid.editing.js'][422] = 0;
  _$jscoverage['telerik.grid.editing.js'][423] = 0;
  _$jscoverage['telerik.grid.editing.js'][427] = 0;
  _$jscoverage['telerik.grid.editing.js'][435] = 0;
  _$jscoverage['telerik.grid.editing.js'][441] = 0;
  _$jscoverage['telerik.grid.editing.js'][444] = 0;
  _$jscoverage['telerik.grid.editing.js'][448] = 0;
  _$jscoverage['telerik.grid.editing.js'][449] = 0;
  _$jscoverage['telerik.grid.editing.js'][450] = 0;
  _$jscoverage['telerik.grid.editing.js'][451] = 0;
  _$jscoverage['telerik.grid.editing.js'][452] = 0;
  _$jscoverage['telerik.grid.editing.js'][453] = 0;
  _$jscoverage['telerik.grid.editing.js'][457] = 0;
  _$jscoverage['telerik.grid.editing.js'][460] = 0;
  _$jscoverage['telerik.grid.editing.js'][462] = 0;
  _$jscoverage['telerik.grid.editing.js'][463] = 0;
  _$jscoverage['telerik.grid.editing.js'][465] = 0;
  _$jscoverage['telerik.grid.editing.js'][466] = 0;
  _$jscoverage['telerik.grid.editing.js'][467] = 0;
  _$jscoverage['telerik.grid.editing.js'][471] = 0;
  _$jscoverage['telerik.grid.editing.js'][472] = 0;
  _$jscoverage['telerik.grid.editing.js'][473] = 0;
  _$jscoverage['telerik.grid.editing.js'][475] = 0;
  _$jscoverage['telerik.grid.editing.js'][476] = 0;
  _$jscoverage['telerik.grid.editing.js'][477] = 0;
  _$jscoverage['telerik.grid.editing.js'][480] = 0;
  _$jscoverage['telerik.grid.editing.js'][483] = 0;
  _$jscoverage['telerik.grid.editing.js'][486] = 0;
  _$jscoverage['telerik.grid.editing.js'][487] = 0;
  _$jscoverage['telerik.grid.editing.js'][491] = 0;
  _$jscoverage['telerik.grid.editing.js'][494] = 0;
  _$jscoverage['telerik.grid.editing.js'][495] = 0;
  _$jscoverage['telerik.grid.editing.js'][499] = 0;
  _$jscoverage['telerik.grid.editing.js'][500] = 0;
  _$jscoverage['telerik.grid.editing.js'][501] = 0;
  _$jscoverage['telerik.grid.editing.js'][504] = 0;
  _$jscoverage['telerik.grid.editing.js'][507] = 0;
  _$jscoverage['telerik.grid.editing.js'][509] = 0;
  _$jscoverage['telerik.grid.editing.js'][511] = 0;
  _$jscoverage['telerik.grid.editing.js'][513] = 0;
  _$jscoverage['telerik.grid.editing.js'][514] = 0;
  _$jscoverage['telerik.grid.editing.js'][515] = 0;
  _$jscoverage['telerik.grid.editing.js'][519] = 0;
  _$jscoverage['telerik.grid.editing.js'][520] = 0;
  _$jscoverage['telerik.grid.editing.js'][521] = 0;
  _$jscoverage['telerik.grid.editing.js'][525] = 0;
  _$jscoverage['telerik.grid.editing.js'][526] = 0;
  _$jscoverage['telerik.grid.editing.js'][527] = 0;
  _$jscoverage['telerik.grid.editing.js'][528] = 0;
  _$jscoverage['telerik.grid.editing.js'][531] = 0;
  _$jscoverage['telerik.grid.editing.js'][536] = 0;
  _$jscoverage['telerik.grid.editing.js'][539] = 0;
  _$jscoverage['telerik.grid.editing.js'][540] = 0;
  _$jscoverage['telerik.grid.editing.js'][541] = 0;
  _$jscoverage['telerik.grid.editing.js'][544] = 0;
  _$jscoverage['telerik.grid.editing.js'][545] = 0;
  _$jscoverage['telerik.grid.editing.js'][546] = 0;
  _$jscoverage['telerik.grid.editing.js'][548] = 0;
  _$jscoverage['telerik.grid.editing.js'][552] = 0;
  _$jscoverage['telerik.grid.editing.js'][561] = 0;
  _$jscoverage['telerik.grid.editing.js'][564] = 0;
  _$jscoverage['telerik.grid.editing.js'][566] = 0;
  _$jscoverage['telerik.grid.editing.js'][568] = 0;
  _$jscoverage['telerik.grid.editing.js'][569] = 0;
  _$jscoverage['telerik.grid.editing.js'][571] = 0;
  _$jscoverage['telerik.grid.editing.js'][575] = 0;
  _$jscoverage['telerik.grid.editing.js'][576] = 0;
  _$jscoverage['telerik.grid.editing.js'][577] = 0;
  _$jscoverage['telerik.grid.editing.js'][578] = 0;
  _$jscoverage['telerik.grid.editing.js'][580] = 0;
  _$jscoverage['telerik.grid.editing.js'][584] = 0;
  _$jscoverage['telerik.grid.editing.js'][585] = 0;
  _$jscoverage['telerik.grid.editing.js'][587] = 0;
  _$jscoverage['telerik.grid.editing.js'][588] = 0;
  _$jscoverage['telerik.grid.editing.js'][592] = 0;
  _$jscoverage['telerik.grid.editing.js'][593] = 0;
  _$jscoverage['telerik.grid.editing.js'][595] = 0;
  _$jscoverage['telerik.grid.editing.js'][597] = 0;
  _$jscoverage['telerik.grid.editing.js'][602] = 0;
  _$jscoverage['telerik.grid.editing.js'][603] = 0;
  _$jscoverage['telerik.grid.editing.js'][604] = 0;
  _$jscoverage['telerik.grid.editing.js'][605] = 0;
  _$jscoverage['telerik.grid.editing.js'][607] = 0;
  _$jscoverage['telerik.grid.editing.js'][609] = 0;
  _$jscoverage['telerik.grid.editing.js'][611] = 0;
  _$jscoverage['telerik.grid.editing.js'][612] = 0;
  _$jscoverage['telerik.grid.editing.js'][614] = 0;
  _$jscoverage['telerik.grid.editing.js'][620] = 0;
  _$jscoverage['telerik.grid.editing.js'][621] = 0;
  _$jscoverage['telerik.grid.editing.js'][622] = 0;
  _$jscoverage['telerik.grid.editing.js'][628] = 0;
  _$jscoverage['telerik.grid.editing.js'][630] = 0;
  _$jscoverage['telerik.grid.editing.js'][631] = 0;
  _$jscoverage['telerik.grid.editing.js'][632] = 0;
  _$jscoverage['telerik.grid.editing.js'][633] = 0;
  _$jscoverage['telerik.grid.editing.js'][636] = 0;
  _$jscoverage['telerik.grid.editing.js'][637] = 0;
  _$jscoverage['telerik.grid.editing.js'][643] = 0;
  _$jscoverage['telerik.grid.editing.js'][647] = 0;
  _$jscoverage['telerik.grid.editing.js'][648] = 0;
  _$jscoverage['telerik.grid.editing.js'][649] = 0;
  _$jscoverage['telerik.grid.editing.js'][650] = 0;
  _$jscoverage['telerik.grid.editing.js'][651] = 0;
  _$jscoverage['telerik.grid.editing.js'][653] = 0;
  _$jscoverage['telerik.grid.editing.js'][654] = 0;
  _$jscoverage['telerik.grid.editing.js'][655] = 0;
  _$jscoverage['telerik.grid.editing.js'][657] = 0;
  _$jscoverage['telerik.grid.editing.js'][658] = 0;
  _$jscoverage['telerik.grid.editing.js'][659] = 0;
  _$jscoverage['telerik.grid.editing.js'][660] = 0;
  _$jscoverage['telerik.grid.editing.js'][662] = 0;
  _$jscoverage['telerik.grid.editing.js'][665] = 0;
  _$jscoverage['telerik.grid.editing.js'][666] = 0;
  _$jscoverage['telerik.grid.editing.js'][667] = 0;
  _$jscoverage['telerik.grid.editing.js'][673] = 0;
  _$jscoverage['telerik.grid.editing.js'][674] = 0;
  _$jscoverage['telerik.grid.editing.js'][680] = 0;
  _$jscoverage['telerik.grid.editing.js'][682] = 0;
  _$jscoverage['telerik.grid.editing.js'][686] = 0;
  _$jscoverage['telerik.grid.editing.js'][688] = 0;
  _$jscoverage['telerik.grid.editing.js'][689] = 0;
  _$jscoverage['telerik.grid.editing.js'][691] = 0;
  _$jscoverage['telerik.grid.editing.js'][692] = 0;
  _$jscoverage['telerik.grid.editing.js'][693] = 0;
  _$jscoverage['telerik.grid.editing.js'][694] = 0;
  _$jscoverage['telerik.grid.editing.js'][696] = 0;
  _$jscoverage['telerik.grid.editing.js'][699] = 0;
  _$jscoverage['telerik.grid.editing.js'][703] = 0;
  _$jscoverage['telerik.grid.editing.js'][704] = 0;
  _$jscoverage['telerik.grid.editing.js'][706] = 0;
  _$jscoverage['telerik.grid.editing.js'][707] = 0;
  _$jscoverage['telerik.grid.editing.js'][708] = 0;
  _$jscoverage['telerik.grid.editing.js'][710] = 0;
  _$jscoverage['telerik.grid.editing.js'][711] = 0;
  _$jscoverage['telerik.grid.editing.js'][712] = 0;
  _$jscoverage['telerik.grid.editing.js'][715] = 0;
  _$jscoverage['telerik.grid.editing.js'][716] = 0;
  _$jscoverage['telerik.grid.editing.js'][718] = 0;
  _$jscoverage['telerik.grid.editing.js'][720] = 0;
  _$jscoverage['telerik.grid.editing.js'][723] = 0;
  _$jscoverage['telerik.grid.editing.js'][724] = 0;
  _$jscoverage['telerik.grid.editing.js'][729] = 0;
  _$jscoverage['telerik.grid.editing.js'][730] = 0;
  _$jscoverage['telerik.grid.editing.js'][732] = 0;
  _$jscoverage['telerik.grid.editing.js'][734] = 0;
  _$jscoverage['telerik.grid.editing.js'][738] = 0;
  _$jscoverage['telerik.grid.editing.js'][740] = 0;
  _$jscoverage['telerik.grid.editing.js'][744] = 0;
  _$jscoverage['telerik.grid.editing.js'][746] = 0;
  _$jscoverage['telerik.grid.editing.js'][748] = 0;
  _$jscoverage['telerik.grid.editing.js'][749] = 0;
  _$jscoverage['telerik.grid.editing.js'][753] = 0;
  _$jscoverage['telerik.grid.editing.js'][757] = 0;
  _$jscoverage['telerik.grid.editing.js'][758] = 0;
  _$jscoverage['telerik.grid.editing.js'][760] = 0;
  _$jscoverage['telerik.grid.editing.js'][762] = 0;
  _$jscoverage['telerik.grid.editing.js'][764] = 0;
  _$jscoverage['telerik.grid.editing.js'][765] = 0;
  _$jscoverage['telerik.grid.editing.js'][766] = 0;
  _$jscoverage['telerik.grid.editing.js'][767] = 0;
  _$jscoverage['telerik.grid.editing.js'][769] = 0;
  _$jscoverage['telerik.grid.editing.js'][772] = 0;
  _$jscoverage['telerik.grid.editing.js'][773] = 0;
  _$jscoverage['telerik.grid.editing.js'][777] = 0;
  _$jscoverage['telerik.grid.editing.js'][781] = 0;
  _$jscoverage['telerik.grid.editing.js'][782] = 0;
  _$jscoverage['telerik.grid.editing.js'][789] = 0;
  _$jscoverage['telerik.grid.editing.js'][790] = 0;
  _$jscoverage['telerik.grid.editing.js'][792] = 0;
  _$jscoverage['telerik.grid.editing.js'][795] = 0;
  _$jscoverage['telerik.grid.editing.js'][798] = 0;
  _$jscoverage['telerik.grid.editing.js'][800] = 0;
  _$jscoverage['telerik.grid.editing.js'][803] = 0;
  _$jscoverage['telerik.grid.editing.js'][805] = 0;
  _$jscoverage['telerik.grid.editing.js'][808] = 0;
  _$jscoverage['telerik.grid.editing.js'][809] = 0;
  _$jscoverage['telerik.grid.editing.js'][813] = 0;
  _$jscoverage['telerik.grid.editing.js'][817] = 0;
  _$jscoverage['telerik.grid.editing.js'][821] = 0;
  _$jscoverage['telerik.grid.editing.js'][822] = 0;
  _$jscoverage['telerik.grid.editing.js'][823] = 0;
  _$jscoverage['telerik.grid.editing.js'][824] = 0;
  _$jscoverage['telerik.grid.editing.js'][825] = 0;
  _$jscoverage['telerik.grid.editing.js'][826] = 0;
  _$jscoverage['telerik.grid.editing.js'][830] = 0;
  _$jscoverage['telerik.grid.editing.js'][839] = 0;
  _$jscoverage['telerik.grid.editing.js'][843] = 0;
  _$jscoverage['telerik.grid.editing.js'][844] = 0;
  _$jscoverage['telerik.grid.editing.js'][846] = 0;
  _$jscoverage['telerik.grid.editing.js'][847] = 0;
  _$jscoverage['telerik.grid.editing.js'][848] = 0;
  _$jscoverage['telerik.grid.editing.js'][849] = 0;
  _$jscoverage['telerik.grid.editing.js'][850] = 0;
  _$jscoverage['telerik.grid.editing.js'][855] = 0;
  _$jscoverage['telerik.grid.editing.js'][859] = 0;
  _$jscoverage['telerik.grid.editing.js'][863] = 0;
  _$jscoverage['telerik.grid.editing.js'][867] = 0;
  _$jscoverage['telerik.grid.editing.js'][868] = 0;
  _$jscoverage['telerik.grid.editing.js'][869] = 0;
  _$jscoverage['telerik.grid.editing.js'][871] = 0;
  _$jscoverage['telerik.grid.editing.js'][874] = 0;
  _$jscoverage['telerik.grid.editing.js'][878] = 0;
  _$jscoverage['telerik.grid.editing.js'][879] = 0;
  _$jscoverage['telerik.grid.editing.js'][881] = 0;
  _$jscoverage['telerik.grid.editing.js'][884] = 0;
  _$jscoverage['telerik.grid.editing.js'][888] = 0;
  _$jscoverage['telerik.grid.editing.js'][889] = 0;
  _$jscoverage['telerik.grid.editing.js'][891] = 0;
  _$jscoverage['telerik.grid.editing.js'][892] = 0;
  _$jscoverage['telerik.grid.editing.js'][893] = 0;
  _$jscoverage['telerik.grid.editing.js'][897] = 0;
  _$jscoverage['telerik.grid.editing.js'][901] = 0;
  _$jscoverage['telerik.grid.editing.js'][902] = 0;
  _$jscoverage['telerik.grid.editing.js'][903] = 0;
  _$jscoverage['telerik.grid.editing.js'][905] = 0;
  _$jscoverage['telerik.grid.editing.js'][908] = 0;
  _$jscoverage['telerik.grid.editing.js'][912] = 0;
  _$jscoverage['telerik.grid.editing.js'][913] = 0;
  _$jscoverage['telerik.grid.editing.js'][914] = 0;
  _$jscoverage['telerik.grid.editing.js'][920] = 0;
  _$jscoverage['telerik.grid.editing.js'][921] = 0;
  _$jscoverage['telerik.grid.editing.js'][922] = 0;
  _$jscoverage['telerik.grid.editing.js'][924] = 0;
  _$jscoverage['telerik.grid.editing.js'][925] = 0;
  _$jscoverage['telerik.grid.editing.js'][926] = 0;
  _$jscoverage['telerik.grid.editing.js'][928] = 0;
  _$jscoverage['telerik.grid.editing.js'][929] = 0;
  _$jscoverage['telerik.grid.editing.js'][930] = 0;
  _$jscoverage['telerik.grid.editing.js'][931] = 0;
  _$jscoverage['telerik.grid.editing.js'][932] = 0;
  _$jscoverage['telerik.grid.editing.js'][933] = 0;
  _$jscoverage['telerik.grid.editing.js'][934] = 0;
  _$jscoverage['telerik.grid.editing.js'][935] = 0;
  _$jscoverage['telerik.grid.editing.js'][939] = 0;
  _$jscoverage['telerik.grid.editing.js'][940] = 0;
  _$jscoverage['telerik.grid.editing.js'][941] = 0;
  _$jscoverage['telerik.grid.editing.js'][942] = 0;
  _$jscoverage['telerik.grid.editing.js'][944] = 0;
  _$jscoverage['telerik.grid.editing.js'][946] = 0;
  _$jscoverage['telerik.grid.editing.js'][947] = 0;
  _$jscoverage['telerik.grid.editing.js'][949] = 0;
  _$jscoverage['telerik.grid.editing.js'][954] = 0;
  _$jscoverage['telerik.grid.editing.js'][955] = 0;
  _$jscoverage['telerik.grid.editing.js'][957] = 0;
  _$jscoverage['telerik.grid.editing.js'][958] = 0;
  _$jscoverage['telerik.grid.editing.js'][959] = 0;
  _$jscoverage['telerik.grid.editing.js'][960] = 0;
  _$jscoverage['telerik.grid.editing.js'][961] = 0;
  _$jscoverage['telerik.grid.editing.js'][967] = 0;
  _$jscoverage['telerik.grid.editing.js'][968] = 0;
  _$jscoverage['telerik.grid.editing.js'][969] = 0;
  _$jscoverage['telerik.grid.editing.js'][978] = 0;
  _$jscoverage['telerik.grid.editing.js'][979] = 0;
  _$jscoverage['telerik.grid.editing.js'][980] = 0;
}
_$jscoverage['telerik.grid.editing.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"k\">var</span> $t <span class=\"k\">=</span> $<span class=\"k\">.</span>telerik<span class=\"k\">;</span>","","    <span class=\"k\">var</span> UnobtrusiveValidator <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>formId<span class=\"k\">)</span><span class=\"k\">{</span>\t","        <span class=\"k\">this</span><span class=\"k\">.</span>formId <span class=\"k\">=</span> formId<span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_isBuild <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">var</span> data_validation <span class=\"k\">=</span> <span class=\"s\">\"tUnobtrusiveValidation\"</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> data_container <span class=\"k\">=</span> <span class=\"s\">\"tUnobtrusiveContainer\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">var</span> unobtrusive <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>unobtrusive <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\tadapters<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\tparseElement<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> skipAttach<span class=\"k\">)</span> <span class=\"k\">{</span>           ","\t\t\t\t\t<span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>element<span class=\"k\">),</span>","\t\t\t\t\t\tform <span class=\"k\">=</span> $element<span class=\"k\">.</span>parents<span class=\"k\">(</span><span class=\"s\">\"form\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span>","\t\t\t\t\t\tvalInfo<span class=\"k\">,</span> rules<span class=\"k\">,</span> messages<span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>form<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\tvalInfo <span class=\"k\">=</span> unobtrusive<span class=\"k\">.</span>validationInfo<span class=\"k\">(</span>form<span class=\"k\">);</span>","\t\t\t\t\tvalInfo<span class=\"k\">.</span>options<span class=\"k\">.</span>rules<span class=\"k\">[</span>element<span class=\"k\">.</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> rules <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t\t\t\tvalInfo<span class=\"k\">.</span>options<span class=\"k\">.</span>messages<span class=\"k\">[</span>element<span class=\"k\">.</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> messages <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\t\t\t\t\t$<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>adapters<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> prefix <span class=\"k\">=</span> <span class=\"s\">\"data-val-\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>name<span class=\"k\">,</span>","\t\t\t\t\t\t\tmessage <span class=\"k\">=</span> $element<span class=\"k\">.</span>attr<span class=\"k\">(</span>prefix<span class=\"k\">),</span>","\t\t\t\t\t\t\tparamValues <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>message <span class=\"k\">!==</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tprefix <span class=\"k\">+=</span> <span class=\"s\">\"-\"</span><span class=\"k\">;</span>","","\t\t\t\t\t\t\t$<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>params<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\tparamValues<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">]</span> <span class=\"k\">=</span> $element<span class=\"k\">.</span>attr<span class=\"k\">(</span>prefix <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>adapt<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\t\t\t\t\t\telement<span class=\"k\">:</span> element<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tform<span class=\"k\">:</span> form<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tmessage<span class=\"k\">:</span> message<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tparams<span class=\"k\">:</span> paramValues<span class=\"k\">,</span>","\t\t\t\t\t\t\t\trules<span class=\"k\">:</span> rules<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tmessages<span class=\"k\">:</span> messages","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>skipAttach<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tvalInfo<span class=\"k\">.</span>attachValidation<span class=\"k\">();</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t\t\tparse<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>selector<span class=\"k\">)</span> <span class=\"k\">{</span>            ","\t\t\t\t\t$<span class=\"k\">(</span>selector<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">\":input[data-val=true]\"</span><span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\tunobtrusive<span class=\"k\">.</span>parseElement<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"s\">\"form\"</span><span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> info <span class=\"k\">=</span> unobtrusive<span class=\"k\">.</span>validationInfo<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>info<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tinfo<span class=\"k\">.</span>attachValidation<span class=\"k\">();</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>            ","","\t\t\t\tonError<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> inputElement<span class=\"k\">)</span> <span class=\"k\">{</span>    ","\t\t\t\t\t<span class=\"k\">var</span> container <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">\"[data-valmsg-for='\"</span> <span class=\"k\">+</span> inputElement<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>name <span class=\"k\">+</span> <span class=\"s\">\"']\"</span><span class=\"k\">),</span>","\t\t\t\t\t\treplace <span class=\"k\">=</span> $<span class=\"k\">.</span>parseJSON<span class=\"k\">(</span>container<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"data-valmsg-replace\"</span><span class=\"k\">))</span> <span class=\"k\">!==</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t\t\t\t\tcontainer<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-valid\"</span><span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-error\"</span><span class=\"k\">);</span>","\t\t\t\t\terror<span class=\"k\">.</span>data<span class=\"k\">(</span>data_container<span class=\"k\">,</span> container<span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>replace<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontainer<span class=\"k\">.</span>empty<span class=\"k\">();</span>","\t\t\t\t\t\terror<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"input-validation-error\"</span><span class=\"k\">).</span>appendTo<span class=\"k\">(</span>container<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\terror<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t\t\tonErrors<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>form<span class=\"k\">,</span> validator<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> container <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">\"[data-valmsg-summary=true]\"</span><span class=\"k\">),</span>","\t\t\t\t\t\tlist <span class=\"k\">=</span> container<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\"ul\"</span><span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>list <span class=\"k\">&amp;&amp;</span> list<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> validator<span class=\"k\">.</span>errorList<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tlist<span class=\"k\">.</span>empty<span class=\"k\">();</span>","\t\t\t\t\t\tcontainer<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"validation-summary-errors\"</span><span class=\"k\">).</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"validation-summary-valid\"</span><span class=\"k\">);</span>","","\t\t\t\t\t\t$<span class=\"k\">.</span>each<span class=\"k\">(</span>validator<span class=\"k\">.</span>errorList<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t$<span class=\"k\">(</span><span class=\"s\">\"&lt;li /&gt;\"</span><span class=\"k\">).</span>html<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>message<span class=\"k\">).</span>appendTo<span class=\"k\">(</span>list<span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t\t\tonSuccess<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> container <span class=\"k\">=</span> error<span class=\"k\">.</span>data<span class=\"k\">(</span>data_container<span class=\"k\">),</span>","\t\t\t\t\t\treplace <span class=\"k\">=</span> $<span class=\"k\">.</span>parseJSON<span class=\"k\">(</span>container<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"data-valmsg-replace\"</span><span class=\"k\">));</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>container<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontainer<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"field-valiion-valid\"</span><span class=\"k\">).</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-error\"</span><span class=\"k\">);</span>","\t\t\t\t\t\terror<span class=\"k\">.</span>removeData<span class=\"k\">(</span>data_container<span class=\"k\">);</span>","","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>replace<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tcontainer<span class=\"k\">.</span>empty<span class=\"k\">();</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\t\t\tvalidationInfo<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>form<span class=\"k\">)</span> <span class=\"k\">{</span>        ","\t\t\t\t\t<span class=\"k\">var</span> $form <span class=\"k\">=</span> $<span class=\"k\">(</span>form<span class=\"k\">),</span>","\t\t\t\t\t\tresult <span class=\"k\">=</span> $form<span class=\"k\">.</span>data<span class=\"k\">(</span>data_validation<span class=\"k\">);</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>result<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tresult <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\toptions<span class=\"k\">:</span> <span class=\"k\">{</span> ","\t\t\t\t\t\t\t\terrorClass<span class=\"k\">:</span> <span class=\"s\">\"input-validation-error\"</span><span class=\"k\">,</span>","\t\t\t\t\t\t\t\terrorElement<span class=\"k\">:</span> <span class=\"s\">\"span\"</span><span class=\"k\">,</span>","\t\t\t\t\t\t\t\terrorPlacement<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span>unobtrusive<span class=\"k\">.</span>onError<span class=\"k\">,</span> form<span class=\"k\">),</span>","\t\t\t\t\t\t\t\tinvalidHandler<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span>unobtrusive<span class=\"k\">.</span>onErrors<span class=\"k\">,</span> form<span class=\"k\">),</span>","\t\t\t\t\t\t\t\tmessages<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\t\t\t\t\t\t\trules<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\t\t\t\t\t\t\tsuccess<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span>unobtrusive<span class=\"k\">.</span>onSuccess<span class=\"k\">,</span> form<span class=\"k\">)</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t\t\t\tattachValidation<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t$form<span class=\"k\">.</span>validate<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t\t\t\tvalidate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>           ","\t\t\t\t\t\t\t\t$form<span class=\"k\">.</span>validate<span class=\"k\">();</span>","\t\t\t\t\t\t\t\t<span class=\"k\">return</span> $form<span class=\"k\">.</span>valid<span class=\"k\">();</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\t\t$form<span class=\"k\">.</span>data<span class=\"k\">(</span>data_validation<span class=\"k\">,</span> result<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"k\">return</span> result<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>    ","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>            ","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t","\tUnobtrusiveValidator<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>\t\t","\t\tbuild<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span>","\t\t<span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_isBuild<span class=\"k\">)</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>_isBuild <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> adapters <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t\t<span class=\"k\">function</span> setValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> ruleName<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\toptions<span class=\"k\">.</span>rules<span class=\"k\">[</span>ruleName<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>message<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\toptions<span class=\"k\">.</span>messages<span class=\"k\">[</span>ruleName<span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">.</span>message<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">function</span> splitAndTrim<span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\s+|\\s+$/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">/\\s*,\\s*/g</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t","\t\t\tadapters <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>unobtrusive<span class=\"k\">.</span>adapters<span class=\"k\">;</span>","\t\t\tadapters<span class=\"k\">.</span>add <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>adapterName<span class=\"k\">,</span> params<span class=\"k\">,</span> fn<span class=\"k\">)</span> <span class=\"k\">{</span>        ","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>fn<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tfn <span class=\"k\">=</span> params<span class=\"k\">;</span>","\t\t\t\t\tparams <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span> name<span class=\"k\">:</span> adapterName<span class=\"k\">,</span> params<span class=\"k\">:</span> params<span class=\"k\">,</span> adapt<span class=\"k\">:</span> fn <span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\tadapters<span class=\"k\">.</span>addBool <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>adapterName<span class=\"k\">,</span> ruleName<span class=\"k\">)</span> <span class=\"k\">{</span>       ","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>add<span class=\"k\">(</span>adapterName<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> ruleName <span class=\"k\">||</span> adapterName<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\tadapters<span class=\"k\">.</span>addMinMax <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>adapterName<span class=\"k\">,</span> minRuleName<span class=\"k\">,</span> maxRuleName<span class=\"k\">,</span> minMaxRuleName<span class=\"k\">,</span> minAttribute<span class=\"k\">,</span> maxAttribute<span class=\"k\">)</span> <span class=\"k\">{</span>       ","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>add<span class=\"k\">(</span>adapterName<span class=\"k\">,</span> <span class=\"k\">[</span>minAttribute <span class=\"k\">||</span> <span class=\"s\">\"min\"</span><span class=\"k\">,</span> maxAttribute <span class=\"k\">||</span> <span class=\"s\">\"max\"</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> min <span class=\"k\">=</span> options<span class=\"k\">.</span>params<span class=\"k\">.</span>min<span class=\"k\">,</span>","\t\t\t\t\t\tmax <span class=\"k\">=</span> options<span class=\"k\">.</span>params<span class=\"k\">.</span>max<span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>min <span class=\"k\">&amp;&amp;</span> max<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> minMaxRuleName<span class=\"k\">,</span> <span class=\"k\">[</span>min<span class=\"k\">,</span> max<span class=\"k\">]);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>min<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> minRuleName<span class=\"k\">,</span> min<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>max<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> maxRuleName<span class=\"k\">,</span> max<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\tadapters<span class=\"k\">.</span>addSingleVal <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>adapterName<span class=\"k\">,</span> attribute<span class=\"k\">,</span> ruleName<span class=\"k\">)</span> <span class=\"k\">{</span>       ","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>add<span class=\"k\">(</span>adapterName<span class=\"k\">,</span> <span class=\"k\">[</span>attribute <span class=\"k\">||</span> <span class=\"s\">\"val\"</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> ruleName <span class=\"k\">||</span> adapterName<span class=\"k\">,</span> options<span class=\"k\">.</span>params<span class=\"k\">[</span>attribute<span class=\"k\">]);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t   ","\t\t\tadapters<span class=\"k\">.</span>addSingleVal<span class=\"k\">(</span><span class=\"s\">\"accept\"</span><span class=\"k\">,</span> <span class=\"s\">\"exts\"</span><span class=\"k\">).</span>addSingleVal<span class=\"k\">(</span><span class=\"s\">\"regex\"</span><span class=\"k\">,</span> <span class=\"s\">\"pattern\"</span><span class=\"k\">);</span>","\t\t\tadapters<span class=\"k\">.</span>addBool<span class=\"k\">(</span><span class=\"s\">\"creditcard\"</span><span class=\"k\">).</span>addBool<span class=\"k\">(</span><span class=\"s\">\"date\"</span><span class=\"k\">).</span>addBool<span class=\"k\">(</span><span class=\"s\">\"digits\"</span><span class=\"k\">).</span>addBool<span class=\"k\">(</span><span class=\"s\">\"email\"</span><span class=\"k\">).</span>addBool<span class=\"k\">(</span><span class=\"s\">\"number\"</span><span class=\"k\">).</span>addBool<span class=\"k\">(</span><span class=\"s\">\"url\"</span><span class=\"k\">);</span>","\t\t\tadapters<span class=\"k\">.</span>addMinMax<span class=\"k\">(</span><span class=\"s\">\"length\"</span><span class=\"k\">,</span> <span class=\"s\">\"minlength\"</span><span class=\"k\">,</span> <span class=\"s\">\"maxlength\"</span><span class=\"k\">,</span> <span class=\"s\">\"rangelength\"</span><span class=\"k\">).</span>addMinMax<span class=\"k\">(</span><span class=\"s\">\"range\"</span><span class=\"k\">,</span> <span class=\"s\">\"min\"</span><span class=\"k\">,</span> <span class=\"s\">\"max\"</span><span class=\"k\">,</span> <span class=\"s\">\"range\"</span><span class=\"k\">);</span>","\t\t\tadapters<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"s\">\"equalto\"</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"other\"</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> $<span class=\"k\">(</span>options<span class=\"k\">.</span>form<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">\":input[name=\"</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>params<span class=\"k\">.</span>other <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"s\">\"equalTo\"</span><span class=\"k\">,</span> element<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\tadapters<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"s\">\"required\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>                   ","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>element<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"INPUT\"</span> <span class=\"k\">||</span> options<span class=\"k\">.</span>element<span class=\"k\">.</span>type<span class=\"k\">.</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"CHECKBOX\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"s\">\"required\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\tadapters<span class=\"k\">.</span>add<span class=\"k\">(</span><span class=\"s\">\"remote\"</span><span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"url\"</span><span class=\"k\">,</span> <span class=\"s\">\"type\"</span><span class=\"k\">,</span> <span class=\"s\">\"fields\"</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\turl<span class=\"k\">:</span> options<span class=\"k\">.</span>params<span class=\"k\">.</span>url<span class=\"k\">,</span>","\t\t\t\t\ttype<span class=\"k\">:</span> options<span class=\"k\">.</span>params<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">\"GET\"</span><span class=\"k\">,</span>","\t\t\t\t\tdata<span class=\"k\">:</span> <span class=\"k\">{}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t$<span class=\"k\">.</span>each<span class=\"k\">(</span>splitAndTrim<span class=\"k\">(</span>options<span class=\"k\">.</span>params<span class=\"k\">.</span>fields <span class=\"k\">||</span> options<span class=\"k\">.</span>element<span class=\"k\">.</span>name<span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>i<span class=\"k\">,</span> fieldName<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tvalue<span class=\"k\">.</span>data<span class=\"k\">[</span>fieldName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> $<span class=\"k\">(</span>options<span class=\"k\">.</span>form<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">\":input[name='\"</span> <span class=\"k\">+</span> fieldName <span class=\"k\">+</span> <span class=\"s\">\"']\"</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\tsetValidationValues<span class=\"k\">(</span>options<span class=\"k\">,</span> <span class=\"s\">\"remote\"</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>validator<span class=\"k\">.</span>unobtrusive <span class=\"k\">&amp;&amp;</span> $<span class=\"k\">.</span>validator<span class=\"k\">.</span>unobtrusive<span class=\"k\">.</span>adapters<span class=\"k\">)</span> ","\t\t\t\t$<span class=\"k\">.</span>extend<span class=\"k\">(</span>adapters<span class=\"k\">,</span> $<span class=\"k\">.</span>validator<span class=\"k\">.</span>unobtrusive<span class=\"k\">.</span>adapters<span class=\"k\">);</span>","","\t\t\t$<span class=\"k\">.</span>validator<span class=\"k\">.</span>addMethod<span class=\"k\">(</span><span class=\"s\">\"regex\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> element<span class=\"k\">,</span> params<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>optional<span class=\"k\">(</span>element<span class=\"k\">))</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">var</span> match <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>params<span class=\"k\">).</span>exec<span class=\"k\">(</span>value<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span> match <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">.</span>index <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>length <span class=\"k\">==</span> value<span class=\"k\">.</span>length<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t$<span class=\"k\">.</span>validator<span class=\"k\">.</span>addMethod<span class=\"k\">(</span><span class=\"s\">'number'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> groupSize <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericgroupsize<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">var</span> builder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","\t\t\t\tbuilder<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'^-?(?:</span><span class=\"t\">\\\\</span><span class=\"s\">d+|</span><span class=\"t\">\\\\</span><span class=\"s\">d{1,'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>groupSize<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'}(?:'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericgroupseparator<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">d{'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>groupSize<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'})+)(?:</span><span class=\"t\">\\\\</span><span class=\"s\">'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericdecimalseparator<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">d+)?$'</span><span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>optional<span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>builder<span class=\"k\">.</span>string<span class=\"k\">()).</span>test<span class=\"k\">(</span>value<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","        parse<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span>","        <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>build<span class=\"k\">();</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>unobtrusive<span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>formId<span class=\"k\">);</span>","        <span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>    ","","    <span class=\"k\">var</span> Mvc2Validator <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>validationMetaData<span class=\"k\">)</span>","\t<span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>validationMetaData <span class=\"k\">=</span> validationMetaData<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t","\tMvc2Validator<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tbuild<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>validationContext<span class=\"k\">)</span><span class=\"k\">{</span>","","            $<span class=\"k\">.</span>validator<span class=\"k\">.</span>addMethod<span class=\"k\">(</span><span class=\"s\">\"regex\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> element<span class=\"k\">,</span> params<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>optional<span class=\"k\">(</span>element<span class=\"k\">))</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">var</span> match <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>params<span class=\"k\">).</span>exec<span class=\"k\">(</span>value<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span> match <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">.</span>index <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>length <span class=\"k\">==</span> value<span class=\"k\">.</span>length<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t$<span class=\"k\">.</span>validator<span class=\"k\">.</span>addMethod<span class=\"k\">(</span><span class=\"s\">'number'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> groupSize <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericgroupsize<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">var</span> builder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","\t\t\t\tbuilder<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'^-?(?:</span><span class=\"t\">\\\\</span><span class=\"s\">d+|</span><span class=\"t\">\\\\</span><span class=\"s\">d{1,'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>groupSize<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'}(?:'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericgroupseparator<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">d{'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>groupSize<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'})+)(?:</span><span class=\"t\">\\\\</span><span class=\"s\">'</span><span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>numericdecimalseparator<span class=\"k\">)</span>","\t\t\t\t\t   <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">d+)?$'</span><span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>optional<span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>builder<span class=\"k\">.</span>string<span class=\"k\">()).</span>test<span class=\"k\">(</span>value<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">function</span> applyRangeValidator<span class=\"k\">(</span>object<span class=\"k\">,</span> min<span class=\"k\">,</span> max<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobject<span class=\"k\">[</span><span class=\"s\">\"range\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>min<span class=\"k\">,</span> max<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> applyRegularExpressionValidator<span class=\"k\">(</span>object<span class=\"k\">,</span> pattern<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobject<span class=\"k\">[</span><span class=\"s\">\"regex\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> pattern<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> applyRequiredValidator<span class=\"k\">(</span>object<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobject<span class=\"k\">[</span><span class=\"s\">\"required\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> applyStringLengthValidator<span class=\"k\">(</span>object<span class=\"k\">,</span> maxLength<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobject<span class=\"k\">[</span><span class=\"s\">\"maxlength\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> maxLength<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> applyUnknownValidator<span class=\"k\">(</span>object<span class=\"k\">,</span> validationType<span class=\"k\">,</span> validationParameters<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobject<span class=\"k\">[</span>validationType<span class=\"k\">]</span> <span class=\"k\">=</span> validationParameters<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> createFieldToValidationMessageMapping<span class=\"k\">(</span>validationFields<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> mapping <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> validationFields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> thisField <span class=\"k\">=</span> validationFields<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\tmapping<span class=\"k\">[</span>thisField<span class=\"k\">.</span>FieldName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"#\"</span> <span class=\"k\">+</span> thisField<span class=\"k\">.</span>ValidationMessageId<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> mapping<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">function</span> createErrorMessagesObject<span class=\"k\">(</span>validationFields<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> messagesObj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> validationFields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> thisField <span class=\"k\">=</span> validationFields<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">var</span> thisFieldMessages <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t\t\t\tmessagesObj<span class=\"k\">[</span>thisField<span class=\"k\">.</span>FieldName<span class=\"k\">]</span> <span class=\"k\">=</span> thisFieldMessages<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">var</span> validationRules <span class=\"k\">=</span> thisField<span class=\"k\">.</span>ValidationRules<span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> j <span class=\"k\">&lt;</span> validationRules<span class=\"k\">.</span>length<span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">var</span> thisRule <span class=\"k\">=</span> validationRules<span class=\"k\">[</span>j<span class=\"k\">];</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>thisRule<span class=\"k\">.</span>ErrorMessage<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">var</span> jQueryValidationType <span class=\"k\">=</span> thisRule<span class=\"k\">.</span>ValidationType<span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">switch</span> <span class=\"k\">(</span>thisRule<span class=\"k\">.</span>ValidationType<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"regularExpression\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t\t\t\tjQueryValidationType <span class=\"k\">=</span> <span class=\"s\">\"regex\"</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","","\t\t\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"stringLength\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t\t\t\tjQueryValidationType <span class=\"k\">=</span> <span class=\"s\">\"maxlength\"</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t\t\tthisFieldMessages<span class=\"k\">[</span>jQueryValidationType<span class=\"k\">]</span> <span class=\"k\">=</span> thisRule<span class=\"k\">.</span>ErrorMessage<span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> messagesObj<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">function</span> createRulesForField<span class=\"k\">(</span>validationField<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> validationRules <span class=\"k\">=</span> validationField<span class=\"k\">.</span>ValidationRules<span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// hook each rule into jquery</span>","\t\t\t\t<span class=\"k\">var</span> rulesObj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> validationRules<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> thisRule <span class=\"k\">=</span> validationRules<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">switch</span> <span class=\"k\">(</span>thisRule<span class=\"k\">.</span>ValidationType<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"range\"</span><span class=\"k\">:</span>                                   ","                            <span class=\"k\">var</span> min <span class=\"k\">=</span> <span class=\"k\">!(!!</span>thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"minimum\"</span><span class=\"k\">])</span> <span class=\"k\">?</span> thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"min\"</span><span class=\"k\">]</span> <span class=\"k\">:</span> thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"minimum\"</span><span class=\"k\">];</span>","                            <span class=\"k\">var</span> max <span class=\"k\">=</span> <span class=\"k\">!(!!</span>thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"maximum\"</span><span class=\"k\">])</span> <span class=\"k\">?</span> thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"max\"</span><span class=\"k\">]</span> <span class=\"k\">:</span> thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"maximum\"</span><span class=\"k\">];</span>","\t\t\t\t\t\t\tapplyRangeValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">,</span>","\t\t\t\t\t\t\t\t    min<span class=\"k\">,</span> max<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"regularExpression\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"regex\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t\tapplyRegularExpressionValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tthisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"pattern\"</span><span class=\"k\">]);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"required\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t\tapplyRequiredValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"stringLength\"</span><span class=\"k\">:</span>                ","\t\t\t\t\t\t\tapplyStringLengthValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tthisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"maximumLength\"</span><span class=\"k\">]);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">case</span> <span class=\"s\">\"length\"</span><span class=\"k\">:</span>","\t\t\t\t\t\t\tapplyStringLengthValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tthisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">[</span><span class=\"s\">\"max\"</span><span class=\"k\">]);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">default</span><span class=\"k\">:</span>","\t\t\t\t\t\t\tapplyUnknownValidator<span class=\"k\">(</span>rulesObj<span class=\"k\">,</span>","\t\t\t\t\t\t\t\tthisRule<span class=\"k\">.</span>ValidationType<span class=\"k\">,</span> thisRule<span class=\"k\">.</span>ValidationParameters<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> rulesObj<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">function</span> createValidationOptions<span class=\"k\">(</span>validationFields<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> rulesObj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> validationFields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> validationField <span class=\"k\">=</span> validationFields<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">var</span> fieldName <span class=\"k\">=</span> validationField<span class=\"k\">.</span>FieldName<span class=\"k\">;</span>","\t\t\t\t\trulesObj<span class=\"k\">[</span>fieldName<span class=\"k\">]</span> <span class=\"k\">=</span> createRulesForField<span class=\"k\">(</span>validationField<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">return</span> rulesObj<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> theForm <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"#\"</span> <span class=\"k\">+</span> validationContext<span class=\"k\">.</span>FormId<span class=\"k\">);</span>","","\t\t\t<span class=\"k\">var</span> fields <span class=\"k\">=</span> validationContext<span class=\"k\">.</span>Fields<span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> rulesObj <span class=\"k\">=</span> createValidationOptions<span class=\"k\">(</span>fields<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> fieldToMessageMappings <span class=\"k\">=</span> createFieldToValidationMessageMapping<span class=\"k\">(</span>fields<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> errorMessagesObj <span class=\"k\">=</span> createErrorMessagesObject<span class=\"k\">(</span>fields<span class=\"k\">);</span>","","\t\t\t<span class=\"k\">var</span> options <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\terrorClass<span class=\"k\">:</span> <span class=\"s\">\"input-validation-error\"</span><span class=\"k\">,</span>","\t\t\t\terrorElement<span class=\"k\">:</span> <span class=\"s\">\"span\"</span><span class=\"k\">,</span>","\t\t\t\terrorPlacement<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>error<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> messageSpan <span class=\"k\">=</span> fieldToMessageMappings<span class=\"k\">[</span>element<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">)];</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>messageSpan<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t$<span class=\"k\">(</span>messageSpan<span class=\"k\">).</span>empty<span class=\"k\">()</span>","\t\t\t\t\t\t\t\t\t\t<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-valid\"</span><span class=\"k\">)</span>","\t\t\t\t\t\t\t\t\t\t<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-error\"</span><span class=\"k\">)</span>","","\t\t\t\t\t\terror<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"input-validation-error\"</span><span class=\"k\">)</span>","\t\t\t\t\t\t\t <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"_for_validation_message\"</span><span class=\"k\">,</span> messageSpan<span class=\"k\">)</span>","\t\t\t\t\t\t\t <span class=\"k\">.</span>appendTo<span class=\"k\">(</span>messageSpan<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tmessages<span class=\"k\">:</span> errorMessagesObj<span class=\"k\">,</span>","\t\t\t\trules<span class=\"k\">:</span> rulesObj<span class=\"k\">,</span>","\t\t\t\tsuccess<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>label<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span>label<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"_for_validation_message\"</span><span class=\"k\">))</span>","\t\t\t\t\t\t<span class=\"k\">.</span>empty<span class=\"k\">()</span>","\t\t\t\t\t\t<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-valid\"</span><span class=\"k\">)</span>","\t\t\t\t\t\t<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">\"field-validation-error\"</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\ttheForm<span class=\"k\">.</span>validate<span class=\"k\">(</span>options<span class=\"k\">);</span>\t\t\t","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tparse<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>build<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>validationMetaData<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>    ","","    <span class=\"k\">function</span> getCommand<span class=\"k\">(</span>columns<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> columns<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>columns<span class=\"k\">[</span>i<span class=\"k\">].</span>commands<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> commands <span class=\"k\">=</span> columns<span class=\"k\">[</span>i<span class=\"k\">].</span>commands<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> length <span class=\"k\">=</span> commands<span class=\"k\">.</span>length<span class=\"k\">;</span> j <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>commands<span class=\"k\">[</span>j<span class=\"k\">].</span>name <span class=\"k\">==</span> name<span class=\"k\">)</span> <span class=\"k\">return</span> commands<span class=\"k\">[</span>j<span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>editing <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">function</span> cancelAll<span class=\"k\">()</span> <span class=\"k\">{</span>","        $<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'div.t-grid'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> grid <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>data<span class=\"k\">(</span><span class=\"s\">'tGrid'</span><span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>grid <span class=\"k\">&amp;&amp;</span> grid<span class=\"k\">.</span>cancel<span class=\"k\">)</span>","                                grid<span class=\"k\">.</span>cancel<span class=\"k\">();</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>editing<span class=\"k\">.</span>initialize <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>grid<span class=\"k\">)</span> <span class=\"k\">{</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>grid<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>implementation<span class=\"k\">);</span>","        <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>grid<span class=\"k\">.</span>element<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>grid<span class=\"k\">.</span>isAjax<span class=\"k\">())</span> <span class=\"k\">{</span>","            $element<span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-edit'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>editRow<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-cancel'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>cancel<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-delete'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>deleteRow<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-update'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>save<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    grid<span class=\"k\">.</span>updateRow<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-add'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>addRow<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","            <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-insert'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                grid<span class=\"k\">.</span>save<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    grid<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">))</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            $element<span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-delete'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stop<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>grid<span class=\"k\">.</span>editing<span class=\"k\">.</span>confirmDelete <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>confirm<span class=\"k\">(</span>grid<span class=\"k\">.</span>localization<span class=\"k\">.</span>deleteConfirmation<span class=\"k\">))</span>","                    e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">));</span>","","            grid<span class=\"k\">.</span>validation<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        grid<span class=\"k\">.</span>errorView <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>ErrorView<span class=\"k\">();</span>","","        grid<span class=\"k\">.</span>modelBinder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>ModelBinder<span class=\"k\">();</span>","","        grid<span class=\"k\">.</span>formViewBinder <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>FormViewBinder<span class=\"k\">(</span><span class=\"k\">{</span>","            <span class=\"s\">'date'</span><span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> column <span class=\"k\">=</span> grid<span class=\"k\">.</span>columnFromMember<span class=\"k\">(</span>name<span class=\"k\">);</span>","                <span class=\"k\">var</span> format <span class=\"k\">=</span> column <span class=\"k\">?</span> column<span class=\"k\">.</span>format <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> $t<span class=\"k\">.</span>formatString<span class=\"k\">(</span>format <span class=\"k\">||</span> <span class=\"s\">'{0:G}'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        $element<span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">':input:not(.t-button)'</span><span class=\"k\">,</span> <span class=\"s\">'keydown'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stop<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> keyMap <span class=\"k\">=</span> <span class=\"k\">{</span> <span class=\"s\">13</span><span class=\"k\">:</span> <span class=\"s\">'.t-grid-update, .t-grid-insert'</span><span class=\"k\">,</span> <span class=\"s\">27</span><span class=\"k\">:</span> <span class=\"s\">'.t-grid-cancel'</span> <span class=\"k\">}</span><span class=\"k\">;</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">).</span>find<span class=\"k\">(</span>keyMap<span class=\"k\">[</span>e<span class=\"k\">.</span>keyCode<span class=\"k\">]).</span>click<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">));</span>        ","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> popup<span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            result<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tWindow'</span><span class=\"k\">).</span>close<span class=\"k\">();</span>","            result<span class=\"k\">.</span>remove<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> result <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div /&gt;'</span><span class=\"k\">,</span> <span class=\"k\">{</span> id<span class=\"k\">:</span> options<span class=\"k\">.</span>element<span class=\"k\">.</span>id <span class=\"k\">+</span> <span class=\"s\">'PopUp'</span> <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>appendTo<span class=\"k\">(</span>options<span class=\"k\">.</span>element<span class=\"k\">)</span>","                <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span> top<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> left<span class=\"k\">:</span> <span class=\"s\">'50%'</span><span class=\"k\">,</span> marginLeft<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">90</span> <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>tWindow<span class=\"k\">(</span>options<span class=\"k\">.</span>settings<span class=\"k\">)</span>","                <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-cancel'</span><span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    remove<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">));</span>","","        $<span class=\"k\">(</span>options<span class=\"k\">.</span>element<span class=\"k\">).</span>unbind<span class=\"k\">(</span><span class=\"s\">'dataBound'</span><span class=\"k\">).</span>bind<span class=\"k\">(</span><span class=\"s\">'dataBound'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>unbind<span class=\"k\">(</span><span class=\"s\">'dataBound'</span><span class=\"k\">,</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">);</span>","            remove<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        $<span class=\"k\">.</span>each<span class=\"k\">([</span><span class=\"s\">'insert'</span><span class=\"k\">,</span> <span class=\"s\">'update'</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">[</span>value<span class=\"k\">])</span>","                result<span class=\"k\">.</span>undelegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-'</span> <span class=\"k\">+</span> value<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">)</span>","                      <span class=\"k\">.</span>delegate<span class=\"k\">(</span><span class=\"s\">'.t-grid-'</span> <span class=\"k\">+</span> value<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                          options<span class=\"k\">[</span>value<span class=\"k\">](</span>e<span class=\"k\">.</span>target<span class=\"k\">,</span> result<span class=\"k\">);</span>","                      <span class=\"k\">}</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        result","            <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-close'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>stopAll<span class=\"k\">(</span>remove<span class=\"k\">))</span>","            <span class=\"k\">.</span>end<span class=\"k\">()</span>","            <span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tWindow'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>title<span class=\"k\">(</span>options<span class=\"k\">.</span>title<span class=\"k\">)</span>","            <span class=\"k\">.</span>content<span class=\"k\">(</span>options<span class=\"k\">.</span>content<span class=\"k\">)</span>","            <span class=\"k\">.</span>open<span class=\"k\">();</span>","","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>editing<span class=\"k\">.</span>implementation <span class=\"k\">=</span> <span class=\"k\">{</span>","        insertRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> values <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>extractValues<span class=\"k\">(</span>$tr<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>$t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'save'</span><span class=\"k\">,</span> <span class=\"k\">{</span> mode<span class=\"k\">:</span> <span class=\"s\">'insert'</span><span class=\"k\">,</span> values<span class=\"k\">:</span> values<span class=\"k\">,</span> form<span class=\"k\">:</span> $tr<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>sendValues<span class=\"k\">(</span>values<span class=\"k\">,</span> <span class=\"s\">'insertUrl'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        updateRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> dataItem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataItem<span class=\"k\">(</span>$tr<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">)</span> <span class=\"k\">||</span> $tr<span class=\"k\">);</span>","            <span class=\"k\">var</span> values <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>extractValues<span class=\"k\">(</span>$tr<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>$t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'save'</span><span class=\"k\">,</span> <span class=\"k\">{</span> mode<span class=\"k\">:</span> <span class=\"s\">'edit'</span><span class=\"k\">,</span> dataItem<span class=\"k\">:</span> dataItem<span class=\"k\">,</span> values<span class=\"k\">:</span> values<span class=\"k\">,</span> form<span class=\"k\">:</span> $tr<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>sendValues<span class=\"k\">(</span>values<span class=\"k\">,</span> <span class=\"s\">'updateUrl'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        deleteRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>$t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'delete'</span><span class=\"k\">,</span> <span class=\"k\">{</span> dataItem<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataItem<span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>confirmDelete <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> confirm<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>localization<span class=\"k\">.</span>deleteConfirmation<span class=\"k\">))</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>sendValues<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>extractValues<span class=\"k\">(</span>$tr<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span> <span class=\"s\">'deleteUrl'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        editRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">{</span>","            cancelAll<span class=\"k\">();</span>","            <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","            <span class=\"k\">var</span> edit <span class=\"k\">=</span> getCommand<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">,</span> <span class=\"s\">'edit'</span><span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>form<span class=\"k\">(</span>html<span class=\"k\">,</span>","                      <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'update'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr <span class=\"k\">}</span><span class=\"k\">,</span>","                       <span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'cancel'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr<span class=\"k\">}</span><span class=\"k\">],</span>","                      $tr<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-hierarchy-cell'</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'.t-icon'</span><span class=\"k\">).</span>hasClass<span class=\"k\">(</span><span class=\"s\">'t-plus'</span><span class=\"k\">));</span>","","            <span class=\"k\">var</span> dataItem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataItem<span class=\"k\">(</span>$tr<span class=\"k\">);</span>","            <span class=\"k\">var</span> $td <span class=\"k\">=</span> $<span class=\"k\">(</span>html<span class=\"k\">.</span>string<span class=\"k\">());</span>","            $td<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>submit<span class=\"k\">(</span>$t<span class=\"k\">.</span>preventDefault<span class=\"k\">);</span>","            $td<span class=\"k\">.</span>children<span class=\"k\">().</span>hide<span class=\"k\">();</span>","","            <span class=\"k\">var</span> cells <span class=\"k\">=</span> $td<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'tr:first td:not(.t-group-cell, .t-hierarchy-cell)'</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> mode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>mode<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">!=</span> <span class=\"s\">'PopUp'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                $tr<span class=\"k\">.</span>html<span class=\"k\">(</span>$td<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                popup<span class=\"k\">(</span><span class=\"k\">{</span>","                    title<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>localization<span class=\"k\">.</span>edit<span class=\"k\">,</span>","                    element<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span>","                    settings<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>popup<span class=\"k\">,</span>","                    content<span class=\"k\">:</span> $td<span class=\"k\">,</span>","                    update<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>target<span class=\"k\">,</span> $popup<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>save<span class=\"k\">(</span>target<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                            $popup<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">,</span> $tr<span class=\"k\">);</span>","                            <span class=\"k\">this</span><span class=\"k\">.</span>updateRow<span class=\"k\">(</span>$popup<span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>formViewBinder<span class=\"k\">.</span>bind<span class=\"k\">(</span>$td<span class=\"k\">,</span> dataItem<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">==</span> <span class=\"s\">'InLine'</span><span class=\"k\">)</span>","                $<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>i<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>readonly<span class=\"k\">)</span>","                        cells<span class=\"k\">.</span>eq<span class=\"k\">(</span>i<span class=\"k\">).</span>html<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>display<span class=\"k\">(</span>dataItem<span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","","            $td<span class=\"k\">.</span>children<span class=\"k\">().</span>show<span class=\"k\">();</span>","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'edit'</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                mode<span class=\"k\">:</span> <span class=\"s\">'edit'</span><span class=\"k\">,</span>","                form<span class=\"k\">:</span> $td<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">||</span> $td<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                dataItem<span class=\"k\">:</span> dataItem","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>validation<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        addRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            cancelAll<span class=\"k\">();</span>","            <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","            <span class=\"k\">var</span> mode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>mode<span class=\"k\">;</span>","            <span class=\"k\">var</span> edit <span class=\"k\">=</span> getCommand<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">,</span> <span class=\"s\">'edit'</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> $td<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">!=</span> <span class=\"s\">'PopUp'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;tr class=\"t-grid-new-row\"&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>form<span class=\"k\">(</span>html<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'insert'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr <span class=\"k\">}</span><span class=\"k\">,</span>","                                 <span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'cancel'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr<span class=\"k\">}</span><span class=\"k\">]);</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/tr&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> $frm <span class=\"k\">=</span> $<span class=\"k\">(</span>html<span class=\"k\">.</span>string<span class=\"k\">());</span>","                $frm<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>submit<span class=\"k\">(</span>$t<span class=\"k\">.</span>preventDefault<span class=\"k\">);</span>","                $td <span class=\"k\">=</span> $frm<span class=\"k\">.</span>prependTo<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>$tbody<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>form<span class=\"k\">(</span>html<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'insert'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr <span class=\"k\">}</span><span class=\"k\">,</span>","                                 <span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'cancel'</span><span class=\"k\">,</span> attr<span class=\"k\">:</span> edit<span class=\"k\">.</span>attr<span class=\"k\">,</span> buttonType<span class=\"k\">:</span> edit<span class=\"k\">.</span>buttonType<span class=\"k\">,</span> imageAttr<span class=\"k\">:</span> edit<span class=\"k\">.</span>imageAttr<span class=\"k\">}</span><span class=\"k\">]);</span>","","                $td <span class=\"k\">=</span> $<span class=\"k\">(</span>html<span class=\"k\">.</span>string<span class=\"k\">());</span>","                $td<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>submit<span class=\"k\">(</span>$t<span class=\"k\">.</span>preventDefault<span class=\"k\">);</span>","                popup<span class=\"k\">(</span><span class=\"k\">{</span>","                    title<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>localization<span class=\"k\">.</span>insert<span class=\"k\">,</span>","                    element<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span>","                    settings<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>popup<span class=\"k\">,</span>","                    content<span class=\"k\">:</span> $td<span class=\"k\">,</span>","                    insert<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>target<span class=\"k\">,</span> $popup<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>save<span class=\"k\">(</span>target<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                            <span class=\"k\">this</span><span class=\"k\">.</span>insertRow<span class=\"k\">(</span>$popup<span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'edit'</span><span class=\"k\">,</span> <span class=\"k\">{</span> mode<span class=\"k\">:</span> <span class=\"s\">'insert'</span><span class=\"k\">,</span> form<span class=\"k\">:</span> $td<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">||</span> $td<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">)</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>validation<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        extractValues<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">,</span> extractKeys<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> values <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>modelBinder<span class=\"k\">.</span>bind<span class=\"k\">(</span>$tr<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>extractKeys<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> dataItem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataItem<span class=\"k\">(</span>$tr<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">)</span> <span class=\"k\">||</span> $tr<span class=\"k\">);</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> dataKey <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataKeys<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>valueFor<span class=\"k\">(</span><span class=\"k\">{</span> member<span class=\"k\">:</span> dataKey <span class=\"k\">}</span><span class=\"k\">)(</span>dataItem<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">instanceof</span> Date<span class=\"k\">)</span>","                        value <span class=\"k\">=</span> $t<span class=\"k\">.</span>formatString<span class=\"k\">(</span><span class=\"s\">'{0:G}'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","                    ","                    values<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>ws <span class=\"k\">?</span> dataKey <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataKeys<span class=\"k\">[</span>dataKey<span class=\"k\">]]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> values<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        cancelRow<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$tr<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>$tr<span class=\"k\">.</span>length<span class=\"k\">)</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>$tr<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">'.t-grid-new-row'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> $tbody <span class=\"k\">=</span> $tr<span class=\"k\">.</span>closest<span class=\"k\">(</span><span class=\"s\">'tbody'</span><span class=\"k\">);</span>","                $tr<span class=\"k\">.</span>remove<span class=\"k\">();</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie<span class=\"k\">)</span>","                    $tbody<span class=\"k\">.</span>hide<span class=\"k\">().</span>show<span class=\"k\">();</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> dataItem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataItem<span class=\"k\">(</span>$tr<span class=\"k\">);</span>","            <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","","            <span class=\"k\">var</span> expanding <span class=\"k\">=</span> $tr<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.t-hierarchy-cell'</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'.t-icon'</span><span class=\"k\">).</span>hasClass<span class=\"k\">(</span><span class=\"s\">'t-plus'</span><span class=\"k\">);</span>","","            html<span class=\"k\">.</span>rep<span class=\"k\">(</span><span class=\"s\">'&lt;td class=\"t-group-cell\" /&gt;'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>groups<span class=\"k\">.</span>length<span class=\"k\">)</span>","                <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'&lt;td class=\"t-hierarchy-cell\"&gt;&lt;a href=\"#\" class=\"t-icon '</span> <span class=\"k\">+</span> <span class=\"k\">(</span>expanding <span class=\"k\">?</span> <span class=\"s\">'t-plus'</span> <span class=\"k\">:</span> <span class=\"s\">'t-minus'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'\"&gt;&lt;/a&gt;&lt;/td&gt;'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>detail<span class=\"k\">);</span>","","            $<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>i<span class=\"k\">,</span> c<span class=\"k\">)</span> <span class=\"k\">{</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;td'</span><span class=\"k\">)</span>","                  <span class=\"k\">.</span>cat<span class=\"k\">(</span>c<span class=\"k\">.</span>attr<span class=\"k\">)</span>","                  <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">' class=\"t-last\"'</span><span class=\"k\">,</span> i <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span>","                  <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>c<span class=\"k\">.</span>display<span class=\"k\">)</span>","                    html<span class=\"k\">.</span>cat<span class=\"k\">(</span>c<span class=\"k\">.</span>display<span class=\"k\">(</span>dataItem<span class=\"k\">));</span>","","                <span class=\"k\">this</span><span class=\"k\">.</span>appendCommandHtml<span class=\"k\">(</span>c<span class=\"k\">.</span>commands<span class=\"k\">,</span> html<span class=\"k\">);</span>","","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/td&gt;'</span><span class=\"k\">);</span>","","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","            $tr<span class=\"k\">.</span>html<span class=\"k\">(</span>html<span class=\"k\">.</span>string<span class=\"k\">());</span>","","            $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">,</span> <span class=\"s\">'rowDataBound'</span><span class=\"k\">,</span> <span class=\"k\">{</span> row<span class=\"k\">:</span> $tr<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> dataItem<span class=\"k\">:</span> dataItem <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        form<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>html<span class=\"k\">,</span> commands<span class=\"k\">,</span> expanding<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> colgroup <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$tbody<span class=\"k\">.</span>siblings<span class=\"k\">(</span><span class=\"s\">'colgroup'</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> mode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>mode<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">!=</span> <span class=\"s\">'PopUp'</span><span class=\"k\">)</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;td class=\"t-edit-container\" colspan=\"'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>groups<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>detail <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">))</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'\"&gt;'</span><span class=\"k\">);</span>","","            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;form class=\"t-edit-form\" action=\"#\" method=\"post\" id=\"'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>formId<span class=\"k\">())</span>","                <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'\"&gt;'</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">==</span> <span class=\"s\">'InLine'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;table cellspacing=\"0\"&gt;&lt;colgroup&gt;'</span><span class=\"k\">);</span>","","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'colgroup:first'</span><span class=\"k\">).</span>children<span class=\"k\">()</span>","                    <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> width <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>width<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>hasClass<span class=\"k\">(</span><span class=\"s\">'t-group-col'</span><span class=\"k\">))</span>","                            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;col class=\"t-group-col\" /&gt;'</span><span class=\"k\">);</span>","                        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>width <span class=\"k\">!=</span> <span class=\"s\">'0px'</span><span class=\"k\">)</span>","                            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;col style=\"width:'</span><span class=\"k\">).</span>cat<span class=\"k\">(</span>width<span class=\"k\">).</span>cat<span class=\"k\">(</span><span class=\"s\">'\" /&gt;'</span><span class=\"k\">);</span>","                        <span class=\"k\">else</span>","                            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;col /&gt;'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","","                <span class=\"k\">var</span> hierarchyCellHtml <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","                hierarchyCellHtml<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;td class=\"t-hierarchy-cell\"&gt;'</span><span class=\"k\">)</span>","                                 <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'&lt;a href=\"#\" class=\"t-icon '</span> <span class=\"k\">+</span> <span class=\"k\">(</span>expanding <span class=\"k\">?</span> <span class=\"s\">'t-plus'</span> <span class=\"k\">:</span> <span class=\"s\">'t-minus'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'\"&gt;&lt;/a&gt;'</span><span class=\"k\">,</span> expanding <span class=\"k\">!=</span> undefined<span class=\"k\">)</span>","                                 <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/td&gt;'</span><span class=\"k\">);</span>","","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>rep<span class=\"k\">(</span><span class=\"s\">'&lt;td class=\"t-group-cell\" /&gt;'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>groups<span class=\"k\">.</span>length<span class=\"k\">)</span>","                    <span class=\"k\">.</span>catIf<span class=\"k\">(</span>hierarchyCellHtml<span class=\"k\">.</span>string<span class=\"k\">(),</span> <span class=\"k\">this</span><span class=\"k\">.</span>detail<span class=\"k\">);</span>","","                $<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>i<span class=\"k\">,</span> c<span class=\"k\">)</span> <span class=\"k\">{</span>","                    html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;td'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span>c<span class=\"k\">.</span>attr<span class=\"k\">)</span>","                        <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">' class=\"t-last\"'</span><span class=\"k\">,</span> i <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>columns<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>catIf<span class=\"k\">(</span>unescape<span class=\"k\">(</span>c<span class=\"k\">.</span>editor<span class=\"k\">),</span> c<span class=\"k\">.</span>editor<span class=\"k\">)</span>","                        <span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'&amp;nbsp;'</span><span class=\"k\">,</span> <span class=\"k\">!</span>c<span class=\"k\">.</span>editor <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>c<span class=\"k\">.</span>commands<span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>c<span class=\"k\">.</span>commands<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> hasEditCommand <span class=\"k\">=</span> $<span class=\"k\">.</span>grep<span class=\"k\">(</span>c<span class=\"k\">.</span>commands<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> cmd<span class=\"k\">.</span>name <span class=\"k\">==</span> <span class=\"s\">'edit'</span> <span class=\"k\">}</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","                        <span class=\"k\">this</span><span class=\"k\">.</span>appendCommandHtml<span class=\"k\">(</span>hasEditCommand <span class=\"k\">?</span> commands <span class=\"k\">:</span> c<span class=\"k\">.</span>commands<span class=\"k\">,</span> html<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/td&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"t-edit-form-container\"&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>cat<span class=\"k\">(</span>unescape<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>editing<span class=\"k\">.</span>editor<span class=\"k\">))</span>","","                <span class=\"k\">this</span><span class=\"k\">.</span>appendCommandHtml<span class=\"k\">(</span>commands<span class=\"k\">,</span> html<span class=\"k\">);</span>","","                html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/form&gt;'</span><span class=\"k\">)</span>","            html<span class=\"k\">.</span>catIf<span class=\"k\">(</span><span class=\"s\">'&lt;/td&gt;'</span><span class=\"k\">,</span> mode <span class=\"k\">!=</span> <span class=\"s\">'PopUp'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        save<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span>element<span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'form'</span><span class=\"k\">).</span>validate<span class=\"k\">().</span>form<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> callback<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        cancel<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>cancelRow<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>formId<span class=\"k\">()).</span>closest<span class=\"k\">(</span><span class=\"s\">'tr'</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        sendValues<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>values<span class=\"k\">,</span> url<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>ws<span class=\"k\">)</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> values<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> column <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>columnFromMember<span class=\"k\">(</span>key<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>column <span class=\"k\">&amp;&amp;</span> column<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'Date'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> date <span class=\"k\">=</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">{</span> value<span class=\"k\">:</span> values<span class=\"k\">[</span>key<span class=\"k\">],</span> format<span class=\"k\">:</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>shortDate <span class=\"k\">}</span><span class=\"k\">).</span>toDate<span class=\"k\">();</span>","                        values<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">/Date('</span> <span class=\"k\">+</span> date<span class=\"k\">.</span>getTime<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">')</span><span class=\"t\">\\\\</span><span class=\"s\">/'</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>ajaxOptions<span class=\"k\">(</span><span class=\"k\">{</span>","                data<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>ws <span class=\"k\">?</span> <span class=\"k\">{</span> value<span class=\"k\">:</span> values<span class=\"k\">}</span> <span class=\"k\">:</span> values<span class=\"k\">,</span>","                url<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>url<span class=\"k\">(</span>url<span class=\"k\">),</span>","                hasErrors<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>hasErrors<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">),</span>","                displayErrors<span class=\"k\">:</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>displayErrors<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        displayErrors<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>errorView<span class=\"k\">.</span>bind<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>formId<span class=\"k\">()),</span> data<span class=\"k\">.</span>modelState<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        hasErrors<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> modelState <span class=\"k\">=</span> data<span class=\"k\">.</span>modelState<span class=\"k\">;</span>","            <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>modelState<span class=\"k\">)</span> <span class=\"k\">{</span>","                $<span class=\"k\">.</span>each<span class=\"k\">(</span>modelState<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'errors'</span> <span class=\"k\">in</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                        result <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        formId<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'id'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'form'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        validation<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>validator<span class=\"k\">().</span>parse<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        validator<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_validator<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>validationMetadata<span class=\"k\">)</span><span class=\"k\">{</span>","                   <span class=\"k\">this</span><span class=\"k\">.</span>_validator <span class=\"k\">=</span> <span class=\"k\">new</span> Mvc2Validator<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>validationMetadata<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>_validator <span class=\"k\">=</span> <span class=\"k\">new</span> UnobtrusiveValidator<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"s\">\"#\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>formId<span class=\"k\">()));</span>            ","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_validator<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>ModelBinder <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>binders <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">':input'</span><span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">':checkbox'</span><span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> model <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            $<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>binders<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>selector<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","                $ui<span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>disabled<span class=\"k\">)</span> model<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> callback<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> model<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>FormViewBinder <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>converters<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>converters <span class=\"k\">=</span> converters <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>binders <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">':input'</span><span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">(</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"s\">':checkbox'</span><span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> value <span class=\"k\">==</span> <span class=\"k\">true</span><span class=\"k\">)</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">function</span> evaluator<span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>parent<span class=\"k\">()</span>","                       <span class=\"k\">.</span>data<span class=\"k\">(</span>type<span class=\"k\">)</span>","                       <span class=\"k\">.</span>value<span class=\"k\">(</span>value<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>binders<span class=\"k\">[</span><span class=\"s\">'.t-numerictextbox :input:hidden'</span><span class=\"k\">]</span> <span class=\"k\">=</span> evaluator<span class=\"k\">(</span><span class=\"s\">'tTextBox'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>binders<span class=\"k\">[</span><span class=\"s\">'.t-dropdown :input:hidden'</span><span class=\"k\">]</span> <span class=\"k\">=</span> evaluator<span class=\"k\">(</span><span class=\"s\">'tDropDownList'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>binders<span class=\"k\">[</span><span class=\"s\">'.t-combobox :input:hidden'</span><span class=\"k\">]</span> <span class=\"k\">=</span> evaluator<span class=\"k\">(</span><span class=\"s\">'tComboBox'</span><span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>evaluate <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>model<span class=\"k\">,</span> expression<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>expression <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> value <span class=\"k\">=</span> model<span class=\"k\">,</span> match <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span> members <span class=\"k\">=</span> expression<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">);</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span>members<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> member <span class=\"k\">=</span> members<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> <span class=\"k\">(</span>value<span class=\"k\">[</span>member<span class=\"k\">])</span> <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        value <span class=\"k\">=</span> value<span class=\"k\">[</span>member<span class=\"k\">];</span>","                        match <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                        match <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>match <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>$<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> date <span class=\"k\">=</span> <span class=\"s\">/^\\/Date\\((.*?)\\)\\/$/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>value<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>date<span class=\"k\">)</span>","                        value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>date<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]));</span>","","                    <span class=\"k\">var</span> type <span class=\"k\">=</span> $t<span class=\"k\">.</span>getType<span class=\"k\">(</span>value<span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>type <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>converters<span class=\"k\">)</span>","                        value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>converters<span class=\"k\">[</span>type<span class=\"k\">](</span>expression<span class=\"k\">,</span> value<span class=\"k\">);</span>","","                    <span class=\"k\">return</span> value<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">,</span> model<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> undefined<span class=\"k\">;</span>","","            $<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>binders<span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>selector<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","                $ui<span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">).</span>each<span class=\"k\">(</span>$<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">,</span> element<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>evaluate<span class=\"k\">(</span>model<span class=\"k\">,</span> element<span class=\"k\">.</span>name<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">!=</span> undefined<span class=\"k\">)</span>","                        callback<span class=\"k\">.</span>call<span class=\"k\">(</span>element<span class=\"k\">,</span> value<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>grid<span class=\"k\">.</span>ErrorView <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$ui<span class=\"k\">,</span> modelState<span class=\"k\">)</span> <span class=\"k\">{</span>","            $ui<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'span[id$=_validationMessage]'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'field-validation-error'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'field-validation-valid'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>html<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>end<span class=\"k\">()</span>","               <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.input-validation-error'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'input-validation-error'</span><span class=\"k\">)</span>","               <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'valid'</span><span class=\"k\">);</span>","","            $<span class=\"k\">.</span>each<span class=\"k\">(</span>modelState<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">'errors'</span> <span class=\"k\">in</span> value <span class=\"k\">&amp;&amp;</span> value<span class=\"k\">.</span>errors<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">{</span>","                    $ui<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> key <span class=\"k\">+</span> <span class=\"s\">'_validationMessage'</span><span class=\"k\">)</span>","                       <span class=\"k\">.</span>html<span class=\"k\">(</span>value<span class=\"k\">.</span>errors<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span>","                       <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'field-validation-valid'</span><span class=\"k\">)</span>","                       <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'field-validation-error'</span><span class=\"k\">)</span>","                       <span class=\"k\">.</span>end<span class=\"k\">()</span>","                       <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> key<span class=\"k\">)</span>","                       <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'valid'</span><span class=\"k\">)</span>","                       <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'input-validation-error'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)(</span>jQuery<span class=\"k\">);</span>"];
_$jscoverage['telerik.grid.editing.js'][1]++;
(function ($) {
  _$jscoverage['telerik.grid.editing.js'][3]++;
  var $t = $.telerik;
  _$jscoverage['telerik.grid.editing.js'][5]++;
  var UnobtrusiveValidator = (function (formId) {
  _$jscoverage['telerik.grid.editing.js'][6]++;
  this.formId = formId;
  _$jscoverage['telerik.grid.editing.js'][7]++;
  this._isBuild = false;
  _$jscoverage['telerik.grid.editing.js'][8]++;
  var data_validation = "tUnobtrusiveValidation";
  _$jscoverage['telerik.grid.editing.js'][9]++;
  var data_container = "tUnobtrusiveContainer";
  _$jscoverage['telerik.grid.editing.js'][10]++;
  var unobtrusive = (this.unobtrusive = {adapters: [], parseElement: (function (element, skipAttach) {
  _$jscoverage['telerik.grid.editing.js'][13]++;
  var $element = $(element), form = $element.parents("form")[0], valInfo, rules, messages;
  _$jscoverage['telerik.grid.editing.js'][17]++;
  if ((! form)) {
    _$jscoverage['telerik.grid.editing.js'][18]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][21]++;
  valInfo = unobtrusive.validationInfo(form);
  _$jscoverage['telerik.grid.editing.js'][22]++;
  valInfo.options.rules[element.name] = (rules = {});
  _$jscoverage['telerik.grid.editing.js'][23]++;
  valInfo.options.messages[element.name] = (messages = {});
  _$jscoverage['telerik.grid.editing.js'][25]++;
  $.each(this.adapters, (function () {
  _$jscoverage['telerik.grid.editing.js'][26]++;
  var prefix = ("data-val-" + this.name), message = $element.attr(prefix), paramValues = {};
  _$jscoverage['telerik.grid.editing.js'][30]++;
  if ((message !== undefined)) {
    _$jscoverage['telerik.grid.editing.js'][31]++;
    prefix += "-";
    _$jscoverage['telerik.grid.editing.js'][33]++;
    $.each(this.params, (function () {
  _$jscoverage['telerik.grid.editing.js'][34]++;
  paramValues[this] = $element.attr((prefix + this));
}));
    _$jscoverage['telerik.grid.editing.js'][37]++;
    this.adapt({element: element, form: form, message: message, params: paramValues, rules: rules, messages: messages});
  }
}));
  _$jscoverage['telerik.grid.editing.js'][48]++;
  if ((! skipAttach)) {
    _$jscoverage['telerik.grid.editing.js'][49]++;
    valInfo.attachValidation();
  }
}), parse: (function (selector) {
  _$jscoverage['telerik.grid.editing.js'][54]++;
  $(selector).find(":input[data-val=true]").each((function () {
  _$jscoverage['telerik.grid.editing.js'][55]++;
  unobtrusive.parseElement(this, true);
}));
  _$jscoverage['telerik.grid.editing.js'][58]++;
  $("form").each((function () {
  _$jscoverage['telerik.grid.editing.js'][59]++;
  var info = unobtrusive.validationInfo(this);
  _$jscoverage['telerik.grid.editing.js'][60]++;
  if (info) {
    _$jscoverage['telerik.grid.editing.js'][61]++;
    info.attachValidation();
  }
}));
}), onError: (function (error, inputElement) {
  _$jscoverage['telerik.grid.editing.js'][67]++;
  var container = $(this).find(("[data-valmsg-for='" + inputElement[0].name + "']")), replace = ($.parseJSON(container.attr("data-valmsg-replace")) !== false);
  _$jscoverage['telerik.grid.editing.js'][70]++;
  container.removeClass("field-validation-valid").addClass("field-validation-error");
  _$jscoverage['telerik.grid.editing.js'][71]++;
  error.data(data_container, container);
  _$jscoverage['telerik.grid.editing.js'][73]++;
  if (replace) {
    _$jscoverage['telerik.grid.editing.js'][74]++;
    container.empty();
    _$jscoverage['telerik.grid.editing.js'][75]++;
    error.removeClass("input-validation-error").appendTo(container);
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][78]++;
    error.hide();
  }
}), onErrors: (function (form, validator) {
  _$jscoverage['telerik.grid.editing.js'][83]++;
  var container = $(this).find("[data-valmsg-summary=true]"), list = container.find("ul");
  _$jscoverage['telerik.grid.editing.js'][86]++;
  if ((list && list.length && validator.errorList.length)) {
    _$jscoverage['telerik.grid.editing.js'][87]++;
    list.empty();
    _$jscoverage['telerik.grid.editing.js'][88]++;
    container.addClass("validation-summary-errors").removeClass("validation-summary-valid");
    _$jscoverage['telerik.grid.editing.js'][90]++;
    $.each(validator.errorList, (function () {
  _$jscoverage['telerik.grid.editing.js'][91]++;
  $("<li />").html(this.message).appendTo(list);
}));
  }
}), onSuccess: (function (error) {
  _$jscoverage['telerik.grid.editing.js'][97]++;
  var container = error.data(data_container), replace = $.parseJSON(container.attr("data-valmsg-replace"));
  _$jscoverage['telerik.grid.editing.js'][100]++;
  if (container) {
    _$jscoverage['telerik.grid.editing.js'][101]++;
    container.addClass("field-valiion-valid").removeClass("field-validation-error");
    _$jscoverage['telerik.grid.editing.js'][102]++;
    error.removeData(data_container);
    _$jscoverage['telerik.grid.editing.js'][104]++;
    if (replace) {
      _$jscoverage['telerik.grid.editing.js'][105]++;
      container.empty();
    }
  }
}), validationInfo: (function (form) {
  _$jscoverage['telerik.grid.editing.js'][111]++;
  var $form = $(form), result = $form.data(data_validation);
  _$jscoverage['telerik.grid.editing.js'][114]++;
  if ((! result)) {
    _$jscoverage['telerik.grid.editing.js'][115]++;
    result = {options: {errorClass: "input-validation-error", errorElement: "span", errorPlacement: $.proxy(unobtrusive.onError, form), invalidHandler: $.proxy(unobtrusive.onErrors, form), messages: {}, rules: {}, success: $.proxy(unobtrusive.onSuccess, form)}, attachValidation: (function () {
  _$jscoverage['telerik.grid.editing.js'][126]++;
  $form.validate(this.options);
}), validate: (function () {
  _$jscoverage['telerik.grid.editing.js'][129]++;
  $form.validate();
  _$jscoverage['telerik.grid.editing.js'][130]++;
  return $form.valid();
})};
    _$jscoverage['telerik.grid.editing.js'][133]++;
    $form.data(data_validation, result);
  }
  _$jscoverage['telerik.grid.editing.js'][136]++;
  return result;
})});
});
  _$jscoverage['telerik.grid.editing.js'][141]++;
  UnobtrusiveValidator.prototype = {build: (function () {
  _$jscoverage['telerik.grid.editing.js'][144]++;
  if (this._isBuild) {
    _$jscoverage['telerik.grid.editing.js'][145]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][147]++;
  this._isBuild = true;
  _$jscoverage['telerik.grid.editing.js'][149]++;
  var adapters = [];
  _$jscoverage['telerik.grid.editing.js'][150]++;
  function setValidationValues(options, ruleName, value) {
    _$jscoverage['telerik.grid.editing.js'][151]++;
    options.rules[ruleName] = value;
    _$jscoverage['telerik.grid.editing.js'][152]++;
    if (options.message) {
      _$jscoverage['telerik.grid.editing.js'][153]++;
      options.messages[ruleName] = options.message;
    }
}
  _$jscoverage['telerik.grid.editing.js'][157]++;
  function splitAndTrim(value) {
    _$jscoverage['telerik.grid.editing.js'][158]++;
    return value.replace(/^\s+|\s+$/g, "").split(/\s*,\s*/g);
}
  _$jscoverage['telerik.grid.editing.js'][161]++;
  adapters = this.unobtrusive.adapters;
  _$jscoverage['telerik.grid.editing.js'][162]++;
  adapters.add = (function (adapterName, params, fn) {
  _$jscoverage['telerik.grid.editing.js'][163]++;
  if ((! fn)) {
    _$jscoverage['telerik.grid.editing.js'][164]++;
    fn = params;
    _$jscoverage['telerik.grid.editing.js'][165]++;
    params = [];
  }
  _$jscoverage['telerik.grid.editing.js'][167]++;
  this.push({name: adapterName, params: params, adapt: fn});
  _$jscoverage['telerik.grid.editing.js'][168]++;
  return this;
});
  _$jscoverage['telerik.grid.editing.js'][171]++;
  adapters.addBool = (function (adapterName, ruleName) {
  _$jscoverage['telerik.grid.editing.js'][172]++;
  return this.add(adapterName, (function (options) {
  _$jscoverage['telerik.grid.editing.js'][173]++;
  setValidationValues(options, (ruleName || adapterName), true);
}));
});
  _$jscoverage['telerik.grid.editing.js'][177]++;
  adapters.addMinMax = (function (adapterName, minRuleName, maxRuleName, minMaxRuleName, minAttribute, maxAttribute) {
  _$jscoverage['telerik.grid.editing.js'][178]++;
  return this.add(adapterName, [(minAttribute || "min"), (maxAttribute || "max")], (function (options) {
  _$jscoverage['telerik.grid.editing.js'][179]++;
  var min = options.params.min, max = options.params.max;
  _$jscoverage['telerik.grid.editing.js'][182]++;
  if ((min && max)) {
    _$jscoverage['telerik.grid.editing.js'][183]++;
    setValidationValues(options, minMaxRuleName, [min, max]);
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][185]++;
    if (min) {
      _$jscoverage['telerik.grid.editing.js'][186]++;
      setValidationValues(options, minRuleName, min);
    }
    else {
      _$jscoverage['telerik.grid.editing.js'][188]++;
      if (max) {
        _$jscoverage['telerik.grid.editing.js'][189]++;
        setValidationValues(options, maxRuleName, max);
      }
    }
  }
}));
});
  _$jscoverage['telerik.grid.editing.js'][194]++;
  adapters.addSingleVal = (function (adapterName, attribute, ruleName) {
  _$jscoverage['telerik.grid.editing.js'][195]++;
  return this.add(adapterName, [(attribute || "val")], (function (options) {
  _$jscoverage['telerik.grid.editing.js'][196]++;
  setValidationValues(options, (ruleName || adapterName), options.params[attribute]);
}));
});
  _$jscoverage['telerik.grid.editing.js'][200]++;
  adapters.addSingleVal("accept", "exts").addSingleVal("regex", "pattern");
  _$jscoverage['telerik.grid.editing.js'][201]++;
  adapters.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addBool("number").addBool("url");
  _$jscoverage['telerik.grid.editing.js'][202]++;
  adapters.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range", "min", "max", "range");
  _$jscoverage['telerik.grid.editing.js'][203]++;
  adapters.add("equalto", ["other"], (function (options) {
  _$jscoverage['telerik.grid.editing.js'][204]++;
  var element = $(options.form).find((":input[name=" + options.params.other + "]"))[0];
  _$jscoverage['telerik.grid.editing.js'][205]++;
  setValidationValues(options, "equalTo", element);
}));
  _$jscoverage['telerik.grid.editing.js'][207]++;
  adapters.add("required", (function (options) {
  _$jscoverage['telerik.grid.editing.js'][208]++;
  if (((options.element.tagName.toUpperCase() !== "INPUT") || (options.element.type.toUpperCase() !== "CHECKBOX"))) {
    _$jscoverage['telerik.grid.editing.js'][209]++;
    setValidationValues(options, "required", true);
  }
}));
  _$jscoverage['telerik.grid.editing.js'][212]++;
  adapters.add("remote", ["url", "type", "fields"], (function (options) {
  _$jscoverage['telerik.grid.editing.js'][213]++;
  var value = {url: options.params.url, type: (options.params.type || "GET"), data: {}};
  _$jscoverage['telerik.grid.editing.js'][218]++;
  $.each(splitAndTrim((options.params.fields || options.element.name)), (function (i, fieldName) {
  _$jscoverage['telerik.grid.editing.js'][219]++;
  value.data[fieldName] = (function () {
  _$jscoverage['telerik.grid.editing.js'][220]++;
  return $(options.form).find((":input[name='" + fieldName + "']")).val();
});
}));
  _$jscoverage['telerik.grid.editing.js'][224]++;
  setValidationValues(options, "remote", value);
}));
  _$jscoverage['telerik.grid.editing.js'][227]++;
  if (($.validator.unobtrusive && $.validator.unobtrusive.adapters)) {
    _$jscoverage['telerik.grid.editing.js'][228]++;
    $.extend(adapters, $.validator.unobtrusive.adapters);
  }
  _$jscoverage['telerik.grid.editing.js'][230]++;
  $.validator.addMethod("regex", (function (value, element, params) {
  _$jscoverage['telerik.grid.editing.js'][231]++;
  if (this.optional(element)) {
    _$jscoverage['telerik.grid.editing.js'][232]++;
    return true;
  }
  _$jscoverage['telerik.grid.editing.js'][234]++;
  var match = new RegExp(params).exec(value);
  _$jscoverage['telerik.grid.editing.js'][235]++;
  return (match && (match.index == 0) && (match[0].length == value.length));
}));
  _$jscoverage['telerik.grid.editing.js'][238]++;
  $.validator.addMethod("number", (function (value, element) {
  _$jscoverage['telerik.grid.editing.js'][239]++;
  var groupSize = $t.cultureInfo.numericgroupsize;
  _$jscoverage['telerik.grid.editing.js'][240]++;
  var builder = new ($t.stringBuilder)();
  _$jscoverage['telerik.grid.editing.js'][242]++;
  builder.cat("^-?(?:\\d+|\\d{1,").cat(groupSize).cat("}(?:").cat($t.cultureInfo.numericgroupseparator).cat("\\d{").cat(groupSize).cat("})+)(?:\\").cat($t.cultureInfo.numericdecimalseparator).cat("\\d+)?$");
  _$jscoverage['telerik.grid.editing.js'][252]++;
  return (this.optional(element) || new RegExp(builder.string()).test(value));
}));
}), parse: (function () {
  _$jscoverage['telerik.grid.editing.js'][257]++;
  this.build();
  _$jscoverage['telerik.grid.editing.js'][258]++;
  this.unobtrusive.parse(this.formId);
})};
  _$jscoverage['telerik.grid.editing.js'][262]++;
  var Mvc2Validator = (function (validationMetaData) {
  _$jscoverage['telerik.grid.editing.js'][264]++;
  this.validationMetaData = validationMetaData;
});
  _$jscoverage['telerik.grid.editing.js'][267]++;
  Mvc2Validator.prototype = {build: (function (validationContext) {
  _$jscoverage['telerik.grid.editing.js'][270]++;
  $.validator.addMethod("regex", (function (value, element, params) {
  _$jscoverage['telerik.grid.editing.js'][271]++;
  if (this.optional(element)) {
    _$jscoverage['telerik.grid.editing.js'][272]++;
    return true;
  }
  _$jscoverage['telerik.grid.editing.js'][274]++;
  var match = new RegExp(params).exec(value);
  _$jscoverage['telerik.grid.editing.js'][275]++;
  return (match && (match.index == 0) && (match[0].length == value.length));
}));
  _$jscoverage['telerik.grid.editing.js'][278]++;
  $.validator.addMethod("number", (function (value, element) {
  _$jscoverage['telerik.grid.editing.js'][279]++;
  var groupSize = $t.cultureInfo.numericgroupsize;
  _$jscoverage['telerik.grid.editing.js'][280]++;
  var builder = new ($t.stringBuilder)();
  _$jscoverage['telerik.grid.editing.js'][282]++;
  builder.cat("^-?(?:\\d+|\\d{1,").cat(groupSize).cat("}(?:").cat($t.cultureInfo.numericgroupseparator).cat("\\d{").cat(groupSize).cat("})+)(?:\\").cat($t.cultureInfo.numericdecimalseparator).cat("\\d+)?$");
  _$jscoverage['telerik.grid.editing.js'][292]++;
  return (this.optional(element) || new RegExp(builder.string()).test(value));
}));
  _$jscoverage['telerik.grid.editing.js'][295]++;
  function applyRangeValidator(object, min, max) {
    _$jscoverage['telerik.grid.editing.js'][296]++;
    object.range = [min, max];
}
  _$jscoverage['telerik.grid.editing.js'][297]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][299]++;
  function applyRegularExpressionValidator(object, pattern) {
    _$jscoverage['telerik.grid.editing.js'][300]++;
    object.regex = pattern;
}
  _$jscoverage['telerik.grid.editing.js'][301]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][303]++;
  function applyRequiredValidator(object) {
    _$jscoverage['telerik.grid.editing.js'][304]++;
    object.required = true;
}
  _$jscoverage['telerik.grid.editing.js'][305]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][307]++;
  function applyStringLengthValidator(object, maxLength) {
    _$jscoverage['telerik.grid.editing.js'][308]++;
    object.maxlength = maxLength;
}
  _$jscoverage['telerik.grid.editing.js'][309]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][311]++;
  function applyUnknownValidator(object, validationType, validationParameters) {
    _$jscoverage['telerik.grid.editing.js'][312]++;
    object[validationType] = validationParameters;
}
  _$jscoverage['telerik.grid.editing.js'][313]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][315]++;
  function createFieldToValidationMessageMapping(validationFields) {
    _$jscoverage['telerik.grid.editing.js'][316]++;
    var mapping = {};
    _$jscoverage['telerik.grid.editing.js'][318]++;
    for (var i = 0; (i < validationFields.length); (i++)) {
      _$jscoverage['telerik.grid.editing.js'][319]++;
      var thisField = validationFields[i];
      _$jscoverage['telerik.grid.editing.js'][320]++;
      mapping[thisField.FieldName] = ("#" + thisField.ValidationMessageId);
}
    _$jscoverage['telerik.grid.editing.js'][323]++;
    return mapping;
}
  _$jscoverage['telerik.grid.editing.js'][324]++;
  ;
  _$jscoverage['telerik.grid.editing.js'][326]++;
  function createErrorMessagesObject(validationFields) {
    _$jscoverage['telerik.grid.editing.js'][327]++;
    var messagesObj = {};
    _$jscoverage['telerik.grid.editing.js'][329]++;
    for (var i = 0; (i < validationFields.length); (i++)) {
      _$jscoverage['telerik.grid.editing.js'][330]++;
      var thisField = validationFields[i];
      _$jscoverage['telerik.grid.editing.js'][331]++;
      var thisFieldMessages = {};
      _$jscoverage['telerik.grid.editing.js'][332]++;
      messagesObj[thisField.FieldName] = thisFieldMessages;
      _$jscoverage['telerik.grid.editing.js'][333]++;
      var validationRules = thisField.ValidationRules;
      _$jscoverage['telerik.grid.editing.js'][335]++;
      for (var j = 0; (j < validationRules.length); (j++)) {
        _$jscoverage['telerik.grid.editing.js'][336]++;
        var thisRule = validationRules[j];
        _$jscoverage['telerik.grid.editing.js'][337]++;
        if (thisRule.ErrorMessage) {
          _$jscoverage['telerik.grid.editing.js'][338]++;
          var jQueryValidationType = thisRule.ValidationType;
          _$jscoverage['telerik.grid.editing.js'][339]++;
          switch (thisRule.ValidationType) {
          case "regularExpression":
            _$jscoverage['telerik.grid.editing.js'][341]++;
            jQueryValidationType = "regex";
            _$jscoverage['telerik.grid.editing.js'][342]++;
            break;
          case "stringLength":
            _$jscoverage['telerik.grid.editing.js'][345]++;
            jQueryValidationType = "maxlength";
            _$jscoverage['telerik.grid.editing.js'][346]++;
            break;
          }
          _$jscoverage['telerik.grid.editing.js'][349]++;
          thisFieldMessages[jQueryValidationType] = thisRule.ErrorMessage;
        }
}
}
    _$jscoverage['telerik.grid.editing.js'][354]++;
    return messagesObj;
}
  _$jscoverage['telerik.grid.editing.js'][356]++;
  function createRulesForField(validationField) {
    _$jscoverage['telerik.grid.editing.js'][357]++;
    var validationRules = validationField.ValidationRules;
    _$jscoverage['telerik.grid.editing.js'][360]++;
    var rulesObj = {};
    _$jscoverage['telerik.grid.editing.js'][361]++;
    for (var i = 0; (i < validationRules.length); (i++)) {
      _$jscoverage['telerik.grid.editing.js'][362]++;
      var thisRule = validationRules[i];
      _$jscoverage['telerik.grid.editing.js'][363]++;
      switch (thisRule.ValidationType) {
      case "range":
        _$jscoverage['telerik.grid.editing.js'][365]++;
        var min = ((! (! (! thisRule.ValidationParameters.minimum)))? thisRule.ValidationParameters.min: thisRule.ValidationParameters.minimum);
        _$jscoverage['telerik.grid.editing.js'][366]++;
        var max = ((! (! (! thisRule.ValidationParameters.maximum)))? thisRule.ValidationParameters.max: thisRule.ValidationParameters.maximum);
        _$jscoverage['telerik.grid.editing.js'][367]++;
        applyRangeValidator(rulesObj, min, max);
        _$jscoverage['telerik.grid.editing.js'][369]++;
        break;
      case "regularExpression":
      case "regex":
        _$jscoverage['telerik.grid.editing.js'][373]++;
        applyRegularExpressionValidator(rulesObj, thisRule.ValidationParameters.pattern);
        _$jscoverage['telerik.grid.editing.js'][375]++;
        break;
      case "required":
        _$jscoverage['telerik.grid.editing.js'][378]++;
        applyRequiredValidator(rulesObj);
        _$jscoverage['telerik.grid.editing.js'][379]++;
        break;
      case "stringLength":
        _$jscoverage['telerik.grid.editing.js'][382]++;
        applyStringLengthValidator(rulesObj, thisRule.ValidationParameters.maximumLength);
        _$jscoverage['telerik.grid.editing.js'][384]++;
        break;
      case "length":
        _$jscoverage['telerik.grid.editing.js'][386]++;
        applyStringLengthValidator(rulesObj, thisRule.ValidationParameters.max);
        _$jscoverage['telerik.grid.editing.js'][388]++;
        break;
      default:
        _$jscoverage['telerik.grid.editing.js'][390]++;
        applyUnknownValidator(rulesObj, thisRule.ValidationType, thisRule.ValidationParameters);
        _$jscoverage['telerik.grid.editing.js'][392]++;
        break;
      }
}
    _$jscoverage['telerik.grid.editing.js'][396]++;
    return rulesObj;
}
  _$jscoverage['telerik.grid.editing.js'][399]++;
  function createValidationOptions(validationFields) {
    _$jscoverage['telerik.grid.editing.js'][400]++;
    var rulesObj = {};
    _$jscoverage['telerik.grid.editing.js'][401]++;
    for (var i = 0; (i < validationFields.length); (i++)) {
      _$jscoverage['telerik.grid.editing.js'][402]++;
      var validationField = validationFields[i];
      _$jscoverage['telerik.grid.editing.js'][403]++;
      var fieldName = validationField.FieldName;
      _$jscoverage['telerik.grid.editing.js'][404]++;
      rulesObj[fieldName] = createRulesForField(validationField);
}
    _$jscoverage['telerik.grid.editing.js'][407]++;
    return rulesObj;
}
  _$jscoverage['telerik.grid.editing.js'][410]++;
  var theForm = $(("#" + validationContext.FormId));
  _$jscoverage['telerik.grid.editing.js'][412]++;
  var fields = validationContext.Fields;
  _$jscoverage['telerik.grid.editing.js'][413]++;
  var rulesObj = createValidationOptions(fields);
  _$jscoverage['telerik.grid.editing.js'][414]++;
  var fieldToMessageMappings = createFieldToValidationMessageMapping(fields);
  _$jscoverage['telerik.grid.editing.js'][415]++;
  var errorMessagesObj = createErrorMessagesObject(fields);
  _$jscoverage['telerik.grid.editing.js'][417]++;
  var options = {errorClass: "input-validation-error", errorElement: "span", errorPlacement: (function (error, element) {
  _$jscoverage['telerik.grid.editing.js'][421]++;
  var messageSpan = fieldToMessageMappings[element.attr("name")];
  _$jscoverage['telerik.grid.editing.js'][422]++;
  if (messageSpan) {
    _$jscoverage['telerik.grid.editing.js'][423]++;
    $(messageSpan).empty().removeClass("field-validation-valid").addClass("field-validation-error");
    _$jscoverage['telerik.grid.editing.js'][427]++;
    error.removeClass("input-validation-error").attr("_for_validation_message", messageSpan).appendTo(messageSpan);
  }
}), messages: errorMessagesObj, rules: rulesObj, success: (function (label) {
  _$jscoverage['telerik.grid.editing.js'][435]++;
  $(label.attr("_for_validation_message")).empty().addClass("field-validation-valid").removeClass("field-validation-error");
})};
  _$jscoverage['telerik.grid.editing.js'][441]++;
  theForm.validate(options);
}), parse: (function () {
  _$jscoverage['telerik.grid.editing.js'][444]++;
  this.build(this.validationMetaData);
})};
  _$jscoverage['telerik.grid.editing.js'][448]++;
  function getCommand(columns, name) {
    _$jscoverage['telerik.grid.editing.js'][449]++;
    for (var i = 0, len = columns.length; (i < len); (i++)) {
      _$jscoverage['telerik.grid.editing.js'][450]++;
      if (columns[i].commands) {
        _$jscoverage['telerik.grid.editing.js'][451]++;
        var commands = columns[i].commands;
        _$jscoverage['telerik.grid.editing.js'][452]++;
        for (var j = 0, length = commands.length; (j < length); (j++)) {
          _$jscoverage['telerik.grid.editing.js'][453]++;
          if ((commands[j].name == name)) {
            _$jscoverage['telerik.grid.editing.js'][453]++;
            return commands[j];
          }
}
      }
}
    _$jscoverage['telerik.grid.editing.js'][457]++;
    return ({});
}
  _$jscoverage['telerik.grid.editing.js'][460]++;
  $t.editing = {};
  _$jscoverage['telerik.grid.editing.js'][462]++;
  function cancelAll() {
    _$jscoverage['telerik.grid.editing.js'][463]++;
    $(document.body).find("div.t-grid").each((function () {
  _$jscoverage['telerik.grid.editing.js'][465]++;
  var grid = $(this).data("tGrid");
  _$jscoverage['telerik.grid.editing.js'][466]++;
  if ((grid && grid.cancel)) {
    _$jscoverage['telerik.grid.editing.js'][467]++;
    grid.cancel();
  }
}));
}
  _$jscoverage['telerik.grid.editing.js'][471]++;
  $t.editing.initialize = (function (grid) {
  _$jscoverage['telerik.grid.editing.js'][472]++;
  $.extend(grid, this.implementation);
  _$jscoverage['telerik.grid.editing.js'][473]++;
  var $element = $(grid.element);
  _$jscoverage['telerik.grid.editing.js'][475]++;
  if (grid.isAjax()) {
    _$jscoverage['telerik.grid.editing.js'][476]++;
    $element.delegate(".t-grid-edit", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][477]++;
  grid.editRow($(this).closest("tr"));
}))).delegate(".t-grid-cancel", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][480]++;
  grid.cancel();
}))).delegate(".t-grid-delete", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][483]++;
  grid.deleteRow($(this).closest("tr"));
}))).delegate(".t-grid-update", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][486]++;
  grid.save(this, $.proxy((function () {
  _$jscoverage['telerik.grid.editing.js'][487]++;
  grid.updateRow($(this).closest("form").closest("tr"));
}), this));
}))).delegate(".t-grid-add", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][491]++;
  grid.addRow();
}))).delegate(".t-grid-insert", "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][494]++;
  grid.save(this, $.proxy((function () {
  _$jscoverage['telerik.grid.editing.js'][495]++;
  grid.insertRow($(this).closest("form").closest("tr"));
}), this));
})));
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][499]++;
    $element.delegate(".t-grid-delete", "click", $t.stop((function (e) {
  _$jscoverage['telerik.grid.editing.js'][500]++;
  if (((grid.editing.confirmDelete !== false) && (! confirm(grid.localization.deleteConfirmation)))) {
    _$jscoverage['telerik.grid.editing.js'][501]++;
    e.preventDefault();
  }
})));
    _$jscoverage['telerik.grid.editing.js'][504]++;
    grid.validation();
  }
  _$jscoverage['telerik.grid.editing.js'][507]++;
  grid.errorView = new ($t.grid.ErrorView)();
  _$jscoverage['telerik.grid.editing.js'][509]++;
  grid.modelBinder = new ($t.grid.ModelBinder)();
  _$jscoverage['telerik.grid.editing.js'][511]++;
  grid.formViewBinder = new ($t.grid.FormViewBinder)({"date": (function (name, value) {
  _$jscoverage['telerik.grid.editing.js'][513]++;
  var column = grid.columnFromMember(name);
  _$jscoverage['telerik.grid.editing.js'][514]++;
  var format = (column? column.format: "");
  _$jscoverage['telerik.grid.editing.js'][515]++;
  return $t.formatString((format || "{0:G}"), value);
})});
  _$jscoverage['telerik.grid.editing.js'][519]++;
  $element.delegate(":input:not(.t-button)", "keydown", $t.stop((function (e) {
  _$jscoverage['telerik.grid.editing.js'][520]++;
  var keyMap = {13: ".t-grid-update, .t-grid-insert", 27: ".t-grid-cancel"};
  _$jscoverage['telerik.grid.editing.js'][521]++;
  $(this).closest("tr").find(keyMap[e.keyCode]).click();
})));
});
  _$jscoverage['telerik.grid.editing.js'][525]++;
  function popup(options) {
    _$jscoverage['telerik.grid.editing.js'][526]++;
    var remove = (function () {
  _$jscoverage['telerik.grid.editing.js'][527]++;
  result.data("tWindow").close();
  _$jscoverage['telerik.grid.editing.js'][528]++;
  result.remove();
});
    _$jscoverage['telerik.grid.editing.js'][531]++;
    var result = $("<div />", {id: (options.element.id + "PopUp")}).appendTo(options.element).css({top: 0, left: "50%", marginLeft: -90}).tWindow(options.settings).delegate(".t-grid-cancel", "click", $t.stopAll((function () {
  _$jscoverage['telerik.grid.editing.js'][536]++;
  remove();
})));
    _$jscoverage['telerik.grid.editing.js'][539]++;
    $(options.element).unbind("dataBound").bind("dataBound", (function () {
  _$jscoverage['telerik.grid.editing.js'][540]++;
  $(this).unbind("dataBound", arguments.callee);
  _$jscoverage['telerik.grid.editing.js'][541]++;
  remove();
}));
    _$jscoverage['telerik.grid.editing.js'][544]++;
    $.each(["insert", "update"], (function (index, value) {
  _$jscoverage['telerik.grid.editing.js'][545]++;
  if (options[value]) {
    _$jscoverage['telerik.grid.editing.js'][546]++;
    result.undelegate((".t-grid-" + value), "click").delegate((".t-grid-" + value), "click", $t.stopAll((function (e) {
  _$jscoverage['telerik.grid.editing.js'][548]++;
  (options[value])(e.target, result);
})));
  }
}));
    _$jscoverage['telerik.grid.editing.js'][552]++;
    result.find(".t-close").bind("click", $t.stopAll(remove)).end().data("tWindow").title(options.title).content(options.content).open();
    _$jscoverage['telerik.grid.editing.js'][561]++;
    return result;
}
  _$jscoverage['telerik.grid.editing.js'][564]++;
  $t.editing.implementation = {insertRow: (function ($tr) {
  _$jscoverage['telerik.grid.editing.js'][566]++;
  var values = this.extractValues($tr);
  _$jscoverage['telerik.grid.editing.js'][568]++;
  if ($t.trigger(this.element, "save", {mode: "insert", values: values, form: $tr.find("form")[0]})) {
    _$jscoverage['telerik.grid.editing.js'][569]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][571]++;
  this.sendValues(values, "insertUrl");
}), updateRow: (function ($tr) {
  _$jscoverage['telerik.grid.editing.js'][575]++;
  var dataItem = this.dataItem(($tr.data("tr") || $tr));
  _$jscoverage['telerik.grid.editing.js'][576]++;
  var values = this.extractValues($tr, true);
  _$jscoverage['telerik.grid.editing.js'][577]++;
  if ($t.trigger(this.element, "save", {mode: "edit", dataItem: dataItem, values: values, form: $tr.find("form")[0]})) {
    _$jscoverage['telerik.grid.editing.js'][578]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][580]++;
  this.sendValues(values, "updateUrl");
}), deleteRow: (function ($tr) {
  _$jscoverage['telerik.grid.editing.js'][584]++;
  if ($t.trigger(this.element, "delete", {dataItem: this.dataItem($tr)})) {
    _$jscoverage['telerik.grid.editing.js'][585]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][587]++;
  if (((this.editing.confirmDelete === false) || confirm(this.localization.deleteConfirmation))) {
    _$jscoverage['telerik.grid.editing.js'][588]++;
    this.sendValues(this.extractValues($tr, true), "deleteUrl");
  }
}), editRow: (function ($tr) {
  _$jscoverage['telerik.grid.editing.js'][592]++;
  cancelAll();
  _$jscoverage['telerik.grid.editing.js'][593]++;
  var html = new ($t.stringBuilder)();
  _$jscoverage['telerik.grid.editing.js'][595]++;
  var edit = getCommand(this.columns, "edit");
  _$jscoverage['telerik.grid.editing.js'][597]++;
  this.form(html, [{name: "update", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}, {name: "cancel", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}], $tr.find(".t-hierarchy-cell").find(".t-icon").hasClass("t-plus"));
  _$jscoverage['telerik.grid.editing.js'][602]++;
  var dataItem = this.dataItem($tr);
  _$jscoverage['telerik.grid.editing.js'][603]++;
  var $td = $(html.string());
  _$jscoverage['telerik.grid.editing.js'][604]++;
  $td.find("form").submit($t.preventDefault);
  _$jscoverage['telerik.grid.editing.js'][605]++;
  $td.children().hide();
  _$jscoverage['telerik.grid.editing.js'][607]++;
  var cells = $td.find("tr:first td:not(.t-group-cell, .t-hierarchy-cell)");
  _$jscoverage['telerik.grid.editing.js'][609]++;
  var mode = this.editing.mode;
  _$jscoverage['telerik.grid.editing.js'][611]++;
  if ((mode != "PopUp")) {
    _$jscoverage['telerik.grid.editing.js'][612]++;
    $tr.html($td);
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][614]++;
    popup({title: this.localization.edit, element: this.element, settings: this.editing.popup, content: $td, update: $.proxy((function (target, $popup) {
  _$jscoverage['telerik.grid.editing.js'][620]++;
  this.save(target, $.proxy((function () {
  _$jscoverage['telerik.grid.editing.js'][621]++;
  $popup.data("tr", $tr);
  _$jscoverage['telerik.grid.editing.js'][622]++;
  this.updateRow($popup);
}), this));
}), this)});
  }
  _$jscoverage['telerik.grid.editing.js'][628]++;
  this.formViewBinder.bind($td, dataItem);
  _$jscoverage['telerik.grid.editing.js'][630]++;
  if ((mode == "InLine")) {
    _$jscoverage['telerik.grid.editing.js'][631]++;
    $.each(this.columns, (function (i) {
  _$jscoverage['telerik.grid.editing.js'][632]++;
  if (this.readonly) {
    _$jscoverage['telerik.grid.editing.js'][633]++;
    cells.eq(i).html(this.display(dataItem));
  }
}));
  }
  _$jscoverage['telerik.grid.editing.js'][636]++;
  $td.children().show();
  _$jscoverage['telerik.grid.editing.js'][637]++;
  $t.trigger(this.element, "edit", {mode: "edit", form: ($td.find("form")[0] || $td[0]), dataItem: dataItem});
  _$jscoverage['telerik.grid.editing.js'][643]++;
  this.validation();
}), addRow: (function () {
  _$jscoverage['telerik.grid.editing.js'][647]++;
  cancelAll();
  _$jscoverage['telerik.grid.editing.js'][648]++;
  var html = new ($t.stringBuilder)();
  _$jscoverage['telerik.grid.editing.js'][649]++;
  var mode = this.editing.mode;
  _$jscoverage['telerik.grid.editing.js'][650]++;
  var edit = getCommand(this.columns, "edit");
  _$jscoverage['telerik.grid.editing.js'][651]++;
  var $td;
  _$jscoverage['telerik.grid.editing.js'][653]++;
  if ((mode != "PopUp")) {
    _$jscoverage['telerik.grid.editing.js'][654]++;
    html.cat("<tr class=\"t-grid-new-row\">");
    _$jscoverage['telerik.grid.editing.js'][655]++;
    this.form(html, [{name: "insert", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}, {name: "cancel", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}]);
    _$jscoverage['telerik.grid.editing.js'][657]++;
    html.cat("</tr>");
    _$jscoverage['telerik.grid.editing.js'][658]++;
    var $frm = $(html.string());
    _$jscoverage['telerik.grid.editing.js'][659]++;
    $frm.find("form").submit($t.preventDefault);
    _$jscoverage['telerik.grid.editing.js'][660]++;
    $td = $frm.prependTo(this.$tbody);
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][662]++;
    this.form(html, [{name: "insert", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}, {name: "cancel", attr: edit.attr, buttonType: edit.buttonType, imageAttr: edit.imageAttr}]);
    _$jscoverage['telerik.grid.editing.js'][665]++;
    $td = $(html.string());
    _$jscoverage['telerik.grid.editing.js'][666]++;
    $td.find("form").submit($t.preventDefault);
    _$jscoverage['telerik.grid.editing.js'][667]++;
    popup({title: this.localization.insert, element: this.element, settings: this.editing.popup, content: $td, insert: $.proxy((function (target, $popup) {
  _$jscoverage['telerik.grid.editing.js'][673]++;
  this.save(target, $.proxy((function () {
  _$jscoverage['telerik.grid.editing.js'][674]++;
  this.insertRow($popup);
}), this));
}), this)});
  }
  _$jscoverage['telerik.grid.editing.js'][680]++;
  $t.trigger(this.element, "edit", {mode: "insert", form: ($td.find("form")[0] || $td[0])});
  _$jscoverage['telerik.grid.editing.js'][682]++;
  this.validation();
}), extractValues: (function ($tr, extractKeys) {
  _$jscoverage['telerik.grid.editing.js'][686]++;
  var values = this.modelBinder.bind($tr);
  _$jscoverage['telerik.grid.editing.js'][688]++;
  if (extractKeys) {
    _$jscoverage['telerik.grid.editing.js'][689]++;
    var dataItem = this.dataItem(($tr.data("tr") || $tr));
    _$jscoverage['telerik.grid.editing.js'][691]++;
    for (var dataKey in this.dataKeys) {
      _$jscoverage['telerik.grid.editing.js'][692]++;
      var value = (this.valueFor({member: dataKey}))(dataItem);
      _$jscoverage['telerik.grid.editing.js'][693]++;
      if ((value instanceof Date)) {
        _$jscoverage['telerik.grid.editing.js'][694]++;
        value = $t.formatString("{0:G}", value);
      }
      _$jscoverage['telerik.grid.editing.js'][696]++;
      values[(this.ws? dataKey: this.dataKeys[dataKey])] = value;
}
  }
  _$jscoverage['telerik.grid.editing.js'][699]++;
  return values;
}), cancelRow: (function ($tr) {
  _$jscoverage['telerik.grid.editing.js'][703]++;
  if ((! $tr.length)) {
    _$jscoverage['telerik.grid.editing.js'][704]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][706]++;
  if ($tr.is(".t-grid-new-row")) {
    _$jscoverage['telerik.grid.editing.js'][707]++;
    var $tbody = $tr.closest("tbody");
    _$jscoverage['telerik.grid.editing.js'][708]++;
    $tr.remove();
    _$jscoverage['telerik.grid.editing.js'][710]++;
    if ($.browser.msie) {
      _$jscoverage['telerik.grid.editing.js'][711]++;
      $tbody.hide().show();
    }
    _$jscoverage['telerik.grid.editing.js'][712]++;
    return;
  }
  _$jscoverage['telerik.grid.editing.js'][715]++;
  var dataItem = this.dataItem($tr);
  _$jscoverage['telerik.grid.editing.js'][716]++;
  var html = new ($t.stringBuilder)();
  _$jscoverage['telerik.grid.editing.js'][718]++;
  var expanding = $tr.find(".t-hierarchy-cell").find(".t-icon").hasClass("t-plus");
  _$jscoverage['telerik.grid.editing.js'][720]++;
  html.rep("<td class=\"t-group-cell\" />", this.groups.length).catIf(("<td class=\"t-hierarchy-cell\"><a href=\"#\" class=\"t-icon " + (expanding? "t-plus": "t-minus") + "\"></a></td>"), this.detail);
  _$jscoverage['telerik.grid.editing.js'][723]++;
  $.each(this.columns, $.proxy((function (i, c) {
  _$jscoverage['telerik.grid.editing.js'][724]++;
  html.cat("<td").cat(c.attr).catIf(" class=\"t-last\"", (i == (this.columns.length - 1))).cat(">");
  _$jscoverage['telerik.grid.editing.js'][729]++;
  if (c.display) {
    _$jscoverage['telerik.grid.editing.js'][730]++;
    html.cat(c.display(dataItem));
  }
  _$jscoverage['telerik.grid.editing.js'][732]++;
  this.appendCommandHtml(c.commands, html);
  _$jscoverage['telerik.grid.editing.js'][734]++;
  html.cat("</td>");
}), this));
  _$jscoverage['telerik.grid.editing.js'][738]++;
  $tr.html(html.string());
  _$jscoverage['telerik.grid.editing.js'][740]++;
  $t.trigger(this.element, "rowDataBound", {row: $tr[0], dataItem: dataItem});
}), form: (function (html, commands, expanding) {
  _$jscoverage['telerik.grid.editing.js'][744]++;
  var colgroup = this.$tbody.siblings("colgroup");
  _$jscoverage['telerik.grid.editing.js'][746]++;
  var mode = this.editing.mode;
  _$jscoverage['telerik.grid.editing.js'][748]++;
  if ((mode != "PopUp")) {
    _$jscoverage['telerik.grid.editing.js'][749]++;
    html.cat("<td class=\"t-edit-container\" colspan=\"").cat((this.columns.length + this.groups.length + (this.detail? 1: 0))).cat("\">");
  }
  _$jscoverage['telerik.grid.editing.js'][753]++;
  html.cat("<form class=\"t-edit-form\" action=\"#\" method=\"post\" id=\"").cat(this.formId()).cat("\">");
  _$jscoverage['telerik.grid.editing.js'][757]++;
  if ((mode == "InLine")) {
    _$jscoverage['telerik.grid.editing.js'][758]++;
    html.cat("<table cellspacing=\"0\"><colgroup>");
    _$jscoverage['telerik.grid.editing.js'][760]++;
    $(this.element).find("colgroup:first").children().each((function () {
  _$jscoverage['telerik.grid.editing.js'][762]++;
  var width = this.style.width;
  _$jscoverage['telerik.grid.editing.js'][764]++;
  if ($(this).hasClass("t-group-col")) {
    _$jscoverage['telerik.grid.editing.js'][765]++;
    html.cat("<col class=\"t-group-col\" />");
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][766]++;
    if ((width != "0px")) {
      _$jscoverage['telerik.grid.editing.js'][767]++;
      html.cat("<col style=\"width:").cat(width).cat("\" />");
    }
    else {
      _$jscoverage['telerik.grid.editing.js'][769]++;
      html.cat("<col />");
    }
  }
}));
    _$jscoverage['telerik.grid.editing.js'][772]++;
    var hierarchyCellHtml = new ($t.stringBuilder)();
    _$jscoverage['telerik.grid.editing.js'][773]++;
    hierarchyCellHtml.cat("<td class=\"t-hierarchy-cell\">").catIf(("<a href=\"#\" class=\"t-icon " + (expanding? "t-plus": "t-minus") + "\"></a>"), (expanding != undefined)).cat("</td>");
    _$jscoverage['telerik.grid.editing.js'][777]++;
    html.cat("</colgroup><tbody><tr>").rep("<td class=\"t-group-cell\" />", this.groups.length).catIf(hierarchyCellHtml.string(), this.detail);
    _$jscoverage['telerik.grid.editing.js'][781]++;
    $.each(this.columns, $.proxy((function (i, c) {
  _$jscoverage['telerik.grid.editing.js'][782]++;
  html.cat("<td").cat(c.attr).catIf(" class=\"t-last\"", (i == (this.columns.length - 1))).cat(">").catIf(unescape(c.editor), c.editor).catIf("&nbsp;", ((! c.editor) && (! c.commands)));
  _$jscoverage['telerik.grid.editing.js'][789]++;
  if (c.commands) {
    _$jscoverage['telerik.grid.editing.js'][790]++;
    var hasEditCommand = $.grep(c.commands, (function (cmd) {
  _$jscoverage['telerik.grid.editing.js'][790]++;
  return (cmd.name == "edit");
}))[0];
    _$jscoverage['telerik.grid.editing.js'][792]++;
    this.appendCommandHtml((hasEditCommand? commands: c.commands), html);
  }
  _$jscoverage['telerik.grid.editing.js'][795]++;
  html.cat("</td>");
}), this));
    _$jscoverage['telerik.grid.editing.js'][798]++;
    html.cat("</tr></tbody></table>");
  }
  else {
    _$jscoverage['telerik.grid.editing.js'][800]++;
    html.cat("<div class=\"t-edit-form-container\">").cat(unescape(this.editing.editor));
    _$jscoverage['telerik.grid.editing.js'][803]++;
    this.appendCommandHtml(commands, html);
    _$jscoverage['telerik.grid.editing.js'][805]++;
    html.cat("</div>");
  }
  _$jscoverage['telerik.grid.editing.js'][808]++;
  html.cat("</form>");
  _$jscoverage['telerik.grid.editing.js'][809]++;
  html.catIf("</td>", (mode != "PopUp"));
}), save: (function (element, callback) {
  _$jscoverage['telerik.grid.editing.js'][813]++;
  ($(element).closest("form").validate().form() && callback());
}), cancel: (function () {
  _$jscoverage['telerik.grid.editing.js'][817]++;
  this.cancelRow($(("#" + this.formId())).closest("tr"));
}), sendValues: (function (values, url) {
  _$jscoverage['telerik.grid.editing.js'][821]++;
  if (this.ws) {
    _$jscoverage['telerik.grid.editing.js'][822]++;
    for (var key in values) {
      _$jscoverage['telerik.grid.editing.js'][823]++;
      var column = this.columnFromMember(key);
      _$jscoverage['telerik.grid.editing.js'][824]++;
      if ((column && (column.type == "Date"))) {
        _$jscoverage['telerik.grid.editing.js'][825]++;
        var date = $t.datetime.parse({value: values[key], format: $t.cultureInfo.shortDate}).toDate();
        _$jscoverage['telerik.grid.editing.js'][826]++;
        values[key] = ("\\/Date(" + date.getTime() + ")\\/");
      }
}
  }
  _$jscoverage['telerik.grid.editing.js'][830]++;
  $.ajax(this.ajaxOptions({data: (this.ws? {value: values}: values), url: this.url(url), hasErrors: $.proxy(this.hasErrors, this), displayErrors: $.proxy(this.displayErrors, this)}));
}), displayErrors: (function (data) {
  _$jscoverage['telerik.grid.editing.js'][839]++;
  this.errorView.bind($(("#" + this.formId())), data.modelState);
}), hasErrors: (function (data) {
  _$jscoverage['telerik.grid.editing.js'][843]++;
  var modelState = data.modelState;
  _$jscoverage['telerik.grid.editing.js'][844]++;
  var result = false;
  _$jscoverage['telerik.grid.editing.js'][846]++;
  if (modelState) {
    _$jscoverage['telerik.grid.editing.js'][847]++;
    $.each(modelState, (function (key, value) {
  _$jscoverage['telerik.grid.editing.js'][848]++;
  if (("errors" in value)) {
    _$jscoverage['telerik.grid.editing.js'][849]++;
    result = true;
    _$jscoverage['telerik.grid.editing.js'][850]++;
    return false;
  }
}));
  }
  _$jscoverage['telerik.grid.editing.js'][855]++;
  return result;
}), formId: (function () {
  _$jscoverage['telerik.grid.editing.js'][859]++;
  return ($(this.element).attr("id") + "form");
}), validation: (function () {
  _$jscoverage['telerik.grid.editing.js'][863]++;
  this.validator().parse();
}), validator: (function () {
  _$jscoverage['telerik.grid.editing.js'][867]++;
  if ((! this._validator)) {
    _$jscoverage['telerik.grid.editing.js'][868]++;
    if (this.validationMetadata) {
      _$jscoverage['telerik.grid.editing.js'][869]++;
      this._validator = new Mvc2Validator(this.validationMetadata);
    }
    else {
      _$jscoverage['telerik.grid.editing.js'][871]++;
      this._validator = new UnobtrusiveValidator($(("#" + this.formId())));
    }
  }
  _$jscoverage['telerik.grid.editing.js'][874]++;
  return this._validator;
})};
  _$jscoverage['telerik.grid.editing.js'][878]++;
  $t.grid.ModelBinder = (function () {
  _$jscoverage['telerik.grid.editing.js'][879]++;
  this.binders = {":input": (function () {
  _$jscoverage['telerik.grid.editing.js'][881]++;
  return $(this).val();
}), ":checkbox": (function () {
  _$jscoverage['telerik.grid.editing.js'][884]++;
  return $(this).is(":checked");
})};
  _$jscoverage['telerik.grid.editing.js'][888]++;
  this.bind = (function ($ui) {
  _$jscoverage['telerik.grid.editing.js'][889]++;
  var model = {};
  _$jscoverage['telerik.grid.editing.js'][891]++;
  $.each(this.binders, (function (selector, callback) {
  _$jscoverage['telerik.grid.editing.js'][892]++;
  $ui.find(selector).each((function () {
  _$jscoverage['telerik.grid.editing.js'][893]++;
  if ((! this.disabled)) {
    _$jscoverage['telerik.grid.editing.js'][893]++;
    model[this.name] = callback.call(this);
  }
}));
}));
  _$jscoverage['telerik.grid.editing.js'][897]++;
  return model;
});
});
  _$jscoverage['telerik.grid.editing.js'][901]++;
  $t.grid.FormViewBinder = (function (converters) {
  _$jscoverage['telerik.grid.editing.js'][902]++;
  this.converters = (converters || {});
  _$jscoverage['telerik.grid.editing.js'][903]++;
  this.binders = {":input": (function (value) {
  _$jscoverage['telerik.grid.editing.js'][905]++;
  $(this).val(value);
}), ":checkbox": (function (value) {
  _$jscoverage['telerik.grid.editing.js'][908]++;
  $(this).attr("checked", (value == true));
})};
  _$jscoverage['telerik.grid.editing.js'][912]++;
  function evaluator(type) {
    _$jscoverage['telerik.grid.editing.js'][913]++;
    return (function (value) {
  _$jscoverage['telerik.grid.editing.js'][914]++;
  $(this).parent().data(type).value(value);
});
}
  _$jscoverage['telerik.grid.editing.js'][920]++;
  this.binders[".t-numerictextbox :input:hidden"] = evaluator("tTextBox");
  _$jscoverage['telerik.grid.editing.js'][921]++;
  this.binders[".t-dropdown :input:hidden"] = evaluator("tDropDownList");
  _$jscoverage['telerik.grid.editing.js'][922]++;
  this.binders[".t-combobox :input:hidden"] = evaluator("tComboBox");
  _$jscoverage['telerik.grid.editing.js'][924]++;
  this.evaluate = (function (model, expression) {
  _$jscoverage['telerik.grid.editing.js'][925]++;
  if ((expression != null)) {
    _$jscoverage['telerik.grid.editing.js'][926]++;
    var value = model, match = false, members = expression.split(".");
    _$jscoverage['telerik.grid.editing.js'][928]++;
    while (members.length) {
      _$jscoverage['telerik.grid.editing.js'][929]++;
      var member = members.shift();
      _$jscoverage['telerik.grid.editing.js'][930]++;
      if (((value != null) && ((typeof value[member]) != "undefined"))) {
        _$jscoverage['telerik.grid.editing.js'][931]++;
        value = value[member];
        _$jscoverage['telerik.grid.editing.js'][932]++;
        match = true;
      }
      else {
        _$jscoverage['telerik.grid.editing.js'][933]++;
        if (match) {
          _$jscoverage['telerik.grid.editing.js'][934]++;
          match = false;
          _$jscoverage['telerik.grid.editing.js'][935]++;
          break;
        }
      }
}
    _$jscoverage['telerik.grid.editing.js'][939]++;
    if ((match && (! $.isPlainObject(value)))) {
      _$jscoverage['telerik.grid.editing.js'][940]++;
      var date = /^\/Date\((.*?)\)\/$/.exec(value);
      _$jscoverage['telerik.grid.editing.js'][941]++;
      if (date) {
        _$jscoverage['telerik.grid.editing.js'][942]++;
        value = new Date(parseInt(date[1]));
      }
      _$jscoverage['telerik.grid.editing.js'][944]++;
      var type = $t.getType(value);
      _$jscoverage['telerik.grid.editing.js'][946]++;
      if ((type in this.converters)) {
        _$jscoverage['telerik.grid.editing.js'][947]++;
        value = (this.converters[type])(expression, value);
      }
      _$jscoverage['telerik.grid.editing.js'][949]++;
      return value;
    }
  }
});
  _$jscoverage['telerik.grid.editing.js'][954]++;
  this.bind = (function ($ui, model) {
  _$jscoverage['telerik.grid.editing.js'][955]++;
  var undefined;
  _$jscoverage['telerik.grid.editing.js'][957]++;
  $.each(this.binders, $.proxy((function (selector, callback) {
  _$jscoverage['telerik.grid.editing.js'][958]++;
  $ui.find(selector).each($.proxy((function (index, element) {
  _$jscoverage['telerik.grid.editing.js'][959]++;
  var value = this.evaluate(model, element.name);
  _$jscoverage['telerik.grid.editing.js'][960]++;
  if ((value != undefined)) {
    _$jscoverage['telerik.grid.editing.js'][961]++;
    callback.call(element, value);
  }
}), this));
}), this));
});
});
  _$jscoverage['telerik.grid.editing.js'][967]++;
  $t.grid.ErrorView = (function () {
  _$jscoverage['telerik.grid.editing.js'][968]++;
  this.bind = (function ($ui, modelState) {
  _$jscoverage['telerik.grid.editing.js'][969]++;
  $ui.find("span[id$=_validationMessage]").removeClass("field-validation-error").addClass("field-validation-valid").html("").end().find(".input-validation-error").removeClass("input-validation-error").addClass("valid");
  _$jscoverage['telerik.grid.editing.js'][978]++;
  $.each(modelState, (function (key, value) {
  _$jscoverage['telerik.grid.editing.js'][979]++;
  if ((("errors" in value) && value.errors[0])) {
    _$jscoverage['telerik.grid.editing.js'][980]++;
    $ui.find(("#" + key + "_validationMessage")).html(value.errors[0]).removeClass("field-validation-valid").addClass("field-validation-error").end().find(("#" + key)).removeClass("valid").addClass("input-validation-error");
  }
}));
});
});
})(jQuery);
