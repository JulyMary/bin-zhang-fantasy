/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['telerik.common.js']) {
  _$jscoverage['telerik.common.js'] = [];
  _$jscoverage['telerik.common.js'][1] = 0;
  _$jscoverage['telerik.common.js'][3] = 0;
  _$jscoverage['telerik.common.js'][4] = 0;
  _$jscoverage['telerik.common.js'][5] = 0;
  _$jscoverage['telerik.common.js'][8] = 0;
  _$jscoverage['telerik.common.js'][9] = 0;
  _$jscoverage['telerik.common.js'][10] = 0;
  _$jscoverage['telerik.common.js'][11] = 0;
  _$jscoverage['telerik.common.js'][13] = 0;
  _$jscoverage['telerik.common.js'][16] = 0;
  _$jscoverage['telerik.common.js'][17] = 0;
  _$jscoverage['telerik.common.js'][19] = 0;
  _$jscoverage['telerik.common.js'][20] = 0;
  _$jscoverage['telerik.common.js'][21] = 0;
  _$jscoverage['telerik.common.js'][23] = 0;
  _$jscoverage['telerik.common.js'][24] = 0;
  _$jscoverage['telerik.common.js'][26] = 0;
  _$jscoverage['telerik.common.js'][28] = 0;
  _$jscoverage['telerik.common.js'][30] = 0;
  _$jscoverage['telerik.common.js'][36] = 0;
  _$jscoverage['telerik.common.js'][37] = 0;
  _$jscoverage['telerik.common.js'][38] = 0;
  _$jscoverage['telerik.common.js'][39] = 0;
  _$jscoverage['telerik.common.js'][40] = 0;
  _$jscoverage['telerik.common.js'][42] = 0;
  _$jscoverage['telerik.common.js'][44] = 0;
  _$jscoverage['telerik.common.js'][48] = 0;
  _$jscoverage['telerik.common.js'][49] = 0;
  _$jscoverage['telerik.common.js'][54] = 0;
  _$jscoverage['telerik.common.js'][55] = 0;
  _$jscoverage['telerik.common.js'][56] = 0;
  _$jscoverage['telerik.common.js'][61] = 0;
  _$jscoverage['telerik.common.js'][62] = 0;
  _$jscoverage['telerik.common.js'][63] = 0;
  _$jscoverage['telerik.common.js'][64] = 0;
  _$jscoverage['telerik.common.js'][69] = 0;
  _$jscoverage['telerik.common.js'][70] = 0;
  _$jscoverage['telerik.common.js'][71] = 0;
  _$jscoverage['telerik.common.js'][76] = 0;
  _$jscoverage['telerik.common.js'][80] = 0;
  _$jscoverage['telerik.common.js'][84] = 0;
  _$jscoverage['telerik.common.js'][88] = 0;
  _$jscoverage['telerik.common.js'][92] = 0;
  _$jscoverage['telerik.common.js'][96] = 0;
  _$jscoverage['telerik.common.js'][100] = 0;
  _$jscoverage['telerik.common.js'][106] = 0;
  _$jscoverage['telerik.common.js'][107] = 0;
  _$jscoverage['telerik.common.js'][108] = 0;
  _$jscoverage['telerik.common.js'][109] = 0;
  _$jscoverage['telerik.common.js'][110] = 0;
  _$jscoverage['telerik.common.js'][113] = 0;
  _$jscoverage['telerik.common.js'][117] = 0;
  _$jscoverage['telerik.common.js'][118] = 0;
  _$jscoverage['telerik.common.js'][119] = 0;
  _$jscoverage['telerik.common.js'][120] = 0;
  _$jscoverage['telerik.common.js'][125] = 0;
  _$jscoverage['telerik.common.js'][126] = 0;
  _$jscoverage['telerik.common.js'][127] = 0;
  _$jscoverage['telerik.common.js'][128] = 0;
  _$jscoverage['telerik.common.js'][129] = 0;
  _$jscoverage['telerik.common.js'][133] = 0;
  _$jscoverage['telerik.common.js'][135] = 0;
  _$jscoverage['telerik.common.js'][136] = 0;
  _$jscoverage['telerik.common.js'][138] = 0;
  _$jscoverage['telerik.common.js'][140] = 0;
  _$jscoverage['telerik.common.js'][141] = 0;
  _$jscoverage['telerik.common.js'][142] = 0;
  _$jscoverage['telerik.common.js'][143] = 0;
  _$jscoverage['telerik.common.js'][144] = 0;
  _$jscoverage['telerik.common.js'][147] = 0;
  _$jscoverage['telerik.common.js'][148] = 0;
  _$jscoverage['telerik.common.js'][151] = 0;
  _$jscoverage['telerik.common.js'][155] = 0;
  _$jscoverage['telerik.common.js'][156] = 0;
  _$jscoverage['telerik.common.js'][157] = 0;
  _$jscoverage['telerik.common.js'][158] = 0;
  _$jscoverage['telerik.common.js'][159] = 0;
  _$jscoverage['telerik.common.js'][160] = 0;
  _$jscoverage['telerik.common.js'][164] = 0;
  _$jscoverage['telerik.common.js'][168] = 0;
  _$jscoverage['telerik.common.js'][169] = 0;
  _$jscoverage['telerik.common.js'][170] = 0;
  _$jscoverage['telerik.common.js'][171] = 0;
  _$jscoverage['telerik.common.js'][175] = 0;
  _$jscoverage['telerik.common.js'][177] = 0;
  _$jscoverage['telerik.common.js'][178] = 0;
  _$jscoverage['telerik.common.js'][179] = 0;
  _$jscoverage['telerik.common.js'][180] = 0;
  _$jscoverage['telerik.common.js'][182] = 0;
  _$jscoverage['telerik.common.js'][230] = 0;
  _$jscoverage['telerik.common.js'][231] = 0;
  _$jscoverage['telerik.common.js'][233] = 0;
  _$jscoverage['telerik.common.js'][241] = 0;
  _$jscoverage['telerik.common.js'][243] = 0;
  _$jscoverage['telerik.common.js'][244] = 0;
  _$jscoverage['telerik.common.js'][245] = 0;
  _$jscoverage['telerik.common.js'][247] = 0;
  _$jscoverage['telerik.common.js'][249] = 0;
  _$jscoverage['telerik.common.js'][254] = 0;
  _$jscoverage['telerik.common.js'][256] = 0;
  _$jscoverage['telerik.common.js'][259] = 0;
  _$jscoverage['telerik.common.js'][263] = 0;
  _$jscoverage['telerik.common.js'][265] = 0;
  _$jscoverage['telerik.common.js'][267] = 0;
  _$jscoverage['telerik.common.js'][268] = 0;
  _$jscoverage['telerik.common.js'][270] = 0;
  _$jscoverage['telerik.common.js'][271] = 0;
  _$jscoverage['telerik.common.js'][273] = 0;
  _$jscoverage['telerik.common.js'][277] = 0;
  _$jscoverage['telerik.common.js'][278] = 0;
  _$jscoverage['telerik.common.js'][282] = 0;
  _$jscoverage['telerik.common.js'][283] = 0;
  _$jscoverage['telerik.common.js'][285] = 0;
  _$jscoverage['telerik.common.js'][290] = 0;
  _$jscoverage['telerik.common.js'][291] = 0;
  _$jscoverage['telerik.common.js'][293] = 0;
  _$jscoverage['telerik.common.js'][294] = 0;
  _$jscoverage['telerik.common.js'][295] = 0;
  _$jscoverage['telerik.common.js'][297] = 0;
  _$jscoverage['telerik.common.js'][298] = 0;
  _$jscoverage['telerik.common.js'][303] = 0;
  _$jscoverage['telerik.common.js'][305] = 0;
  _$jscoverage['telerik.common.js'][307] = 0;
  _$jscoverage['telerik.common.js'][308] = 0;
  _$jscoverage['telerik.common.js'][310] = 0;
  _$jscoverage['telerik.common.js'][311] = 0;
  _$jscoverage['telerik.common.js'][312] = 0;
  _$jscoverage['telerik.common.js'][314] = 0;
  _$jscoverage['telerik.common.js'][319] = 0;
  _$jscoverage['telerik.common.js'][321] = 0;
  _$jscoverage['telerik.common.js'][322] = 0;
  _$jscoverage['telerik.common.js'][323] = 0;
  _$jscoverage['telerik.common.js'][325] = 0;
  _$jscoverage['telerik.common.js'][326] = 0;
  _$jscoverage['telerik.common.js'][327] = 0;
  _$jscoverage['telerik.common.js'][331] = 0;
  _$jscoverage['telerik.common.js'][339] = 0;
  _$jscoverage['telerik.common.js'][344] = 0;
  _$jscoverage['telerik.common.js'][346] = 0;
  _$jscoverage['telerik.common.js'][347] = 0;
  _$jscoverage['telerik.common.js'][349] = 0;
  _$jscoverage['telerik.common.js'][350] = 0;
  _$jscoverage['telerik.common.js'][351] = 0;
  _$jscoverage['telerik.common.js'][352] = 0;
  _$jscoverage['telerik.common.js'][354] = 0;
  _$jscoverage['telerik.common.js'][362] = 0;
  _$jscoverage['telerik.common.js'][363] = 0;
  _$jscoverage['telerik.common.js'][364] = 0;
  _$jscoverage['telerik.common.js'][365] = 0;
  _$jscoverage['telerik.common.js'][366] = 0;
  _$jscoverage['telerik.common.js'][367] = 0;
  _$jscoverage['telerik.common.js'][368] = 0;
  _$jscoverage['telerik.common.js'][369] = 0;
  _$jscoverage['telerik.common.js'][370] = 0;
  _$jscoverage['telerik.common.js'][372] = 0;
  _$jscoverage['telerik.common.js'][374] = 0;
  _$jscoverage['telerik.common.js'][377] = 0;
  _$jscoverage['telerik.common.js'][381] = 0;
  _$jscoverage['telerik.common.js'][382] = 0;
  _$jscoverage['telerik.common.js'][383] = 0;
  _$jscoverage['telerik.common.js'][384] = 0;
  _$jscoverage['telerik.common.js'][388] = 0;
  _$jscoverage['telerik.common.js'][389] = 0;
  _$jscoverage['telerik.common.js'][390] = 0;
  _$jscoverage['telerik.common.js'][391] = 0;
  _$jscoverage['telerik.common.js'][395] = 0;
  _$jscoverage['telerik.common.js'][404] = 0;
  _$jscoverage['telerik.common.js'][405] = 0;
  _$jscoverage['telerik.common.js'][406] = 0;
  _$jscoverage['telerik.common.js'][408] = 0;
  _$jscoverage['telerik.common.js'][412] = 0;
  _$jscoverage['telerik.common.js'][413] = 0;
  _$jscoverage['telerik.common.js'][414] = 0;
  _$jscoverage['telerik.common.js'][415] = 0;
  _$jscoverage['telerik.common.js'][419] = 0;
  _$jscoverage['telerik.common.js'][420] = 0;
  _$jscoverage['telerik.common.js'][421] = 0;
  _$jscoverage['telerik.common.js'][425] = 0;
  _$jscoverage['telerik.common.js'][427] = 0;
  _$jscoverage['telerik.common.js'][443] = 0;
  _$jscoverage['telerik.common.js'][447] = 0;
  _$jscoverage['telerik.common.js'][449] = 0;
  _$jscoverage['telerik.common.js'][450] = 0;
  _$jscoverage['telerik.common.js'][451] = 0;
  _$jscoverage['telerik.common.js'][452] = 0;
  _$jscoverage['telerik.common.js'][453] = 0;
  _$jscoverage['telerik.common.js'][454] = 0;
  _$jscoverage['telerik.common.js'][455] = 0;
  _$jscoverage['telerik.common.js'][456] = 0;
  _$jscoverage['telerik.common.js'][457] = 0;
  _$jscoverage['telerik.common.js'][459] = 0;
  _$jscoverage['telerik.common.js'][491] = 0;
  _$jscoverage['telerik.common.js'][492] = 0;
  _$jscoverage['telerik.common.js'][494] = 0;
  _$jscoverage['telerik.common.js'][495] = 0;
  _$jscoverage['telerik.common.js'][500] = 0;
  _$jscoverage['telerik.common.js'][501] = 0;
  _$jscoverage['telerik.common.js'][504] = 0;
  _$jscoverage['telerik.common.js'][505] = 0;
  _$jscoverage['telerik.common.js'][506] = 0;
  _$jscoverage['telerik.common.js'][515] = 0;
  _$jscoverage['telerik.common.js'][520] = 0;
  _$jscoverage['telerik.common.js'][521] = 0;
  _$jscoverage['telerik.common.js'][522] = 0;
  _$jscoverage['telerik.common.js'][523] = 0;
  _$jscoverage['telerik.common.js'][524] = 0;
  _$jscoverage['telerik.common.js'][525] = 0;
  _$jscoverage['telerik.common.js'][527] = 0;
  _$jscoverage['telerik.common.js'][528] = 0;
  _$jscoverage['telerik.common.js'][529] = 0;
  _$jscoverage['telerik.common.js'][530] = 0;
  _$jscoverage['telerik.common.js'][531] = 0;
  _$jscoverage['telerik.common.js'][532] = 0;
  _$jscoverage['telerik.common.js'][533] = 0;
  _$jscoverage['telerik.common.js'][534] = 0;
  _$jscoverage['telerik.common.js'][535] = 0;
  _$jscoverage['telerik.common.js'][536] = 0;
  _$jscoverage['telerik.common.js'][539] = 0;
  _$jscoverage['telerik.common.js'][540] = 0;
  _$jscoverage['telerik.common.js'][541] = 0;
  _$jscoverage['telerik.common.js'][542] = 0;
  _$jscoverage['telerik.common.js'][543] = 0;
  _$jscoverage['telerik.common.js'][545] = 0;
  _$jscoverage['telerik.common.js'][547] = 0;
  _$jscoverage['telerik.common.js'][548] = 0;
  _$jscoverage['telerik.common.js'][549] = 0;
  _$jscoverage['telerik.common.js'][550] = 0;
  _$jscoverage['telerik.common.js'][551] = 0;
  _$jscoverage['telerik.common.js'][553] = 0;
  _$jscoverage['telerik.common.js'][554] = 0;
  _$jscoverage['telerik.common.js'][557] = 0;
  _$jscoverage['telerik.common.js'][558] = 0;
  _$jscoverage['telerik.common.js'][559] = 0;
  _$jscoverage['telerik.common.js'][560] = 0;
  _$jscoverage['telerik.common.js'][561] = 0;
  _$jscoverage['telerik.common.js'][562] = 0;
  _$jscoverage['telerik.common.js'][564] = 0;
  _$jscoverage['telerik.common.js'][568] = 0;
  _$jscoverage['telerik.common.js'][569] = 0;
  _$jscoverage['telerik.common.js'][570] = 0;
  _$jscoverage['telerik.common.js'][571] = 0;
  _$jscoverage['telerik.common.js'][572] = 0;
  _$jscoverage['telerik.common.js'][575] = 0;
  _$jscoverage['telerik.common.js'][578] = 0;
  _$jscoverage['telerik.common.js'][579] = 0;
  _$jscoverage['telerik.common.js'][580] = 0;
  _$jscoverage['telerik.common.js'][584] = 0;
  _$jscoverage['telerik.common.js'][585] = 0;
  _$jscoverage['telerik.common.js'][588] = 0;
  _$jscoverage['telerik.common.js'][589] = 0;
  _$jscoverage['telerik.common.js'][590] = 0;
  _$jscoverage['telerik.common.js'][592] = 0;
  _$jscoverage['telerik.common.js'][593] = 0;
  _$jscoverage['telerik.common.js'][594] = 0;
  _$jscoverage['telerik.common.js'][595] = 0;
  _$jscoverage['telerik.common.js'][596] = 0;
  _$jscoverage['telerik.common.js'][597] = 0;
  _$jscoverage['telerik.common.js'][599] = 0;
  _$jscoverage['telerik.common.js'][601] = 0;
  _$jscoverage['telerik.common.js'][602] = 0;
  _$jscoverage['telerik.common.js'][603] = 0;
  _$jscoverage['telerik.common.js'][605] = 0;
  _$jscoverage['telerik.common.js'][606] = 0;
  _$jscoverage['telerik.common.js'][607] = 0;
  _$jscoverage['telerik.common.js'][609] = 0;
  _$jscoverage['telerik.common.js'][610] = 0;
  _$jscoverage['telerik.common.js'][611] = 0;
  _$jscoverage['telerik.common.js'][613] = 0;
  _$jscoverage['telerik.common.js'][614] = 0;
  _$jscoverage['telerik.common.js'][615] = 0;
  _$jscoverage['telerik.common.js'][617] = 0;
  _$jscoverage['telerik.common.js'][618] = 0;
  _$jscoverage['telerik.common.js'][619] = 0;
  _$jscoverage['telerik.common.js'][621] = 0;
  _$jscoverage['telerik.common.js'][622] = 0;
  _$jscoverage['telerik.common.js'][623] = 0;
  _$jscoverage['telerik.common.js'][625] = 0;
  _$jscoverage['telerik.common.js'][626] = 0;
  _$jscoverage['telerik.common.js'][627] = 0;
  _$jscoverage['telerik.common.js'][629] = 0;
  _$jscoverage['telerik.common.js'][630] = 0;
  _$jscoverage['telerik.common.js'][631] = 0;
  _$jscoverage['telerik.common.js'][633] = 0;
  _$jscoverage['telerik.common.js'][634] = 0;
  _$jscoverage['telerik.common.js'][635] = 0;
  _$jscoverage['telerik.common.js'][637] = 0;
  _$jscoverage['telerik.common.js'][638] = 0;
  _$jscoverage['telerik.common.js'][639] = 0;
  _$jscoverage['telerik.common.js'][641] = 0;
  _$jscoverage['telerik.common.js'][642] = 0;
  _$jscoverage['telerik.common.js'][644] = 0;
  _$jscoverage['telerik.common.js'][645] = 0;
  _$jscoverage['telerik.common.js'][646] = 0;
  _$jscoverage['telerik.common.js'][648] = 0;
  _$jscoverage['telerik.common.js'][653] = 0;
  _$jscoverage['telerik.common.js'][655] = 0;
  _$jscoverage['telerik.common.js'][656] = 0;
  _$jscoverage['telerik.common.js'][659] = 0;
  _$jscoverage['telerik.common.js'][665] = 0;
  _$jscoverage['telerik.common.js'][666] = 0;
  _$jscoverage['telerik.common.js'][668] = 0;
  _$jscoverage['telerik.common.js'][670] = 0;
  _$jscoverage['telerik.common.js'][671] = 0;
  _$jscoverage['telerik.common.js'][674] = 0;
  _$jscoverage['telerik.common.js'][684] = 0;
  _$jscoverage['telerik.common.js'][691] = 0;
  _$jscoverage['telerik.common.js'][693] = 0;
  _$jscoverage['telerik.common.js'][697] = 0;
  _$jscoverage['telerik.common.js'][700] = 0;
  _$jscoverage['telerik.common.js'][701] = 0;
  _$jscoverage['telerik.common.js'][702] = 0;
  _$jscoverage['telerik.common.js'][703] = 0;
  _$jscoverage['telerik.common.js'][705] = 0;
  _$jscoverage['telerik.common.js'][707] = 0;
  _$jscoverage['telerik.common.js'][711] = 0;
  _$jscoverage['telerik.common.js'][715] = 0;
  _$jscoverage['telerik.common.js'][719] = 0;
  _$jscoverage['telerik.common.js'][723] = 0;
  _$jscoverage['telerik.common.js'][727] = 0;
  _$jscoverage['telerik.common.js'][731] = 0;
  _$jscoverage['telerik.common.js'][732] = 0;
  _$jscoverage['telerik.common.js'][734] = 0;
  _$jscoverage['telerik.common.js'][735] = 0;
  _$jscoverage['telerik.common.js'][737] = 0;
  _$jscoverage['telerik.common.js'][739] = 0;
  _$jscoverage['telerik.common.js'][743] = 0;
  _$jscoverage['telerik.common.js'][746] = 0;
  _$jscoverage['telerik.common.js'][747] = 0;
  _$jscoverage['telerik.common.js'][751] = 0;
  _$jscoverage['telerik.common.js'][752] = 0;
  _$jscoverage['telerik.common.js'][753] = 0;
  _$jscoverage['telerik.common.js'][757] = 0;
  _$jscoverage['telerik.common.js'][758] = 0;
  _$jscoverage['telerik.common.js'][759] = 0;
  _$jscoverage['telerik.common.js'][763] = 0;
  _$jscoverage['telerik.common.js'][769] = 0;
  _$jscoverage['telerik.common.js'][770] = 0;
  _$jscoverage['telerik.common.js'][771] = 0;
  _$jscoverage['telerik.common.js'][772] = 0;
  _$jscoverage['telerik.common.js'][775] = 0;
  _$jscoverage['telerik.common.js'][777] = 0;
  _$jscoverage['telerik.common.js'][778] = 0;
  _$jscoverage['telerik.common.js'][779] = 0;
  _$jscoverage['telerik.common.js'][783] = 0;
  _$jscoverage['telerik.common.js'][785] = 0;
  _$jscoverage['telerik.common.js'][786] = 0;
  _$jscoverage['telerik.common.js'][795] = 0;
  _$jscoverage['telerik.common.js'][799] = 0;
  _$jscoverage['telerik.common.js'][801] = 0;
  _$jscoverage['telerik.common.js'][803] = 0;
  _$jscoverage['telerik.common.js'][805] = 0;
  _$jscoverage['telerik.common.js'][807] = 0;
  _$jscoverage['telerik.common.js'][809] = 0;
  _$jscoverage['telerik.common.js'][810] = 0;
  _$jscoverage['telerik.common.js'][818] = 0;
  _$jscoverage['telerik.common.js'][824] = 0;
  _$jscoverage['telerik.common.js'][826] = 0;
  _$jscoverage['telerik.common.js'][828] = 0;
  _$jscoverage['telerik.common.js'][830] = 0;
  _$jscoverage['telerik.common.js'][832] = 0;
  _$jscoverage['telerik.common.js'][840] = 0;
  _$jscoverage['telerik.common.js'][847] = 0;
  _$jscoverage['telerik.common.js'][848] = 0;
  _$jscoverage['telerik.common.js'][851] = 0;
  _$jscoverage['telerik.common.js'][853] = 0;
  _$jscoverage['telerik.common.js'][854] = 0;
  _$jscoverage['telerik.common.js'][857] = 0;
  _$jscoverage['telerik.common.js'][858] = 0;
  _$jscoverage['telerik.common.js'][862] = 0;
  _$jscoverage['telerik.common.js'][863] = 0;
  _$jscoverage['telerik.common.js'][868] = 0;
  _$jscoverage['telerik.common.js'][869] = 0;
  _$jscoverage['telerik.common.js'][871] = 0;
  _$jscoverage['telerik.common.js'][874] = 0;
  _$jscoverage['telerik.common.js'][877] = 0;
  _$jscoverage['telerik.common.js'][879] = 0;
  _$jscoverage['telerik.common.js'][881] = 0;
  _$jscoverage['telerik.common.js'][887] = 0;
  _$jscoverage['telerik.common.js'][888] = 0;
  _$jscoverage['telerik.common.js'][889] = 0;
  _$jscoverage['telerik.common.js'][890] = 0;
  _$jscoverage['telerik.common.js'][892] = 0;
  _$jscoverage['telerik.common.js'][898] = 0;
  _$jscoverage['telerik.common.js'][899] = 0;
  _$jscoverage['telerik.common.js'][901] = 0;
  _$jscoverage['telerik.common.js'][903] = 0;
  _$jscoverage['telerik.common.js'][910] = 0;
  _$jscoverage['telerik.common.js'][912] = 0;
  _$jscoverage['telerik.common.js'][918] = 0;
  _$jscoverage['telerik.common.js'][920] = 0;
  _$jscoverage['telerik.common.js'][922] = 0;
  _$jscoverage['telerik.common.js'][926] = 0;
  _$jscoverage['telerik.common.js'][928] = 0;
  _$jscoverage['telerik.common.js'][929] = 0;
  _$jscoverage['telerik.common.js'][930] = 0;
  _$jscoverage['telerik.common.js'][931] = 0;
  _$jscoverage['telerik.common.js'][934] = 0;
  _$jscoverage['telerik.common.js'][940] = 0;
  _$jscoverage['telerik.common.js'][946] = 0;
  _$jscoverage['telerik.common.js'][952] = 0;
  _$jscoverage['telerik.common.js'][953] = 0;
  _$jscoverage['telerik.common.js'][958] = 0;
  _$jscoverage['telerik.common.js'][959] = 0;
  _$jscoverage['telerik.common.js'][962] = 0;
  _$jscoverage['telerik.common.js'][964] = 0;
  _$jscoverage['telerik.common.js'][968] = 0;
  _$jscoverage['telerik.common.js'][969] = 0;
  _$jscoverage['telerik.common.js'][971] = 0;
  _$jscoverage['telerik.common.js'][973] = 0;
  _$jscoverage['telerik.common.js'][975] = 0;
  _$jscoverage['telerik.common.js'][977] = 0;
  _$jscoverage['telerik.common.js'][980] = 0;
  _$jscoverage['telerik.common.js'][981] = 0;
  _$jscoverage['telerik.common.js'][984] = 0;
  _$jscoverage['telerik.common.js'][991] = 0;
  _$jscoverage['telerik.common.js'][992] = 0;
  _$jscoverage['telerik.common.js'][994] = 0;
  _$jscoverage['telerik.common.js'][995] = 0;
  _$jscoverage['telerik.common.js'][998] = 0;
  _$jscoverage['telerik.common.js'][1000] = 0;
  _$jscoverage['telerik.common.js'][1006] = 0;
  _$jscoverage['telerik.common.js'][1010] = 0;
  _$jscoverage['telerik.common.js'][1014] = 0;
  _$jscoverage['telerik.common.js'][1015] = 0;
  _$jscoverage['telerik.common.js'][1019] = 0;
  _$jscoverage['telerik.common.js'][1020] = 0;
  _$jscoverage['telerik.common.js'][1021] = 0;
  _$jscoverage['telerik.common.js'][1022] = 0;
  _$jscoverage['telerik.common.js'][1023] = 0;
  _$jscoverage['telerik.common.js'][1027] = 0;
}
_$jscoverage['telerik.common.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// fix background flickering under IE6</span>","    <span class=\"k\">try</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>execCommand<span class=\"k\">)</span>","            document<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'BackgroundImageCache'</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">}</span>","","    <span class=\"k\">var</span> dateCheck <span class=\"k\">=</span> <span class=\"s\">/\\d/</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> version <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>version<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">5</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">));</span>","    <span class=\"k\">var</span> geckoFlicker <span class=\"k\">=</span> $<span class=\"k\">.</span>browser<span class=\"k\">.</span>mozilla <span class=\"k\">&amp;&amp;</span> version <span class=\"k\">&gt;=</span> <span class=\"s\">180</span> <span class=\"k\">&amp;&amp;</span> version <span class=\"k\">&lt;=</span> <span class=\"s\">191</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> dateFormatTokenRegExp <span class=\"k\">=</span> <span class=\"s\">/d{1,4}|M{1,4}|yy(?:yy)?|([Hhmstf])\\1*|\"[^\"]*\"|'[^']*'/g</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> $t <span class=\"k\">=</span> $<span class=\"k\">.</span>telerik <span class=\"k\">=</span> <span class=\"k\">{</span>","","        create<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>query<span class=\"k\">,</span> settings<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> name <span class=\"k\">=</span> settings<span class=\"k\">.</span>name<span class=\"k\">;</span>","            <span class=\"k\">var</span> options <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> $<span class=\"k\">.</span>fn<span class=\"k\">[</span>name<span class=\"k\">].</span>defaults<span class=\"k\">,</span> settings<span class=\"k\">.</span>options<span class=\"k\">);</span>","","            <span class=\"k\">return</span> query<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> $$ <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","                options <span class=\"k\">=</span> $<span class=\"k\">.</span>meta <span class=\"k\">?</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> options<span class=\"k\">,</span> $$<span class=\"k\">.</span>data<span class=\"k\">())</span> <span class=\"k\">:</span> options<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>$$<span class=\"k\">.</span>data<span class=\"k\">(</span>name<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> component <span class=\"k\">=</span> settings<span class=\"k\">.</span>init<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","                    $$<span class=\"k\">.</span>data<span class=\"k\">(</span>name<span class=\"k\">,</span> component<span class=\"k\">);</span>","","                    $t<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">'load'</span><span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>settings<span class=\"k\">.</span>success<span class=\"k\">)</span> settings<span class=\"k\">.</span>success<span class=\"k\">(</span>component<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        toJson<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> o<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> value <span class=\"k\">=</span> o<span class=\"k\">[</span>key<span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">!=</span> <span class=\"s\">'object'</span><span class=\"k\">)</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'\"'</span> <span class=\"k\">+</span> key <span class=\"k\">+</span> <span class=\"s\">'\":\"'</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">);</span>","                <span class=\"k\">else</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'\"'</span> <span class=\"k\">+</span> key <span class=\"k\">+</span> <span class=\"s\">'\":'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>toJson<span class=\"k\">(</span>value<span class=\"k\">));</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"s\">'{'</span> <span class=\"k\">+</span> result<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'}'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        delegate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>context<span class=\"k\">,</span> handler<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                handler<span class=\"k\">.</span>apply<span class=\"k\">(</span>context<span class=\"k\">,</span> <span class=\"k\">[</span>e<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">]);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        stop<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>handler<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","                handler<span class=\"k\">.</span>apply<span class=\"k\">(</span>context <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        stopAll<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>handler<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","                handler<span class=\"k\">.</span>apply<span class=\"k\">(</span>context <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        bind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>context<span class=\"k\">,</span> events<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> $<span class=\"k\">(</span>context<span class=\"k\">.</span>element<span class=\"k\">);</span>","            $<span class=\"k\">.</span>each<span class=\"k\">(</span>events<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>eventName<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>isFunction<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">))</span> $element<span class=\"k\">.</span>bind<span class=\"k\">(</span>eventName<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        preventDefault<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        hover<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-hover'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        leave<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-hover'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        buttonHover<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-button-hover'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        buttonLeave<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-button-hover'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        stringBuilder<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>buffer <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        ajaxError<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> eventName<span class=\"k\">,</span> xhr<span class=\"k\">,</span> status<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> prevented <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span>element<span class=\"k\">,</span> eventName<span class=\"k\">,</span>","                <span class=\"k\">{</span>","                    XMLHttpRequest<span class=\"k\">:</span> xhr<span class=\"k\">,</span>","                    textStatus<span class=\"k\">:</span> status","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>prevented<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>status <span class=\"k\">==</span> <span class=\"s\">'error'</span> <span class=\"k\">&amp;&amp;</span> xhr<span class=\"k\">.</span>status <span class=\"k\">!=</span> <span class=\"s\">'0'</span><span class=\"k\">)</span>","                    alert<span class=\"k\">(</span><span class=\"s\">'Error! The requested URL returned '</span> <span class=\"k\">+</span> xhr<span class=\"k\">.</span>status <span class=\"k\">+</span> <span class=\"s\">' - '</span> <span class=\"k\">+</span> xhr<span class=\"k\">.</span>statusText<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>status <span class=\"k\">==</span> <span class=\"s\">'timeout'</span><span class=\"k\">)</span>","                    alert<span class=\"k\">(</span><span class=\"s\">'Error! Server timeout.'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> prevented<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        trigger<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">,</span> eventName<span class=\"k\">,</span> e<span class=\"k\">)</span> <span class=\"k\">{</span>","            e <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>e <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"k\">new</span> $<span class=\"k\">.</span>Event<span class=\"k\">(</span>eventName<span class=\"k\">));</span>","            e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","            $<span class=\"k\">(</span>element<span class=\"k\">).</span>trigger<span class=\"k\">(</span>e<span class=\"k\">);</span>","            <span class=\"k\">return</span> e<span class=\"k\">.</span>isDefaultPrevented<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Returns the type as a string. Not full. Used in string formatting</span>","        getType<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>obj <span class=\"k\">instanceof</span> Date<span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"s\">'date'</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>isNaN<span class=\"k\">(</span>obj<span class=\"k\">))</span>","                <span class=\"k\">return</span> <span class=\"s\">'number'</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"s\">'object'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        formatString<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> s <span class=\"k\">=</span> arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\\\</span><span class=\"s\">{'</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'(:([^</span><span class=\"t\">\\\\</span><span class=\"s\">}]+))?</span><span class=\"t\">\\\\</span><span class=\"s\">}'</span><span class=\"k\">,</span> <span class=\"s\">'gm'</span><span class=\"k\">);</span>","","                <span class=\"k\">var</span> argument <span class=\"k\">=</span> arguments<span class=\"k\">[</span>i <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">];</span>","","                <span class=\"k\">var</span> formatter <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>formatters<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>getType<span class=\"k\">(</span>argument<span class=\"k\">)];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>formatter<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> match <span class=\"k\">=</span> reg<span class=\"k\">.</span>exec<span class=\"k\">(</span>s<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>match<span class=\"k\">)</span>","                        argument <span class=\"k\">=</span> formatter<span class=\"k\">(</span>argument<span class=\"k\">,</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","                <span class=\"k\">}</span>","","                s <span class=\"k\">=</span> s<span class=\"k\">.</span>replace<span class=\"k\">(</span>reg<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> argument<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> s<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        getElementZIndex<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> zIndex <span class=\"k\">=</span> <span class=\"s\">'auto'</span><span class=\"k\">;</span>","            $<span class=\"k\">(</span>element<span class=\"k\">).</span>parents<span class=\"k\">().</span>andSelf<span class=\"k\">().</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                zIndex <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'zIndex'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>Number<span class=\"k\">(</span>zIndex<span class=\"k\">))</span> <span class=\"k\">{</span>","                    zIndex <span class=\"k\">=</span> Number<span class=\"k\">(</span>zIndex<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> zIndex<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        lastIndexOf<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">,</span> character<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> characterLength <span class=\"k\">=</span> character<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> value<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span> i<span class=\"k\">--)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">.</span>substr<span class=\"k\">(</span>i<span class=\"k\">,</span> characterLength<span class=\"k\">)</span> <span class=\"k\">==</span> character<span class=\"k\">)</span> <span class=\"k\">return</span> i<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        caretPos<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> pos <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>document<span class=\"k\">.</span>selection<span class=\"k\">)</span>","                pos <span class=\"k\">=</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>element<span class=\"k\">.</span>document<span class=\"k\">.</span>selection<span class=\"k\">.</span>createRange<span class=\"k\">().</span>moveStart<span class=\"k\">(</span><span class=\"s\">'character'</span><span class=\"k\">,</span> <span class=\"k\">-</span>element<span class=\"k\">.</span>value<span class=\"k\">.</span>length<span class=\"k\">));</span>","            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>selectionStart <span class=\"k\">!==</span> undefined<span class=\"k\">)</span>","                pos <span class=\"k\">=</span> element<span class=\"k\">.</span>selectionStart<span class=\"k\">;</span>","","            <span class=\"k\">return</span> pos<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        formatters<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        fx<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        cultureInfo<span class=\"k\">:</span> <span class=\"k\">{</span>","            days<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'Sunday'</span><span class=\"k\">,</span> <span class=\"s\">'Monday'</span><span class=\"k\">,</span> <span class=\"s\">'Tuesday'</span><span class=\"k\">,</span> <span class=\"s\">'Wednesday'</span><span class=\"k\">,</span> <span class=\"s\">'Thursday'</span><span class=\"k\">,</span> <span class=\"s\">'Friday'</span><span class=\"k\">,</span> <span class=\"s\">'Saturday'</span><span class=\"k\">],</span>","            abbrDays<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'Sun'</span><span class=\"k\">,</span> <span class=\"s\">'Mon'</span><span class=\"k\">,</span> <span class=\"s\">'Tue'</span><span class=\"k\">,</span> <span class=\"s\">'Wed'</span><span class=\"k\">,</span> <span class=\"s\">'Thu'</span><span class=\"k\">,</span> <span class=\"s\">'Fri'</span><span class=\"k\">,</span> <span class=\"s\">'Sat'</span><span class=\"k\">],</span>","            months<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'January'</span><span class=\"k\">,</span> <span class=\"s\">'February'</span><span class=\"k\">,</span> <span class=\"s\">'March'</span><span class=\"k\">,</span> <span class=\"s\">'April'</span><span class=\"k\">,</span> <span class=\"s\">'May'</span><span class=\"k\">,</span> <span class=\"s\">'June'</span><span class=\"k\">,</span> <span class=\"s\">'July'</span><span class=\"k\">,</span> <span class=\"s\">'August'</span><span class=\"k\">,</span> <span class=\"s\">'September'</span><span class=\"k\">,</span> <span class=\"s\">'October'</span><span class=\"k\">,</span> <span class=\"s\">'November'</span><span class=\"k\">,</span> <span class=\"s\">'December'</span><span class=\"k\">],</span>","            abbrMonths<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'Jan'</span><span class=\"k\">,</span> <span class=\"s\">'Feb'</span><span class=\"k\">,</span> <span class=\"s\">'Mar'</span><span class=\"k\">,</span> <span class=\"s\">'Apr'</span><span class=\"k\">,</span> <span class=\"s\">'May'</span><span class=\"k\">,</span> <span class=\"s\">'Jun'</span><span class=\"k\">,</span> <span class=\"s\">'Jul'</span><span class=\"k\">,</span> <span class=\"s\">'Aug'</span><span class=\"k\">,</span> <span class=\"s\">'Sep'</span><span class=\"k\">,</span> <span class=\"s\">'Oct'</span><span class=\"k\">,</span> <span class=\"s\">'Nov'</span><span class=\"k\">,</span> <span class=\"s\">'Dec'</span><span class=\"k\">],</span>","            longTime<span class=\"k\">:</span> <span class=\"s\">'h:mm:ss tt'</span><span class=\"k\">,</span>","            longDate<span class=\"k\">:</span> <span class=\"s\">'dddd, MMMM dd, yyyy'</span><span class=\"k\">,</span>","            shortDate<span class=\"k\">:</span> <span class=\"s\">'M/d/yyyy'</span><span class=\"k\">,</span>","            shortTime<span class=\"k\">:</span> <span class=\"s\">'h:mm tt'</span><span class=\"k\">,</span>","            fullDateTime<span class=\"k\">:</span> <span class=\"s\">'dddd, MMMM dd, yyyy h:mm:ss tt'</span><span class=\"k\">,</span>","            generalDateShortTime<span class=\"k\">:</span> <span class=\"s\">'M/d/yyyy h:mm tt'</span><span class=\"k\">,</span>","            generalDateTime<span class=\"k\">:</span> <span class=\"s\">'M/d/yyyy h:mm:ss tt'</span><span class=\"k\">,</span>","            sortableDateTime<span class=\"k\">:</span> <span class=\"s\">\"yyyy'-'MM'-'ddTHH':'mm':'ss\"</span><span class=\"k\">,</span>","            universalSortableDateTime<span class=\"k\">:</span> <span class=\"s\">\"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"</span><span class=\"k\">,</span>","            monthYear<span class=\"k\">:</span> <span class=\"s\">'MMMM, yyyy'</span><span class=\"k\">,</span>","            monthDay<span class=\"k\">:</span> <span class=\"s\">'MMMM dd'</span><span class=\"k\">,</span>","            today<span class=\"k\">:</span> <span class=\"s\">'today'</span><span class=\"k\">,</span>","            tomorrow<span class=\"k\">:</span> <span class=\"s\">'tomorrow'</span><span class=\"k\">,</span>","            yesterday<span class=\"k\">:</span> <span class=\"s\">'yesterday'</span><span class=\"k\">,</span>","            next<span class=\"k\">:</span> <span class=\"s\">'next'</span><span class=\"k\">,</span>","            last<span class=\"k\">:</span> <span class=\"s\">'last'</span><span class=\"k\">,</span>","            year<span class=\"k\">:</span> <span class=\"s\">'year'</span><span class=\"k\">,</span>","            month<span class=\"k\">:</span> <span class=\"s\">'month'</span><span class=\"k\">,</span>","            week<span class=\"k\">:</span> <span class=\"s\">'week'</span><span class=\"k\">,</span>","            day<span class=\"k\">:</span> <span class=\"s\">'day'</span><span class=\"k\">,</span>","            am<span class=\"k\">:</span> <span class=\"s\">'AM'</span><span class=\"k\">,</span>","            pm<span class=\"k\">:</span> <span class=\"s\">'PM'</span><span class=\"k\">,</span>","            dateSeparator<span class=\"k\">:</span> <span class=\"s\">'/'</span><span class=\"k\">,</span>","            timeSeparator<span class=\"k\">:</span> <span class=\"s\">':'</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">    options = {</span>","<span class=\"c\">    attr: component.dropDownAttr,</span>","<span class=\"c\">    effects: component.effects,</span>","<span class=\"c\">    onClick: function,</span>","<span class=\"c\">    onItemCreate: function</span>","<span class=\"c\">    }</span>","<span class=\"c\">    */</span>","","    $t<span class=\"k\">.</span>dropDown <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>$element <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">().</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;div '</span><span class=\"k\">)</span>","                                 <span class=\"k\">.</span>catIf<span class=\"k\">(</span>options<span class=\"k\">.</span>attr<span class=\"k\">,</span> options<span class=\"k\">.</span>attr<span class=\"k\">)</span>","                                 <span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&gt;&lt;ul class=\"t-reset\"&gt;&lt;/ul&gt;&lt;/div&gt;'</span><span class=\"k\">)</span>","                                 <span class=\"k\">.</span>string<span class=\"k\">())</span>","                                 <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"t-popup t-group\"</span><span class=\"k\">)</span>","                                 <span class=\"k\">.</span>hide<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>dropDown<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        _html<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> length <span class=\"k\">=</span> data<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">var</span> dataItem <span class=\"k\">=</span> data<span class=\"k\">[</span>i<span class=\"k\">];</span>","","                    <span class=\"k\">var</span> e <span class=\"k\">=</span> <span class=\"k\">{</span>","                        html<span class=\"k\">:</span> dataItem<span class=\"k\">.</span>Text <span class=\"k\">||</span> dataItem<span class=\"k\">,</span>","                        dataItem<span class=\"k\">:</span> dataItem","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>onItemCreate<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>onItemCreate<span class=\"k\">(</span>e<span class=\"k\">);</span>","","                    html<span class=\"k\">.</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;li class=\"t-item\"&gt;'</span><span class=\"k\">).</span>cat<span class=\"k\">(</span>e<span class=\"k\">.</span>html<span class=\"k\">).</span>cat<span class=\"k\">(</span><span class=\"s\">'&lt;/li&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> html<span class=\"k\">.</span>string<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        open<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>position<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>onOpen<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>onOpen<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isOpened<span class=\"k\">()</span> <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>$items<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$element<span class=\"k\">;</span>","            <span class=\"k\">var</span> selector <span class=\"k\">=</span> <span class=\"s\">'.t-reset &gt; .t-item'</span><span class=\"k\">;</span>","","            $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflowY'</span><span class=\"k\">,</span> <span class=\"s\">'auto'</span><span class=\"k\">);</span>","            $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> position<span class=\"k\">.</span>outerWidth <span class=\"k\">?</span> position<span class=\"k\">.</span>outerWidth <span class=\"k\">-</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">);</span>","","            $element<span class=\"k\">.</span>delegate<span class=\"k\">(</span>selector<span class=\"k\">,</span> <span class=\"s\">'mouseenter'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>hover<span class=\"k\">)</span>","                    <span class=\"k\">.</span>delegate<span class=\"k\">(</span>selector<span class=\"k\">,</span> <span class=\"s\">'mouseleave'</span><span class=\"k\">,</span> $t<span class=\"k\">.</span>leave<span class=\"k\">)</span>","                    <span class=\"k\">.</span>delegate<span class=\"k\">(</span>selector<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span>","                        $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>onClick<span class=\"k\">)</span>","                                <span class=\"k\">this</span><span class=\"k\">.</span>onClick<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span>e<span class=\"k\">,</span> <span class=\"k\">{</span> item<span class=\"k\">:</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>target<span class=\"k\">).</span>closest<span class=\"k\">(</span><span class=\"s\">'.t-item'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">));</span>","                        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">))</span>","                        <span class=\"k\">.</span>appendTo<span class=\"k\">(</span>document<span class=\"k\">.</span>body<span class=\"k\">);</span>","","            <span class=\"k\">var</span> elementPosition <span class=\"k\">=</span> position<span class=\"k\">.</span>offset<span class=\"k\">;</span>","            elementPosition<span class=\"k\">.</span>top <span class=\"k\">+=</span> position<span class=\"k\">.</span>outerHeight<span class=\"k\">;</span>","","            $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>_wrap<span class=\"k\">(</span>$element<span class=\"k\">).</span>css<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","                position<span class=\"k\">:</span> <span class=\"s\">'absolute'</span><span class=\"k\">,</span>","                zIndex<span class=\"k\">:</span> position<span class=\"k\">.</span>zIndex","            <span class=\"k\">}</span><span class=\"k\">,</span> elementPosition<span class=\"k\">));</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>geckoFlicker<span class=\"k\">)</span>","                $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflow'</span><span class=\"k\">,</span> <span class=\"s\">'hidden'</span><span class=\"k\">);</span>","","            $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>play<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>effects<span class=\"k\">,</span> $element<span class=\"k\">,</span> <span class=\"k\">{</span> direction<span class=\"k\">:</span> <span class=\"s\">'bottom'</span> <span class=\"k\">}</span><span class=\"k\">,</span> $<span class=\"k\">.</span>proxy<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>geckoFlicker<span class=\"k\">)</span>","                    $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflow'</span><span class=\"k\">,</span> <span class=\"s\">'auto'</span><span class=\"k\">);</span>","","                <span class=\"k\">var</span> $selectedItems <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$items<span class=\"k\">.</span>filter<span class=\"k\">(</span><span class=\"s\">'.t-state-selected'</span><span class=\"k\">)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>$selectedItems<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">this</span><span class=\"k\">.</span>scrollTo<span class=\"k\">(</span>$selectedItems<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        close<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>isOpened<span class=\"k\">())</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$element<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>geckoFlicker<span class=\"k\">)</span>","                $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflow'</span><span class=\"k\">,</span> <span class=\"s\">'hidden'</span><span class=\"k\">);</span>","","            $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>rewind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>effects<span class=\"k\">,</span> $element<span class=\"k\">,</span> <span class=\"k\">{</span> direction<span class=\"k\">:</span> <span class=\"s\">'bottom'</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>geckoFlicker<span class=\"k\">)</span>","                    $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflow'</span><span class=\"k\">,</span> <span class=\"s\">'auto'</span><span class=\"k\">)</span>","","                $element<span class=\"k\">.</span>parent<span class=\"k\">().</span>remove<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        dataBind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","            data <span class=\"k\">=</span> data <span class=\"k\">||</span> <span class=\"k\">[];</span>","","            <span class=\"k\">var</span> $element <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$element<span class=\"k\">;</span>","            <span class=\"k\">var</span> elementHeight <span class=\"k\">=</span> $element<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>style<span class=\"k\">.</span>height<span class=\"k\">;</span>","            <span class=\"k\">var</span> height <span class=\"k\">=</span> elementHeight <span class=\"k\">&amp;&amp;</span> elementHeight <span class=\"k\">!=</span> <span class=\"s\">'auto'</span> <span class=\"k\">?</span> $element<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>style<span class=\"k\">.</span>height <span class=\"k\">:</span> <span class=\"s\">'200px'</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> $items <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$items <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_html<span class=\"k\">(</span>data<span class=\"k\">));</span>","            $element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'&gt; ul'</span><span class=\"k\">).</span>html<span class=\"k\">(</span>$items<span class=\"k\">);</span>","            $element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'height'</span><span class=\"k\">,</span> $items<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">10</span> <span class=\"k\">?</span> height <span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        highlight<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>li<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span>li<span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-state-selected'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>siblings<span class=\"k\">()</span>","                        <span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'t-state-selected'</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>end<span class=\"k\">()</span>","                        <span class=\"k\">.</span>index<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        isOpened<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>$element<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':visible'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        scrollTo<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>item<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> itemOffsetTop <span class=\"k\">=</span> item<span class=\"k\">.</span>offsetTop<span class=\"k\">;</span>","            <span class=\"k\">var</span> itemOffsetHeight <span class=\"k\">=</span> item<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","","            <span class=\"k\">var</span> dropDown <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$element<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">var</span> dropDownScrollTop <span class=\"k\">=</span> dropDown<span class=\"k\">.</span>scrollTop<span class=\"k\">;</span>","            <span class=\"k\">var</span> dropDownOffsetHeight <span class=\"k\">=</span> dropDown<span class=\"k\">.</span>clientHeight<span class=\"k\">;</span>","            <span class=\"k\">var</span> bottomDistance <span class=\"k\">=</span> itemOffsetTop <span class=\"k\">+</span> itemOffsetHeight<span class=\"k\">;</span>","","            dropDown<span class=\"k\">.</span>scrollTop <span class=\"k\">=</span> dropDownScrollTop <span class=\"k\">&gt;</span> itemOffsetTop","                                    <span class=\"k\">?</span> itemOffsetTop","                                    <span class=\"k\">:</span> bottomDistance <span class=\"k\">&gt;</span> <span class=\"k\">(</span>dropDownScrollTop <span class=\"k\">+</span> dropDownOffsetHeight<span class=\"k\">)</span>","                                    <span class=\"k\">?</span> bottomDistance <span class=\"k\">-</span> dropDownOffsetHeight","                                    <span class=\"k\">:</span> dropDownScrollTop<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>datetime <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">();</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">6</span><span class=\"k\">)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]);</span>","        <span class=\"k\">else</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">]);</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>datetime<span class=\"k\">,</span> <span class=\"k\">{</span>","        msPerMinute<span class=\"k\">:</span> <span class=\"s\">60000</span><span class=\"k\">,</span>","        msPerDay<span class=\"k\">:</span> <span class=\"s\">86400000</span><span class=\"k\">,</span>","        add<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">,</span> valueToAdd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tzOffsetBefore <span class=\"k\">=</span> date<span class=\"k\">.</span>timeOffset<span class=\"k\">();</span>","            <span class=\"k\">var</span> resultDate <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>date<span class=\"k\">.</span>time<span class=\"k\">()</span> <span class=\"k\">+</span> valueToAdd<span class=\"k\">);</span>","            <span class=\"k\">var</span> tzOffsetDiff <span class=\"k\">=</span> resultDate<span class=\"k\">.</span>timeOffset<span class=\"k\">()</span> <span class=\"k\">-</span> tzOffsetBefore<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>resultDate<span class=\"k\">.</span>time<span class=\"k\">()</span> <span class=\"k\">+</span> tzOffsetDiff <span class=\"k\">*</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>msPerMinute<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        subtract<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">,</span> dateToSubtract<span class=\"k\">)</span> <span class=\"k\">{</span>","            dateToSubtract <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>dateToSubtract<span class=\"k\">).</span>toDate<span class=\"k\">();</span>","            <span class=\"k\">var</span> diff <span class=\"k\">=</span> date<span class=\"k\">.</span>time<span class=\"k\">()</span> <span class=\"k\">-</span> dateToSubtract<span class=\"k\">;</span>","            <span class=\"k\">var</span> tzOffsetDiff <span class=\"k\">=</span> date<span class=\"k\">.</span>timeOffset<span class=\"k\">()</span> <span class=\"k\">-</span> dateToSubtract<span class=\"k\">.</span>timeOffset<span class=\"k\">();</span>","            <span class=\"k\">return</span> diff <span class=\"k\">-</span> <span class=\"k\">(</span>tzOffsetDiff <span class=\"k\">*</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>msPerMinute<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        firstDayOfMonth<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span>","                        <span class=\"k\">.</span>hours<span class=\"k\">(</span>date<span class=\"k\">.</span>hours<span class=\"k\">())</span>","                        <span class=\"k\">.</span>minutes<span class=\"k\">(</span>date<span class=\"k\">.</span>minutes<span class=\"k\">())</span>","                        <span class=\"k\">.</span>seconds<span class=\"k\">(</span>date<span class=\"k\">.</span>seconds<span class=\"k\">())</span>","                        <span class=\"k\">.</span>milliseconds<span class=\"k\">(</span>date<span class=\"k\">.</span>milliseconds<span class=\"k\">())</span>","                        <span class=\"k\">.</span>year<span class=\"k\">(</span>date<span class=\"k\">.</span>year<span class=\"k\">(),</span> date<span class=\"k\">.</span>month<span class=\"k\">(),</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        firstVisibleDay<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> firstVisibleDay <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>date<span class=\"k\">.</span>year<span class=\"k\">(),</span> date<span class=\"k\">.</span>month<span class=\"k\">(),</span> <span class=\"s\">0</span><span class=\"k\">,</span> date<span class=\"k\">.</span>hours<span class=\"k\">(),</span> date<span class=\"k\">.</span>minutes<span class=\"k\">(),</span> date<span class=\"k\">.</span>seconds<span class=\"k\">(),</span> date<span class=\"k\">.</span>milliseconds<span class=\"k\">());</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>firstVisibleDay<span class=\"k\">.</span>day<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>modify<span class=\"k\">(</span>firstVisibleDay<span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">*</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>msPerDay<span class=\"k\">)</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> firstVisibleDay<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        modify<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tzOffsetBefore <span class=\"k\">=</span> date<span class=\"k\">.</span>timeOffset<span class=\"k\">();</span>","            <span class=\"k\">var</span> resultDate <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>date<span class=\"k\">.</span>time<span class=\"k\">()</span> <span class=\"k\">+</span> value<span class=\"k\">);</span>","            <span class=\"k\">var</span> tzOffsetDiff <span class=\"k\">=</span> resultDate<span class=\"k\">.</span>timeOffset<span class=\"k\">()</span> <span class=\"k\">-</span> tzOffsetBefore<span class=\"k\">;</span>","            date<span class=\"k\">.</span>time<span class=\"k\">(</span>resultDate<span class=\"k\">.</span>time<span class=\"k\">()</span> <span class=\"k\">+</span> tzOffsetDiff <span class=\"k\">*</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>msPerMinute<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        pad<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">&lt;</span> <span class=\"s\">10</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"s\">'0'</span> <span class=\"k\">+</span> value<span class=\"k\">;</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        standardFormat<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> l <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">;</span>","","            <span class=\"k\">var</span> standardFormats <span class=\"k\">=</span> <span class=\"k\">{</span>","                d<span class=\"k\">:</span> l<span class=\"k\">.</span>shortDate<span class=\"k\">,</span>","                D<span class=\"k\">:</span> l<span class=\"k\">.</span>longDate<span class=\"k\">,</span>","                F<span class=\"k\">:</span> l<span class=\"k\">.</span>fullDateTime<span class=\"k\">,</span>","                g<span class=\"k\">:</span> l<span class=\"k\">.</span>generalDateShortTime<span class=\"k\">,</span>","                G<span class=\"k\">:</span> l<span class=\"k\">.</span>generalDateTime<span class=\"k\">,</span>","                m<span class=\"k\">:</span> l<span class=\"k\">.</span>monthDay<span class=\"k\">,</span>","                M<span class=\"k\">:</span> l<span class=\"k\">.</span>monthDay<span class=\"k\">,</span>","                s<span class=\"k\">:</span> l<span class=\"k\">.</span>sortableDateTime<span class=\"k\">,</span>","                t<span class=\"k\">:</span> l<span class=\"k\">.</span>shortTime<span class=\"k\">,</span>","                T<span class=\"k\">:</span> l<span class=\"k\">.</span>longTime<span class=\"k\">,</span>","                u<span class=\"k\">:</span> l<span class=\"k\">.</span>universalSortableDateTime<span class=\"k\">,</span>","                y<span class=\"k\">:</span> l<span class=\"k\">.</span>monthYear<span class=\"k\">,</span>","                Y<span class=\"k\">:</span> l<span class=\"k\">.</span>monthYear","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">return</span> standardFormats<span class=\"k\">[</span>format<span class=\"k\">];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        format<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>date<span class=\"k\">,</span> format<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> l <span class=\"k\">=</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">;</span>","","            <span class=\"k\">var</span> d <span class=\"k\">=</span> date<span class=\"k\">.</span>getDate<span class=\"k\">();</span>","            <span class=\"k\">var</span> day <span class=\"k\">=</span> date<span class=\"k\">.</span>getDay<span class=\"k\">();</span>","            <span class=\"k\">var</span> M <span class=\"k\">=</span> date<span class=\"k\">.</span>getMonth<span class=\"k\">();</span>","            <span class=\"k\">var</span> y <span class=\"k\">=</span> date<span class=\"k\">.</span>getFullYear<span class=\"k\">();</span>","            <span class=\"k\">var</span> h <span class=\"k\">=</span> date<span class=\"k\">.</span>getHours<span class=\"k\">();</span>","            <span class=\"k\">var</span> m <span class=\"k\">=</span> date<span class=\"k\">.</span>getMinutes<span class=\"k\">();</span>","            <span class=\"k\">var</span> s <span class=\"k\">=</span> date<span class=\"k\">.</span>getSeconds<span class=\"k\">();</span>","            <span class=\"k\">var</span> f <span class=\"k\">=</span> date<span class=\"k\">.</span>getMilliseconds<span class=\"k\">();</span>","            <span class=\"k\">var</span> pad <span class=\"k\">=</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>pad<span class=\"k\">;</span>","","            <span class=\"k\">var</span> dateFormatters <span class=\"k\">=</span> <span class=\"k\">{</span>","                d<span class=\"k\">:</span> d<span class=\"k\">,</span>","                dd<span class=\"k\">:</span> pad<span class=\"k\">(</span>d<span class=\"k\">),</span>","                ddd<span class=\"k\">:</span> l<span class=\"k\">.</span>abbrDays<span class=\"k\">[</span>day<span class=\"k\">],</span>","                dddd<span class=\"k\">:</span> l<span class=\"k\">.</span>days<span class=\"k\">[</span>day<span class=\"k\">],</span>","","                M<span class=\"k\">:</span> M <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span>","                MM<span class=\"k\">:</span> pad<span class=\"k\">(</span>M <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">),</span>","                MMM<span class=\"k\">:</span> l<span class=\"k\">.</span>abbrMonths<span class=\"k\">[</span>M<span class=\"k\">],</span>","                MMMM<span class=\"k\">:</span> l<span class=\"k\">.</span>months<span class=\"k\">[</span>M<span class=\"k\">],</span>","","                yy<span class=\"k\">:</span> pad<span class=\"k\">(</span>y <span class=\"k\">%</span> <span class=\"s\">100</span><span class=\"k\">),</span>","                yyyy<span class=\"k\">:</span> y<span class=\"k\">,</span>","","                h<span class=\"k\">:</span> h <span class=\"k\">%</span> <span class=\"s\">12</span> <span class=\"k\">||</span> <span class=\"s\">12</span><span class=\"k\">,</span>","                hh<span class=\"k\">:</span> pad<span class=\"k\">(</span>h <span class=\"k\">%</span> <span class=\"s\">12</span> <span class=\"k\">||</span> <span class=\"s\">12</span><span class=\"k\">),</span>","                H<span class=\"k\">:</span> h<span class=\"k\">,</span>","                HH<span class=\"k\">:</span> pad<span class=\"k\">(</span>h<span class=\"k\">),</span>","","                m<span class=\"k\">:</span> m<span class=\"k\">,</span>","                mm<span class=\"k\">:</span> pad<span class=\"k\">(</span>m<span class=\"k\">),</span>","","                s<span class=\"k\">:</span> s<span class=\"k\">,</span>","                ss<span class=\"k\">:</span> pad<span class=\"k\">(</span>s<span class=\"k\">),</span>","","                f<span class=\"k\">:</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>f <span class=\"k\">/</span> <span class=\"s\">100</span><span class=\"k\">),</span>","                ff<span class=\"k\">:</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>f <span class=\"k\">/</span> <span class=\"s\">10</span><span class=\"k\">),</span>","                fff<span class=\"k\">:</span> f<span class=\"k\">,</span>","","                tt<span class=\"k\">:</span> h <span class=\"k\">&lt;</span> <span class=\"s\">12</span> <span class=\"k\">?</span> l<span class=\"k\">.</span>am <span class=\"k\">:</span> l<span class=\"k\">.</span>pm","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            format <span class=\"k\">=</span> format <span class=\"k\">||</span> <span class=\"s\">'G'</span><span class=\"k\">;</span>","            format <span class=\"k\">=</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>standardFormat<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">?</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>standardFormat<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">:</span> format<span class=\"k\">;</span>","","            <span class=\"k\">return</span> format<span class=\"k\">.</span>replace<span class=\"k\">(</span>dateFormatTokenRegExp<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> match <span class=\"k\">in</span> dateFormatters <span class=\"k\">?</span> dateFormatters<span class=\"k\">[</span>match<span class=\"k\">]</span> <span class=\"k\">:</span> match<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> match<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        parse<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> options<span class=\"k\">.</span>value<span class=\"k\">;</span>","            <span class=\"k\">var</span> format <span class=\"k\">=</span> options<span class=\"k\">.</span>format<span class=\"k\">;</span>","","","            format <span class=\"k\">=</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>standardFormat<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">?</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>standardFormat<span class=\"k\">(</span>format<span class=\"k\">)</span> <span class=\"k\">:</span> format<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dateCheck<span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">))</span>","                <span class=\"k\">return</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>parseMachineDate<span class=\"k\">(</span><span class=\"k\">{</span>","                    value<span class=\"k\">:</span> value<span class=\"k\">,</span>","                    format<span class=\"k\">:</span> format<span class=\"k\">,</span>","                    shortYearCutOff<span class=\"k\">:</span> options<span class=\"k\">.</span>shortYearCutOff<span class=\"k\">,</span>","                    baseDate<span class=\"k\">:</span> options<span class=\"k\">.</span>baseDate<span class=\"k\">,</span>","                    AM<span class=\"k\">:</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>am<span class=\"k\">,</span>","                    PM<span class=\"k\">:</span> $t<span class=\"k\">.</span>cultureInfo<span class=\"k\">.</span>pm","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>parseByToken <span class=\"k\">?</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>parseByToken<span class=\"k\">(</span>value<span class=\"k\">,</span> options<span class=\"k\">.</span>today<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        parseMachineDate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> AM <span class=\"k\">=</span> options<span class=\"k\">.</span>AM<span class=\"k\">;</span>","            <span class=\"k\">var</span> PM <span class=\"k\">=</span> options<span class=\"k\">.</span>PM<span class=\"k\">;</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> options<span class=\"k\">.</span>value<span class=\"k\">;</span>","            <span class=\"k\">var</span> format <span class=\"k\">=</span> options<span class=\"k\">.</span>format<span class=\"k\">;</span>","            <span class=\"k\">var</span> baseDate <span class=\"k\">=</span> options<span class=\"k\">.</span>baseDate<span class=\"k\">;</span>","            <span class=\"k\">var</span> shortYearCutOff <span class=\"k\">=</span> options<span class=\"k\">.</span>shortYearCutOff <span class=\"k\">||</span> <span class=\"s\">30</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> year <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> month <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> day <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> hours <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> minutes <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> seconds <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> milliseconds <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> isAM<span class=\"k\">;</span>","            <span class=\"k\">var</span> isPM<span class=\"k\">;</span>","            <span class=\"k\">var</span> literal <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","            <span class=\"c\">// Returns count of the format character in the date format string</span>","            <span class=\"k\">var</span> lookAhead <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span>Matches<span class=\"k\">(</span>match<span class=\"k\">))</span> <span class=\"k\">{</span>","                    index<span class=\"k\">++;</span>","                    formatPosition<span class=\"k\">++</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> index<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> lookForLiteral <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> matches <span class=\"k\">=</span> Matches<span class=\"k\">(</span><span class=\"s\">\"'\"</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span>","                    formatPosition<span class=\"k\">++;</span>","                <span class=\"k\">return</span> matches<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> Matches <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span>formatPosition <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">&lt;</span> format<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>formatPosition <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">==</span> match<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"c\">// Extract a number from the string value</span>","            <span class=\"k\">var</span> getNumber <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>size<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> digits <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">'^</span><span class=\"t\">\\\\</span><span class=\"s\">d{1,'</span> <span class=\"k\">+</span> size <span class=\"k\">+</span> <span class=\"s\">'}'</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> num <span class=\"k\">=</span> value<span class=\"k\">.</span>substr<span class=\"k\">(</span>currentTokenIndex<span class=\"k\">).</span>match<span class=\"k\">(</span>digits<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>num<span class=\"k\">)</span> <span class=\"k\">{</span>","                    currentTokenIndex <span class=\"k\">+=</span> num<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>length<span class=\"k\">;</span>","                    <span class=\"k\">return</span> parseInt<span class=\"k\">(</span>num<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">10</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"c\">// Extract a name from the string value and convert to an index</span>","            <span class=\"k\">var</span> getName <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>names<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> names<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">.</span>substr<span class=\"k\">(</span>currentTokenIndex<span class=\"k\">,</span> names<span class=\"k\">[</span>i<span class=\"k\">].</span>length<span class=\"k\">)</span> <span class=\"k\">==</span> names<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">{</span>","                        currentTokenIndex <span class=\"k\">+=</span> names<span class=\"k\">[</span>i<span class=\"k\">].</span>length<span class=\"k\">;</span>","                        <span class=\"k\">return</span> i <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> checkLiteral <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">.</span>charAt<span class=\"k\">(</span>currentTokenIndex<span class=\"k\">)</span> <span class=\"k\">==</span> format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>formatPosition<span class=\"k\">))</span> <span class=\"k\">{</span>","                    currentTokenIndex<span class=\"k\">++;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> normalizeTime <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> value <span class=\"k\">===</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> count <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> currentTokenIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> valueLength <span class=\"k\">=</span> value<span class=\"k\">.</span>length<span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> formatPosition <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> flength <span class=\"k\">=</span> format<span class=\"k\">.</span>length<span class=\"k\">;</span> formatPosition <span class=\"k\">&lt;</span> flength<span class=\"k\">;</span> formatPosition<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>currentTokenIndex <span class=\"k\">==</span> valueLength<span class=\"k\">)</span> <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>literal<span class=\"k\">)</span> <span class=\"k\">{</span>","                    checkLiteral<span class=\"k\">();</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>formatPosition<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"'\"</span><span class=\"k\">)</span>","                        literal <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">switch</span> <span class=\"k\">(</span>format<span class=\"k\">.</span>charAt<span class=\"k\">(</span>formatPosition<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">case</span> <span class=\"s\">'d'</span><span class=\"k\">:</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'d'</span><span class=\"k\">);</span>","                            day <span class=\"k\">=</span> count <span class=\"k\">&lt;=</span> <span class=\"s\">1</span> <span class=\"k\">?</span> getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> getName<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>count <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">?</span> <span class=\"s\">'days'</span> <span class=\"k\">:</span> <span class=\"s\">'abbrDays'</span><span class=\"k\">]);</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'M'</span><span class=\"k\">:</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'M'</span><span class=\"k\">);</span>","                            month <span class=\"k\">=</span> count <span class=\"k\">&lt;=</span> <span class=\"s\">1</span> <span class=\"k\">?</span> getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">:</span> getName<span class=\"k\">(</span>$t<span class=\"k\">.</span>cultureInfo<span class=\"k\">[</span>count <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">?</span> <span class=\"s\">'months'</span> <span class=\"k\">:</span> <span class=\"s\">'abbrMonths'</span><span class=\"k\">]);</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'y'</span><span class=\"k\">:</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'y'</span><span class=\"k\">);</span>","                            year <span class=\"k\">=</span> getNumber<span class=\"k\">(</span>count <span class=\"k\">&lt;=</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">4</span><span class=\"k\">);</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'H'</span><span class=\"k\">:</span> <span class=\"c\">// 0-24 hours</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'H'</span><span class=\"k\">);</span>","                            hours <span class=\"k\">=</span> normalizeTime<span class=\"k\">(</span>getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">));</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'h'</span><span class=\"k\">:</span> <span class=\"c\">// 0-12 hours</span>","                            lookAhead<span class=\"k\">(</span><span class=\"s\">'h'</span><span class=\"k\">)</span>","                            hours <span class=\"k\">=</span> normalizeTime<span class=\"k\">(</span>getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">));</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'m'</span><span class=\"k\">:</span>","                            lookAhead<span class=\"k\">(</span><span class=\"s\">'m'</span><span class=\"k\">);</span>","                            minutes <span class=\"k\">=</span> normalizeTime<span class=\"k\">(</span>getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">));</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'s'</span><span class=\"k\">:</span>","                            lookAhead<span class=\"k\">(</span><span class=\"s\">'s'</span><span class=\"k\">);</span>","                            seconds <span class=\"k\">=</span> normalizeTime<span class=\"k\">(</span>getNumber<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">));</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'f'</span><span class=\"k\">:</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'f'</span><span class=\"k\">);</span>","                            milliseconds <span class=\"k\">=</span> normalizeTime<span class=\"k\">(</span>getNumber<span class=\"k\">(</span>count <span class=\"k\">&lt;=</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> count <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">));</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">'t'</span><span class=\"k\">:</span> <span class=\"c\">// AM/PM or A/P</span>","                            count <span class=\"k\">=</span> lookAhead<span class=\"k\">(</span><span class=\"s\">'t'</span><span class=\"k\">);</span>","                            AM <span class=\"k\">=</span> count <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> AM <span class=\"k\">:</span> <span class=\"s\">'a'</span><span class=\"k\">;</span>","                            PM <span class=\"k\">=</span> count <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> PM <span class=\"k\">:</span> <span class=\"s\">'p'</span><span class=\"k\">;</span>","","                            <span class=\"k\">var</span> subValue <span class=\"k\">=</span> value<span class=\"k\">.</span>substr<span class=\"k\">(</span>currentTokenIndex<span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","                            isAM <span class=\"k\">=</span> subValue<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>AM<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                            isPM <span class=\"k\">=</span> subValue<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>PM<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","                            currentTokenIndex <span class=\"k\">+=</span> isPM <span class=\"k\">?</span> PM<span class=\"k\">.</span>length <span class=\"k\">:</span> isAM <span class=\"k\">?</span> AM<span class=\"k\">.</span>length <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">case</span> <span class=\"s\">\"'\"</span><span class=\"k\">:</span>","                            checkLiteral<span class=\"k\">();</span>","                            literal <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">default</span><span class=\"k\">:</span>","                            checkLiteral<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> date <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>year <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> year <span class=\"k\">&lt;</span> <span class=\"s\">100</span><span class=\"k\">)</span>","                year <span class=\"k\">+=</span> date<span class=\"k\">.</span>year<span class=\"k\">()</span> <span class=\"k\">-</span> date<span class=\"k\">.</span>year<span class=\"k\">()</span> <span class=\"k\">%</span> <span class=\"s\">100</span> <span class=\"k\">+</span>","                                <span class=\"k\">(</span>year <span class=\"k\">&lt;=</span> shortYearCutOff <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">100</span><span class=\"k\">);</span>","","            hours <span class=\"k\">=</span> <span class=\"k\">(</span>isPM <span class=\"k\">&amp;&amp;</span> hours <span class=\"k\">&lt;</span> <span class=\"s\">12</span><span class=\"k\">)</span>","                  <span class=\"k\">?</span> hours <span class=\"k\">+</span> <span class=\"s\">12</span>","                  <span class=\"k\">:</span> hours <span class=\"k\">==</span> <span class=\"s\">12</span> <span class=\"k\">&amp;&amp;</span> isAM","                  <span class=\"k\">?</span> <span class=\"s\">0</span>","                  <span class=\"k\">:</span> hours<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>baseDate <span class=\"k\">==</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>year <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> year <span class=\"k\">=</span> date<span class=\"k\">.</span>year<span class=\"k\">();</span>","","                date <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>datetime<span class=\"k\">(</span>year<span class=\"k\">,</span> month <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span> day<span class=\"k\">,</span> hours<span class=\"k\">,</span> minutes<span class=\"k\">,</span> seconds<span class=\"k\">,</span> milliseconds<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>date<span class=\"k\">.</span>year<span class=\"k\">()</span> <span class=\"k\">!=</span> year <span class=\"k\">||</span> date<span class=\"k\">.</span>month<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"k\">(</span>month <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">||</span> date<span class=\"k\">.</span>date<span class=\"k\">()</span> <span class=\"k\">!=</span> day<span class=\"k\">)</span>","                    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                date <span class=\"k\">=</span> baseDate<span class=\"k\">.</span>year<span class=\"k\">(</span>year <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> year <span class=\"k\">:</span> baseDate<span class=\"k\">.</span>year<span class=\"k\">())</span>","                               <span class=\"k\">.</span>month<span class=\"k\">(</span>month <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> month <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">:</span> baseDate<span class=\"k\">.</span>month<span class=\"k\">())</span>","                               <span class=\"k\">.</span>date<span class=\"k\">(</span>day <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">?</span> day <span class=\"k\">:</span> baseDate<span class=\"k\">.</span>date<span class=\"k\">())</span>","                               <span class=\"k\">.</span>hours<span class=\"k\">(</span>hours<span class=\"k\">)</span>","                               <span class=\"k\">.</span>minutes<span class=\"k\">(</span>minutes<span class=\"k\">)</span>","                               <span class=\"k\">.</span>seconds<span class=\"k\">(</span>seconds<span class=\"k\">)</span>","                               <span class=\"k\">.</span>milliseconds<span class=\"k\">(</span>milliseconds<span class=\"k\">);</span>","","","","                <span class=\"k\">if</span> <span class=\"k\">((</span>year <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>year<span class=\"k\">()</span> <span class=\"k\">!=</span> year<span class=\"k\">)</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>month <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>month<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"k\">(</span>month <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">))</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>day <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>date<span class=\"k\">()</span> <span class=\"k\">!=</span> day<span class=\"k\">)</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>hours <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>hours<span class=\"k\">()</span> <span class=\"k\">!=</span> hours<span class=\"k\">)</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>minutes <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>minutes<span class=\"k\">()</span> <span class=\"k\">!=</span> minutes<span class=\"k\">)</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>seconds <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>seconds<span class=\"k\">()</span> <span class=\"k\">!=</span> seconds<span class=\"k\">)</span>","                 <span class=\"k\">||</span> <span class=\"k\">(</span>milliseconds <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> date<span class=\"k\">.</span>milliseconds<span class=\"k\">()</span> <span class=\"k\">!=</span> milliseconds<span class=\"k\">))</span>","                    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> date<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","        year<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">.</span>getFullYear<span class=\"k\">();</span>","            <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">.</span>setFullYear<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            <span class=\"k\">else</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">.</span>setFullYear<span class=\"k\">(</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> arguments<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        timeOffset<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">.</span>getTimezoneOffset<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        day<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">.</span>getDay<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        toDate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        addMonth<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>month<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>month<span class=\"k\">()</span> <span class=\"k\">+</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        addYear<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>year<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>year<span class=\"k\">()</span> <span class=\"k\">+</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $<span class=\"k\">.</span>each<span class=\"k\">([</span><span class=\"s\">\"Month\"</span><span class=\"k\">,</span> <span class=\"s\">\"Date\"</span><span class=\"k\">,</span> <span class=\"s\">\"Hours\"</span><span class=\"k\">,</span> <span class=\"s\">\"Minutes\"</span><span class=\"k\">,</span> <span class=\"s\">\"Seconds\"</span><span class=\"k\">,</span> <span class=\"s\">\"Milliseconds\"</span><span class=\"k\">,</span> <span class=\"s\">\"Time\"</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>index<span class=\"k\">,</span> timeComponent<span class=\"k\">)</span> <span class=\"k\">{</span>","        $t<span class=\"k\">.</span>datetime<span class=\"k\">.</span>prototype<span class=\"k\">[</span>timeComponent<span class=\"k\">.</span>toLowerCase<span class=\"k\">()]</span> <span class=\"k\">=</span>","            <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">[</span><span class=\"s\">\"set\"</span> <span class=\"k\">+</span> timeComponent<span class=\"k\">](</span>arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","                <span class=\"k\">else</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">[</span><span class=\"s\">\"get\"</span> <span class=\"k\">+</span> timeComponent<span class=\"k\">]();</span>","","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    $t<span class=\"k\">.</span>stringBuilder<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","        cat<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>what<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>buffer<span class=\"k\">.</span>push<span class=\"k\">(</span>what<span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        rep<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>what<span class=\"k\">,</span> howManyTimes<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> howManyTimes<span class=\"k\">;</span> i<span class=\"k\">++)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>cat<span class=\"k\">(</span>what<span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        catIf<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>what<span class=\"k\">,</span> condition<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>condition<span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>cat<span class=\"k\">(</span>what<span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        string<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>buffer<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">// Effects ($t.fx)</span>","","    <span class=\"k\">var</span> prepareAnimations <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>effects<span class=\"k\">,</span> target<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            end<span class=\"k\">();</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> animationsToPlay <span class=\"k\">=</span> effects<span class=\"k\">.</span>list<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(--</span>animationsToPlay <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> end<span class=\"k\">)</span>","                end<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $<span class=\"k\">.</span>extend<span class=\"k\">(</span>$t<span class=\"k\">.</span>fx<span class=\"k\">,</span> <span class=\"k\">{</span>","        _wrap<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>element<span class=\"k\">.</span>parent<span class=\"k\">().</span>hasClass<span class=\"k\">(</span><span class=\"s\">'t-animation-container'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>wrap<span class=\"k\">(</span>","                             $<span class=\"k\">(</span><span class=\"s\">'&lt;div/&gt;'</span><span class=\"k\">)</span>","                             <span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'t-animation-container'</span><span class=\"k\">)</span>","                             <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                                 width<span class=\"k\">:</span> element<span class=\"k\">.</span>outerWidth<span class=\"k\">(),</span>","                                 height<span class=\"k\">:</span> element<span class=\"k\">.</span>outerHeight<span class=\"k\">()</span>","                             <span class=\"k\">}</span><span class=\"k\">));</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> element<span class=\"k\">.</span>parent<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        play<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>effects<span class=\"k\">,</span> target<span class=\"k\">,</span> options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> afterAnimation <span class=\"k\">=</span> prepareAnimations<span class=\"k\">(</span>effects<span class=\"k\">,</span> target<span class=\"k\">,</span> end<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>afterAnimation <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","            target<span class=\"k\">.</span>stop<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> effects<span class=\"k\">.</span>list<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> effect <span class=\"k\">=</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>fx<span class=\"k\">[</span>effects<span class=\"k\">.</span>list<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">](</span>target<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>target<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'effect-'</span> <span class=\"k\">+</span> i<span class=\"k\">))</span> <span class=\"k\">{</span>","                    effect<span class=\"k\">.</span>play<span class=\"k\">(</span>","                    $<span class=\"k\">.</span>extend<span class=\"k\">(</span>","                        effects<span class=\"k\">.</span>list<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"k\">{</span>","                            openDuration<span class=\"k\">:</span> effects<span class=\"k\">.</span>openDuration<span class=\"k\">,</span>","                            closeDuration<span class=\"k\">:</span> effects<span class=\"k\">.</span>closeDuration","                        <span class=\"k\">}</span><span class=\"k\">,</span>","                        options<span class=\"k\">),</span> afterAnimation<span class=\"k\">);</span>","","                    target<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'effect-'</span> <span class=\"k\">+</span> i<span class=\"k\">,</span> effect<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        rewind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>effects<span class=\"k\">,</span> target<span class=\"k\">,</span> options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> afterAnimation <span class=\"k\">=</span> prepareAnimations<span class=\"k\">(</span>effects<span class=\"k\">,</span> target<span class=\"k\">,</span> end<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>afterAnimation <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> effects<span class=\"k\">.</span>list<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">--)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> effect <span class=\"k\">=</span> target<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'effect-'</span> <span class=\"k\">+</span> i<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">new</span> $t<span class=\"k\">.</span>fx<span class=\"k\">[</span>effects<span class=\"k\">.</span>list<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">](</span>target<span class=\"k\">);</span>","","                effect<span class=\"k\">.</span>rewind<span class=\"k\">(</span>","                    $<span class=\"k\">.</span>extend<span class=\"k\">(</span>","                        effects<span class=\"k\">.</span>list<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"k\">{</span>","                            openDuration<span class=\"k\">:</span> effects<span class=\"k\">.</span>openDuration<span class=\"k\">,</span>","                            closeDuration<span class=\"k\">:</span> effects<span class=\"k\">.</span>closeDuration","                        <span class=\"k\">}</span><span class=\"k\">,</span>","                        options<span class=\"k\">),</span> afterAnimation<span class=\"k\">);</span>","","                target<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'effect-'</span> <span class=\"k\">+</span> i<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">// simple show/hide toggle</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>toggle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">.</span>stop<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>toggle<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        play<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>show<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">)</span> end<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        rewind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>hide<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">)</span> end<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>toggle<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span> list<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'toggle'</span><span class=\"k\">}</span><span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// slide animation</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>slide <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">;</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>animationContainer <span class=\"k\">=</span> $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>_wrap<span class=\"k\">(</span>element<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>slide<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        play<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> animationContainer <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>animationContainer<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'display'</span><span class=\"k\">,</span> <span class=\"s\">'block'</span><span class=\"k\">).</span>stop<span class=\"k\">();</span>","","            animationContainer","                <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                    display<span class=\"k\">:</span> <span class=\"s\">'block'</span><span class=\"k\">,</span>","                    overflow<span class=\"k\">:</span> <span class=\"s\">'hidden'</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> width <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>outerWidth<span class=\"k\">();</span>","            <span class=\"k\">var</span> height <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>outerHeight<span class=\"k\">();</span>","            <span class=\"k\">var</span> animatedProperty <span class=\"k\">=</span> options<span class=\"k\">.</span>direction <span class=\"k\">==</span> <span class=\"s\">'bottom'</span> <span class=\"k\">?</span> <span class=\"s\">'marginTop'</span> <span class=\"k\">:</span> <span class=\"s\">'marginLeft'</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> animatedStartValue <span class=\"k\">=</span> options<span class=\"k\">.</span>direction <span class=\"k\">==</span> <span class=\"s\">'bottom'</span> <span class=\"k\">?</span> <span class=\"k\">-</span>height <span class=\"k\">:</span> <span class=\"k\">-</span>width<span class=\"k\">;</span>","","            animationContainer","                <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                    width<span class=\"k\">:</span> width<span class=\"k\">,</span>","                    height<span class=\"k\">:</span> height","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> animationEnd <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","            animationEnd<span class=\"k\">[</span>animatedProperty<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>element","                <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>width<span class=\"k\">())</span>","                <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>css<span class=\"k\">(</span>animatedProperty<span class=\"k\">,</span> animatedStartValue<span class=\"k\">)</span>","                <span class=\"k\">.</span>animate<span class=\"k\">(</span>animationEnd<span class=\"k\">,</span> <span class=\"k\">{</span>","                    queue<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                    duration<span class=\"k\">:</span> options<span class=\"k\">.</span>openDuration<span class=\"k\">,</span>","                    easing<span class=\"k\">:</span> <span class=\"s\">'linear'</span><span class=\"k\">,</span>","                    complete<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        animationContainer<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">'overflow'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">)</span> end<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        rewind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> animationContainer <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>animationContainer<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>stop<span class=\"k\">();</span>","","            animationContainer<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                overflow<span class=\"k\">:</span> <span class=\"s\">'hidden'</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> animatedProperty<span class=\"k\">;</span>","","            <span class=\"k\">switch</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>direction<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">'bottom'</span><span class=\"k\">:</span> animatedProperty <span class=\"k\">=</span> <span class=\"k\">{</span> marginTop<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>outerHeight<span class=\"k\">()</span> <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'right'</span><span class=\"k\">:</span> animatedProperty <span class=\"k\">=</span> <span class=\"k\">{</span> marginLeft<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">.</span>outerWidth<span class=\"k\">()</span> <span class=\"k\">}</span><span class=\"k\">;</span> <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>element","                <span class=\"k\">.</span>animate<span class=\"k\">(</span>animatedProperty<span class=\"k\">,</span> <span class=\"k\">{</span>","                    queue<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                    duration<span class=\"k\">:</span> options<span class=\"k\">.</span>closeDuration<span class=\"k\">,</span>","                    easing<span class=\"k\">:</span> <span class=\"s\">'linear'</span><span class=\"k\">,</span>","                    complete<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        animationContainer","                            <span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","                                display<span class=\"k\">:</span> <span class=\"s\">'none'</span><span class=\"k\">,</span>","                                overflow<span class=\"k\">:</span> <span class=\"s\">''</span>","                            <span class=\"k\">}</span><span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">)</span> end<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>slide<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span> list<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'slide'</span><span class=\"k\">}</span><span class=\"k\">],</span> openDuration<span class=\"k\">:</span> <span class=\"s\">'fast'</span><span class=\"k\">,</span> closeDuration<span class=\"k\">:</span> <span class=\"s\">'fast'</span> <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// property animation</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>property <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>element <span class=\"k\">=</span> element<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>property<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        _animate<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>properties<span class=\"k\">,</span> duration<span class=\"k\">,</span> reverse<span class=\"k\">,</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> startValues <span class=\"k\">=</span> <span class=\"k\">{</span> overflow<span class=\"k\">:</span> <span class=\"s\">'hidden'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","                endValues <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","                $element <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>element<span class=\"k\">;</span>","","            $<span class=\"k\">.</span>each<span class=\"k\">(</span>properties<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>i<span class=\"k\">,</span> prop<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> value<span class=\"k\">;</span>","","                <span class=\"k\">switch</span> <span class=\"k\">(</span>prop<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'height'</span><span class=\"k\">:</span>","                    <span class=\"k\">case</span> <span class=\"s\">'width'</span><span class=\"k\">:</span> value <span class=\"k\">=</span> $element<span class=\"k\">[</span>prop<span class=\"k\">]();</span> <span class=\"k\">break</span><span class=\"k\">;</span>","","                    <span class=\"k\">case</span> <span class=\"s\">'opacity'</span><span class=\"k\">:</span> value <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> <span class=\"k\">break</span><span class=\"k\">;</span>","","                    <span class=\"k\">default</span><span class=\"k\">:</span> value <span class=\"k\">=</span> $element<span class=\"k\">.</span>css<span class=\"k\">(</span>prop<span class=\"k\">);</span> <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                startValues<span class=\"k\">[</span>prop<span class=\"k\">]</span> <span class=\"k\">=</span> reverse <span class=\"k\">?</span> value <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                endValues<span class=\"k\">[</span>prop<span class=\"k\">]</span> <span class=\"k\">=</span> reverse <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            $element<span class=\"k\">.</span>css<span class=\"k\">(</span>startValues<span class=\"k\">)</span>","                    <span class=\"k\">.</span>show<span class=\"k\">()</span>","                    <span class=\"k\">.</span>animate<span class=\"k\">(</span>endValues<span class=\"k\">,</span> <span class=\"k\">{</span>","                        queue<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                        duration<span class=\"k\">:</span> duration<span class=\"k\">,</span>","                        easing<span class=\"k\">:</span> <span class=\"s\">'linear'</span><span class=\"k\">,</span>","                        complete<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>reverse<span class=\"k\">)</span>","                                $element<span class=\"k\">.</span>hide<span class=\"k\">();</span>","","                            $<span class=\"k\">.</span>each<span class=\"k\">(</span>endValues<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>property<span class=\"k\">)</span> <span class=\"k\">{</span>","                                endValues<span class=\"k\">[</span>property<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span><span class=\"k\">);</span>","","                            $element<span class=\"k\">.</span>css<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span> overflow<span class=\"k\">:</span> <span class=\"s\">''</span> <span class=\"k\">}</span><span class=\"k\">,</span> endValues<span class=\"k\">));</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span>end<span class=\"k\">)</span> end<span class=\"k\">();</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        play<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> complete<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_animate<span class=\"k\">(</span>options<span class=\"k\">.</span>properties<span class=\"k\">,</span> options<span class=\"k\">.</span>openDuration<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> complete<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        rewind<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>options<span class=\"k\">,</span> complete<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_animate<span class=\"k\">(</span>options<span class=\"k\">.</span>properties<span class=\"k\">,</span> options<span class=\"k\">.</span>closeDuration<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> complete<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    $t<span class=\"k\">.</span>fx<span class=\"k\">.</span>property<span class=\"k\">.</span>defaults <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span> list<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span> name<span class=\"k\">:</span> <span class=\"s\">'property'</span><span class=\"k\">,</span> properties<span class=\"k\">:</span> arguments<span class=\"k\">}</span><span class=\"k\">],</span> openDuration<span class=\"k\">:</span> <span class=\"s\">'fast'</span><span class=\"k\">,</span> closeDuration<span class=\"k\">:</span> <span class=\"s\">'fast'</span> <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// fix the MVC validation code for IE (document.getElementsByName matches `id` and `name` instead of just `name`). http://www.w3.org/TR/REC-DOM-Level-1/level-one-html.html#ID-71555259</span>","    $<span class=\"k\">(</span>document<span class=\"k\">).</span>ready<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>browser<span class=\"k\">.</span>msie <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> <span class=\"k\">(</span>Sys<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> <span class=\"k\">(</span>Sys<span class=\"k\">.</span>Mvc<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> <span class=\"k\">(</span>Sys<span class=\"k\">.</span>Mvc<span class=\"k\">.</span>FormContext<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> patch <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>formElement<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> $<span class=\"k\">.</span>grep<span class=\"k\">(</span>formElement<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'*'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> element<span class=\"k\">.</span>name <span class=\"k\">==</span> name<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sys<span class=\"k\">.</span>Mvc<span class=\"k\">.</span>FormContext<span class=\"k\">.</span>$F <span class=\"k\">=</span> Sys<span class=\"k\">.</span>Mvc<span class=\"k\">.</span>FormContext<span class=\"k\">.</span>_getFormElementsWithName <span class=\"k\">=</span> patch<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">)(</span>jQuery<span class=\"k\">);</span>"];
_$jscoverage['telerik.common.js'][1]++;
(function ($) {
  _$jscoverage['telerik.common.js'][3]++;
  try {
    _$jscoverage['telerik.common.js'][4]++;
    if (document.execCommand) {
      _$jscoverage['telerik.common.js'][5]++;
      document.execCommand("BackgroundImageCache", false, true);
    }
  }
  catch (e) {
  }
  _$jscoverage['telerik.common.js'][8]++;
  var dateCheck = /\d/;
  _$jscoverage['telerik.common.js'][9]++;
  var version = parseInt($.browser.version.substring(0, 5).replace(".", ""));
  _$jscoverage['telerik.common.js'][10]++;
  var geckoFlicker = ($.browser.mozilla && (version >= 180) && (version <= 191));
  _$jscoverage['telerik.common.js'][11]++;
  var dateFormatTokenRegExp = /d{1,4}|M{1,4}|yy(?:yy)?|([Hhmstf])\1*|"[^"]*"|'[^']*'/g;
  _$jscoverage['telerik.common.js'][13]++;
  var $t = ($.telerik = {create: (function (query, settings) {
  _$jscoverage['telerik.common.js'][16]++;
  var name = settings.name;
  _$jscoverage['telerik.common.js'][17]++;
  var options = $.extend({}, $.fn[name].defaults, settings.options);
  _$jscoverage['telerik.common.js'][19]++;
  return query.each((function () {
  _$jscoverage['telerik.common.js'][20]++;
  var $$ = $(this);
  _$jscoverage['telerik.common.js'][21]++;
  options = ($.meta? $.extend({}, options, $$.data()): options);
  _$jscoverage['telerik.common.js'][23]++;
  if ((! $$.data(name))) {
    _$jscoverage['telerik.common.js'][24]++;
    var component = settings.init(this, options);
    _$jscoverage['telerik.common.js'][26]++;
    $$.data(name, component);
    _$jscoverage['telerik.common.js'][28]++;
    $t.trigger(this, "load");
    _$jscoverage['telerik.common.js'][30]++;
    if (settings.success) {
      _$jscoverage['telerik.common.js'][30]++;
      settings.success(component);
    }
  }
}));
}), toJson: (function (o) {
  _$jscoverage['telerik.common.js'][36]++;
  var result = [];
  _$jscoverage['telerik.common.js'][37]++;
  for (var key in o) {
    _$jscoverage['telerik.common.js'][38]++;
    var value = o[key];
    _$jscoverage['telerik.common.js'][39]++;
    if (((typeof value) != "object")) {
      _$jscoverage['telerik.common.js'][40]++;
      result.push(("\"" + key + "\":\"" + value + "\""));
    }
    else {
      _$jscoverage['telerik.common.js'][42]++;
      result.push(("\"" + key + "\":" + this.toJson(value)));
    }
}
  _$jscoverage['telerik.common.js'][44]++;
  return ("{" + result.join(",") + "}");
}), delegate: (function (context, handler) {
  _$jscoverage['telerik.common.js'][48]++;
  return (function (e) {
  _$jscoverage['telerik.common.js'][49]++;
  handler.apply(context, [e, this]);
});
}), stop: (function (handler, context) {
  _$jscoverage['telerik.common.js'][54]++;
  return (function (e) {
  _$jscoverage['telerik.common.js'][55]++;
  e.stopPropagation();
  _$jscoverage['telerik.common.js'][56]++;
  handler.apply((context || this), arguments);
});
}), stopAll: (function (handler, context) {
  _$jscoverage['telerik.common.js'][61]++;
  return (function (e) {
  _$jscoverage['telerik.common.js'][62]++;
  e.preventDefault();
  _$jscoverage['telerik.common.js'][63]++;
  e.stopPropagation();
  _$jscoverage['telerik.common.js'][64]++;
  handler.apply((context || this), arguments);
});
}), bind: (function (context, events) {
  _$jscoverage['telerik.common.js'][69]++;
  var $element = $(context.element);
  _$jscoverage['telerik.common.js'][70]++;
  $.each(events, (function (eventName) {
  _$jscoverage['telerik.common.js'][71]++;
  if ($.isFunction(this)) {
    _$jscoverage['telerik.common.js'][71]++;
    $element.bind(eventName, this);
  }
}));
}), preventDefault: (function (e) {
  _$jscoverage['telerik.common.js'][76]++;
  e.preventDefault();
}), hover: (function () {
  _$jscoverage['telerik.common.js'][80]++;
  $(this).addClass("t-state-hover");
}), leave: (function () {
  _$jscoverage['telerik.common.js'][84]++;
  $(this).removeClass("t-state-hover");
}), buttonHover: (function () {
  _$jscoverage['telerik.common.js'][88]++;
  $(this).addClass("t-button-hover");
}), buttonLeave: (function () {
  _$jscoverage['telerik.common.js'][92]++;
  $(this).removeClass("t-button-hover");
}), stringBuilder: (function () {
  _$jscoverage['telerik.common.js'][96]++;
  this.buffer = [];
}), ajaxError: (function (element, eventName, xhr, status) {
  _$jscoverage['telerik.common.js'][100]++;
  var prevented = this.trigger(element, eventName, {XMLHttpRequest: xhr, textStatus: status});
  _$jscoverage['telerik.common.js'][106]++;
  if ((! prevented)) {
    _$jscoverage['telerik.common.js'][107]++;
    if (((status == "error") && (xhr.status != "0"))) {
      _$jscoverage['telerik.common.js'][108]++;
      alert(("Error! The requested URL returned " + xhr.status + " - " + xhr.statusText));
    }
    _$jscoverage['telerik.common.js'][109]++;
    if ((status == "timeout")) {
      _$jscoverage['telerik.common.js'][110]++;
      alert("Error! Server timeout.");
    }
  }
  _$jscoverage['telerik.common.js'][113]++;
  return prevented;
}), trigger: (function (element, eventName, e) {
  _$jscoverage['telerik.common.js'][117]++;
  e = $.extend((e || {}), new ($.Event)(eventName));
  _$jscoverage['telerik.common.js'][118]++;
  e.stopPropagation();
  _$jscoverage['telerik.common.js'][119]++;
  $(element).trigger(e);
  _$jscoverage['telerik.common.js'][120]++;
  return e.isDefaultPrevented();
}), getType: (function (obj) {
  _$jscoverage['telerik.common.js'][125]++;
  if ((obj instanceof Date)) {
    _$jscoverage['telerik.common.js'][126]++;
    return "date";
  }
  _$jscoverage['telerik.common.js'][127]++;
  if ((! isNaN(obj))) {
    _$jscoverage['telerik.common.js'][128]++;
    return "number";
  }
  _$jscoverage['telerik.common.js'][129]++;
  return "object";
}), formatString: (function () {
  _$jscoverage['telerik.common.js'][133]++;
  var s = arguments[0];
  _$jscoverage['telerik.common.js'][135]++;
  for (var i = 0, l = (arguments.length - 1); (i < l); (i++)) {
    _$jscoverage['telerik.common.js'][136]++;
    var reg = new RegExp(("\\{" + i + "(:([^\\}]+))?\\}"), "gm");
    _$jscoverage['telerik.common.js'][138]++;
    var argument = arguments[(i + 1)];
    _$jscoverage['telerik.common.js'][140]++;
    var formatter = this.formatters[this.getType(argument)];
    _$jscoverage['telerik.common.js'][141]++;
    if (formatter) {
      _$jscoverage['telerik.common.js'][142]++;
      var match = reg.exec(s);
      _$jscoverage['telerik.common.js'][143]++;
      if (match) {
        _$jscoverage['telerik.common.js'][144]++;
        argument = formatter(argument, match[2]);
      }
    }
    _$jscoverage['telerik.common.js'][147]++;
    s = s.replace(reg, (function () {
  _$jscoverage['telerik.common.js'][148]++;
  return argument;
}));
}
  _$jscoverage['telerik.common.js'][151]++;
  return s;
}), getElementZIndex: (function (element) {
  _$jscoverage['telerik.common.js'][155]++;
  var zIndex = "auto";
  _$jscoverage['telerik.common.js'][156]++;
  $(element).parents().andSelf().each((function () {
  _$jscoverage['telerik.common.js'][157]++;
  zIndex = $(this).css("zIndex");
  _$jscoverage['telerik.common.js'][158]++;
  if (Number(zIndex)) {
    _$jscoverage['telerik.common.js'][159]++;
    zIndex = (Number(zIndex) + 1);
    _$jscoverage['telerik.common.js'][160]++;
    return false;
  }
}));
  _$jscoverage['telerik.common.js'][164]++;
  return zIndex;
}), lastIndexOf: (function (value, character) {
  _$jscoverage['telerik.common.js'][168]++;
  var characterLength = character.length;
  _$jscoverage['telerik.common.js'][169]++;
  for (var i = (value.length - 1); (i > -1); (i--)) {
    _$jscoverage['telerik.common.js'][170]++;
    if ((value.substr(i, characterLength) == character)) {
      _$jscoverage['telerik.common.js'][170]++;
      return i;
    }
}
  _$jscoverage['telerik.common.js'][171]++;
  return -1;
}), caretPos: (function (element) {
  _$jscoverage['telerik.common.js'][175]++;
  var pos = -1;
  _$jscoverage['telerik.common.js'][177]++;
  if (document.selection) {
    _$jscoverage['telerik.common.js'][178]++;
    pos = Math.abs(element.document.selection.createRange().moveStart("character", (- element.value.length)));
  }
  else {
    _$jscoverage['telerik.common.js'][179]++;
    if ((element.selectionStart !== undefined)) {
      _$jscoverage['telerik.common.js'][180]++;
      pos = element.selectionStart;
    }
  }
  _$jscoverage['telerik.common.js'][182]++;
  return pos;
}), formatters: {}, fx: {}, cultureInfo: {days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], abbrDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], abbrMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], longTime: "h:mm:ss tt", longDate: "dddd, MMMM dd, yyyy", shortDate: "M/d/yyyy", shortTime: "h:mm tt", fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt", generalDateShortTime: "M/d/yyyy h:mm tt", generalDateTime: "M/d/yyyy h:mm:ss tt", sortableDateTime: "yyyy'-'MM'-'ddTHH':'mm':'ss", universalSortableDateTime: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'", monthYear: "MMMM, yyyy", monthDay: "MMMM dd", today: "today", tomorrow: "tomorrow", yesterday: "yesterday", next: "next", last: "last", year: "year", month: "month", week: "week", day: "day", am: "AM", pm: "PM", dateSeparator: "/", timeSeparator: ":"}});
  _$jscoverage['telerik.common.js'][230]++;
  $t.dropDown = (function (options) {
  _$jscoverage['telerik.common.js'][231]++;
  $.extend(this, options);
  _$jscoverage['telerik.common.js'][233]++;
  this.$element = $(new ($t.stringBuilder)().cat("<div ").catIf(options.attr, options.attr).cat("><ul class=\"t-reset\"></ul></div>").string()).addClass("t-popup t-group").hide();
});
  _$jscoverage['telerik.common.js'][241]++;
  $t.dropDown.prototype = {_html: (function (data) {
  _$jscoverage['telerik.common.js'][243]++;
  var html = new ($t.stringBuilder)();
  _$jscoverage['telerik.common.js'][244]++;
  if (data) {
    _$jscoverage['telerik.common.js'][245]++;
    for (var i = 0, length = data.length; (i < length); (i++)) {
      _$jscoverage['telerik.common.js'][247]++;
      var dataItem = data[i];
      _$jscoverage['telerik.common.js'][249]++;
      var e = {html: (dataItem.Text || dataItem), dataItem: dataItem};
      _$jscoverage['telerik.common.js'][254]++;
      if (this.onItemCreate) {
        _$jscoverage['telerik.common.js'][254]++;
        this.onItemCreate(e);
      }
      _$jscoverage['telerik.common.js'][256]++;
      html.cat("<li class=\"t-item\">").cat(e.html).cat("</li>");
}
  }
  _$jscoverage['telerik.common.js'][259]++;
  return html.string();
}), open: (function (position) {
  _$jscoverage['telerik.common.js'][263]++;
  if (this.onOpen) {
    _$jscoverage['telerik.common.js'][263]++;
    this.onOpen();
  }
  _$jscoverage['telerik.common.js'][265]++;
  if ((this.isOpened() || (! this.$items))) {
    _$jscoverage['telerik.common.js'][265]++;
    return;
  }
  _$jscoverage['telerik.common.js'][267]++;
  var $element = this.$element;
  _$jscoverage['telerik.common.js'][268]++;
  var selector = ".t-reset > .t-item";
  _$jscoverage['telerik.common.js'][270]++;
  $element.css("overflowY", "auto");
  _$jscoverage['telerik.common.js'][271]++;
  $element.css("width", (position.outerWidth? (position.outerWidth - 2): 0));
  _$jscoverage['telerik.common.js'][273]++;
  $element.delegate(selector, "mouseenter", $t.hover).delegate(selector, "mouseleave", $t.leave).delegate(selector, "click", $.proxy((function (e) {
  _$jscoverage['telerik.common.js'][277]++;
  if (this.onClick) {
    _$jscoverage['telerik.common.js'][278]++;
    this.onClick($.extend(e, {item: $(e.target).closest(".t-item")[0]}));
  }
}), this)).appendTo(document.body);
  _$jscoverage['telerik.common.js'][282]++;
  var elementPosition = position.offset;
  _$jscoverage['telerik.common.js'][283]++;
  elementPosition.top += position.outerHeight;
  _$jscoverage['telerik.common.js'][285]++;
  $t.fx._wrap($element).css($.extend({position: "absolute", zIndex: position.zIndex}, elementPosition));
  _$jscoverage['telerik.common.js'][290]++;
  if (geckoFlicker) {
    _$jscoverage['telerik.common.js'][291]++;
    $element.css("overflow", "hidden");
  }
  _$jscoverage['telerik.common.js'][293]++;
  $t.fx.play(this.effects, $element, {direction: "bottom"}, $.proxy((function () {
  _$jscoverage['telerik.common.js'][294]++;
  if (geckoFlicker) {
    _$jscoverage['telerik.common.js'][295]++;
    $element.css("overflow", "auto");
  }
  _$jscoverage['telerik.common.js'][297]++;
  var $selectedItems = this.$items.filter(".t-state-selected");
  _$jscoverage['telerik.common.js'][298]++;
  if ($selectedItems.length) {
    _$jscoverage['telerik.common.js'][298]++;
    this.scrollTo($selectedItems[0]);
  }
}), this));
}), close: (function () {
  _$jscoverage['telerik.common.js'][303]++;
  if ((! this.isOpened())) {
    _$jscoverage['telerik.common.js'][303]++;
    return;
  }
  _$jscoverage['telerik.common.js'][305]++;
  var $element = this.$element;
  _$jscoverage['telerik.common.js'][307]++;
  if (geckoFlicker) {
    _$jscoverage['telerik.common.js'][308]++;
    $element.css("overflow", "hidden");
  }
  _$jscoverage['telerik.common.js'][310]++;
  $t.fx.rewind(this.effects, $element, {direction: "bottom"}, (function () {
  _$jscoverage['telerik.common.js'][311]++;
  if (geckoFlicker) {
    _$jscoverage['telerik.common.js'][312]++;
    $element.css("overflow", "auto");
  }
  _$jscoverage['telerik.common.js'][314]++;
  $element.parent().remove();
}));
}), dataBind: (function (data) {
  _$jscoverage['telerik.common.js'][319]++;
  data = (data || []);
  _$jscoverage['telerik.common.js'][321]++;
  var $element = this.$element;
  _$jscoverage['telerik.common.js'][322]++;
  var elementHeight = $element[0].style.height;
  _$jscoverage['telerik.common.js'][323]++;
  var height = ((elementHeight && (elementHeight != "auto"))? $element[0].style.height: "200px");
  _$jscoverage['telerik.common.js'][325]++;
  var $items = (this.$items = $(this._html(data)));
  _$jscoverage['telerik.common.js'][326]++;
  $element.find("> ul").html($items);
  _$jscoverage['telerik.common.js'][327]++;
  $element.css("height", (($items.length > 10)? height: "auto"));
}), highlight: (function (li) {
  _$jscoverage['telerik.common.js'][331]++;
  return $(li).addClass("t-state-selected").siblings().removeClass("t-state-selected").end().index();
}), isOpened: (function () {
  _$jscoverage['telerik.common.js'][339]++;
  return this.$element.is(":visible");
}), scrollTo: (function (item) {
  _$jscoverage['telerik.common.js'][344]++;
  if ((! item)) {
    _$jscoverage['telerik.common.js'][344]++;
    return;
  }
  _$jscoverage['telerik.common.js'][346]++;
  var itemOffsetTop = item.offsetTop;
  _$jscoverage['telerik.common.js'][347]++;
  var itemOffsetHeight = item.offsetHeight;
  _$jscoverage['telerik.common.js'][349]++;
  var dropDown = this.$element[0];
  _$jscoverage['telerik.common.js'][350]++;
  var dropDownScrollTop = dropDown.scrollTop;
  _$jscoverage['telerik.common.js'][351]++;
  var dropDownOffsetHeight = dropDown.clientHeight;
  _$jscoverage['telerik.common.js'][352]++;
  var bottomDistance = (itemOffsetTop + itemOffsetHeight);
  _$jscoverage['telerik.common.js'][354]++;
  dropDown.scrollTop = ((dropDownScrollTop > itemOffsetTop)? itemOffsetTop: ((bottomDistance > (dropDownScrollTop + dropDownOffsetHeight))? (bottomDistance - dropDownOffsetHeight): dropDownScrollTop));
})};
  _$jscoverage['telerik.common.js'][362]++;
  $t.datetime = (function () {
  _$jscoverage['telerik.common.js'][363]++;
  if ((arguments.length == 0)) {
    _$jscoverage['telerik.common.js'][364]++;
    this.value = new Date();
  }
  else {
    _$jscoverage['telerik.common.js'][365]++;
    if ((arguments.length == 1)) {
      _$jscoverage['telerik.common.js'][366]++;
      this.value = new Date(arguments[0]);
    }
    else {
      _$jscoverage['telerik.common.js'][367]++;
      if ((arguments.length == 3)) {
        _$jscoverage['telerik.common.js'][368]++;
        this.value = new Date(arguments[0], arguments[1], arguments[2]);
      }
      else {
        _$jscoverage['telerik.common.js'][369]++;
        if ((arguments.length == 6)) {
          _$jscoverage['telerik.common.js'][370]++;
          this.value = new Date(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }
        else {
          _$jscoverage['telerik.common.js'][372]++;
          this.value = new Date(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
        }
      }
    }
  }
  _$jscoverage['telerik.common.js'][374]++;
  return this;
});
  _$jscoverage['telerik.common.js'][377]++;
  $.extend($t.datetime, {msPerMinute: 60000, msPerDay: 86400000, add: (function (date, valueToAdd) {
  _$jscoverage['telerik.common.js'][381]++;
  var tzOffsetBefore = date.timeOffset();
  _$jscoverage['telerik.common.js'][382]++;
  var resultDate = new ($t.datetime)((date.time() + valueToAdd));
  _$jscoverage['telerik.common.js'][383]++;
  var tzOffsetDiff = (resultDate.timeOffset() - tzOffsetBefore);
  _$jscoverage['telerik.common.js'][384]++;
  return new ($t.datetime)((resultDate.time() + (tzOffsetDiff * $t.datetime.msPerMinute)));
}), subtract: (function (date, dateToSubtract) {
  _$jscoverage['telerik.common.js'][388]++;
  dateToSubtract = new ($t.datetime)(dateToSubtract).toDate();
  _$jscoverage['telerik.common.js'][389]++;
  var diff = (date.time() - dateToSubtract);
  _$jscoverage['telerik.common.js'][390]++;
  var tzOffsetDiff = (date.timeOffset() - dateToSubtract.timeOffset());
  _$jscoverage['telerik.common.js'][391]++;
  return (diff - (tzOffsetDiff * $t.datetime.msPerMinute));
}), firstDayOfMonth: (function (date) {
  _$jscoverage['telerik.common.js'][395]++;
  return new ($t.datetime)(0).hours(date.hours()).minutes(date.minutes()).seconds(date.seconds()).milliseconds(date.milliseconds()).year(date.year(), date.month(), 1);
}), firstVisibleDay: (function (date) {
  _$jscoverage['telerik.common.js'][404]++;
  var firstVisibleDay = new ($t.datetime)(date.year(), date.month(), 0, date.hours(), date.minutes(), date.seconds(), date.milliseconds());
  _$jscoverage['telerik.common.js'][405]++;
  while ((firstVisibleDay.day() != 0)) {
    _$jscoverage['telerik.common.js'][406]++;
    $t.datetime.modify(firstVisibleDay, (-1 * $t.datetime.msPerDay));
}
  _$jscoverage['telerik.common.js'][408]++;
  return firstVisibleDay;
}), modify: (function (date, value) {
  _$jscoverage['telerik.common.js'][412]++;
  var tzOffsetBefore = date.timeOffset();
  _$jscoverage['telerik.common.js'][413]++;
  var resultDate = new ($t.datetime)((date.time() + value));
  _$jscoverage['telerik.common.js'][414]++;
  var tzOffsetDiff = (resultDate.timeOffset() - tzOffsetBefore);
  _$jscoverage['telerik.common.js'][415]++;
  date.time((resultDate.time() + (tzOffsetDiff * $t.datetime.msPerMinute)));
}), pad: (function (value) {
  _$jscoverage['telerik.common.js'][419]++;
  if ((value < 10)) {
    _$jscoverage['telerik.common.js'][420]++;
    return ("0" + value);
  }
  _$jscoverage['telerik.common.js'][421]++;
  return value;
}), standardFormat: (function (format) {
  _$jscoverage['telerik.common.js'][425]++;
  var l = $t.cultureInfo;
  _$jscoverage['telerik.common.js'][427]++;
  var standardFormats = {d: l.shortDate, D: l.longDate, F: l.fullDateTime, g: l.generalDateShortTime, G: l.generalDateTime, m: l.monthDay, M: l.monthDay, s: l.sortableDateTime, t: l.shortTime, T: l.longTime, u: l.universalSortableDateTime, y: l.monthYear, Y: l.monthYear};
  _$jscoverage['telerik.common.js'][443]++;
  return standardFormats[format];
}), format: (function (date, format) {
  _$jscoverage['telerik.common.js'][447]++;
  var l = $t.cultureInfo;
  _$jscoverage['telerik.common.js'][449]++;
  var d = date.getDate();
  _$jscoverage['telerik.common.js'][450]++;
  var day = date.getDay();
  _$jscoverage['telerik.common.js'][451]++;
  var M = date.getMonth();
  _$jscoverage['telerik.common.js'][452]++;
  var y = date.getFullYear();
  _$jscoverage['telerik.common.js'][453]++;
  var h = date.getHours();
  _$jscoverage['telerik.common.js'][454]++;
  var m = date.getMinutes();
  _$jscoverage['telerik.common.js'][455]++;
  var s = date.getSeconds();
  _$jscoverage['telerik.common.js'][456]++;
  var f = date.getMilliseconds();
  _$jscoverage['telerik.common.js'][457]++;
  var pad = $t.datetime.pad;
  _$jscoverage['telerik.common.js'][459]++;
  var dateFormatters = {d: d, dd: pad(d), ddd: l.abbrDays[day], dddd: l.days[day], M: (M + 1), MM: pad((M + 1)), MMM: l.abbrMonths[M], MMMM: l.months[M], yy: pad((y % 100)), yyyy: y, h: ((h % 12) || 12), hh: pad(((h % 12) || 12)), H: h, HH: pad(h), m: m, mm: pad(m), s: s, ss: pad(s), f: Math.floor((f / 100)), ff: Math.floor((f / 10)), fff: f, tt: ((h < 12)? l.am: l.pm)};
  _$jscoverage['telerik.common.js'][491]++;
  format = (format || "G");
  _$jscoverage['telerik.common.js'][492]++;
  format = ($t.datetime.standardFormat(format)? $t.datetime.standardFormat(format): format);
  _$jscoverage['telerik.common.js'][494]++;
  return format.replace(dateFormatTokenRegExp, (function (match) {
  _$jscoverage['telerik.common.js'][495]++;
  return ((match in dateFormatters)? dateFormatters[match]: match.slice(1, (match.length - 1)));
}));
}), parse: (function (options) {
  _$jscoverage['telerik.common.js'][500]++;
  var value = options.value;
  _$jscoverage['telerik.common.js'][501]++;
  var format = options.format;
  _$jscoverage['telerik.common.js'][504]++;
  format = ($t.datetime.standardFormat(format)? $t.datetime.standardFormat(format): format);
  _$jscoverage['telerik.common.js'][505]++;
  if (dateCheck.test(value)) {
    _$jscoverage['telerik.common.js'][506]++;
    return $t.datetime.parseMachineDate({value: value, format: format, shortYearCutOff: options.shortYearCutOff, baseDate: options.baseDate, AM: $t.cultureInfo.am, PM: $t.cultureInfo.pm});
  }
  _$jscoverage['telerik.common.js'][515]++;
  return ($t.datetime.parseByToken? $t.datetime.parseByToken(value, options.today): null);
}), parseMachineDate: (function (options) {
  _$jscoverage['telerik.common.js'][520]++;
  var AM = options.AM;
  _$jscoverage['telerik.common.js'][521]++;
  var PM = options.PM;
  _$jscoverage['telerik.common.js'][522]++;
  var value = options.value;
  _$jscoverage['telerik.common.js'][523]++;
  var format = options.format;
  _$jscoverage['telerik.common.js'][524]++;
  var baseDate = options.baseDate;
  _$jscoverage['telerik.common.js'][525]++;
  var shortYearCutOff = (options.shortYearCutOff || 30);
  _$jscoverage['telerik.common.js'][527]++;
  var year = -1;
  _$jscoverage['telerik.common.js'][528]++;
  var month = -1;
  _$jscoverage['telerik.common.js'][529]++;
  var day = -1;
  _$jscoverage['telerik.common.js'][530]++;
  var hours = 0;
  _$jscoverage['telerik.common.js'][531]++;
  var minutes = 0;
  _$jscoverage['telerik.common.js'][532]++;
  var seconds = 0;
  _$jscoverage['telerik.common.js'][533]++;
  var milliseconds = 0;
  _$jscoverage['telerik.common.js'][534]++;
  var isAM;
  _$jscoverage['telerik.common.js'][535]++;
  var isPM;
  _$jscoverage['telerik.common.js'][536]++;
  var literal = false;
  _$jscoverage['telerik.common.js'][539]++;
  var lookAhead = (function (match) {
  _$jscoverage['telerik.common.js'][540]++;
  var index = 0;
  _$jscoverage['telerik.common.js'][541]++;
  while (Matches(match)) {
    _$jscoverage['telerik.common.js'][542]++;
    (index++);
    _$jscoverage['telerik.common.js'][543]++;
    (formatPosition++);
}
  _$jscoverage['telerik.common.js'][545]++;
  return index;
});
  _$jscoverage['telerik.common.js'][547]++;
  var lookForLiteral = (function () {
  _$jscoverage['telerik.common.js'][548]++;
  var matches = Matches("'");
  _$jscoverage['telerik.common.js'][549]++;
  if (matches) {
    _$jscoverage['telerik.common.js'][550]++;
    (formatPosition++);
  }
  _$jscoverage['telerik.common.js'][551]++;
  return matches;
});
  _$jscoverage['telerik.common.js'][553]++;
  var Matches = (function (match) {
  _$jscoverage['telerik.common.js'][554]++;
  return (((formatPosition + 1) < format.length) && (format.charAt((formatPosition + 1)) == match));
});
  _$jscoverage['telerik.common.js'][557]++;
  var getNumber = (function (size) {
  _$jscoverage['telerik.common.js'][558]++;
  var digits = new RegExp(("^\\d{1," + size + "}"));
  _$jscoverage['telerik.common.js'][559]++;
  var num = value.substr(currentTokenIndex).match(digits);
  _$jscoverage['telerik.common.js'][560]++;
  if (num) {
    _$jscoverage['telerik.common.js'][561]++;
    currentTokenIndex += num[0].length;
    _$jscoverage['telerik.common.js'][562]++;
    return parseInt(num[0], 10);
  }
  else {
    _$jscoverage['telerik.common.js'][564]++;
    return -1;
  }
});
  _$jscoverage['telerik.common.js'][568]++;
  var getName = (function (names) {
  _$jscoverage['telerik.common.js'][569]++;
  for (var i = 0; (i < names.length); (i++)) {
    _$jscoverage['telerik.common.js'][570]++;
    if ((value.substr(currentTokenIndex, names[i].length) == names[i])) {
      _$jscoverage['telerik.common.js'][571]++;
      currentTokenIndex += names[i].length;
      _$jscoverage['telerik.common.js'][572]++;
      return (i + 1);
    }
}
  _$jscoverage['telerik.common.js'][575]++;
  return -1;
});
  _$jscoverage['telerik.common.js'][578]++;
  var checkLiteral = (function () {
  _$jscoverage['telerik.common.js'][579]++;
  if ((value.charAt(currentTokenIndex) == format.charAt(formatPosition))) {
    _$jscoverage['telerik.common.js'][580]++;
    (currentTokenIndex++);
  }
});
  _$jscoverage['telerik.common.js'][584]++;
  var normalizeTime = (function (value) {
  _$jscoverage['telerik.common.js'][585]++;
  return ((value === -1)? 0: value);
});
  _$jscoverage['telerik.common.js'][588]++;
  var count = 0;
  _$jscoverage['telerik.common.js'][589]++;
  var currentTokenIndex = 0;
  _$jscoverage['telerik.common.js'][590]++;
  var valueLength = value.length;
  _$jscoverage['telerik.common.js'][592]++;
  for (var formatPosition = 0, flength = format.length; (formatPosition < flength); (formatPosition++)) {
    _$jscoverage['telerik.common.js'][593]++;
    if ((currentTokenIndex == valueLength)) {
      _$jscoverage['telerik.common.js'][593]++;
      break;
    }
    _$jscoverage['telerik.common.js'][594]++;
    if (literal) {
      _$jscoverage['telerik.common.js'][595]++;
      checkLiteral();
      _$jscoverage['telerik.common.js'][596]++;
      if ((format.charAt(formatPosition) == "'")) {
        _$jscoverage['telerik.common.js'][597]++;
        literal = false;
      }
    }
    else {
      _$jscoverage['telerik.common.js'][599]++;
      switch (format.charAt(formatPosition)) {
      case "d":
        _$jscoverage['telerik.common.js'][601]++;
        count = lookAhead("d");
        _$jscoverage['telerik.common.js'][602]++;
        day = ((count <= 1)? getNumber(2): getName($t.cultureInfo[((count == 3)? "days": "abbrDays")]));
        _$jscoverage['telerik.common.js'][603]++;
        break;
      case "M":
        _$jscoverage['telerik.common.js'][605]++;
        count = lookAhead("M");
        _$jscoverage['telerik.common.js'][606]++;
        month = ((count <= 1)? getNumber(2): getName($t.cultureInfo[((count == 3)? "months": "abbrMonths")]));
        _$jscoverage['telerik.common.js'][607]++;
        break;
      case "y":
        _$jscoverage['telerik.common.js'][609]++;
        count = lookAhead("y");
        _$jscoverage['telerik.common.js'][610]++;
        year = getNumber(((count <= 1)? 2: 4));
        _$jscoverage['telerik.common.js'][611]++;
        break;
      case "H":
        _$jscoverage['telerik.common.js'][613]++;
        count = lookAhead("H");
        _$jscoverage['telerik.common.js'][614]++;
        hours = normalizeTime(getNumber(2));
        _$jscoverage['telerik.common.js'][615]++;
        break;
      case "h":
        _$jscoverage['telerik.common.js'][617]++;
        lookAhead("h");
        _$jscoverage['telerik.common.js'][618]++;
        hours = normalizeTime(getNumber(2));
        _$jscoverage['telerik.common.js'][619]++;
        break;
      case "m":
        _$jscoverage['telerik.common.js'][621]++;
        lookAhead("m");
        _$jscoverage['telerik.common.js'][622]++;
        minutes = normalizeTime(getNumber(2));
        _$jscoverage['telerik.common.js'][623]++;
        break;
      case "s":
        _$jscoverage['telerik.common.js'][625]++;
        lookAhead("s");
        _$jscoverage['telerik.common.js'][626]++;
        seconds = normalizeTime(getNumber(2));
        _$jscoverage['telerik.common.js'][627]++;
        break;
      case "f":
        _$jscoverage['telerik.common.js'][629]++;
        count = lookAhead("f");
        _$jscoverage['telerik.common.js'][630]++;
        milliseconds = normalizeTime(getNumber(((count <= 0)? 1: (count + 1))));
        _$jscoverage['telerik.common.js'][631]++;
        break;
      case "t":
        _$jscoverage['telerik.common.js'][633]++;
        count = lookAhead("t");
        _$jscoverage['telerik.common.js'][634]++;
        AM = ((count > 0)? AM: "a");
        _$jscoverage['telerik.common.js'][635]++;
        PM = ((count > 0)? PM: "p");
        _$jscoverage['telerik.common.js'][637]++;
        var subValue = value.substr(currentTokenIndex).toLowerCase();
        _$jscoverage['telerik.common.js'][638]++;
        isAM = (subValue.indexOf(AM.toLowerCase()) != -1);
        _$jscoverage['telerik.common.js'][639]++;
        isPM = (subValue.indexOf(PM.toLowerCase()) != -1);
        _$jscoverage['telerik.common.js'][641]++;
        currentTokenIndex += (isPM? PM.length: (isAM? AM.length: 0));
        _$jscoverage['telerik.common.js'][642]++;
        break;
      case "'":
        _$jscoverage['telerik.common.js'][644]++;
        checkLiteral();
        _$jscoverage['telerik.common.js'][645]++;
        literal = true;
        _$jscoverage['telerik.common.js'][646]++;
        break;
      default:
        _$jscoverage['telerik.common.js'][648]++;
        checkLiteral();
      }
    }
}
  _$jscoverage['telerik.common.js'][653]++;
  var date = new ($t.datetime)();
  _$jscoverage['telerik.common.js'][655]++;
  if (((year != -1) && (year < 100))) {
    _$jscoverage['telerik.common.js'][656]++;
    year += ((date.year() - (date.year() % 100)) + ((year <= shortYearCutOff)? 0: -100));
  }
  _$jscoverage['telerik.common.js'][659]++;
  hours = ((isPM && (hours < 12))? (hours + 12): (((hours == 12) && isAM)? 0: hours));
  _$jscoverage['telerik.common.js'][665]++;
  if ((baseDate == undefined)) {
    _$jscoverage['telerik.common.js'][666]++;
    if ((year == -1)) {
      _$jscoverage['telerik.common.js'][666]++;
      year = date.year();
    }
    _$jscoverage['telerik.common.js'][668]++;
    date = new ($t.datetime)(year, (month - 1), day, hours, minutes, seconds, milliseconds);
    _$jscoverage['telerik.common.js'][670]++;
    if (((date.year() != year) || (date.month() != (month - 1)) || (date.date() != day))) {
      _$jscoverage['telerik.common.js'][671]++;
      return null;
    }
  }
  else {
    _$jscoverage['telerik.common.js'][674]++;
    date = baseDate.year(((year != -1)? year: baseDate.year())).month(((month != -1)? (month - 1): baseDate.month())).date(((day != -1)? day: baseDate.date())).hours(hours).minutes(minutes).seconds(seconds).milliseconds(milliseconds);
    _$jscoverage['telerik.common.js'][684]++;
    if ((((year != -1) && (date.year() != year)) || ((month != -1) && (date.month() != (month - 1))) || ((day != -1) && (date.date() != day)) || ((hours != -1) && (date.hours() != hours)) || ((minutes != -1) && (date.minutes() != minutes)) || ((seconds != -1) && (date.seconds() != seconds)) || ((milliseconds != -1) && (date.milliseconds() != milliseconds)))) {
      _$jscoverage['telerik.common.js'][691]++;
      return null;
    }
  }
  _$jscoverage['telerik.common.js'][693]++;
  return date;
})});
  _$jscoverage['telerik.common.js'][697]++;
  $t.datetime.prototype = {year: (function () {
  _$jscoverage['telerik.common.js'][700]++;
  if ((arguments.length == 0)) {
    _$jscoverage['telerik.common.js'][701]++;
    return this.value.getFullYear();
  }
  else {
    _$jscoverage['telerik.common.js'][702]++;
    if ((arguments.length == 1)) {
      _$jscoverage['telerik.common.js'][703]++;
      this.value.setFullYear(arguments[0]);
    }
    else {
      _$jscoverage['telerik.common.js'][705]++;
      this.value.setFullYear(arguments[0], arguments[1], arguments[2]);
    }
  }
  _$jscoverage['telerik.common.js'][707]++;
  return this;
}), timeOffset: (function () {
  _$jscoverage['telerik.common.js'][711]++;
  return this.value.getTimezoneOffset();
}), day: (function () {
  _$jscoverage['telerik.common.js'][715]++;
  return this.value.getDay();
}), toDate: (function () {
  _$jscoverage['telerik.common.js'][719]++;
  return this.value;
}), addMonth: (function (value) {
  _$jscoverage['telerik.common.js'][723]++;
  this.month((this.month() + value));
}), addYear: (function (value) {
  _$jscoverage['telerik.common.js'][727]++;
  this.year((this.year() + value));
})};
  _$jscoverage['telerik.common.js'][731]++;
  $.each(["Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds", "Time"], (function (index, timeComponent) {
  _$jscoverage['telerik.common.js'][732]++;
  $t.datetime.prototype[timeComponent.toLowerCase()] = (function () {
  _$jscoverage['telerik.common.js'][734]++;
  if ((arguments.length == 1)) {
    _$jscoverage['telerik.common.js'][735]++;
    (this.value[("set" + timeComponent)])(arguments[0]);
  }
  else {
    _$jscoverage['telerik.common.js'][737]++;
    return (this.value[("get" + timeComponent)])();
  }
  _$jscoverage['telerik.common.js'][739]++;
  return this;
});
}));
  _$jscoverage['telerik.common.js'][743]++;
  $t.stringBuilder.prototype = {cat: (function (what) {
  _$jscoverage['telerik.common.js'][746]++;
  this.buffer.push(what);
  _$jscoverage['telerik.common.js'][747]++;
  return this;
}), rep: (function (what, howManyTimes) {
  _$jscoverage['telerik.common.js'][751]++;
  for (var i = 0; (i < howManyTimes); (i++)) {
    _$jscoverage['telerik.common.js'][752]++;
    this.cat(what);
}
  _$jscoverage['telerik.common.js'][753]++;
  return this;
}), catIf: (function (what, condition) {
  _$jscoverage['telerik.common.js'][757]++;
  if (condition) {
    _$jscoverage['telerik.common.js'][758]++;
    this.cat(what);
  }
  _$jscoverage['telerik.common.js'][759]++;
  return this;
}), string: (function () {
  _$jscoverage['telerik.common.js'][763]++;
  return this.buffer.join("");
})};
  _$jscoverage['telerik.common.js'][769]++;
  var prepareAnimations = (function (effects, target, end) {
  _$jscoverage['telerik.common.js'][770]++;
  if (((target.length == 0) && end)) {
    _$jscoverage['telerik.common.js'][771]++;
    end();
    _$jscoverage['telerik.common.js'][772]++;
    return null;
  }
  _$jscoverage['telerik.common.js'][775]++;
  var animationsToPlay = effects.list.length;
  _$jscoverage['telerik.common.js'][777]++;
  return (function () {
  _$jscoverage['telerik.common.js'][778]++;
  if ((((--animationsToPlay) == 0) && end)) {
    _$jscoverage['telerik.common.js'][779]++;
    end();
  }
});
});
  _$jscoverage['telerik.common.js'][783]++;
  $.extend($t.fx, {_wrap: (function (element) {
  _$jscoverage['telerik.common.js'][785]++;
  if ((! element.parent().hasClass("t-animation-container"))) {
    _$jscoverage['telerik.common.js'][786]++;
    element.wrap($("<div/>").addClass("t-animation-container").css({width: element.outerWidth(), height: element.outerHeight()}));
  }
  _$jscoverage['telerik.common.js'][795]++;
  return element.parent();
}), play: (function (effects, target, options, end) {
  _$jscoverage['telerik.common.js'][799]++;
  var afterAnimation = prepareAnimations(effects, target, end);
  _$jscoverage['telerik.common.js'][801]++;
  if ((afterAnimation === null)) {
    _$jscoverage['telerik.common.js'][801]++;
    return;
  }
  _$jscoverage['telerik.common.js'][803]++;
  target.stop(false, true);
  _$jscoverage['telerik.common.js'][805]++;
  for (var i = 0, len = effects.list.length; (i < len); (i++)) {
    _$jscoverage['telerik.common.js'][807]++;
    var effect = new ($t.fx[effects.list[i].name])(target);
    _$jscoverage['telerik.common.js'][809]++;
    if ((! target.data(("effect-" + i)))) {
      _$jscoverage['telerik.common.js'][810]++;
      effect.play($.extend(effects.list[i], {openDuration: effects.openDuration, closeDuration: effects.closeDuration}, options), afterAnimation);
      _$jscoverage['telerik.common.js'][818]++;
      target.data(("effect-" + i), effect);
    }
}
}), rewind: (function (effects, target, options, end) {
  _$jscoverage['telerik.common.js'][824]++;
  var afterAnimation = prepareAnimations(effects, target, end);
  _$jscoverage['telerik.common.js'][826]++;
  if ((afterAnimation === null)) {
    _$jscoverage['telerik.common.js'][826]++;
    return;
  }
  _$jscoverage['telerik.common.js'][828]++;
  for (var i = (effects.list.length - 1); (i >= 0); (i--)) {
    _$jscoverage['telerik.common.js'][830]++;
    var effect = (target.data(("effect-" + i)) || new ($t.fx[effects.list[i].name])(target));
    _$jscoverage['telerik.common.js'][832]++;
    effect.rewind($.extend(effects.list[i], {openDuration: effects.openDuration, closeDuration: effects.closeDuration}, options), afterAnimation);
    _$jscoverage['telerik.common.js'][840]++;
    target.data(("effect-" + i), null);
}
})});
  _$jscoverage['telerik.common.js'][847]++;
  $t.fx.toggle = (function (element) {
  _$jscoverage['telerik.common.js'][848]++;
  this.element = element.stop(false, true);
});
  _$jscoverage['telerik.common.js'][851]++;
  $t.fx.toggle.prototype = {play: (function (options, end) {
  _$jscoverage['telerik.common.js'][853]++;
  this.element.show();
  _$jscoverage['telerik.common.js'][854]++;
  if (end) {
    _$jscoverage['telerik.common.js'][854]++;
    end();
  }
}), rewind: (function (options, end) {
  _$jscoverage['telerik.common.js'][857]++;
  this.element.hide();
  _$jscoverage['telerik.common.js'][858]++;
  if (end) {
    _$jscoverage['telerik.common.js'][858]++;
    end();
  }
})};
  _$jscoverage['telerik.common.js'][862]++;
  $t.fx.toggle.defaults = (function () {
  _$jscoverage['telerik.common.js'][863]++;
  return ({list: [{name: "toggle"}]});
});
  _$jscoverage['telerik.common.js'][868]++;
  $t.fx.slide = (function (element) {
  _$jscoverage['telerik.common.js'][869]++;
  this.element = element;
  _$jscoverage['telerik.common.js'][871]++;
  this.animationContainer = $t.fx._wrap(element);
});
  _$jscoverage['telerik.common.js'][874]++;
  $t.fx.slide.prototype = {play: (function (options, end) {
  _$jscoverage['telerik.common.js'][877]++;
  var animationContainer = this.animationContainer;
  _$jscoverage['telerik.common.js'][879]++;
  this.element.css("display", "block").stop();
  _$jscoverage['telerik.common.js'][881]++;
  animationContainer.css({display: "block", overflow: "hidden"});
  _$jscoverage['telerik.common.js'][887]++;
  var width = this.element.outerWidth();
  _$jscoverage['telerik.common.js'][888]++;
  var height = this.element.outerHeight();
  _$jscoverage['telerik.common.js'][889]++;
  var animatedProperty = ((options.direction == "bottom")? "marginTop": "marginLeft");
  _$jscoverage['telerik.common.js'][890]++;
  var animatedStartValue = ((options.direction == "bottom")? (- height): (- width));
  _$jscoverage['telerik.common.js'][892]++;
  animationContainer.css({width: width, height: height});
  _$jscoverage['telerik.common.js'][898]++;
  var animationEnd = {};
  _$jscoverage['telerik.common.js'][899]++;
  animationEnd[animatedProperty] = 0;
  _$jscoverage['telerik.common.js'][901]++;
  this.element.css("width", this.element.width()).each((function () {
  _$jscoverage['telerik.common.js'][903]++;
  this.style.cssText = this.style.cssText;
})).css(animatedProperty, animatedStartValue).animate(animationEnd, {queue: false, duration: options.openDuration, easing: "linear", complete: (function () {
  _$jscoverage['telerik.common.js'][910]++;
  animationContainer.css("overflow", "");
  _$jscoverage['telerik.common.js'][912]++;
  if (end) {
    _$jscoverage['telerik.common.js'][912]++;
    end();
  }
})});
}), rewind: (function (options, end) {
  _$jscoverage['telerik.common.js'][918]++;
  var animationContainer = this.animationContainer;
  _$jscoverage['telerik.common.js'][920]++;
  this.element.stop();
  _$jscoverage['telerik.common.js'][922]++;
  animationContainer.css({overflow: "hidden"});
  _$jscoverage['telerik.common.js'][926]++;
  var animatedProperty;
  _$jscoverage['telerik.common.js'][928]++;
  switch (options.direction) {
  case "bottom":
    _$jscoverage['telerik.common.js'][929]++;
    animatedProperty = {marginTop: (- this.element.outerHeight())};
    _$jscoverage['telerik.common.js'][930]++;
    break;
  case "right":
    _$jscoverage['telerik.common.js'][931]++;
    animatedProperty = {marginLeft: (- this.element.outerWidth())};
    _$jscoverage['telerik.common.js'][931]++;
    break;
  }
  _$jscoverage['telerik.common.js'][934]++;
  this.element.animate(animatedProperty, {queue: false, duration: options.closeDuration, easing: "linear", complete: (function () {
  _$jscoverage['telerik.common.js'][940]++;
  animationContainer.css({display: "none", overflow: ""});
  _$jscoverage['telerik.common.js'][946]++;
  if (end) {
    _$jscoverage['telerik.common.js'][946]++;
    end();
  }
})});
})};
  _$jscoverage['telerik.common.js'][952]++;
  $t.fx.slide.defaults = (function () {
  _$jscoverage['telerik.common.js'][953]++;
  return ({list: [{name: "slide"}], openDuration: "fast", closeDuration: "fast"});
});
  _$jscoverage['telerik.common.js'][958]++;
  $t.fx.property = (function (element) {
  _$jscoverage['telerik.common.js'][959]++;
  this.element = element;
});
  _$jscoverage['telerik.common.js'][962]++;
  $t.fx.property.prototype = {_animate: (function (properties, duration, reverse, end) {
  _$jscoverage['telerik.common.js'][964]++;
  var startValues = {overflow: "hidden"}, endValues = {}, $element = this.element;
  _$jscoverage['telerik.common.js'][968]++;
  $.each(properties, (function (i, prop) {
  _$jscoverage['telerik.common.js'][969]++;
  var value;
  _$jscoverage['telerik.common.js'][971]++;
  switch (prop) {
  case "height":
  case "width":
    _$jscoverage['telerik.common.js'][973]++;
    value = ($element[prop])();
    _$jscoverage['telerik.common.js'][973]++;
    break;
  case "opacity":
    _$jscoverage['telerik.common.js'][975]++;
    value = 1;
    _$jscoverage['telerik.common.js'][975]++;
    break;
  default:
    _$jscoverage['telerik.common.js'][977]++;
    value = $element.css(prop);
    _$jscoverage['telerik.common.js'][977]++;
    break;
  }
  _$jscoverage['telerik.common.js'][980]++;
  startValues[prop] = (reverse? value: 0);
  _$jscoverage['telerik.common.js'][981]++;
  endValues[prop] = (reverse? 0: value);
}));
  _$jscoverage['telerik.common.js'][984]++;
  $element.css(startValues).show().animate(endValues, {queue: false, duration: duration, easing: "linear", complete: (function () {
  _$jscoverage['telerik.common.js'][991]++;
  if (reverse) {
    _$jscoverage['telerik.common.js'][992]++;
    $element.hide();
  }
  _$jscoverage['telerik.common.js'][994]++;
  $.each(endValues, (function (property) {
  _$jscoverage['telerik.common.js'][995]++;
  endValues[property] = "";
}));
  _$jscoverage['telerik.common.js'][998]++;
  $element.css($.extend({overflow: ""}, endValues));
  _$jscoverage['telerik.common.js'][1000]++;
  if (end) {
    _$jscoverage['telerik.common.js'][1000]++;
    end();
  }
})});
}), play: (function (options, complete) {
  _$jscoverage['telerik.common.js'][1006]++;
  this._animate(options.properties, options.openDuration, false, complete);
}), rewind: (function (options, complete) {
  _$jscoverage['telerik.common.js'][1010]++;
  this._animate(options.properties, options.closeDuration, true, complete);
})};
  _$jscoverage['telerik.common.js'][1014]++;
  $t.fx.property.defaults = (function () {
  _$jscoverage['telerik.common.js'][1015]++;
  return ({list: [{name: "property", properties: arguments}], openDuration: "fast", closeDuration: "fast"});
});
  _$jscoverage['telerik.common.js'][1019]++;
  $(document).ready((function () {
  _$jscoverage['telerik.common.js'][1020]++;
  if (($.browser.msie && ((typeof Sys) != "undefined") && ((typeof Sys.Mvc) != "undefined") && ((typeof Sys.Mvc.FormContext) != "undefined"))) {
    _$jscoverage['telerik.common.js'][1021]++;
    var patch = (function (formElement, name) {
  _$jscoverage['telerik.common.js'][1022]++;
  return $.grep(formElement.getElementsByTagName("*"), (function (element) {
  _$jscoverage['telerik.common.js'][1023]++;
  return (element.name == name);
}));
});
    _$jscoverage['telerik.common.js'][1027]++;
    Sys.Mvc.FormContext.$F = (Sys.Mvc.FormContext._getFormElementsWithName = patch);
  }
}));
})(jQuery);
