<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:l="clr-namespace:Fantasy.Studio.BusinessEngine.ClassDiagramEditing.Shapes" 
                    xmlns:sf="http://schemas.syncfusion.com/wpf" 
                    >
    <Style TargetType="ToggleButton" x:Key="TransparentButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NodeExpanderHeaderDefaultStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Padding="{TemplateBinding Control.Padding}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="19" />
                            </Grid.ColumnDefinitions>
                            <sf:DragProvider x:Name="PART_DragProvider"  Opacity="0" IsHitTestVisible="True" Grid.ColumnSpan="2"
                                             DataContext="{Binding RelativeSource={RelativeSource AncestorType=sf:Node}}"
                                             MeasurementUnits="{Binding RelativeSource={RelativeSource AncestorType={x:Type sf:DiagramView}},Path=Page.MeasurementUnits,Mode=TwoWay}"/>

                            <ToggleButton Grid.Column="1" VerticalAlignment="Top" Style="{StaticResource TransparentButton}" Name="toggleButton" IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource AncestorType=l:NodeExpander}}" >
                                <Grid>
                                    <Ellipse Name="circle" Grid.Column="0" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Path Name="arrow" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
                                </Grid>
                            </ToggleButton>
                            <ContentPresenter IsHitTestVisible="False" Grid.Column="0" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
                            </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="toggleButton" Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger SourceName="toggleButton" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
                        </Trigger>
                        <Trigger SourceName="toggleButton" Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderButtonRightStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Control.Padding}">
                        <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <FrameworkElement.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </FrameworkElement.LayoutTransform>
                                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
                            </Grid>
                            <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderButtonUpStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Control.Padding}">
                        <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <FrameworkElement.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </FrameworkElement.LayoutTransform>
                                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
                            </Grid>
                            <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderButtonLeftStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Control.Padding}">
                        <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <FrameworkElement.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </FrameworkElement.LayoutTransform>
                                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
                            </Grid>
                            <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
                            <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
                            <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type l:NodeExpander}" TargetType="{x:Type l:NodeExpander}">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="True">
                        <DockPanel>
                            <ContentControl Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0" Style="{StaticResource NodeExpanderHeaderDefaultStyle}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" Foreground="{TemplateBinding Control.Foreground}" Padding="{TemplateBinding Control.Padding}" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}" FontWeight="{TemplateBinding Control.FontWeight}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <ContentPresenter Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Expander.ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter Value="{StaticResource ExpanderButtonRightStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
                        </Trigger>
                        <Trigger Property="Expander.ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter Value="{StaticResource ExpanderButtonUpStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
                        </Trigger>
                        <Trigger Property="Expander.ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter Value="{StaticResource ExpanderButtonLeftStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>